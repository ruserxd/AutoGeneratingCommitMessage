[
  {
    "input": "diff --git a/jeecg-boot/jeecg-server-cloud/jeecg-cloud-gateway/src/main/java/org/jeecg/handler/swagger/SwaggerResourceController.java b/jeecg-boot/jeecg-server-cloud/jeecg-cloud-gateway/src/main/java/org/jeecg/handler/swagger/SwaggerResourceController.java\n--- a/jeecg-boot/jeecg-server-cloud/jeecg-cloud-gateway/src/main/java/org/jeecg/handler/swagger/SwaggerResourceController.java\n+++ b/jeecg-boot/jeecg-server-cloud/jeecg-cloud-gateway/src/main/java/org/jeecg/handler/swagger/SwaggerResourceController.java\n@@ -1,12 +1,14 @@\n package org.jeecg.handler.swagger;\n \n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n import org.springframework.http.HttpStatus;\n import org.springframework.http.ResponseEntity;\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.bind.annotation.RestController;\n import springfox.documentation.swagger.web.*;\n \n+import java.util.ArrayList;\n import java.util.List;\n \n /** 已使用knife4j-gateway支持该功能\n@@ -19,6 +21,9 @@\n public class SwaggerResourceController {\n     private MySwaggerResourceProvider swaggerResourceProvider;\n \n+    @Value(\"${knife4j.gateway.enabled:true}\")\n+    private Boolean enableSwagger;\n+\n     @Autowired\n     public SwaggerResourceController(MySwaggerResourceProvider swaggerResourceProvider) {\n         this.swaggerResourceProvider = swaggerResourceProvider;\n@@ -36,6 +41,9 @@ public ResponseEntity<UiConfiguration> uiConfiguration() {\n \n     @RequestMapping\n     public ResponseEntity<List<SwaggerResource>> swaggerResources() {\n+        if (!enableSwagger) {\n+            return new ResponseEntity<>(new ArrayList<>(), HttpStatus.OK);\n+        }\n         return new ResponseEntity<>(swaggerResourceProvider.get(), HttpStatus.OK);\n     }\n }\n\\ No newline at end of file",
    "output": "Merge remote-tracking branch 'origin/master'"
  },
  {
    "input": "diff --git a/jeecg-boot/jeecg-module-system/jeecg-system-start/src/test/java/org/jeecg/modules/system/test/SysUserApiTest.java b/jeecg-boot/jeecg-module-system/jeecg-system-start/src/test/java/org/jeecg/modules/system/test/SysUserApiTest.java\n--- a/jeecg-boot/jeecg-module-system/jeecg-system-start/src/test/java/org/jeecg/modules/system/test/SysUserApiTest.java\n+++ b/jeecg-boot/jeecg-module-system/jeecg-system-start/src/test/java/org/jeecg/modules/system/test/SysUserApiTest.java\n@@ -0,0 +1,177 @@\n+package org.jeecg.modules.system.test;\n+\n+import com.alibaba.fastjson.JSON;\n+import com.alibaba.fastjson.JSONObject;\n+import com.baomidou.mybatisplus.extension.plugins.pagination.Page;\n+import org.jeecg.common.api.vo.Result;\n+import org.jeecg.common.modules.redis.client.JeecgRedisClient;\n+import org.jeecg.common.util.RedisUtil;\n+import org.jeecg.config.JeecgBaseConfig;\n+import org.jeecg.modules.base.service.BaseCommonService;\n+import org.jeecg.modules.system.controller.SysUserController;\n+import org.jeecg.modules.system.entity.SysUser;\n+import org.jeecg.modules.system.service.*;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;\n+import org.springframework.boot.test.mock.mockito.MockBean;\n+import org.springframework.http.MediaType;\n+import org.springframework.test.web.servlet.MockMvc;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.BDDMockito.given;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;\n+\n+/**\n+ * 系统用户单元测试\n+ */\n+@WebMvcTest(SysUserController.class)\n+public class SysUserApiTest {\n+\n+    @Autowired\n+    private MockMvc mockMvc;\n+\n+    @MockBean\n+    private ISysUserService sysUserService;\n+\n+    @MockBean\n+    private ISysDepartService sysDepartService;\n+\n+    @MockBean\n+    private ISysUserRoleService sysUserRoleService;\n+\n+    @MockBean\n+    private ISysUserDepartService sysUserDepartService;\n+\n+    @MockBean\n+    private ISysDepartRoleUserService departRoleUserService;\n+\n+    @MockBean\n+    private ISysDepartRoleService departRoleService;\n+\n+    @MockBean\n+    private RedisUtil redisUtil;\n+\n+    @Value(\"${jeecg.path.upload}\")\n+    private String upLoadPath;\n+\n+    @MockBean\n+    private BaseCommonService baseCommonService;\n+\n+    @MockBean\n+    private ISysUserAgentService sysUserAgentService;\n+\n+    @MockBean\n+    private ISysPositionService sysPositionService;\n+\n+    @MockBean\n+    private ISysUserTenantService userTenantService;\n+\n+    @MockBean\n+    private JeecgRedisClient jeecgRedisClient;\n+\n+    @MockBean\n+    private JeecgBaseConfig jeecgBaseConfig;\n+    /**\n+     * 测试地址：实际使用时替换成你自己的地址\n+     */\n+    private final String BASE_URL = \"/sys/user/\";\n+\n+    /**\n+     * 测试用例：查询记录\n+     */\n+    @Test\n+    public void testQuery() throws Exception{\n+        // 请求地址\n+        String url = BASE_URL + \"list\";\n+\n+        Page<SysUser> sysUserPage = new Page<>();\n+        SysUser sysUser = new SysUser();\n+        sysUser.setUsername(\"admin\");\n+        List<SysUser> users = new ArrayList<>();\n+        users.add(sysUser);\n+        sysUserPage.setRecords(users);\n+        sysUserPage.setCurrent(1);\n+        sysUserPage.setSize(10);\n+        sysUserPage.setTotal(1);\n+\n+        given(this.sysUserService.queryPageList(any(), any(), any(), any())).willReturn(Result.OK(sysUserPage));\n+\n+        String result = mockMvc.perform(get(url)).andReturn().getResponse().getContentAsString();\n+        JSONObject jsonObject = JSON.parseObject(result);\n+        Assertions.assertEquals(\"admin\", jsonObject.getJSONObject(\"result\").getJSONArray(\"records\").getJSONObject(0).getString(\"username\"));\n+    }\n+\n+    /**\n+     * 测试用例：新增\n+     */\n+    @Test\n+    public void testAdd() throws Exception {\n+        // 请求地址\n+        String url = BASE_URL + \"add\" ;\n+\n+        JSONObject params = new JSONObject();\n+        params.put(\"username\", \"wangwuTest\");\n+        params.put(\"password\", \"123456\");\n+        params.put(\"confirmpassword\",\"123456\");\n+        params.put(\"realname\", \"单元测试\");\n+        params.put(\"activitiSync\", \"1\");\n+        params.put(\"userIdentity\",\"1\");\n+        params.put(\"workNo\",\"0025\");\n+\n+        String result = mockMvc.perform(post(url).contentType(MediaType.APPLICATION_JSON_VALUE).content(params.toJSONString()))\n+                .andReturn().getResponse().getContentAsString();\n+        JSONObject jsonObject = JSON.parseObject(result);\n+        Assertions.assertTrue(jsonObject.getBoolean(\"success\"));\n+    }\n+\n+\n+    /**\n+     * 测试用例：修改\n+     */\n+    @Test\n+    public void testEdit() throws Exception {\n+        // 数据Id\n+        String dataId = \"1331795062924374018\";\n+        // 请求地址\n+        String url = BASE_URL + \"edit\";\n+\n+        JSONObject params = new JSONObject();\n+        params.put(\"username\", \"wangwuTest\");\n+        params.put(\"realname\", \"单元测试1111\");\n+        params.put(\"activitiSync\", \"1\");\n+        params.put(\"userIdentity\",\"1\");\n+        params.put(\"workNo\",\"0025\");\n+        params.put(\"id\",dataId);\n+\n+        SysUser sysUser = new SysUser();\n+        sysUser.setUsername(\"admin\");\n+\n+        given(this.sysUserService.getById(any())).willReturn(sysUser);\n+\n+        String result = mockMvc.perform(put(url).contentType(MediaType.APPLICATION_JSON_VALUE).content(params.toJSONString()))\n+                .andReturn().getResponse().getContentAsString();\n+        JSONObject jsonObject = JSON.parseObject(result);\n+        Assertions.assertTrue(jsonObject.getBoolean(\"success\"));\n+    }\n+\n+\n+    /**\n+     * 测试用例：删除\n+     */\n+    @Test\n+    public void testDelete() throws Exception {\n+        // 数据Id\n+        String dataId = \"1331795062924374018\";\n+        // 请求地址\n+        String url = BASE_URL + \"delete\" + \"?id=\" + dataId;\n+        String result = mockMvc.perform(delete(url)).andReturn().getResponse().getContentAsString();\n+        JSONObject jsonObject = JSON.parseObject(result);\n+        Assertions.assertTrue(jsonObject.getBoolean(\"success\"));\n+    }\n+}",
    "output": "Merge branch 'HEAD' of https://github.com/jeecgboot/JeecgBoot.git"
  },
  {
    "input": "diff --git a/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/config/WebMvcConfiguration.java b/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/config/WebMvcConfiguration.java\n--- a/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/config/WebMvcConfiguration.java\n+++ b/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/config/WebMvcConfiguration.java\n@@ -13,9 +13,11 @@\n import io.micrometer.prometheus.PrometheusMeterRegistry;\n import org.springframework.beans.factory.InitializingBean;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n import org.springframework.beans.factory.annotation.Value;\n import org.springframework.beans.factory.config.BeanPostProcessor;\n import org.springframework.boot.actuate.trace.http.InMemoryHttpTraceRepository;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Conditional;\n import org.springframework.context.annotation.Configuration;\n@@ -148,6 +150,7 @@ public ObjectMapper objectMapper() {\n      * 解决metrics端点不显示jvm信息的问题(zyf)\n      */\n     @Bean\n+    @ConditionalOnBean(name = \"meterRegistryPostProcessor\")\n     InitializingBean forcePrometheusPostProcessor(BeanPostProcessor meterRegistryPostProcessor) {\n         return () -> meterRegistryPostProcessor.postProcessAfterInitialization(prometheusMeterRegistry, \"\");\n     }\n\ndiff --git a/jeecg-boot/jeecg-module-system/jeecg-system-start/src/test/java/org/jeecg/modules/system/test/MockControllerTest.java b/jeecg-boot/jeecg-module-system/jeecg-system-start/src/test/java/org/jeecg/modules/system/test/MockControllerTest.java\n--- a/jeecg-boot/jeecg-module-system/jeecg-system-start/src/test/java/org/jeecg/modules/system/test/MockControllerTest.java\n+++ b/jeecg-boot/jeecg-module-system/jeecg-system-start/src/test/java/org/jeecg/modules/system/test/MockControllerTest.java\n@@ -0,0 +1,37 @@\n+package org.jeecg.modules.system.test;\n+\n+import org.jeecg.config.JeecgBaseConfig;\n+import org.jeecg.modules.base.service.BaseCommonService;\n+import org.jeecg.modules.demo.mock.MockController;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;\n+import org.springframework.boot.test.mock.mockito.MockBean;\n+import org.springframework.test.web.servlet.MockMvc;\n+import org.springframework.test.web.servlet.result.MockMvcResultHandlers;\n+import org.springframework.test.web.servlet.result.MockMvcResultMatchers;\n+\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\n+\n+/**\n+ * 单个controller测试\n+ * @date 2025/4/7 11:21\n+ */\n+@WebMvcTest(value = MockController.class)\n+public class MockControllerTest {\n+    @Autowired\n+    private MockMvc mockMvc;\n+\n+    @MockBean\n+    private BaseCommonService baseCommonService;\n+    @MockBean\n+    private JeecgBaseConfig jeecgBaseConfig;\n+\n+    @Test\n+    public void testSave() throws Exception {\n+        mockMvc.perform(get(\"/mock/api/json/area\"))\n+                .andDo(MockMvcResultHandlers.print())\n+                .andExpect(MockMvcResultMatchers.status().isOk());\n+    }\n+\n+}",
    "output": "Merge branch 'HEAD' of https://github.com/jeecgboot/JeecgBoot.git"
  },
  {
    "input": "diff --git a/jeecg-boot/jeecg-module-demo/src/main/java/org/jeecg/modules/demo/gpt/service/impl/ChatServiceImpl.java b/jeecg-boot/jeecg-module-demo/src/main/java/org/jeecg/modules/demo/gpt/service/impl/ChatServiceImpl.java\n--- a/jeecg-boot/jeecg-module-demo/src/main/java/org/jeecg/modules/demo/gpt/service/impl/ChatServiceImpl.java\n+++ b/jeecg-boot/jeecg-module-demo/src/main/java/org/jeecg/modules/demo/gpt/service/impl/ChatServiceImpl.java\n@@ -9,7 +9,7 @@\n import com.unfbx.chatgpt.exception.BaseException;\n import lombok.extern.slf4j.Slf4j;\n import org.apache.shiro.SecurityUtils;\n-import org.jeecg.ai.prop.AiChatProperties;\n+import org.jeecg.chatgpt.prop.AiChatProperties;\n import org.jeecg.common.api.vo.Result;\n import org.jeecg.common.exception.JeecgBootException;\n import org.jeecg.common.system.vo.LoginUser;",
    "output": "fix: update import path for AiChatProperties in ChatServiceImpl"
  },
  {
    "input": "diff --git a/jeecg-boot/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/SysRoleController.java b/jeecg-boot/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/SysRoleController.java\n--- a/jeecg-boot/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/SysRoleController.java\n+++ b/jeecg-boot/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/SysRoleController.java\n@@ -188,7 +188,7 @@ public Result<SysRole> edit(@RequestBody SysRole role) {\n \t\t\t\tLoginUser sysUser = (LoginUser) SecurityUtils.getSubject().getPrincipal();\n \t\t\t\tInteger tenantId = oConvertUtils.getInt(TenantContext.getTenant(), 0);\n \t\t\t\tString username = \"admin\";\n-\t\t\t\tif (!tenantId.equals(role.getTenantId()) && !username.equals(sysUser.getUsername())) {\n+\t\t\t\tif (!tenantId.equals(sysrole.getTenantId()) && !username.equals(sysUser.getUsername())) {\n \t\t\t\t\tbaseCommonService.addLog(\"未经授权，修改非本租户下的角色ID：\" + role.getId() + \"，操作人：\" + sysUser.getUsername(), CommonConstant.LOG_TYPE_2, CommonConstant.OPERATE_TYPE_3);\n \t\t\t\t\treturn Result.error(\"修改角色失败,当前角色不在此租户中。\");\n \t\t\t\t}",
    "output": "Merge pull request #7879 from yangyang122/feature/tenant_edit_role\n\nin tenant mode, edit role constraints change"
  },
  {
    "input": "diff --git a/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/exception/JeecgBootExceptionHandler.java b/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/exception/JeecgBootExceptionHandler.java\n--- a/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/exception/JeecgBootExceptionHandler.java\n+++ b/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/exception/JeecgBootExceptionHandler.java\n@@ -23,7 +23,9 @@\n import org.springframework.data.redis.connection.PoolException;\n import org.springframework.http.HttpStatus;\n import org.springframework.util.CollectionUtils;\n+import org.springframework.validation.ObjectError;\n import org.springframework.web.HttpRequestMethodNotSupportedException;\n+import org.springframework.web.bind.MethodArgumentNotValidException;\n import org.springframework.web.bind.annotation.ExceptionHandler;\n import org.springframework.web.bind.annotation.ResponseStatus;\n import org.springframework.web.bind.annotation.RestControllerAdvice;\n@@ -33,6 +35,7 @@\n import javax.annotation.Resource;\n import javax.servlet.http.HttpServletRequest;\n import java.util.Map;\n+import java.util.stream.Collectors;\n \n /**\n  * 异常处理器\n@@ -47,6 +50,13 @@ public class JeecgBootExceptionHandler {\n \t@Resource\n \tBaseCommonService baseCommonService;\n \n+\t@ExceptionHandler(MethodArgumentNotValidException.class)\n+\tpublic Result<?> handleValidationExceptions(MethodArgumentNotValidException e) {\n+\t\tlog.error(e.getMessage(), e);\n+\t\taddSysLog(e);\n+\t\treturn Result.error(\"校验失败！\" + e.getBindingResult().getAllErrors().stream().map(ObjectError::getDefaultMessage).collect(Collectors.joining(\",\")));\n+\t}\n+\n \t/**\n \t * 处理自定义异常\n \t */\n\ndiff --git a/jeecg-boot/jeecg-module-system/jeecg-system-biz/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoAutoConfiguration.java b/jeecg-boot/jeecg-module-system/jeecg-system-biz/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoAutoConfiguration.java\n--- a/jeecg-boot/jeecg-module-system/jeecg-system-biz/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoAutoConfiguration.java\n+++ b/jeecg-boot/jeecg-module-system/jeecg-system-biz/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoAutoConfiguration.java\n@@ -1,64 +0,0 @@\n-//\n-// Source code recreated from a .class file by IntelliJ IDEA\n-// (powered by Fernflower decompiler)\n-//\n-\n-package org.springframework.boot.autoconfigure.mongo;\n-\n-import com.mongodb.MongoClientSettings;\n-import com.mongodb.client.MongoClient;\n-import org.springframework.beans.factory.ObjectProvider;\n-import org.springframework.boot.autoconfigure.AutoConfiguration;\n-import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n-import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n-import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n-import org.springframework.boot.autoconfigure.mongo.MongoClientFactory;\n-import org.springframework.boot.autoconfigure.mongo.MongoClientSettingsBuilderCustomizer;\n-import org.springframework.boot.autoconfigure.mongo.MongoProperties;\n-import org.springframework.boot.autoconfigure.mongo.MongoPropertiesClientSettingsBuilderCustomizer;\n-import org.springframework.boot.context.properties.EnableConfigurationProperties;\n-import org.springframework.context.annotation.Bean;\n-import org.springframework.context.annotation.Configuration;\n-import org.springframework.context.annotation.Primary;\n-import org.springframework.core.env.Environment;\n-\n-import java.util.List;\n-import java.util.stream.Collectors;\n-\n-@Primary\n-@AutoConfiguration\n-@ConditionalOnClass({MongoClient.class})\n-@ConditionalOnProperty(name = \"spring.data.mongodb.uri\", havingValue = \"\", matchIfMissing = false)\n-@EnableConfigurationProperties({MongoProperties.class})\n-@ConditionalOnMissingBean(\n-    type = {\"org.springframework.data.mongodb.MongoDatabaseFactory\"}\n-)\n-public class MongoAutoConfiguration {\n-    public MongoAutoConfiguration() {\n-    }\n-\n-    @Bean\n-    @ConditionalOnMissingBean({MongoClient.class})\n-    public MongoClient mongo(ObjectProvider<MongoClientSettingsBuilderCustomizer> builderCustomizers, MongoClientSettings settings) {\n-        return (MongoClient)(new MongoClientFactory((List)builderCustomizers.orderedStream().collect(Collectors.toList()))).createMongoClient(settings);\n-    }\n-\n-    @Configuration(\n-        proxyBeanMethods = false\n-    )\n-    @ConditionalOnMissingBean({MongoClientSettings.class})\n-    static class MongoClientSettingsConfiguration {\n-        MongoClientSettingsConfiguration() {\n-        }\n-\n-        @Bean\n-        MongoClientSettings mongoClientSettings() {\n-            return MongoClientSettings.builder().build();\n-        }\n-\n-        @Bean\n-        MongoPropertiesClientSettingsBuilderCustomizer mongoPropertiesCustomizer(MongoProperties properties, Environment environment) {\n-            return new MongoPropertiesClientSettingsBuilderCustomizer(properties, environment);\n-        }\n-    }\n-}",
    "output": "Merge branch 'master' of https://github.com/zhangdaiscott/jeecg-boot"
  },
  {
    "input": "diff --git a/jeecg-boot/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/SysRoleController.java b/jeecg-boot/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/SysRoleController.java\n--- a/jeecg-boot/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/SysRoleController.java\n+++ b/jeecg-boot/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/SysRoleController.java\n@@ -188,7 +188,7 @@ public Result<SysRole> edit(@RequestBody SysRole role) {\n \t\t\t\tLoginUser sysUser = (LoginUser) SecurityUtils.getSubject().getPrincipal();\n \t\t\t\tInteger tenantId = oConvertUtils.getInt(TenantContext.getTenant(), 0);\n \t\t\t\tString username = \"admin\";\n-\t\t\t\tif (!tenantId.equals(role.getTenantId()) && !username.equals(sysUser.getUsername())) {\n+\t\t\t\tif (!tenantId.equals(sysrole.getTenantId()) && !username.equals(sysUser.getUsername())) {\n \t\t\t\t\tbaseCommonService.addLog(\"未经授权，修改非本租户下的角色ID：\" + role.getId() + \"，操作人：\" + sysUser.getUsername(), CommonConstant.LOG_TYPE_2, CommonConstant.OPERATE_TYPE_3);\n \t\t\t\t\treturn Result.error(\"修改角色失败,当前角色不在此租户中。\");\n \t\t\t\t}",
    "output": "in tenant mode, edit role constraints change"
  },
  {
    "input": "diff --git a/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/dynamic/db/DynamicDBUtil.java b/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/dynamic/db/DynamicDBUtil.java\n--- a/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/dynamic/db/DynamicDBUtil.java\n+++ b/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/dynamic/db/DynamicDBUtil.java\n@@ -106,9 +106,10 @@ public static void closeDbKey(final String dbKey) {\n                 dataSource.getConnection().commit();\n                 dataSource.getConnection().close();\n                 dataSource.close();\n+                DataSourceCachePool.removeCache(dbKey);\n             }\n         } catch (SQLException e) {\n-            e.printStackTrace();\n+            log.info(e.getMessage(), e);\n         }\n     }\n ",
    "output": "Merge remote-tracking branch 'origin/master'"
  },
  {
    "input": "diff --git a/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/dynamic/db/DynamicDBUtil.java b/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/dynamic/db/DynamicDBUtil.java\n--- a/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/dynamic/db/DynamicDBUtil.java\n+++ b/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/dynamic/db/DynamicDBUtil.java\n@@ -106,9 +106,10 @@ public static void closeDbKey(final String dbKey) {\n                 dataSource.getConnection().commit();\n                 dataSource.getConnection().close();\n                 dataSource.close();\n+                DataSourceCachePool.removeCache(dbKey);\n             }\n         } catch (SQLException e) {\n-            e.printStackTrace();\n+            log.info(e.getMessage(), e);\n         }\n     }\n ",
    "output": "Merge pull request #7364 from 94464562/patch-1\n\nremove dbsource from cache"
  },
  {
    "input": "diff --git a/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/dynamic/db/DynamicDBUtil.java b/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/dynamic/db/DynamicDBUtil.java\n--- a/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/dynamic/db/DynamicDBUtil.java\n+++ b/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/dynamic/db/DynamicDBUtil.java\n@@ -106,9 +106,10 @@ public static void closeDbKey(final String dbKey) {\n                 dataSource.getConnection().commit();\n                 dataSource.getConnection().close();\n                 dataSource.close();\n+                DataSourceCachePool.removeCache(dbKey);\n             }\n         } catch (SQLException e) {\n-            e.printStackTrace();\n+            log.info(e.getMessage(), e);\n         }\n     }\n ",
    "output": "remove dbsource from cache\n\nremove dbsource from cache"
  },
  {
    "input": "diff --git a/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/config/shiro/ignore/IgnoreAuthPostProcessor.java b/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/config/shiro/ignore/IgnoreAuthPostProcessor.java\n--- a/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/config/shiro/ignore/IgnoreAuthPostProcessor.java\n+++ b/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/config/shiro/ignore/IgnoreAuthPostProcessor.java\n@@ -3,16 +3,16 @@\n import lombok.AllArgsConstructor;\n import lombok.extern.slf4j.Slf4j;\n import org.jeecg.config.shiro.IgnoreAuth;\n-import org.springframework.aop.framework.Advised;\n-import org.springframework.context.ApplicationContext;\n-import org.springframework.context.ApplicationListener;\n-import org.springframework.context.event.ContextRefreshedEvent;\n+import org.springframework.beans.factory.InitializingBean;\n import org.springframework.stereotype.Component;\n import org.springframework.util.CollectionUtils;\n import org.springframework.web.bind.annotation.*;\n+import org.springframework.web.method.HandlerMethod;\n+import org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping;\n \n import java.lang.reflect.Method;\n import java.util.*;\n+import java.util.stream.Collectors;\n \n /**\n  * 在spring boot初始化时，根据@RestController注解获取当前spring容器中的bean\n@@ -22,24 +22,20 @@\n @Slf4j\n @Component\n @AllArgsConstructor\n-public class IgnoreAuthPostProcessor implements ApplicationListener<ContextRefreshedEvent> {\n+public class IgnoreAuthPostProcessor implements InitializingBean {\n+\n+    private RequestMappingHandlerMapping requestMappingHandlerMapping;\n \n-    private ApplicationContext applicationContext;\n \n     @Override\n-    public void onApplicationEvent(ContextRefreshedEvent event) {\n+    public void afterPropertiesSet() throws Exception {\n+\n         long startTime = System.currentTimeMillis();\n         \n         List<String> ignoreAuthUrls = new ArrayList<>();\n-        if (event.getApplicationContext().getParent() == null) {\n-            // 只处理根应用上下文的事件，避免在子上下文中重复处理\n-            Map<String, Object> restControllers = applicationContext.getBeansWithAnnotation(RestController.class);\n-            for (Object restController : restControllers.values()) {\n-                // 如 online系统的controller并不是spring 默认生成\n-                if (restController instanceof Advised) {\n-                    ignoreAuthUrls.addAll(postProcessRestController(restController));\n-                }\n-            }\n+        Set<Class<?>> restControllers = requestMappingHandlerMapping.getHandlerMethods().values().stream().map(HandlerMethod::getBeanType).collect(Collectors.toSet());\n+        for (Class<?> restController : restControllers) {\n+            ignoreAuthUrls.addAll(postProcessRestController(restController));\n         }\n \n         log.info(\"Init Token ignoreAuthUrls Config [ 集合 ]  ：{}\", ignoreAuthUrls);\n@@ -53,9 +49,8 @@ public void onApplicationEvent(ContextRefreshedEvent event) {\n         log.info(\"Init Token ignoreAuthUrls Config [ 耗时 ] ：\" + elapsedTime + \"毫秒\");\n     }\n \n-    private List<String> postProcessRestController(Object restController) {\n+    private List<String> postProcessRestController(Class<?> clazz) {\n         List<String> ignoreAuthUrls = new ArrayList<>();\n-        Class<?> clazz = ((Advised) restController).getTargetClass();\n         RequestMapping base = clazz.getAnnotation(RequestMapping.class);\n         String[] baseUrl = Objects.nonNull(base) ? base.value() : new String[]{};\n         Method[] methods = clazz.getDeclaredMethods();",
    "output": "Merge remote-tracking branch 'origin/master'"
  },
  {
    "input": "diff --git a/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/config/shiro/ShiroConfig.java b/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/config/shiro/ShiroConfig.java\n--- a/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/config/shiro/ShiroConfig.java\n+++ b/jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/config/shiro/ShiroConfig.java\n@@ -290,7 +290,7 @@ public IRedisManager redisManager() {\n             RedisSentinelManager sentinelManager = new RedisSentinelManager();\n             sentinelManager.setMasterName(redisProperties.getSentinel().getMaster());\n             sentinelManager.setHost(String.join(\",\", redisProperties.getSentinel().getNodes()));\n-            sentinelManager.setPassword(redisProperties.getSentinel().getPassword());\n+            sentinelManager.setPassword(redisProperties.getPassword());\n             sentinelManager.setDatabase(redisProperties.getDatabase());\n \n             return sentinelManager;",
    "output": "Merge pull request #6912 from xzs603/master\n\nUpdate ShiroConfig.java"
  },
  {
    "input": "diff --git a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/SysDepartController.java b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/SysDepartController.java\n--- a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/SysDepartController.java\n+++ b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/SysDepartController.java\n@@ -365,7 +365,8 @@ public ModelAndView exportXls(SysDepart sysDepart,HttpServletRequest request) {\n \t\t\t//}\n \t\t//});\n \t\t//step.2 组装导出数据\n-\t\tList<SysDepartExportVo> sysDepartExportVos = sysDepartService.getExportDepart(sysDepart.getTenantId());\n+\t\tInteger tenantId = sysDepart == null ? null : sysDepart.getTenantId();\n+\t\tList<SysDepartExportVo> sysDepartExportVos = sysDepartService.getExportDepart(tenantId);\n         //导出文件名称\n         mv.addObject(NormalExcelConstants.FILE_NAME, \"部门列表\");\n         mv.addObject(NormalExcelConstants.CLASS, SysDepartExportVo.class);\n\ndiff --git a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/service/ISysDepartService.java b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/service/ISysDepartService.java\n--- a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/service/ISysDepartService.java\n+++ b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/service/ISysDepartService.java\n@@ -223,7 +223,7 @@ public interface ISysDepartService extends IService<SysDepart>{\n      * @param tenantId\n      * @return\n      */\n-    List<SysDepartExportVo> getExportDepart(int tenantId);\n+    List<SysDepartExportVo> getExportDepart(Integer tenantId);\n \n     /**\n      * 导出系统部门excel\n\ndiff --git a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/service/impl/SysDepartServiceImpl.java b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/service/impl/SysDepartServiceImpl.java\n--- a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/service/impl/SysDepartServiceImpl.java\n+++ b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/service/impl/SysDepartServiceImpl.java\n@@ -1220,7 +1220,7 @@ private void setParentDepartIzLeaf(List<String> parentIdList) {\n \t * @return\n \t */\n \t@Override\n-\tpublic List<SysDepartExportVo> getExportDepart(int tenantId) {\n+\tpublic List<SysDepartExportVo> getExportDepart(Integer tenantId) {\n \t\t//获取父级部门\n \t\tList<SysDepartExportVo> parentDepart = departMapper.getSysDepartList(\"\", tenantId);\n \t\t//子部门\n\ndiff --git a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/service/impl/SysDictServiceImpl.java b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/service/impl/SysDictServiceImpl.java\n--- a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/service/impl/SysDictServiceImpl.java\n+++ b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/service/impl/SysDictServiceImpl.java\n@@ -21,6 +21,7 @@\n import org.jeecg.common.system.vo.DictModelMany;\n import org.jeecg.common.system.vo.DictQuery;\n import org.jeecg.common.util.CommonUtils;\n+import org.jeecg.common.util.RedisUtil;\n import org.jeecg.common.util.SqlInjectionUtil;\n import org.jeecg.common.util.oConvertUtils;\n import org.jeecg.config.mybatis.MybatisPlusSaasConfig;\n@@ -67,6 +68,9 @@ public class SysDictServiceImpl extends ServiceImpl<SysDictMapper, SysDict> impl\n \t@Lazy\n \t@Autowired\n \tprivate ISysBaseAPI sysBaseAPI;\n+\t@Lazy\n+\t@Autowired\n+\tprivate RedisUtil redisUtil;\n \n \t@Override\n \tpublic boolean duplicateCheckData(DuplicateCheckVo duplicateCheckVo) {\n@@ -565,16 +569,17 @@ private String getFilterSql(String tableSql, String text, String code, String co\n \t\t}\n \t\t\n \t\t//下拉搜索组件 支持传入排序信息 查询排序\n-\t\tif(oConvertUtils.isNotEmpty(condition) && oConvertUtils.isNotEmpty(keywordSql)){\n-\t\t\tfilterSql += sqlWhere + sqlAnd + condition + sqlAnd + keywordSql;\n-\t\t}else if(oConvertUtils.isNotEmpty(condition)){\n-\t\t\tfilterSql += sqlWhere + sqlAnd + condition;\n-\t\t}else if(oConvertUtils.isNotEmpty(keywordSql)){\n-\t\t\tfilterSql += sqlWhere + sqlAnd + keywordSql;\n-\t\t} else if (tableHasWhere){\n-\t\t\tfilterSql += sqlWhere; \n-\t\t}\n-\t\t\n+\t\t//update-begin---author:chenrui ---date:20240327  for：[QQYUN-8514]Online表单中 下拉搜索框 搜索时报sql错误，生成的SQL多了一个 “and\" ------------\n+        if (oConvertUtils.isNotEmpty(condition) && oConvertUtils.isNotEmpty(keywordSql)) {\n+            filterSql += sqlWhere + (tableHasWhere ? sqlAnd : \" \") + condition + sqlAnd + keywordSql;\n+        } else if (oConvertUtils.isNotEmpty(condition)) {\n+            filterSql += sqlWhere + (tableHasWhere ? sqlAnd : \" \") + condition;\n+        } else if (oConvertUtils.isNotEmpty(keywordSql)) {\n+            filterSql += sqlWhere + (tableHasWhere ? sqlAnd : \" \") + keywordSql;\n+        } else if (tableHasWhere) {\n+            filterSql += sqlWhere;\n+        }\n+\t\t//update-end---author:chenrui ---date:20240327  for：[QQYUN-8514]Online表单中 下拉搜索框 搜索时报sql错误，生成的SQL多了一个 “and\" ------------\n \t\t// 增加排序逻辑\n \t\tif (oConvertUtils.isNotEmpty(orderField)) {\n \t\t\tfilterSql += \" order by \" + orderField + \" \" + orderType;\n@@ -818,6 +823,8 @@ public void editDictByLowAppId(SysDictVo sysDictVo) {\n \t\tsysDict.setId(id);\n \t\tbaseMapper.updateById(sysDict);\n \t\tthis.updateDictItem(id,sysDictVo.getDictItemsList());\n+\t\t// 删除字典缓存\n+\t\tredisUtil.removeAll(CacheConstant.SYS_DICT_CACHE + \"::\" + dict.getDictCode());\n \t}\n \n \t/**",
    "output": "Merge branch 'master' into master"
  },
  {
    "input": "diff --git a/jeecg-boot-base-core/src/main/java/org/jeecg/config/shiro/ShiroConfig.java b/jeecg-boot-base-core/src/main/java/org/jeecg/config/shiro/ShiroConfig.java\n--- a/jeecg-boot-base-core/src/main/java/org/jeecg/config/shiro/ShiroConfig.java\n+++ b/jeecg-boot-base-core/src/main/java/org/jeecg/config/shiro/ShiroConfig.java\n@@ -328,7 +328,7 @@ public List<String> collectIgnoreAuthUrl(ApplicationContext context) {\n         Map<String, Object> controllers = context.getBeansWithAnnotation(RestController.class);\n         for (Object bean : controllers.values()) {\n             if (!(bean instanceof Advised)) {\n-                return null;\n+                continue;\n             }\n             Class<?> beanClass = ((Advised) bean).getTargetSource().getTarget().getClass();\n             RequestMapping base = beanClass.getAnnotation(RequestMapping.class);",
    "output": "Update ShiroConfig.java"
  },
  {
    "input": "diff --git a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/mapper/SysUserPositionMapper.java b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/mapper/SysUserPositionMapper.java\n--- a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/mapper/SysUserPositionMapper.java\n+++ b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/mapper/SysUserPositionMapper.java\n@@ -1,16 +1,17 @@\n package org.jeecg.modules.system.mapper;\n \n-import java.util.List;\n-\n+import com.baomidou.mybatisplus.annotation.InterceptorIgnore;\n+import com.baomidou.mybatisplus.core.mapper.BaseMapper;\n import com.baomidou.mybatisplus.extension.plugins.pagination.Page;\n import org.apache.ibatis.annotations.Delete;\n+import org.apache.ibatis.annotations.Param;\n import org.apache.ibatis.annotations.Select;\n import org.jeecg.modules.system.entity.SysUser;\n import org.jeecg.modules.system.entity.SysUserPosition;\n-import com.baomidou.mybatisplus.core.mapper.BaseMapper;\n-import org.apache.ibatis.annotations.Param;\n import org.jeecg.modules.system.vo.SysUserPositionVo;\n \n+import java.util.List;\n+\n /**\n  * @Description: 用户职位关系表\n  * @Author: jeecg-boot\n@@ -64,7 +65,8 @@ public interface SysUserPositionMapper extends BaseMapper<SysUserPosition> {\n      * @param tenantId\n      * @return\n      */\n-    List<String> getPositionIdByUserTenantId(@Param(\"userId\")String userId, @Param(\"tenantId\")Integer tenantId);\n+    @InterceptorIgnore(tenantLine = \"true\")\n+    List<String> getPositionIdByUserTenantId(@Param(\"userId\") String userId, @Param(\"tenantId\") Integer tenantId);\n \n     /**\n      * 根据用户id获取用户职位\n\ndiff --git a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/service/impl/SysUserServiceImpl.java b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/service/impl/SysUserServiceImpl.java\n--- a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/service/impl/SysUserServiceImpl.java\n+++ b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/service/impl/SysUserServiceImpl.java\n@@ -1,13 +1,11 @@\n package org.jeecg.modules.system.service.impl;\n \n-import cn.hutool.core.bean.BeanUtil;\n import cn.hutool.core.collection.CollectionUtil;\n import cn.hutool.core.util.RandomUtil;\n import com.alibaba.fastjson.JSONArray;\n import com.alibaba.fastjson.JSONObject;\n import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;\n import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;\n-import com.baomidou.mybatisplus.core.conditions.update.LambdaUpdateWrapper;\n import com.baomidou.mybatisplus.core.conditions.update.UpdateWrapper;\n import com.baomidou.mybatisplus.core.metadata.IPage;\n import com.baomidou.mybatisplus.core.toolkit.CollectionUtils;\n@@ -28,7 +26,6 @@\n import org.jeecg.common.constant.enums.RoleIndexConfigEnum;\n import org.jeecg.common.desensitization.annotation.SensitiveEncode;\n import org.jeecg.common.exception.JeecgBootException;\n-import org.jeecg.common.system.api.ISysBaseAPI;\n import org.jeecg.common.system.vo.LoginUser;\n import org.jeecg.common.system.vo.SysUserCacheInfo;\n import org.jeecg.common.util.*;\n@@ -43,9 +40,9 @@\n import org.jeecg.modules.system.vo.SysUserDepVo;\n import org.jeecg.modules.system.vo.SysUserPositionVo;\n import org.jeecg.modules.system.vo.UserAvatar;\n+import org.jeecg.modules.system.vo.lowapp.AppExportUserVo;\n import org.jeecg.modules.system.vo.lowapp.DepartAndUserInfo;\n import org.jeecg.modules.system.vo.lowapp.DepartInfo;\n-import org.jeecg.modules.system.vo.lowapp.AppExportUserVo;\n import org.jeecg.modules.system.vo.lowapp.UpdateDepartInfo;\n import org.jeecgframework.poi.excel.ExcelImportUtil;\n import org.jeecgframework.poi.excel.def.NormalExcelConstants;\n@@ -103,13 +100,13 @@ public class SysUserServiceImpl extends ServiceImpl<SysUserMapper, SysUser> impl\n \t@Autowired\n \tprivate SysThirdAccountMapper sysThirdAccountMapper;\n \t@Autowired\n-\tThirdAppWechatEnterpriseServiceImpl wechatEnterpriseService;\n+    ThirdAppWechatEnterpriseServiceImpl wechatEnterpriseService;\n \t@Autowired\n-\tThirdAppDingtalkServiceImpl dingtalkService;\n+    ThirdAppDingtalkServiceImpl dingtalkService;\n \t@Autowired\n-\tSysRoleIndexMapper sysRoleIndexMapper;\n+    SysRoleIndexMapper sysRoleIndexMapper;\n \t@Autowired\n-\tSysTenantMapper sysTenantMapper;\n+    SysTenantMapper sysTenantMapper;\n \t@Autowired\n     private SysUserTenantMapper relationMapper;\n \t@Autowired\n@@ -178,8 +175,14 @@ public Result<IPage<SysUser>> queryPageList(HttpServletRequest req, QueryWrapper\n \t\t\t\t} else {\n \t\t\t\t\titem.setRelTenantIds(\"\");\n \t\t\t\t}\n+\t\t\t\tInteger posTenantId = null;\n+\t\t\t\tif (MybatisPlusSaasConfig.OPEN_SYSTEM_TENANT_CONTROL) {\n+\t\t\t\t\tposTenantId = tenantId;\t\t\n+\t\t\t\t}\n \t\t\t\t//查询用户职位关系表(获取租户下面的)\n-\t\t\t\tList<String> positionList =  sysUserPositionMapper.getPositionIdByUserTenantId(item.getId(),tenantId);\n+\t\t\t\t//update-begin---author:wangshuai---date:2023-11-15---for:【QQYUN-7028】用户职务保存后未回显---\n+\t\t\t\tList<String> positionList =  sysUserPositionMapper.getPositionIdByUserTenantId(item.getId(),posTenantId);\n+\t\t\t\t//update-end---author:wangshuai---date:2023-11-15---for:【QQYUN-7028】用户职务保存后未回显---\n \t\t\t\t//update-end---author:wangshuai ---date:20230228  for：[QQYUN-4354]加入更多字段：当前加入时间应该取当前租户的/职位也是当前租户下的------------\n \t\t\t\titem.setPost(CommonUtils.getSplitText(positionList,SymbolConstant.COMMA));\n \t\t\t\t\n@@ -929,7 +932,17 @@ private void saveUserTenant(String userId, String relTenantIds) {\n                 relation.setUserId(userId);\n                 relation.setTenantId(Integer.valueOf(tenantId));\n                 relation.setStatus(CommonConstant.STATUS_1);\n-                relationMapper.insert(relation);\n+                \n+\t\t\t\tLambdaQueryWrapper sysUserTenantQueryWrapper = new LambdaQueryWrapper<SysUserTenant>()\n+\t\t\t\t\t\t.eq(SysUserTenant::getUserId, userId)\n+\t\t\t\t\t\t.eq(SysUserTenant::getTenantId,Integer.valueOf(tenantId));\n+\t\t\t\tSysUserTenant tenantPresent = relationMapper.selectOne(sysUserTenantQueryWrapper);\n+\t\t\t\tif (tenantPresent != null) {\n+\t\t\t\t\ttenantPresent.setStatus(CommonConstant.STATUS_1);\n+\t\t\t\t\trelationMapper.updateById(tenantPresent);\n+\t\t\t\t}else{\n+\t\t\t\t\trelationMapper.insert(relation);\n+\t\t\t\t}\n             }\n         }else{\n \t\t\t//是否开启系统管理模块的多租户数据隔离【SAAS多租户模式】\n@@ -960,7 +973,7 @@ private void editUserTenants(String userId, String relTenantIds) {\n         LambdaQueryWrapper<SysUserTenant> query = new LambdaQueryWrapper<>();\n         query.eq(SysUserTenant::getUserId, userId);\n         //数据库的租户id\n-\t\tList<Integer> oldTenantIds = relationMapper.getTenantIdsNoStatus(userId);\n+\t\tList<Integer> oldTenantIds = relationMapper.getTenantIdsByUserId(userId);\n         //如果传过来的租户id为空，那么就删除租户\n         if (oConvertUtils.isEmpty(relTenantIds) && CollectionUtils.isNotEmpty(oldTenantIds)) {\n             this.deleteTenantByUserId(userId, null);",
    "output": "Merge branch 'master' of https://github.com/EightMonth/jeecg-boot"
  },
  {
    "input": "diff --git a/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/SqlInjectionUtil.java b/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/SqlInjectionUtil.java\n--- a/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/SqlInjectionUtil.java\n+++ b/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/SqlInjectionUtil.java\n@@ -33,7 +33,7 @@ public class SqlInjectionUtil {\n \t/**\n \t * sleep函数\n \t */\n-\tprivate final static Pattern FUN_SLEEP = Pattern.compile(\"sleep\\\\([\\\\d\\\\.]*\\\\)\", Pattern.CASE_INSENSITIVE);\n+\tprivate final static Pattern FUN_SLEEP = Pattern.compile(\"sleep\\\\(.*\\\\)\", Pattern.CASE_INSENSITIVE);\n \n \t/**\n \t * sql注释的正则\n\ndiff --git a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/LoginController.java b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/LoginController.java\n--- a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/LoginController.java\n+++ b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/LoginController.java\n@@ -727,8 +727,8 @@ private void addLoginFailOvertimes(String username){\n \t\tif(failTime!=null){\n \t\t\tval = Integer.parseInt(failTime.toString());\n \t\t}\n-\t\t// 1小时\n-\t\tredisUtil.set(key, ++val, 3600);\n+\t\t// 10分钟\n+\t\tredisUtil.set(key, ++val, 600);\n \t}\n \n }\n\\ No newline at end of file\n\ndiff --git a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/util/RandImageUtil.java b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/util/RandImageUtil.java\n--- a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/util/RandImageUtil.java\n+++ b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/util/RandImageUtil.java\n@@ -6,6 +6,8 @@\n import java.awt.image.BufferedImage;\n import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.SecureRandom;\n import java.util.Base64;\n import java.util.Random;\n \n@@ -96,7 +98,13 @@ private static BufferedImage getImageBuffer(String resultCode){\n //\t\tgraphics.setColor(getRandColor(100, 200)); // ---2\n         graphics.drawRect(0, 0, WIDTH - 1, HEIGHT - 1);\n \n-        final Random random = new Random();\n+        // SHA1PRNG是-种常用的随机数生成算法,处理弱随机数问题\n+        SecureRandom random;\n+        try {\n+            random = SecureRandom.getInstance(\"SHA1PRNG\");\n+        } catch (NoSuchAlgorithmException e) {\n+            random = new SecureRandom();\n+        }\n         // 随机产生干扰线，使图象中的认证码不易被其它程序探测到\n         for (int i = 0; i < COUNT; i++) {\n             // ---3",
    "output": "Merge branch 'master' of https://github.com/zhangdaiscott/jeecg-boot"
  },
  {
    "input": "diff --git a/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/SqlInjectionUtil.java b/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/SqlInjectionUtil.java\n--- a/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/SqlInjectionUtil.java\n+++ b/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/SqlInjectionUtil.java\n@@ -33,7 +33,7 @@ public class SqlInjectionUtil {\n \t/**\n \t * sleep函数\n \t */\n-\tprivate final static Pattern FUN_SLEEP = Pattern.compile(\"sleep\\\\([\\\\d\\\\.]*\\\\)\", Pattern.CASE_INSENSITIVE);\n+\tprivate final static Pattern FUN_SLEEP = Pattern.compile(\"sleep\\\\(.*\\\\)\", Pattern.CASE_INSENSITIVE);\n \n \t/**\n \t * sql注释的正则\n\ndiff --git a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/LoginController.java b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/LoginController.java\n--- a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/LoginController.java\n+++ b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/LoginController.java\n@@ -727,8 +727,8 @@ private void addLoginFailOvertimes(String username){\n \t\tif(failTime!=null){\n \t\t\tval = Integer.parseInt(failTime.toString());\n \t\t}\n-\t\t// 1小时\n-\t\tredisUtil.set(key, ++val, 3600);\n+\t\t// 10分钟\n+\t\tredisUtil.set(key, ++val, 600);\n \t}\n \n }\n\\ No newline at end of file\n\ndiff --git a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/util/RandImageUtil.java b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/util/RandImageUtil.java\n--- a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/util/RandImageUtil.java\n+++ b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/util/RandImageUtil.java\n@@ -6,6 +6,8 @@\n import java.awt.image.BufferedImage;\n import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.SecureRandom;\n import java.util.Base64;\n import java.util.Random;\n \n@@ -96,7 +98,13 @@ private static BufferedImage getImageBuffer(String resultCode){\n //\t\tgraphics.setColor(getRandColor(100, 200)); // ---2\n         graphics.drawRect(0, 0, WIDTH - 1, HEIGHT - 1);\n \n-        final Random random = new Random();\n+        // SHA1PRNG是-种常用的随机数生成算法,处理弱随机数问题\n+        SecureRandom random;\n+        try {\n+            random = SecureRandom.getInstance(\"SHA1PRNG\");\n+        } catch (NoSuchAlgorithmException e) {\n+            random = new SecureRandom();\n+        }\n         // 随机产生干扰线，使图象中的认证码不易被其它程序探测到\n         for (int i = 0; i < COUNT; i++) {\n             // ---3",
    "output": "Merge pull request #5328 from EightMonth/master\n\nissue#5295 issue#5296 issue#5255"
  },
  {
    "input": "diff --git a/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/SqlInjectionUtil.java b/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/SqlInjectionUtil.java\n--- a/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/SqlInjectionUtil.java\n+++ b/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/SqlInjectionUtil.java\n@@ -33,7 +33,7 @@ public class SqlInjectionUtil {\n \t/**\n \t * sleep函数\n \t */\n-\tprivate final static Pattern FUN_SLEEP = Pattern.compile(\"sleep\\\\([\\\\d\\\\.]*\\\\)\", Pattern.CASE_INSENSITIVE);\n+\tprivate final static Pattern FUN_SLEEP = Pattern.compile(\"sleep\\\\(.*\\\\)\", Pattern.CASE_INSENSITIVE);\n \n \t/**\n \t * sql注释的正则\n\ndiff --git a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/LoginController.java b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/LoginController.java\n--- a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/LoginController.java\n+++ b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/LoginController.java\n@@ -727,8 +727,8 @@ private void addLoginFailOvertimes(String username){\n \t\tif(failTime!=null){\n \t\t\tval = Integer.parseInt(failTime.toString());\n \t\t}\n-\t\t// 1小时\n-\t\tredisUtil.set(key, ++val, 3600);\n+\t\t// 10分钟\n+\t\tredisUtil.set(key, ++val, 600);\n \t}\n \n }\n\\ No newline at end of file\n\ndiff --git a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/util/RandImageUtil.java b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/util/RandImageUtil.java\n--- a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/util/RandImageUtil.java\n+++ b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/util/RandImageUtil.java\n@@ -6,6 +6,8 @@\n import java.awt.image.BufferedImage;\n import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.SecureRandom;\n import java.util.Base64;\n import java.util.Random;\n \n@@ -96,7 +98,13 @@ private static BufferedImage getImageBuffer(String resultCode){\n //\t\tgraphics.setColor(getRandColor(100, 200)); // ---2\n         graphics.drawRect(0, 0, WIDTH - 1, HEIGHT - 1);\n \n-        final Random random = new Random();\n+        // SHA1PRNG是-种常用的随机数生成算法,处理弱随机数问题\n+        SecureRandom random;\n+        try {\n+            random = SecureRandom.getInstance(\"SHA1PRNG\");\n+        } catch (NoSuchAlgorithmException e) {\n+            random = new SecureRandom();\n+        }\n         // 随机产生干扰线，使图象中的认证码不易被其它程序探测到\n         for (int i = 0; i < COUNT; i++) {\n             // ---3",
    "output": "issue#5295 issue#5296 issue#5255"
  },
  {
    "input": "diff --git a/jeecg-server-cloud/jeecg-cloud-gateway/src/main/java/org/jeecg/loader/DynamicRouteLoader.java b/jeecg-server-cloud/jeecg-cloud-gateway/src/main/java/org/jeecg/loader/DynamicRouteLoader.java\n--- a/jeecg-server-cloud/jeecg-cloud-gateway/src/main/java/org/jeecg/loader/DynamicRouteLoader.java\n+++ b/jeecg-server-cloud/jeecg-cloud-gateway/src/main/java/org/jeecg/loader/DynamicRouteLoader.java\n@@ -224,7 +224,7 @@ public static List<MyRouteDefinition> getRoutesByJson(JSONArray array) throws UR\n                 \n                 List<PredicateDefinition> predicateDefinitionList = new ArrayList<>();\n                 for (Object map : list) {\n-                    JSONObject json = (JSONObject) map;\n+                    JSONObject json = JSON.parseObject(JSON.toJSONString(map));\n                     PredicateDefinition predicateDefinition = new PredicateDefinition();\n                     //update-begin-author:zyf date:20220419 for:【VUEN-762】路由条件添加异常问题,原因是部分路由条件参数需要设置固定key\n                     String name=json.getString(\"name\");",
    "output": "Update DynamicRouteLoader.java"
  },
  {
    "input": "diff --git a/jeecg-server-cloud/jeecg-cloud-gateway/src/main/java/org/jeecg/loader/DynamicRouteLoader.java b/jeecg-server-cloud/jeecg-cloud-gateway/src/main/java/org/jeecg/loader/DynamicRouteLoader.java\n--- a/jeecg-server-cloud/jeecg-cloud-gateway/src/main/java/org/jeecg/loader/DynamicRouteLoader.java\n+++ b/jeecg-server-cloud/jeecg-cloud-gateway/src/main/java/org/jeecg/loader/DynamicRouteLoader.java\n@@ -21,6 +21,7 @@\n import org.jeecg.loader.repository.DynamicRouteService;\n import org.jeecg.loader.repository.MyInMemoryRouteDefinitionRepository;\n import org.jeecg.loader.vo.MyRouteDefinition;\n+import org.jeecg.loader.vo.PredicatesVo;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.cloud.context.config.annotation.RefreshScope;\n import org.springframework.cloud.gateway.event.RefreshRoutesEvent;\n@@ -35,10 +36,7 @@\n \n import java.net.URI;\n import java.net.URISyntaxException;\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Properties;\n+import java.util.*;\n import java.util.concurrent.Executor;\n \n /**\n@@ -207,7 +205,23 @@ public static List<MyRouteDefinition> getRoutesByJson(JSONArray array) throws UR\n             }\n             Object predicates = obj.get(\"predicates\");\n             if (predicates != null) {\n-                JSONArray list = JSON.parseArray(predicates.toString());\n+                \n+                List<PredicatesVo> list = JSON.parseArray(predicates.toString(), PredicatesVo.class);\n+                Map<String, List<String>> groupedPredicates = new HashMap<>();\n+\n+                for (PredicatesVo predicatesVo : list) {\n+                    String name = predicatesVo.getName();\n+                    List<String> args = predicatesVo.getArgs();\n+                    groupedPredicates.computeIfAbsent(name, k -> new ArrayList<>()).addAll(args);\n+                }\n+\n+                list = new ArrayList<>();\n+                for (Map.Entry<String, List<String>> entry : groupedPredicates.entrySet()) {\n+                    String name = entry.getKey();\n+                    List<String> args = entry.getValue();\n+                    list.add(new PredicatesVo(name, args));\n+                }\n+                \n                 List<PredicateDefinition> predicateDefinitionList = new ArrayList<>();\n                 for (Object map : list) {\n                     JSONObject json = (JSONObject) map;",
    "output": "Update DynamicRouteLoader.java"
  },
  {
    "input": "diff --git a/jeecg-server-cloud/jeecg-cloud-gateway/src/main/java/org/jeecg/loader/vo/PredicatesVo.java b/jeecg-server-cloud/jeecg-cloud-gateway/src/main/java/org/jeecg/loader/vo/PredicatesVo.java\n--- a/jeecg-server-cloud/jeecg-cloud-gateway/src/main/java/org/jeecg/loader/vo/PredicatesVo.java\n+++ b/jeecg-server-cloud/jeecg-cloud-gateway/src/main/java/org/jeecg/loader/vo/PredicatesVo.java\n@@ -0,0 +1,16 @@\n+package org.jeecg.loader.vo;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+import java.util.List;\n+\n+\n+@Data\n+@AllArgsConstructor\n+@NoArgsConstructor\n+public class PredicatesVo {\n+    private String  name;\n+    private List<String> args;\n+}",
    "output": "Create PredicatesVo.java"
  },
  {
    "input": "diff --git a/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/security/AbstractQueryBlackListHandler.java b/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/security/AbstractQueryBlackListHandler.java\n--- a/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/security/AbstractQueryBlackListHandler.java\n+++ b/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/security/AbstractQueryBlackListHandler.java\n@@ -3,6 +3,8 @@\n import lombok.extern.slf4j.Slf4j;\n \n import java.util.*;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n \n /**\n  * 查询表/字段 黑名单处理\n@@ -21,6 +23,11 @@ public abstract class AbstractQueryBlackListHandler {\n      */\n     public static Map<String, String> ruleMap = new HashMap<>();\n \n+    /**\n+     * 以下字符不能出现在表名中或是字段名中\n+     */\n+    public static final Pattern ILLEGAL_NAME_REG = Pattern.compile(\"[-]{2,}\");\n+\n     static {\n         ruleMap.put(\"sys_user\", \"password,salt\");\n     }\n@@ -53,7 +60,10 @@ public boolean isPass(String sql) {\n             return true;\n         }\n         log.info(\"--获取sql信息--\", list.toString());\n-        boolean flag = true;\n+        boolean flag = checkTableAndFieldsName(list);\n+        if(flag == false){\n+            return false;\n+        }\n         for (QueryTable table : list) {\n             String name = table.getName();\n             String fieldString = ruleMap.get(name);\n@@ -73,6 +83,46 @@ public boolean isPass(String sql) {\n         return flag;\n     }\n \n+    /**\n+     * 校验表名和字段名是否有效，或是是否会带些特殊的字符串进行sql注入\n+     * issues/4983 SQL Injection in 3.5.1 #4983\n+     * @return\n+     */\n+    private boolean checkTableAndFieldsName(List<QueryTable> list){\n+        boolean flag = true;\n+        for(QueryTable queryTable: list){\n+            String tableName = queryTable.getName();\n+            if(hasSpecialString(tableName)){\n+                flag = false;\n+                log.warn(\"sql黑名单校验，表名【\"+tableName+\"】包含特殊字符\");\n+                break;\n+            }\n+            Set<String> fields = queryTable.getFields();\n+            for(String name: fields){\n+                if(hasSpecialString(name)){\n+                    flag = false;\n+                    log.warn(\"sql黑名单校验，字段名【\"+name+\"】包含特殊字符\");\n+                    break;\n+                } \n+            }\n+        }\n+        return flag;\n+    }\n+\n+    /**\n+     * 是否包含特殊的字符串\n+     * @param name\n+     * @return\n+     */\n+    private boolean hasSpecialString(String name){\n+        Matcher m = ILLEGAL_NAME_REG.matcher(name);\n+        if (m.find()) {\n+            return true;\n+        }\n+        return false;\n+    }\n+    \n+\n     /**\n      * 查询的表的信息\n      */",
    "output": "issues/4983 SQL Injection in 3.5.1 #4983"
  },
  {
    "input": "diff --git a/jeecg-server-cloud/jeecg-cloud-gateway/src/main/java/org/jeecg/config/GatewayRoutersConfig.java b/jeecg-server-cloud/jeecg-cloud-gateway/src/main/java/org/jeecg/config/GatewayRoutersConfig.java\n--- a/jeecg-server-cloud/jeecg-cloud-gateway/src/main/java/org/jeecg/config/GatewayRoutersConfig.java\n+++ b/jeecg-server-cloud/jeecg-cloud-gateway/src/main/java/org/jeecg/config/GatewayRoutersConfig.java\n@@ -33,7 +33,7 @@ public void setRouteDataId(String dataId) {\n         this.dataId = dataId + \".json\";\n     }\n \n-    @Value(\"${jeecg.route.config.group:DEFAULT_GROUP:#{null}}\")\n+    @Value(\"${spring.cloud.nacos.config.group:DEFAULT_GROUP:#{null}}\")\n     public void setRouteGroup(String routeGroup) {\n         this.routeGroup = routeGroup;\n     }\n@@ -43,7 +43,7 @@ public void setServerAddr(String serverAddr) {\n         this.serverAddr = serverAddr;\n     }\n \n-    @Value(\"${spring.cloud.nacos.discovery.namespace:#{null}}\")\n+    @Value(\"${spring.cloud.nacos.config.namespace:#{null}}\")\n     public void setNamespace(String namespace) {\n         this.namespace = namespace;\n     }",
    "output": "Merge remote-tracking branch 'remotes/origin/master'"
  },
  {
    "input": "diff --git a/jeecg-server-cloud/jeecg-cloud-gateway/src/main/java/org/jeecg/config/GatewayRoutersConfig.java b/jeecg-server-cloud/jeecg-cloud-gateway/src/main/java/org/jeecg/config/GatewayRoutersConfig.java\n--- a/jeecg-server-cloud/jeecg-cloud-gateway/src/main/java/org/jeecg/config/GatewayRoutersConfig.java\n+++ b/jeecg-server-cloud/jeecg-cloud-gateway/src/main/java/org/jeecg/config/GatewayRoutersConfig.java\n@@ -33,7 +33,7 @@ public void setRouteDataId(String dataId) {\n         this.dataId = dataId + \".json\";\n     }\n \n-    @Value(\"${jeecg.route.config.group:DEFAULT_GROUP:#{null}}\")\n+    @Value(\"${spring.cloud.nacos.config.group:DEFAULT_GROUP:#{null}}\")\n     public void setRouteGroup(String routeGroup) {\n         this.routeGroup = routeGroup;\n     }\n@@ -43,7 +43,7 @@ public void setServerAddr(String serverAddr) {\n         this.serverAddr = serverAddr;\n     }\n \n-    @Value(\"${spring.cloud.nacos.discovery.namespace:#{null}}\")\n+    @Value(\"${spring.cloud.nacos.config.namespace:#{null}}\")\n     public void setNamespace(String namespace) {\n         this.namespace = namespace;\n     }",
    "output": "Merge pull request #4825 from miniFrank/bugfix/issue-4762\n\n[bugfix]"
  },
  {
    "input": "diff --git a/jeecg-boot-base-core/src/main/java/org/jeecg/config/Swagger2Config.java b/jeecg-boot-base-core/src/main/java/org/jeecg/config/Swagger2Config.java\n--- a/jeecg-boot-base-core/src/main/java/org/jeecg/config/Swagger2Config.java\n+++ b/jeecg-boot-base-core/src/main/java/org/jeecg/config/Swagger2Config.java\n@@ -116,7 +116,7 @@ private ApiInfo apiInfo() {\n                 // 描述\n                 .description(\"后台API接口\")\n                 // 作者\n-                .contact(new Contact(\"北京国炬信息技术有限公司\",\"www.jeccg.com\",\"jeecgos@163.com\"))\n+                .contact(new Contact(\"北京敲敲云科技有限公司\",\"www.jeccg.com\",\"jeecgos@163.com\"))\n                 .license(\"The Apache License, Version 2.0\")\n                 .licenseUrl(\"http://www.apache.org/licenses/LICENSE-2.0.html\")\n                 .build();",
    "output": "1"
  },
  {
    "input": "diff --git a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/SysDictController.java b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/SysDictController.java\n--- a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/SysDictController.java\n+++ b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/controller/SysDictController.java\n@@ -309,7 +309,7 @@ public Result<List<String>> loadDictItem(@PathVariable(\"dictCode\") String dictCo\n \t */\n \t@SuppressWarnings(\"unchecked\")\n \t@RequestMapping(value = \"/loadTreeData\", method = RequestMethod.GET)\n-\tpublic Result<List<TreeSelectModel>> loadTreeData(@RequestParam(name=\"pid\") String pid,@RequestParam(name=\"pidField\") String pidField,\n+\tpublic Result<List<TreeSelectModel>> loadTreeData(@RequestParam(name=\"pid\",required = false) String pid,@RequestParam(name=\"pidField\") String pidField,\n \t\t\t\t\t\t\t\t\t\t\t\t  @RequestParam(name=\"tableName\") String tbname,\n \t\t\t\t\t\t\t\t\t\t\t\t  @RequestParam(name=\"text\") String text,\n \t\t\t\t\t\t\t\t\t\t\t\t  @RequestParam(name=\"code\") String code,\n@@ -347,7 +347,12 @@ public Result<List<DictModel>> queryTableData(DictQuery query,\n \t\tResult<List<DictModel>> res = new Result<List<DictModel>>();\n \t\t// SQL注入漏洞 sign签名校验\n \t\tString dictCode = query.getTable()+\",\"+query.getText()+\",\"+query.getCode();\n-        SqlInjectionUtil.filterContent(dictCode);\n+\t\tSqlInjectionUtil.filterContent(dictCode);\n+\t\t//update-begin-author:taoyan date:2022-11-4 for: issues/4128 sql injection\n+\t\tif(!dictQueryBlackListHandler.isPass(dictCode)){\n+\t\t\treturn res.error500(dictQueryBlackListHandler.getError());\n+\t\t}\n+\t\t//update-end-author:taoyan date:2022-11-4 for: issues/4128 sql injection\n \t\tList<DictModel> ls = this.sysDictService.queryDictTablePageList(query,pageSize,pageNo);\n \t\tres.setResult(ls);\n \t\tres.setSuccess(true);\n@@ -617,4 +622,21 @@ public Result<?> back(@PathVariable(\"id\") String id) {\n \t\t}\n \t}\n \n+\t/**\n+\t * VUEN-2584【issue】平台sql注入漏洞几个问题\n+\t * 部分特殊函数 可以将查询结果混夹在错误信息中，导致数据库的信息暴露\n+\t * @param e\n+\t * @return\n+\t */\n+\t@ExceptionHandler(java.sql.SQLException.class)\n+\tpublic Result<?> handleSQLException(Exception e){\n+\t\tString msg = e.getMessage();\n+\t\tString extractvalue = \"extractvalue\";\n+\t\tString updatexml = \"updatexml\";\n+\t\tif(msg!=null && (msg.toLowerCase().indexOf(extractvalue)>=0 || msg.toLowerCase().indexOf(updatexml)>=0)){\n+\t\t\treturn Result.error(\"校验失败，sql解析异常！\");\n+\t\t}\n+\t\treturn Result.error(\"校验失败，sql解析异常！\" + msg);\n+\t}\n+\n }",
    "output": "issues/4128 sql injection"
  },
  {
    "input": "diff --git a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/mapper/SysUserMapper.java b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/mapper/SysUserMapper.java\n--- a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/mapper/SysUserMapper.java\n+++ b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/mapper/SysUserMapper.java\n@@ -1,12 +1,12 @@\n package org.jeecg.modules.system.mapper;\n \n import com.baomidou.mybatisplus.core.conditions.Wrapper;\n+import com.baomidou.mybatisplus.core.mapper.BaseMapper;\n import com.baomidou.mybatisplus.core.metadata.IPage;\n import com.baomidou.mybatisplus.core.toolkit.Constants;\n import com.baomidou.mybatisplus.extension.plugins.pagination.Page;\n import org.apache.ibatis.annotations.Param;\n import org.jeecg.modules.system.entity.SysUser;\n-import com.baomidou.mybatisplus.core.mapper.BaseMapper;\n import org.jeecg.modules.system.model.SysUserSysDepartModel;\n import org.jeecg.modules.system.vo.SysUserDepVo;\n \n@@ -133,14 +133,14 @@ public interface SysUserMapper extends BaseMapper<SysUser> {\n      * @param entity\n      * @return int\n \t */\n-\tint revertLogicDeleted(@Param(\"userIds\") String userIds, @Param(\"entity\") SysUser entity);\n+\tint revertLogicDeleted(@Param(\"userIds\") List<String> userIds, @Param(\"entity\") SysUser entity);\n \n \t/**\n \t * 彻底删除被逻辑删除的用户\n      * @param userIds 多个用户id\n      * @return int\n \t */\n-\tint deleteLogicDeleted(@Param(\"userIds\") String userIds);\n+\tint deleteLogicDeleted(@Param(\"userIds\") List<String> userIds);\n \n     /**\n      * 更新空字符串为null【此写法有sql注入风险，禁止随便用】\n\ndiff --git a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/service/impl/SysUserServiceImpl.java b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/service/impl/SysUserServiceImpl.java\n--- a/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/service/impl/SysUserServiceImpl.java\n+++ b/jeecg-module-system/jeecg-system-biz/src/main/java/org/jeecg/modules/system/service/impl/SysUserServiceImpl.java\n@@ -459,16 +459,14 @@ public List<SysUser> queryLogicDeleted(LambdaQueryWrapper<SysUser> wrapper) {\n \t@Override\n \t@CacheEvict(value={CacheConstant.SYS_USERS_CACHE}, allEntries=true)\n \tpublic boolean revertLogicDeleted(List<String> userIds, SysUser updateEntity) {\n-\t\tString ids = String.format(\"'%s'\", String.join(\"','\", userIds));\n-\t\treturn userMapper.revertLogicDeleted(ids, updateEntity) > 0;\n+\t\treturn userMapper.revertLogicDeleted(userIds, updateEntity) > 0;\n \t}\n \n \t@Override\n \t@Transactional(rollbackFor = Exception.class)\n \tpublic boolean removeLogicDeleted(List<String> userIds) {\n-\t\tString ids = String.format(\"'%s'\", String.join(\"','\", userIds));\n \t\t// 1. 删除用户\n-\t\tint line = userMapper.deleteLogicDeleted(ids);\n+\t\tint line = userMapper.deleteLogicDeleted(userIds);\n \t\t// 2. 删除用户部门关系\n \t\tline += sysUserDepartMapper.delete(new LambdaQueryWrapper<SysUserDepart>().in(SysUserDepart::getUserId, userIds));\n \t\t//3. 删除用户角色关系",
    "output": "/sys/user/putRecycleBin is affected by sql injection #4126\n/sys/user/deleteRecycleBin is affected by sql injection #4125"
  },
  {
    "input": "diff --git a/jeecg-boot-base-core/src/main/java/org/jeecg/common/system/util/ResourceUtil.java b/jeecg-boot-base-core/src/main/java/org/jeecg/common/system/util/ResourceUtil.java\n--- a/jeecg-boot-base-core/src/main/java/org/jeecg/common/system/util/ResourceUtil.java\n+++ b/jeecg-boot-base-core/src/main/java/org/jeecg/common/system/util/ResourceUtil.java\n@@ -36,6 +36,12 @@ public class ResourceUtil {\n      */\n     private final static String CLASS_PATTERN=\"/**/*.class\";\n \n+    /**\n+     * 所有枚举java类\n+     */\n+\n+    private final static String CLASS_ENMU_PATTERN=\"/**/*Enum.class\";\n+\n     /**\n      * 包路径 org.jeecg\n      */\n@@ -55,7 +61,7 @@ public static Map<String, List<DictModel>> getEnumDictData(){\n             return enumDictData;\n         }\n         ResourcePatternResolver resourcePatternResolver = new PathMatchingResourcePatternResolver();\n-        String pattern = ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX + ClassUtils.convertClassNameToResourcePath(BASE_PACKAGE) + CLASS_PATTERN;\n+        String pattern = ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX + ClassUtils.convertClassNameToResourcePath(BASE_PACKAGE) + CLASS_ENMU_PATTERN;\n         try {\n             Resource[] resources = resourcePatternResolver.getResources(pattern);\n             MetadataReaderFactory readerFactory = new CachingMetadataReaderFactory(resourcePatternResolver);\n\ndiff --git a/jeecg-server-cloud/jeecg-visual/jeecg-cloud-sentinel/src/main/java/com/alibaba/csp/sentinel/dashboard/rule/nacos/SentinelConfig.java b/jeecg-server-cloud/jeecg-visual/jeecg-cloud-sentinel/src/main/java/com/alibaba/csp/sentinel/dashboard/rule/nacos/SentinelConfig.java\n--- a/jeecg-server-cloud/jeecg-visual/jeecg-cloud-sentinel/src/main/java/com/alibaba/csp/sentinel/dashboard/rule/nacos/SentinelConfig.java\n+++ b/jeecg-server-cloud/jeecg-visual/jeecg-cloud-sentinel/src/main/java/com/alibaba/csp/sentinel/dashboard/rule/nacos/SentinelConfig.java\n@@ -157,6 +157,9 @@ public ConfigService nacosConfigService() throws Exception {\n         if(StringUtils.isNotBlank(nacosConfigProperties.getPassword())){\n             properties.put(PropertyKeyConst.PASSWORD,nacosConfigProperties.getPassword());\n         }\n+        if(StringUtils.isNotBlank(nacosConfigProperties.getNamespace())){\n+            properties.put(PropertyKeyConst.NAMESPACE,nacosConfigProperties.getNamespace());\n+        }\n         return ConfigFactory.createConfigService(properties);\n     }\n }",
    "output": "Merge branch 'master' of https://github.com/zhangdaiscott/jeecg-boot"
  },
  {
    "input": "diff --git a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/cas/util/CASServiceUtil.java b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/cas/util/CASServiceUtil.java\n--- a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/cas/util/CASServiceUtil.java\n+++ b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/cas/util/CASServiceUtil.java\n@@ -1,107 +0,0 @@\n-package org.jeecg.modules.cas.util;\n-\n-import java.io.BufferedReader;\n-import java.io.IOException;\n-import java.io.InputStreamReader;\n-import java.security.cert.X509Certificate;\n-\n-import javax.net.ssl.SSLContext;\n-import javax.net.ssl.TrustManager;\n-import javax.net.ssl.X509TrustManager;\n-\n-import org.apache.http.HttpResponse;\n-import org.apache.http.client.methods.HttpGet;\n-import org.apache.http.conn.socket.LayeredConnectionSocketFactory;\n-import org.apache.http.conn.ssl.SSLConnectionSocketFactory;\n-import org.apache.http.impl.client.CloseableHttpClient;\n-import org.apache.http.impl.client.HttpClients;\n-\n-/**\n- * @Description: CasServiceUtil\n- * @author: jeecg-boot\n- */\n-public class CasServiceUtil {\n-\t\n-\tpublic static void main(String[] args) {\n-\t\tString serviceUrl = \"https://cas.8f8.com.cn:8443/cas/p3/serviceValidate\";\n-\t\tString service = \"http://localhost:3003/user/login\";\n-\t\tString ticket = \"ST-5-1g-9cNES6KXNRwq-GuRET103sm0-DESKTOP-VKLS8B3\";\n-\t\tString res = getStValidate(serviceUrl,ticket, service);\n-\t\t\n-\t\tSystem.out.println(\"---------res-----\"+res);\n-\t}\n-\t\n-\t\n-\t/**\n-     * 验证ST\n-     */\n-    public static String getStValidate(String url, String st, String service){\n-\t\ttry {\n-\t\t\turl = url+\"?service=\"+service+\"&ticket=\"+st;\n-\t\t\tCloseableHttpClient httpclient = createHttpClientWithNoSsl();\n-\t\t\tHttpGet httpget = new HttpGet(url);\n-\t\t\tHttpResponse response = httpclient.execute(httpget);\n-\t        String res = readResponse(response);\n-\t        return res == null ? null : (res == \"\" ? null : res);\n-\t\t} catch (Exception e) {\n-\t\t\te.printStackTrace();\n-\t\t}\n-\t\treturn \"\";\n-\t}\n-\n-    \n-    /**\n-     * 读取 response body 内容为字符串\n-     *\n-     * @param response\n-     * @return\n-     * @throws IOException\n-     */\n-    private static String readResponse(HttpResponse response) throws IOException {\n-        BufferedReader in = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));\n-        String result = new String();\n-        String line;\n-        while ((line = in.readLine()) != null) {\n-            result += line;\n-        }\n-        return result;\n-    }\n-    \n-    \n-    /**\n-     * 创建模拟客户端（针对 https 客户端禁用 SSL 验证）\n-     *\n-     * @param cookieStore 缓存的 Cookies 信息\n-     * @return\n-     * @throws Exception\n-     */\n-    private static CloseableHttpClient createHttpClientWithNoSsl() throws Exception {\n-        // Create a trust manager that does not validate certificate chains\n-        TrustManager[] trustAllCerts = new TrustManager[]{\n-                new X509TrustManager() {\n-                    @Override\n-                    public X509Certificate[] getAcceptedIssuers() {\n-                        return null;\n-                    }\n-\n-                    @Override\n-                    public void checkClientTrusted(X509Certificate[] certs, String authType) {\n-                        // don't check\n-                    }\n-\n-                    @Override\n-                    public void checkServerTrusted(X509Certificate[] certs, String authType) {\n-                        // don't check\n-                    }\n-                }\n-        };\n-\n-        SSLContext ctx = SSLContext.getInstance(\"TLS\");\n-        ctx.init(null, trustAllCerts, null);\n-        LayeredConnectionSocketFactory sslSocketFactory = new SSLConnectionSocketFactory(ctx);\n-        return HttpClients.custom()\n-                .setSSLSocketFactory(sslSocketFactory)\n-                .build();\n-    }\n-\n-}",
    "output": "Delete CASServiceUtil.java"
  },
  {
    "input": "diff --git a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/system/util/XSSUtils.java b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/system/util/XSSUtils.java\n--- a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/system/util/XSSUtils.java\n+++ b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/system/util/XSSUtils.java\n@@ -1,49 +0,0 @@\n-package org.jeecg.modules.system.util;\n-\n-import org.springframework.web.util.HtmlUtils;\n-\n-import java.util.regex.Pattern;\n-\n-/**\n- * @Description: 工具类XSSUtils，现在的做法是替换成空字符，CSDN的是进行转义，比如文字开头的\"<\"转成&lt;\n- * @author: lsq\n- * @date: 2021年07月26日 19:13\n- */\n-public class XssUtils {\n-\n-    private static Pattern[] patterns = new Pattern[]{\n-        //Script fragments\n-        Pattern.compile(\"<script>(.*?)</script>\", Pattern.CASE_INSENSITIVE),\n-        //src='...'\n-        Pattern.compile(\"src[\\r\\n]*=[\\r\\n]*\\\\\\'(.*?)\\\\\\'\", Pattern.CASE_INSENSITIVE | Pattern.MULTILINE | Pattern.DOTALL),\n-        Pattern.compile(\"src[\\r\\n]*=[\\r\\n]*\\\\\\\"(.*?)\\\\\\\"\", Pattern.CASE_INSENSITIVE | Pattern.MULTILINE | Pattern.DOTALL),\n-        //script tags\n-        Pattern.compile(\"</script>\", Pattern.CASE_INSENSITIVE),\n-        Pattern.compile(\"<script(.*?)>\", Pattern.CASE_INSENSITIVE | Pattern.MULTILINE | Pattern.DOTALL),\n-        //eval(...)\n-        Pattern.compile(\"eval\\\\((.*?)\\\\)\", Pattern.CASE_INSENSITIVE | Pattern.MULTILINE | Pattern.DOTALL),\n-        //expression(...)\n-        Pattern.compile(\"e­xpression\\\\((.*?)\\\\)\", Pattern.CASE_INSENSITIVE | Pattern.MULTILINE | Pattern.DOTALL),\n-        //javascript:...\n-        Pattern.compile(\"javascript:\", Pattern.CASE_INSENSITIVE),\n-        //vbscript:...\n-        Pattern.compile(\"vbscript:\", Pattern.CASE_INSENSITIVE),\n-        //onload(...)=...\n-        Pattern.compile(\"onload(.*?)=\", Pattern.CASE_INSENSITIVE | Pattern.MULTILINE | Pattern.DOTALL),\n-    };\n-\n-    public static String scriptXss(String value) {\n-        if (value != null) {\n-            value = value.replaceAll(\" \", \"\");\n-            for(Pattern scriptPattern: patterns){\n-                value = scriptPattern.matcher(value).replaceAll(\"\");\n-            }\n-        }\n-        return HtmlUtils.htmlEscape(value);\n-    }\n-\n-    public static void main(String[] args) {\n-        String s = scriptXss(\"<img  src=x onload=alert(111).*?><script></script>javascript:eval()\\\\\\\\.\");\n-        System.err.println(\"s======>\" + s);\n-    }\n-}",
    "output": "Delete XSSUtils.java"
  },
  {
    "input": "diff --git a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/oss/service/impl/OSSFileServiceImpl.java b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/oss/service/impl/OSSFileServiceImpl.java\n--- a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/oss/service/impl/OSSFileServiceImpl.java\n+++ b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/oss/service/impl/OSSFileServiceImpl.java\n@@ -1,48 +0,0 @@\n-package org.jeecg.modules.oss.service.impl;\n-\n-import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\n-import org.jeecg.common.util.CommonUtils;\n-import org.jeecg.common.util.oss.OssBootUtil;\n-import org.jeecg.modules.oss.entity.OssFile;\n-import org.jeecg.modules.oss.mapper.OssFileMapper;\n-import org.jeecg.modules.oss.service.IOssFileService;\n-import org.springframework.stereotype.Service;\n-import org.springframework.web.multipart.MultipartFile;\n-\n-import java.io.IOException;\n-\n-/**\n- * @Description: OSS云存储实现类\n- * @author: jeecg-boot\n- */\n-@Service(\"ossFileService\")\n-public class OssFileServiceImpl extends ServiceImpl<OssFileMapper, OssFile> implements IOssFileService {\n-\n-\t@Override\n-\tpublic void upload(MultipartFile multipartFile) throws IOException {\n-\t\tString fileName = multipartFile.getOriginalFilename();\n-\t\tfileName = CommonUtils.getFileName(fileName);\n-\t\tOssFile ossFile = new OssFile();\n-\t\tossFile.setFileName(fileName);\n-\t\tString url = OssBootUtil.upload(multipartFile,\"upload/test\");\n-\t\t//update-begin--Author:scott  Date:20201227 for：JT-361【文件预览】阿里云原生域名可以文件预览，自己映射域名kkfileview提示文件下载失败-------------------\n-\t\t// 返回阿里云原生域名前缀URL\n-\t\tossFile.setUrl(OssBootUtil.getOriginalUrl(url));\n-\t\t//update-end--Author:scott  Date:20201227 for：JT-361【文件预览】阿里云原生域名可以文件预览，自己映射域名kkfileview提示文件下载失败-------------------\n-\t\tthis.save(ossFile);\n-\t}\n-\n-\t@Override\n-\tpublic boolean delete(OssFile ossFile) {\n-\t\ttry {\n-\t\t\tthis.removeById(ossFile.getId());\n-\t\t\tOssBootUtil.deleteUrl(ossFile.getUrl());\n-\t\t}\n-\t\tcatch (Exception ex) {\n-\t\t\tlog.error(ex.getMessage(),ex);\n-\t\t\treturn false;\n-\t\t}\n-\t\treturn true;\n-\t}\n-\n-}",
    "output": "Delete OSSFileServiceImpl.java"
  },
  {
    "input": "diff --git a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/oss/service/IOSSFileService.java b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/oss/service/IOSSFileService.java\n--- a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/oss/service/IOSSFileService.java\n+++ b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/oss/service/IOSSFileService.java\n@@ -1,29 +0,0 @@\n-package org.jeecg.modules.oss.service;\n-\n-import java.io.IOException;\n-\n-import com.baomidou.mybatisplus.extension.service.IService;\n-import org.jeecg.modules.oss.entity.OssFile;\n-import org.springframework.web.multipart.MultipartFile;\n-\n-/**\n- * @Description: OOS云存储service接口\n- * @author: jeecg-boot\n- */\n-public interface IOssFileService extends IService<OssFile> {\n-\n-    /**\n-     * oss文件上传\n-     * @param multipartFile\n-     * @throws IOException\n-     */\n-\tvoid upload(MultipartFile multipartFile) throws IOException;\n-\n-    /**\n-     * oss文件删除\n-     * @param ossFile OSSFile对象\n-     * @return\n-     */\n-\tboolean delete(OssFile ossFile);\n-\n-}",
    "output": "Delete IOSSFileService.java"
  },
  {
    "input": "diff --git a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/oss/mapper/OSSFileMapper.java b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/oss/mapper/OSSFileMapper.java\n--- a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/oss/mapper/OSSFileMapper.java\n+++ b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/oss/mapper/OSSFileMapper.java\n@@ -1,12 +0,0 @@\n-package org.jeecg.modules.oss.mapper;\n-\n-import com.baomidou.mybatisplus.core.mapper.BaseMapper;\n-import org.jeecg.modules.oss.entity.OssFile;\n-\n-/**\n- * @Description: oss云存储Mapper\n- * @author: jeecg-boot\n- */\n-public interface OssFileMapper extends BaseMapper<OssFile> {\n-\n-}",
    "output": "Delete OSSFileMapper.java"
  },
  {
    "input": "diff --git a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/oss/entity/OSSFile.java b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/oss/entity/OSSFile.java\n--- a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/oss/entity/OSSFile.java\n+++ b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/oss/entity/OSSFile.java\n@@ -1,28 +0,0 @@\n-package org.jeecg.modules.oss.entity;\n-\n-import com.baomidou.mybatisplus.annotation.TableName;\n-import lombok.Data;\n-import lombok.EqualsAndHashCode;\n-import lombok.experimental.Accessors;\n-import org.jeecg.common.system.base.entity.JeecgEntity;\n-import org.jeecgframework.poi.excel.annotation.Excel;\n-\n-/**\n- * @Description: oss云存储实体类\n- * @author: jeecg-boot\n- */\n-@Data\n-@TableName(\"oss_file\")\n-@EqualsAndHashCode(callSuper = false)\n-@Accessors(chain = true)\n-public class OssFile extends JeecgEntity {\n-\n-\tprivate static final long serialVersionUID = 1L;\n-\n-\t@Excel(name = \"文件名称\")\n-\tprivate String fileName;\n-\n-\t@Excel(name = \"文件地址\")\n-\tprivate String url;\n-\n-}",
    "output": "Delete OSSFile.java"
  },
  {
    "input": "diff --git a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/oss/controller/OSSFileController.java b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/oss/controller/OSSFileController.java\n--- a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/oss/controller/OSSFileController.java\n+++ b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/oss/controller/OSSFileController.java\n@@ -1,95 +0,0 @@\n-package org.jeecg.modules.oss.controller;\n-\n-import javax.servlet.http.HttpServletRequest;\n-\n-import org.apache.shiro.authz.annotation.RequiresRoles;\n-import org.jeecg.common.api.vo.Result;\n-import org.jeecg.common.system.query.QueryGenerator;\n-import org.jeecg.modules.oss.entity.OssFile;\n-import org.jeecg.modules.oss.service.IOssFileService;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.stereotype.Controller;\n-import org.springframework.web.bind.annotation.*;\n-import org.springframework.web.multipart.MultipartFile;\n-\n-import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;\n-import com.baomidou.mybatisplus.core.metadata.IPage;\n-import com.baomidou.mybatisplus.extension.plugins.pagination.Page;\n-\n-import lombok.extern.slf4j.Slf4j;\n-\n-/**\n- * 云存储示例 DEMO\n- * @author: jeecg-boot\n- */\n-@Slf4j\n-@Controller\n-@RequestMapping(\"/sys/oss/file\")\n-public class OssFileController {\n-\n-\t@Autowired\n-\tprivate IOssFileService ossFileService;\n-\n-\t@ResponseBody\n-\t@GetMapping(\"/list\")\n-\tpublic Result<IPage<OssFile>> queryPageList(OssFile file,\n-                                                @RequestParam(name = \"pageNo\", defaultValue = \"1\") Integer pageNo,\n-                                                @RequestParam(name = \"pageSize\", defaultValue = \"10\") Integer pageSize, HttpServletRequest req) {\n-\t\tResult<IPage<OssFile>> result = new Result<>();\n-\t\tQueryWrapper<OssFile> queryWrapper = QueryGenerator.initQueryWrapper(file, req.getParameterMap());\n-\t\tPage<OssFile> page = new Page<>(pageNo, pageSize);\n-\t\tIPage<OssFile> pageList = ossFileService.page(page, queryWrapper);\n-\t\tresult.setSuccess(true);\n-\t\tresult.setResult(pageList);\n-\t\treturn result;\n-\t}\n-\n-\t@ResponseBody\n-\t@PostMapping(\"/upload\")\n-\t//@RequiresRoles(\"admin\")\n-\tpublic Result upload(@RequestParam(\"file\") MultipartFile multipartFile) {\n-\t\tResult result = new Result();\n-\t\ttry {\n-\t\t\tossFileService.upload(multipartFile);\n-\t\t\tresult.success(\"上传成功！\");\n-\t\t}\n-\t\tcatch (Exception ex) {\n-\t\t\tlog.info(ex.getMessage(), ex);\n-\t\t\tresult.error500(\"上传失败\");\n-\t\t}\n-\t\treturn result;\n-\t}\n-\n-\t@ResponseBody\n-\t@DeleteMapping(\"/delete\")\n-\tpublic Result delete(@RequestParam(name = \"id\") String id) {\n-\t\tResult result = new Result();\n-\t\tOssFile file = ossFileService.getById(id);\n-\t\tif (file == null) {\n-\t\t\tresult.error500(\"未找到对应实体\");\n-\t\t}else {\n-\t\t\tboolean ok = ossFileService.delete(file);\n-\t\t\tresult.success(\"删除成功!\");\n-\t\t}\n-\t\treturn result;\n-\t}\n-\n-\t/**\n-\t * 通过id查询.\n-\t */\n-\t@ResponseBody\n-\t@GetMapping(\"/queryById\")\n-\tpublic Result<OssFile> queryById(@RequestParam(name = \"id\") String id) {\n-\t\tResult<OssFile> result = new Result<>();\n-\t\tOssFile file = ossFileService.getById(id);\n-\t\tif (file == null) {\n-\t\t\tresult.error500(\"未找到对应实体\");\n-\t\t}\n-\t\telse {\n-\t\t\tresult.setResult(file);\n-\t\t\tresult.setSuccess(true);\n-\t\t}\n-\t\treturn result;\n-\t}\n-\n-}",
    "output": "Delete OSSFileController.java"
  },
  {
    "input": "diff --git a/jeecg-boot/jeecg-boot-module-demo/src/main/java/org/jeecg/modules/demo/mock/vxe/websocket/VXESocket.java b/jeecg-boot/jeecg-boot-module-demo/src/main/java/org/jeecg/modules/demo/mock/vxe/websocket/VXESocket.java\n--- a/jeecg-boot/jeecg-boot-module-demo/src/main/java/org/jeecg/modules/demo/mock/vxe/websocket/VXESocket.java\n+++ b/jeecg-boot/jeecg-boot-module-demo/src/main/java/org/jeecg/modules/demo/mock/vxe/websocket/VXESocket.java\n@@ -1,217 +0,0 @@\n-package org.jeecg.modules.demo.mock.vxe.websocket;\n-\n-import com.alibaba.fastjson.JSON;\n-import com.alibaba.fastjson.JSONObject;\n-import lombok.extern.slf4j.Slf4j;\n-import org.jeecg.common.constant.VxeSocketConst;\n-import org.springframework.stereotype.Component;\n-\n-import javax.websocket.OnClose;\n-import javax.websocket.OnMessage;\n-import javax.websocket.OnOpen;\n-import javax.websocket.Session;\n-import javax.websocket.server.PathParam;\n-import javax.websocket.server.ServerEndpoint;\n-import java.util.Collection;\n-import java.util.HashMap;\n-import java.util.Map;\n-\n-/**\n- * vxe WebSocket，用于实现实时无痕刷新的功能\n- * @author: jeecg-boot\n- */\n-@Slf4j\n-@Component\n-@ServerEndpoint(\"/vxeSocket/{userId}/{pageId}\")\n-public class VxeSocket {\n-\n-    /**\n-     * 当前 session\n-     */\n-    private Session session;\n-    /**\n-     * 当前用户id\n-     */\n-    private String userId;\n-    /**\n-     * 页面id，用于标识同一用户，不同页面的数据\n-     */\n-    private String pageId;\n-    /**\n-     * 当前socket唯一id\n-     */\n-    private String socketId;\n-\n-    /**\n-     * 用户连接池，包含单个用户的所有socket连接；\n-     * 因为一个用户可能打开多个页面，多个页面就会有多个连接；\n-     * key是userId，value是Map对象；子Map的key是pageId，value是VXESocket对象\n-     */\n-    private static Map<String, Map<String, VxeSocket>> userPool = new HashMap<>();\n-    /**\n-     * 连接池，包含所有WebSocket连接；\n-     * key是socketId，value是VXESocket对象\n-     */\n-    private static Map<String, VxeSocket> socketPool = new HashMap<>();\n-\n-    /**\n-     * 获取某个用户所有的页面\n-     */\n-    public static Map<String, VxeSocket> getUserPool(String userId) {\n-        return userPool.computeIfAbsent(userId, k -> new HashMap<>(5));\n-    }\n-\n-    /**\n-     * 向当前用户发送消息\n-     *\n-     * @param message 消息内容\n-     */\n-    public void sendMessage(String message) {\n-        try {\n-            this.session.getAsyncRemote().sendText(message);\n-        } catch (Exception e) {\n-            log.error(\"【vxeSocket】消息发送失败：\" + e.getMessage());\n-        }\n-    }\n-\n-    /**\n-     * 封装消息json\n-     *\n-     * @param data 消息内容\n-     */\n-    public static String packageMessage(String type, Object data) {\n-        JSONObject message = new JSONObject();\n-        message.put(VxeSocketConst.TYPE, type);\n-        message.put(VxeSocketConst.DATA, data);\n-        return message.toJSONString();\n-    }\n-\n-    /**\n-     * 向指定用户的所有页面发送消息\n-     *\n-     * @param userId  接收消息的用户ID\n-     * @param message 消息内容\n-     */\n-    public static void sendMessageTo(String userId, String message) {\n-        Collection<VxeSocket> values = getUserPool(userId).values();\n-        if (values.size() > 0) {\n-            for (VxeSocket socketItem : values) {\n-                socketItem.sendMessage(message);\n-            }\n-        } else {\n-            log.warn(\"【vxeSocket】消息发送失败：userId\\\"\" + userId + \"\\\"不存在或未在线！\");\n-        }\n-    }\n-\n-    /**\n-     * 向指定用户的指定页面发送消息\n-     *\n-     * @param userId  接收消息的用户ID\n-     * @param message 消息内容\n-     */\n-    public static void sendMessageTo(String userId, String pageId, String message) {\n-        VxeSocket socketItem = getUserPool(userId).get(pageId);\n-        if (socketItem != null) {\n-            socketItem.sendMessage(message);\n-        } else {\n-            log.warn(\"【vxeSocket】消息发送失败：userId\\\"\" + userId + \"\\\"的pageId\\\"\" + pageId + \"\\\"不存在或未在线！\");\n-        }\n-    }\n-\n-    /**\n-     * 向多个用户的所有页面发送消息\n-     *\n-     * @param userIds 接收消息的用户ID数组\n-     * @param message 消息内容\n-     */\n-    public static void sendMessageTo(String[] userIds, String message) {\n-        for (String userId : userIds) {\n-            VxeSocket.sendMessageTo(userId, message);\n-        }\n-    }\n-\n-    /**\n-     * 向所有用户的所有页面发送消息\n-     *\n-     * @param message 消息内容\n-     */\n-    public static void sendMessageToAll(String message) {\n-        for (VxeSocket socketItem : socketPool.values()) {\n-            socketItem.sendMessage(message);\n-        }\n-    }\n-\n-    /**\n-     * websocket 开启连接\n-     */\n-    @OnOpen\n-    public void onOpen(Session session, @PathParam(\"userId\") String userId, @PathParam(\"pageId\") String pageId) {\n-        try {\n-            this.userId = userId;\n-            this.pageId = pageId;\n-            this.socketId = userId + pageId;\n-            this.session = session;\n-\n-            socketPool.put(this.socketId, this);\n-            getUserPool(userId).put(this.pageId, this);\n-\n-            log.info(\"【vxeSocket】有新的连接，总数为:\" + socketPool.size());\n-        } catch (Exception ignored) {\n-        }\n-    }\n-\n-    /**\n-     * websocket 断开连接\n-     */\n-    @OnClose\n-    public void onClose() {\n-        try {\n-            socketPool.remove(this.socketId);\n-            getUserPool(this.userId).remove(this.pageId);\n-\n-            log.info(\"【vxeSocket】连接断开，总数为:\" + socketPool.size());\n-        } catch (Exception ignored) {\n-        }\n-    }\n-\n-    /**\n-     * websocket 收到消息\n-     */\n-    @OnMessage\n-    public void onMessage(String message) {\n-        // log.info(\"【vxeSocket】onMessage:\" + message);\n-        JSONObject json;\n-        try {\n-            json = JSON.parseObject(message);\n-        } catch (Exception e) {\n-            log.warn(\"【vxeSocket】收到不合法的消息:\" + message);\n-            return;\n-        }\n-        String type = json.getString(VxeSocketConst.TYPE);\n-        switch (type) {\n-            // 心跳检测\n-            case VxeSocketConst.TYPE_HB:\n-                this.sendMessage(VxeSocket.packageMessage(type, true));\n-                break;\n-            // 更新form数据\n-            case VxeSocketConst.TYPE_UVT:\n-                this.handleUpdateForm(json);\n-                break;\n-            default:\n-                log.warn(\"【vxeSocket】收到不识别的消息类型:\" + type);\n-                break;\n-        }\n-\n-\n-    }\n-\n-    /**\n-     * 处理 UpdateForm 事件\n-     */\n-    private void handleUpdateForm(JSONObject json) {\n-        // 将事件转发给所有人\n-        JSONObject data = json.getJSONObject(VxeSocketConst.DATA);\n-        VxeSocket.sendMessageToAll(VxeSocket.packageMessage(VxeSocketConst.TYPE_UVT, data));\n-    }\n-\n-}",
    "output": "Delete VXESocket.java"
  },
  {
    "input": "diff --git a/jeecg-boot/jeecg-boot-base/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/IPUtils.java b/jeecg-boot/jeecg-boot-base/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/IPUtils.java\n--- a/jeecg-boot/jeecg-boot-base/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/IPUtils.java\n+++ b/jeecg-boot/jeecg-boot-base/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/IPUtils.java\n@@ -1,59 +0,0 @@\n-package org.jeecg.common.util;\n-\n-import javax.servlet.http.HttpServletRequest;\n-\n-import org.apache.commons.lang3.StringUtils;\n-import org.jeecg.common.constant.CommonConstant;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-/**\n- * IP地址\n- * \n- * @Author scott\n- * @email jeecgos@163.com\n- * @Date 2019年01月14日\n- */\n-public class IpUtils {\n-\tprivate static Logger logger = LoggerFactory.getLogger(IpUtils.class);\n-\n-\t/**\n-\t * 获取IP地址\n-\t * \n-\t * 使用Nginx等反向代理软件， 则不能通过request.getRemoteAddr()获取IP地址\n-\t * 如果使用了多级反向代理的话，X-Forwarded-For的值并不止一个，而是一串IP地址，X-Forwarded-For中第一个非unknown的有效IP字符串，则为真实IP地址\n-\t */\n-\tpublic static String getIpAddr(HttpServletRequest request) {\n-    \tString ip = null;\n-        try {\n-            ip = request.getHeader(\"x-forwarded-for\");\n-            if (StringUtils.isEmpty(ip) || CommonConstant.UNKNOWN.equalsIgnoreCase(ip)) {\n-                ip = request.getHeader(\"Proxy-Client-IP\");\n-            }\n-            if (StringUtils.isEmpty(ip) || ip.length() == 0 ||CommonConstant.UNKNOWN.equalsIgnoreCase(ip)) {\n-                ip = request.getHeader(\"WL-Proxy-Client-IP\");\n-            }\n-            if (StringUtils.isEmpty(ip) || CommonConstant.UNKNOWN.equalsIgnoreCase(ip)) {\n-                ip = request.getHeader(\"HTTP_CLIENT_IP\");\n-            }\n-            if (StringUtils.isEmpty(ip) || CommonConstant.UNKNOWN.equalsIgnoreCase(ip)) {\n-                ip = request.getHeader(\"HTTP_X_FORWARDED_FOR\");\n-            }\n-            if (StringUtils.isEmpty(ip) || CommonConstant.UNKNOWN.equalsIgnoreCase(ip)) {\n-                ip = request.getRemoteAddr();\n-            }\n-        } catch (Exception e) {\n-        \tlogger.error(\"IPUtils ERROR \", e);\n-        }\n-        \n-//        //使用代理，则获取第一个IP地址\n-//        if(StringUtils.isEmpty(ip) && ip.length() > 15) {\n-//\t\t\tif(ip.indexOf(\",\") > 0) {\n-//\t\t\t\tip = ip.substring(0, ip.indexOf(\",\"));\n-//\t\t\t}\n-//\t\t}\n-        \n-        return ip;\n-    }\n-\t\n-}",
    "output": "Delete IPUtils.java"
  },
  {
    "input": "diff --git a/jeecg-boot/jeecg-boot-base/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/MD5Util.java b/jeecg-boot/jeecg-boot-base/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/MD5Util.java\n--- a/jeecg-boot/jeecg-boot-base/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/MD5Util.java\n+++ b/jeecg-boot/jeecg-boot-base/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/MD5Util.java\n@@ -1,47 +0,0 @@\n-package org.jeecg.common.util;\n-\n-import java.security.MessageDigest;\n-\n-/**\n- * @Description: 加密工具\n- * @author: jeecg-boot\n- */\n-public class Md5Util {\n-\n-    private static final String[] HEXDIGITS = { \"0\", \"1\", \"2\", \"3\", \"4\", \"5\",\n-            \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\" };\n-\n-\tpublic static String byteArrayToHexString(byte[] b) {\n-\t\tStringBuffer resultSb = new StringBuffer();\n-\t\tfor (int i = 0; i < b.length; i++){\n-\t\t\tresultSb.append(byteToHexString(b[i]));\n-\t\t}\n-\t\treturn resultSb.toString();\n-\t}\n-\n-\tprivate static String byteToHexString(byte b) {\n-\t\tint n = b;\n-\t\tif (n < 0) {\n-\t\t\tn += 256;\n-\t\t}\n-\t\tint d1 = n / 16;\n-\t\tint d2 = n % 16;\n-\t\treturn HEXDIGITS[d1] + HEXDIGITS[d2];\n-\t}\n-\n-\tpublic static String md5Encode(String origin, String charsetname) {\n-\t\tString resultString = null;\n-\t\ttry {\n-\t\t\tresultString = new String(origin);\n-\t\t\tMessageDigest md = MessageDigest.getInstance(\"MD5\");\n-\t\t\tif (charsetname == null || \"\".equals(charsetname)) {\n-\t\t\t\tresultString = byteArrayToHexString(md.digest(resultString.getBytes()));\n-\t\t\t} else {\n-\t\t\t\tresultString = byteArrayToHexString(md.digest(resultString.getBytes(charsetname)));\n-\t\t\t}\n-\t\t} catch (Exception exception) {\n-\t\t}\n-\t\treturn resultString;\n-\t}\n-\n-}",
    "output": "Delete MD5Util.java"
  },
  {
    "input": "diff --git a/jeecg-boot/jeecg-boot-base/jeecg-boot-base-core/src/main/java/org/jeecg/common/constant/VXESocketConst.java b/jeecg-boot/jeecg-boot-base/jeecg-boot-base-core/src/main/java/org/jeecg/common/constant/VXESocketConst.java\n--- a/jeecg-boot/jeecg-boot-base/jeecg-boot-base-core/src/main/java/org/jeecg/common/constant/VXESocketConst.java\n+++ b/jeecg-boot/jeecg-boot-base/jeecg-boot-base-core/src/main/java/org/jeecg/common/constant/VXESocketConst.java\n@@ -1,31 +0,0 @@\n-package org.jeecg.common.constant;\n-\n-/**\n- * VXESocket 常量\n- * @author: jeecg-boot\n- */\n-public class VxeSocketConst {\n-\n-    /**\n-     * 消息类型\n-     */\n-    public static final String TYPE = \"type\";\n-    /**\n-     * 消息数据\n-     */\n-    public static final String DATA = \"data\";\n-\n-    /**\n-     * 消息类型：心跳检测\n-     */\n-    public static final String TYPE_HB = \"heart_beat\";\n-    /**\n-     * 消息类型：通用数据传递\n-     */\n-    public static final String TYPE_CSD = \"common_send_date\";\n-    /**\n-     * 消息类型：更新vxe table数据\n-     */\n-    public static final String TYPE_UVT = \"update_vxe_table\";\n-\n-}",
    "output": "Delete VXESocketConst.java"
  },
  {
    "input": "diff --git a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/system/mapper/SysUserDepartMapper.java b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/system/mapper/SysUserDepartMapper.java\n--- a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/system/mapper/SysUserDepartMapper.java\n+++ b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/system/mapper/SysUserDepartMapper.java\n@@ -2,11 +2,11 @@\n \n import java.util.List;\n \n+import org.apache.ibatis.annotations.Param;\n import org.jeecg.modules.system.entity.SysUserDepart;\n \n import com.baomidou.mybatisplus.core.mapper.BaseMapper;\n \n-import io.lettuce.core.dynamic.annotation.Param;\n \n public interface SysUserDepartMapper extends BaseMapper<SysUserDepart>{\n \t\n\ndiff --git a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/system/service/impl/SysUserServiceImpl.java b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/system/service/impl/SysUserServiceImpl.java\n--- a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/system/service/impl/SysUserServiceImpl.java\n+++ b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/system/service/impl/SysUserServiceImpl.java\n@@ -363,7 +363,7 @@ public Result<?> checkUserIsEffective(SysUser sysUser) {\n \t\t}\n \t\t//情况2：根据用户信息查询，该用户已注销\n \t\t//update-begin---author:王帅   Date:20200601  for：if条件永远为falsebug------------\n-\t\tif (CommonConstant.DEL_FLAG_1==sysUser.getDelFlag()) {\n+\t\tif (CommonConstant.DEL_FLAG_1.equals(sysUser.getDelFlag())) {\n \t\t//update-end---author:王帅   Date:20200601  for：if条件永远为falsebug------------\n \t\t\tbaseCommonService.addLog(\"用户登录失败，用户名:\" + sysUser.getUsername() + \"已注销！\", CommonConstant.LOG_TYPE_1, null);\n \t\t\tresult.error500(\"该用户已注销\");",
    "output": "Merge pull request #1900 from Pa-Star-Home/master\n\nbugfix: fix mybatis param import error; fix integer object compare use == error"
  },
  {
    "input": "diff --git a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/system/mapper/SysUserDepartMapper.java b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/system/mapper/SysUserDepartMapper.java\n--- a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/system/mapper/SysUserDepartMapper.java\n+++ b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/system/mapper/SysUserDepartMapper.java\n@@ -2,11 +2,11 @@\n \n import java.util.List;\n \n+import org.apache.ibatis.annotations.Param;\n import org.jeecg.modules.system.entity.SysUserDepart;\n \n import com.baomidou.mybatisplus.core.mapper.BaseMapper;\n \n-import io.lettuce.core.dynamic.annotation.Param;\n \n public interface SysUserDepartMapper extends BaseMapper<SysUserDepart>{\n \t\n\ndiff --git a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/system/service/impl/SysUserServiceImpl.java b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/system/service/impl/SysUserServiceImpl.java\n--- a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/system/service/impl/SysUserServiceImpl.java\n+++ b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/system/service/impl/SysUserServiceImpl.java\n@@ -363,7 +363,7 @@ public Result<?> checkUserIsEffective(SysUser sysUser) {\n \t\t}\n \t\t//情况2：根据用户信息查询，该用户已注销\n \t\t//update-begin---author:王帅   Date:20200601  for：if条件永远为falsebug------------\n-\t\tif (CommonConstant.DEL_FLAG_1==sysUser.getDelFlag()) {\n+\t\tif (CommonConstant.DEL_FLAG_1.equals(sysUser.getDelFlag())) {\n \t\t//update-end---author:王帅   Date:20200601  for：if条件永远为falsebug------------\n \t\t\tbaseCommonService.addLog(\"用户登录失败，用户名:\" + sysUser.getUsername() + \"已注销！\", CommonConstant.LOG_TYPE_1, null);\n \t\t\tresult.error500(\"该用户已注销\");",
    "output": "bugfix: fix mybatis param import error; fix integer object compare use == error"
  },
  {
    "input": "diff --git a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/system/entity/SysUser.java b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/system/entity/SysUser.java\n--- a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/system/entity/SysUser.java\n+++ b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/modules/system/entity/SysUser.java\n@@ -3,6 +3,8 @@\n import java.util.Date;\n \n import com.baomidou.mybatisplus.annotation.TableLogic;\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n import org.jeecg.common.aspect.annotation.Dict;\n import org.jeecgframework.poi.excel.annotation.Excel;\n import org.springframework.format.annotation.DateTimeFormat;\n@@ -53,11 +55,13 @@ public class SysUser implements Serializable {\n     /**\n      * 密码\n      */\n+    @JsonProperty(access = JsonProperty.Access.WRITE_ONLY)\n     private String password;\n \n     /**\n      * md5密码盐\n      */\n+    @JsonProperty(access = JsonProperty.Access.WRITE_ONLY)\n     private String salt;\n \n     /**",
    "output": "Merge branch 'master' of https://github.com/zhangdaiscott/jeecg-boot.git"
  },
  {
    "input": "diff --git a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/config/MybatisPlusConfig.java b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/config/MybatisPlusConfig.java\n--- a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/config/MybatisPlusConfig.java\n+++ b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/config/MybatisPlusConfig.java\n@@ -20,7 +20,7 @@ public class MybatisPlusConfig {\n      */\n     @Bean\n     public PaginationInterceptor paginationInterceptor() {\n-        return new PaginationInterceptor();\n+        return new PaginationInterceptor().setLimit(-1);\n     }\n     \n //    /**",
    "output": "Merge pull request #588 from liudonghua123/fix-query-limit-500\n\nfix query limit, use unlimit instead"
  },
  {
    "input": "diff --git a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/config/MybatisPlusConfig.java b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/config/MybatisPlusConfig.java\n--- a/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/config/MybatisPlusConfig.java\n+++ b/jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/config/MybatisPlusConfig.java\n@@ -20,7 +20,7 @@ public class MybatisPlusConfig {\n      */\n     @Bean\n     public PaginationInterceptor paginationInterceptor() {\n-        return new PaginationInterceptor();\n+        return new PaginationInterceptor().setLimit(-1);\n     }\n     \n //    /**",
    "output": "fix query limit, use unlimit instead"
  }
]