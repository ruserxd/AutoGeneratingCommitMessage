[
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -144,7 +144,7 @@ protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n \n         trans.pointValuesToPixel(buffer.buffer);\n \n-        final boolean isCustomFill = dataSet.getFills().size() > 0;\n+        final boolean isCustomFill = dataSet.getFills() != null && !dataSet.getFills().isEmpty();\n         final boolean isSingleColor = dataSet.getColors().size() == 1;\n         final boolean isInverted = mChart.isInverted(dataSet.getAxisDependency());\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n@@ -112,7 +112,7 @@ protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n \n         trans.pointValuesToPixel(buffer.buffer);\n \n-        final boolean isCustomFill = dataSet.getFills().size() > 0;\n+        final boolean isCustomFill = dataSet.getFills() != null && !dataSet.getFills().isEmpty();\n         final boolean isSingleColor = dataSet.getColors().size() == 1;\n         final boolean isInverted = mChart.isInverted(dataSet.getAxisDependency());\n ",
    "output": "Merge pull request #4802 from oatrice/fix_crash_solid_color_barchart\n\nfix NPE when use solid color with barchart"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -144,8 +144,7 @@ protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n \n         trans.pointValuesToPixel(buffer.buffer);\n \n-        boolean isCustomFill = dataSet.getFills() != null && !dataSet.getFills().isEmpty();\n-\n+        final boolean isCustomFill = dataSet.getFills() != null && !dataSet.getFills().isEmpty();\n         final boolean isSingleColor = dataSet.getColors().size() == 1;\n         final boolean isInverted = mChart.isInverted(dataSet.getAxisDependency());\n ",
    "output": "Update BarChartRenderer.java"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n@@ -112,10 +112,7 @@ protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n \n         trans.pointValuesToPixel(buffer.buffer);\n \n-        boolean isCustomFill = false;\n-        if(dataSet.getFills() != null) {\n-            isCustomFill = !dataSet.getFills().isEmpty();\n-        }\n+        final boolean isCustomFill = dataSet.getFills() != null && !dataSet.getFills().isEmpty();\n         final boolean isSingleColor = dataSet.getColors().size() == 1;\n         final boolean isInverted = mChart.isInverted(dataSet.getAxisDependency());\n ",
    "output": "Update HorizontalBarChartRenderer.java"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -144,10 +144,7 @@ protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n \n         trans.pointValuesToPixel(buffer.buffer);\n \n-        boolean isCustomFill = false;\n-        if(dataSet.getFills() != null) {\n-            isCustomFill = !dataSet.getFills().isEmpty();\n-        }\n+        boolean isCustomFill = dataSet.getFills() != null && !dataSet.getFills().isEmpty();\n \n         final boolean isSingleColor = dataSet.getColors().size() == 1;\n         final boolean isInverted = mChart.isInverted(dataSet.getAxisDependency());",
    "output": "Update BarChartRenderer.java"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -144,7 +144,11 @@ protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n \n         trans.pointValuesToPixel(buffer.buffer);\n \n-        final boolean isCustomFill = dataSet.getFills().size() > 0;\n+        boolean isCustomFill = false;\n+        if(dataSet.getFills() != null) {\n+            isCustomFill = !dataSet.getFills().isEmpty();\n+        }\n+\n         final boolean isSingleColor = dataSet.getColors().size() == 1;\n         final boolean isInverted = mChart.isInverted(dataSet.getAxisDependency());\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n@@ -112,7 +112,10 @@ protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n \n         trans.pointValuesToPixel(buffer.buffer);\n \n-        final boolean isCustomFill = dataSet.getFills().size() > 0;\n+        boolean isCustomFill = false;\n+        if(dataSet.getFills() != null) {\n+            isCustomFill = !dataSet.getFills().isEmpty();\n+        }\n         final boolean isSingleColor = dataSet.getColors().size() == 1;\n         final boolean isInverted = mChart.isInverted(dataSet.getAxisDependency());\n ",
    "output": "fix NPE when use solid color with barchart"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -379,8 +379,8 @@ protected void drawLinear(Canvas c, ILineDataSet dataSet) {\n                 // make sure the lines don't do shitty things outside\n                 // bounds\n                 if (!mViewPortHandler.isInBoundsLeft(lastCoordinateX) ||\n-                        !mViewPortHandler.isInBoundsTop(lastCoordinateY) ||\n-                        !mViewPortHandler.isInBoundsBottom(firstCoordinateY))\n+                        !mViewPortHandler.isInBoundsTop(Math.max(firstCoordinateY, lastCoordinateY)) ||\n+                        !mViewPortHandler.isInBoundsBottom(Math.min(firstCoordinateY, lastCoordinateY)))\n                     continue;\n \n                 // get the color that is set for this line-segment",
    "output": "Finalized vertical line collision check"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -323,8 +323,10 @@ protected void drawLinear(Canvas c, ILineDataSet dataSet) {\n         // more than 1 color\n         if (dataSet.getColors().size() > 1) {\n \n-            if (mLineBuffer.length <= pointsPerEntryPair * 2)\n-                mLineBuffer = new float[pointsPerEntryPair * 4];\n+            int numberOfFloats = pointsPerEntryPair * 2;\n+\n+            if (mLineBuffer.length <= numberOfFloats)\n+                mLineBuffer = new float[numberOfFloats * 2];\n \n             int max = mXBounds.min + mXBounds.range;\n \n@@ -359,16 +361,26 @@ protected void drawLinear(Canvas c, ILineDataSet dataSet) {\n                     mLineBuffer[3] = mLineBuffer[1];\n                 }\n \n+                // Determine the start and end coordinates of the line, and make sure they differ.\n+                float firstCoordinateX = mLineBuffer[0];\n+                float firstCoordinateY = mLineBuffer[1];\n+                float lastCoordinateX = mLineBuffer[numberOfFloats - 2];\n+                float lastCoordinateY = mLineBuffer[numberOfFloats - 1];\n+\n+                if (firstCoordinateX == lastCoordinateX &&\n+                        firstCoordinateY == lastCoordinateY)\n+                    continue;\n+\n                 trans.pointValuesToPixel(mLineBuffer);\n \n-                if (!mViewPortHandler.isInBoundsRight(mLineBuffer[0]))\n+                if (!mViewPortHandler.isInBoundsRight(firstCoordinateX))\n                     break;\n \n                 // make sure the lines don't do shitty things outside\n                 // bounds\n-                if (!mViewPortHandler.isInBoundsLeft(mLineBuffer[2])\n-                        || (!mViewPortHandler.isInBoundsTop(mLineBuffer[1]) && !mViewPortHandler\n-                        .isInBoundsBottom(mLineBuffer[3])))\n+                if (!mViewPortHandler.isInBoundsLeft(lastCoordinateX) ||\n+                        !mViewPortHandler.isInBoundsTop(lastCoordinateY) ||\n+                        !mViewPortHandler.isInBoundsBottom(firstCoordinateY))\n                     continue;\n \n                 // get the color that is set for this line-segment",
    "output": "Corrected check for line in vertical bounds\n\nhttps://github.com/danielgindi/Charts/pull/4100"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -326,7 +326,9 @@ protected void drawLinear(Canvas c, ILineDataSet dataSet) {\n             if (mLineBuffer.length <= pointsPerEntryPair * 2)\n                 mLineBuffer = new float[pointsPerEntryPair * 4];\n \n-            for (int j = mXBounds.min; j <= mXBounds.range + mXBounds.min; j++) {\n+            int max = mXBounds.min + mXBounds.range;\n+\n+            for (int j = mXBounds.min; j < max; j++) {\n \n                 Entry e = dataSet.getEntryForIndex(j);\n                 if (e == null) continue;",
    "output": "Remove unexpected dash line during linear animation\n\nhttps://github.com/danielgindi/Charts/pull/4094"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -258,7 +258,7 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n             }\n \n             // Don't draw if it's highlighted, unless the chart uses rounded slices\n-            if (mChart.needsHighlight(j) && !drawRoundedSlices) {\n+            if (dataSet.isHighlightEnabled() && mChart.needsHighlight(j) && !drawRoundedSlices) {\n                 angle += sliceAngle * phaseX;\n                 continue;\n             }\n@@ -830,8 +830,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n                 continue;\n \n             IPieDataSet set = mChart.getData()\n-                    .getDataSetByIndex(indices[i]\n-                            .getDataSetIndex());\n+                    .getDataSetByIndex(indices[i].getDataSetIndex());\n \n             if (set == null || !set.isHighlightEnabled())\n                 continue;",
    "output": "Fixed a bug where a pie slice without highlight enabled is hidden\n\nhttps://github.com/danielgindi/Charts/pull/3969"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java\n@@ -703,8 +703,7 @@ else if (wasStacked) {\n \n                         width += Utils.calcTextWidth(labelpaint, label);\n \n-                        if (i < entryCount - 1)\n-                            maxHeight += labelLineHeight + yEntrySpace;\n+                        maxHeight += labelLineHeight + yEntrySpace;\n                     } else {\n                         wasStacked = true;\n                         width += formSize;",
    "output": "maxHeight didn't account for the last label\n\nhttps://github.com/danielgindi/Charts/pull/3900"
  },
  {
    "input": "diff --git a/MPChartExample/src/main/java/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java b/MPChartExample/src/main/java/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java\n--- a/MPChartExample/src/main/java/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java\n+++ b/MPChartExample/src/main/java/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java\n@@ -156,7 +156,6 @@ private void setData(int count, float range) {\n         dataSet.setValueLinePart1OffsetPercentage(80.f);\n         dataSet.setValueLinePart1Length(0.2f);\n         dataSet.setValueLinePart2Length(0.4f);\n-        //dataSet.setUsingSliceColorAsValueLineColor(true);\n \n         //dataSet.setXValuePosition(PieDataSet.ValuePosition.OUTSIDE_SLICE);\n         dataSet.setYValuePosition(PieDataSet.ValuePosition.OUTSIDE_SLICE);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java\n@@ -23,8 +23,8 @@ public class PieDataSet extends DataSet<PieEntry> implements IPieDataSet {\n \n     private ValuePosition mXValuePosition = ValuePosition.INSIDE_SLICE;\n     private ValuePosition mYValuePosition = ValuePosition.INSIDE_SLICE;\n-    private boolean mUsingSliceColorAsValueLineColor = false;\n     private int mValueLineColor = 0xff000000;\n+    private boolean mUseValueColorForLine = false;\n     private float mValueLineWidth = 1.0f;\n     private float mValueLinePart1OffsetPercentage = 75.f;\n     private float mValueLinePart1Length = 0.3f;\n@@ -137,15 +137,23 @@ public void setYValuePosition(ValuePosition yValuePosition) {\n     }\n \n     /**\n-     * When valuePosition is OutsideSlice, use slice colors as line color if true\n+     * This method is deprecated.\n+     * Use isUseValueColorForLineEnabled() instead.\n      */\n-    @Override\n+    @Deprecated\n     public boolean isUsingSliceColorAsValueLineColor() {\n-        return mUsingSliceColorAsValueLineColor;\n+        return isUseValueColorForLineEnabled();\n     }\n \n-    public void setUsingSliceColorAsValueLineColor(boolean usingSliceColorAsValueLineColor) {\n-        this.mUsingSliceColorAsValueLineColor = usingSliceColorAsValueLineColor;\n+    /**\n+     * This method is deprecated.\n+     * Use setUseValueColorForLine(...) instead.\n+     *\n+     * @param enabled\n+     */\n+    @Deprecated\n+    public void setUsingSliceColorAsValueLineColor(boolean enabled) {\n+        setUseValueColorForLine(enabled);\n     }\n \n     /**\n@@ -160,6 +168,17 @@ public void setValueLineColor(int valueLineColor) {\n         this.mValueLineColor = valueLineColor;\n     }\n \n+    @Override\n+    public boolean isUseValueColorForLineEnabled()\n+    {\n+        return mUseValueColorForLine;\n+    }\n+\n+    public void setUseValueColorForLine(boolean enabled)\n+    {\n+        mUseValueColorForLine = enabled;\n+    }\n+\n     /**\n      * When valuePosition is OutsideSlice, indicates line width\n      */\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java\n@@ -38,14 +38,14 @@ public interface IPieDataSet extends IDataSet<PieEntry> {\n     PieDataSet.ValuePosition getYValuePosition();\n \n     /**\n-     * When valuePosition is OutsideSlice, use slice colors as line color if true\n+     * When valuePosition is OutsideSlice, indicates line color\n      * */\n-    boolean isUsingSliceColorAsValueLineColor();\n+    int getValueLineColor();\n \n     /**\n-     * When valuePosition is OutsideSlice, indicates line color\n+     * When valuePosition is OutsideSlice and enabled, line will have the same color as the slice\n      * */\n-    int getValueLineColor();\n+    boolean isUseValueColorForLineEnabled();\n \n     /**\n      *  When valuePosition is OutsideSlice, indicates line width\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -468,7 +468,9 @@ public void drawValues(Canvas c) {\n \n             int entryCount = dataSet.getEntryCount();\n \n-            mValueLinePaint.setColor(dataSet.getValueLineColor());\n+            boolean isUseValueColorForLineEnabled = dataSet.isUseValueColorForLineEnabled();\n+            int valueLineColor = dataSet.getValueLineColor();\n+\n             mValueLinePaint.setStrokeWidth(Utils.convertDpToPixel(dataSet.getValueLineWidth()));\n \n             final float sliceSpace = getSliceSpace(dataSet);\n@@ -565,12 +567,15 @@ public void drawValues(Canvas c) {\n                         labelPty = pt2y;\n                     }\n \n-                    if (dataSet.getValueLineColor() != ColorTemplate.COLOR_NONE) {\n+                    int lineColor = ColorTemplate.COLOR_NONE;\n \n-                        if (dataSet.isUsingSliceColorAsValueLineColor()) {\n-                            mValueLinePaint.setColor(dataSet.getColor(j));\n-                        }\n+                    if (isUseValueColorForLineEnabled)\n+                        lineColor = dataSet.getColor(j);\n+                    else if (valueLineColor != ColorTemplate.COLOR_NONE)\n+                        lineColor = valueLineColor;\n \n+                    if (lineColor != ColorTemplate.COLOR_NONE) {\n+                        mValueLinePaint.setColor(lineColor);\n                         c.drawLine(pt0x, pt0y, pt1x, pt1y, mValueLinePaint);\n                         c.drawLine(pt1x, pt1y, pt2x, pt2y, mValueLinePaint);\n                     }",
    "output": "Multiple colors for valueline\n\nhttps://github.com/danielgindi/Charts/pull/3709"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java\n@@ -427,6 +427,26 @@ public void calculate(float dataMin, float dataMax) {\n         float min = dataMin;\n         float max = dataMax;\n \n+        // Make sure max is greater than min\n+        // Discussion: https://github.com/danielgindi/Charts/pull/3650#discussion_r221409991\n+        if (min > max)\n+        {\n+            if (mCustomAxisMax && mCustomAxisMin)\n+            {\n+                float t = min;\n+                min = max;\n+                max = t;\n+            }\n+            else if (mCustomAxisMax)\n+            {\n+                min = max < 0f ? max * 1.5f : max * 0.5f;\n+            }\n+            else if (mCustomAxisMin)\n+            {\n+                max = min < 0f ? min * 0.5f : min * 1.5f;\n+            }\n+        }\n+\n         float range = Math.abs(max - min);\n \n         // in case all values are equal",
    "output": "Improve min/max calculation\n\nhttps://github.com/danielgindi/Charts/pull/3650"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java\n@@ -38,9 +38,7 @@ public class BarDataSet extends BarLineScatterCandleBubbleDataSet<BarEntry> impl\n     /**\n      * array of labels used to describe the different values of the stacked bars\n      */\n-    private String[] mStackLabels = new String[]{\n-            \"Stack\"\n-    };\n+    private String[] mStackLabels = new String[]{};\n \n     public BarDataSet(List<BarEntry> yVals, String label) {\n         super(yVals, label);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -101,10 +101,19 @@ public void computeLegend(ChartData<?> data) {\n                     IBarDataSet bds = (IBarDataSet) dataSet;\n                     String[] sLabels = bds.getStackLabels();\n \n-                    for (int j = 0; j < clrs.size() && j < bds.getStackSize(); j++) {\n+                    int minEntries = Math.min(clrs.size(), bds.getStackSize());\n+\n+                    for (int j = 0; j < minEntries; j++) {\n+                        String label;\n+                        if (sLabels.length > 0) {\n+                            int labelIndex = j % minEntries;\n+                            label = labelIndex < sLabels.length ? sLabels[labelIndex] : null;\n+                        } else {\n+                            label = null;\n+                        }\n \n                         computedEntries.add(new LegendEntry(\n-                                sLabels[j % sLabels.length],\n+                                label,\n                                 dataSet.getForm(),\n                                 dataSet.getFormSize(),\n                                 dataSet.getFormLineWidth(),",
    "output": "Fixed index out of bounds issue when using stacked bar chart\n\nhttps://github.com/danielgindi/Charts/commit/b03cf16ec47437c066e17b5b8f77322111695e6a"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java\n@@ -367,7 +367,7 @@ public int getEntryIndex(float xValue, float closestToY, Rounding rounding) {\n                     if (value.getX() != closestXValue)\n                         break;\n \n-                    if (Math.abs(value.getY() - closestToY) < Math.abs(closestYValue - closestToY)) {\n+                    if (Math.abs(value.getY() - closestToY) <= Math.abs(closestYValue - closestToY)) {\n                         closestYValue = closestToY;\n                         closestYIndex = closest;\n                     }",
    "output": "This is for the inline bubble selection\n\nhttps://github.com/danielgindi/Charts/pull/3548"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/RadarChart.java\n@@ -84,6 +84,7 @@ protected void init() {\n         super.init();\n \n         mYAxis = new YAxis(AxisDependency.LEFT);\n+        mYAxis.setLabelXOffset(10f);\n \n         mWebLineWidth = Utils.convertDpToPixel(1.5f);\n         mInnerWebLineWidth = Utils.convertDpToPixel(0.75f);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java\n@@ -73,6 +73,11 @@ public class YAxis extends AxisBase {\n      */\n     private YAxisLabelPosition mPosition = YAxisLabelPosition.OUTSIDE_CHART;\n \n+    /**\n+     * the horizontal offset of the y-label\n+     */\n+    private float mXLabelOffset = 0.0f;\n+\n     /**\n      * enum for the position of the y-labels relative to the chart\n      */\n@@ -174,6 +179,22 @@ public void setPosition(YAxisLabelPosition pos) {\n         mPosition = pos;\n     }\n \n+    /**\n+     * returns the horizontal offset of the y-label\n+     */\n+    public float getLabelXOffset() {\n+        return mXLabelOffset;\n+    }\n+\n+    /**\n+     * sets the horizontal offset of the y-label\n+     *\n+     * @param xOffset\n+     */\n+    public void setLabelXOffset(float xOffset) {\n+        mXLabelOffset = xOffset;\n+    }\n+\n     /**\n      * returns true if drawing the top y-axis label entry is enabled\n      *\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -119,12 +119,17 @@ protected void drawYLabels(Canvas c, float fixedPosition, float[] positions, flo\n                 ? mYAxis.mEntryCount\n                 : (mYAxis.mEntryCount - 1);\n \n+        float xOffset = mYAxis.getLabelXOffset();\n+\n         // draw\n         for (int i = from; i < to; i++) {\n \n             String text = mYAxis.getFormattedLabel(i);\n \n-            c.drawText(text, fixedPosition, positions[i * 2 + 1] + offset, mAxisLabelPaint);\n+            c.drawText(text,\n+                    fixedPosition + xOffset,\n+                    positions[i * 2 + 1] + offset,\n+                    mAxisLabelPaint);\n         }\n     }\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n@@ -142,11 +142,16 @@ protected void drawYLabels(Canvas c, float fixedPosition, float[] positions, flo\n                 ? mYAxis.mEntryCount\n                 : (mYAxis.mEntryCount - 1);\n \n+        float xOffset = mYAxis.getLabelXOffset();\n+\n         for (int i = from; i < to; i++) {\n \n             String text = mYAxis.getFormattedLabel(i);\n \n-            c.drawText(text, positions[i * 2], fixedPosition - offset, mAxisLabelPaint);\n+            c.drawText(text,\n+                    positions[i * 2],\n+                    fixedPosition - offset + xOffset,\n+                    mAxisLabelPaint);\n         }\n     }\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n@@ -163,6 +163,8 @@ public void renderAxisLabels(Canvas c) {\n                 ? mYAxis.mEntryCount\n                 : (mYAxis.mEntryCount - 1);\n \n+        float xOffset = mYAxis.getLabelXOffset();\n+\n         for (int j = from; j < to; j++) {\n \n             float r = (mYAxis.mEntries[j] - mYAxis.mAxisMinimum) * factor;\n@@ -171,7 +173,7 @@ public void renderAxisLabels(Canvas c) {\n \n             String label = mYAxis.getFormattedLabel(j);\n \n-            c.drawText(label, pOut.x + 10, pOut.y, mAxisLabelPaint);\n+            c.drawText(label, pOut.x + xOffset, pOut.y, mAxisLabelPaint);\n         }\n         MPPointF.recycleInstance(center);\n         MPPointF.recycleInstance(pOut);",
    "output": "Support for labelXOffset for YAxis label"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -100,6 +100,8 @@ public abstract class BarLineChartBase<T extends BarLineScatterCandleBubbleData<\n \n     protected boolean mClipValuesToContent = false;\n \n+    protected boolean mClipDataToContent = true;\n+\n     /**\n      * Sets the minimum offset (padding) around the chart, defaults to 15\n      */\n@@ -230,9 +232,12 @@ protected void onDraw(Canvas canvas) {\n         if (mAxisRight.isEnabled() && mAxisRight.isDrawLimitLinesBehindDataEnabled())\n             mAxisRendererRight.renderLimitLines(canvas);\n \n-        // make sure the data cannot be drawn outside the content-rect\n         int clipRestoreCount = canvas.save();\n-        canvas.clipRect(mViewPortHandler.getContentRect());\n+\n+        if (isClipDataToContentEnabled()) {\n+            // make sure the data cannot be drawn outside the content-rect\n+            canvas.clipRect(mViewPortHandler.getContentRect());\n+        }\n \n         mRenderer.drawData(canvas);\n \n@@ -1228,6 +1233,17 @@ public void setClipValuesToContent(boolean enabled) {\n         mClipValuesToContent = enabled;\n     }\n \n+    /**\n+     * When disabled, the data and/or highlights will not be clipped to contentRect. Disabling this option can\n+     *   be useful, when the data lies fully within the content rect, but is drawn in such a way (such as thick lines)\n+     *   that there is unwanted clipping.\n+     *\n+     * @param enabled\n+     */\n+    public void setClipDataToContent(boolean enabled) {\n+        mClipDataToContent = enabled;\n+    }\n+\n     /**\n      * When enabled, the values will be clipped to contentRect,\n      * otherwise they can bleed outside the content rect.\n@@ -1238,6 +1254,17 @@ public boolean isClipValuesToContentEnabled() {\n         return mClipValuesToContent;\n     }\n \n+    /**\n+     * When disabled, the data and/or highlights will not be clipped to contentRect. Disabling this option can\n+     *   be useful, when the data lies fully within the content rect, but is drawn in such a way (such as thick lines)\n+     *   that there is unwanted clipping.\n+     *\n+     * @return\n+     */\n+    public boolean isClipDataToContentEnabled() {\n+        return mClipDataToContent;\n+    }\n+\n     /**\n      * Sets the width of the border lines in dp.\n      *\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieData.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieData.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieData.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieData.java\n@@ -56,7 +56,7 @@ public List<IPieDataSet> getDataSets() {\n             Log.e(\"MPAndroidChart\",\n                     \"Found multiple data sets while pie chart only allows one\");\n         }\n-        \n+\n         return dataSets;\n     }\n ",
    "output": "Add option to disable clipping data to contentRect\n\nhttps://github.com/danielgindi/Charts/pull/3360"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieData.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieData.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieData.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieData.java\n@@ -1,6 +1,8 @@\n \n package com.github.mikephil.charting.data;\n \n+import android.util.Log;\n+\n import com.github.mikephil.charting.highlight.Highlight;\n import com.github.mikephil.charting.interfaces.datasets.IPieDataSet;\n \n@@ -46,6 +48,18 @@ public IPieDataSet getDataSet() {\n         return mDataSets.get(0);\n     }\n \n+    @Override\n+    public List<IPieDataSet> getDataSets() {\n+        List<IPieDataSet> dataSets = super.getDataSets();\n+\n+        if (dataSets.size() < 1) {\n+            Log.e(\"MPAndroidChart\",\n+                    \"Found multiple data sets while pie chart only allows one\");\n+        }\n+        \n+        return dataSets;\n+    }\n+\n     /**\n      * The PieData object can only have one DataSet. Use getDataSet() method instead.\n      *",
    "output": "Add a warning message if pie chart has more than one data set\n\nhttps://github.com/danielgindi/Charts/pull/3286"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ChartData.java\n@@ -399,7 +399,7 @@ public boolean removeDataSet(T d) {\n \n         // if a DataSet was removed\n         if (removed) {\n-            calcMinMax();\n+            notifyDataChanged();\n         }\n \n         return removed;\n@@ -526,7 +526,7 @@ public boolean removeEntry(Entry e, int dataSetIndex) {\n             boolean removed = set.removeEntry(e);\n \n             if (removed) {\n-                calcMinMax();\n+                notifyDataChanged();\n             }\n \n             return removed;",
    "output": "Call notifyDataChanged for an opportunity for subclasses"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java\n@@ -61,27 +61,26 @@ public DataSet(List<T> values, String label) {\n     @Override\n     public void calcMinMax() {\n \n-        if (mValues == null || mValues.isEmpty())\n-            return;\n-\n         mYMax = -Float.MAX_VALUE;\n         mYMin = Float.MAX_VALUE;\n         mXMax = -Float.MAX_VALUE;\n         mXMin = Float.MAX_VALUE;\n \n+        if (mValues == null || mValues.isEmpty())\n+            return;\n+\n         for (T e : mValues) {\n             calcMinMax(e);\n         }\n     }\n \n     @Override\n     public void calcMinMaxY(float fromX, float toX) {\n-\n-        if (mValues == null || mValues.isEmpty())\n-            return;\n-\n         mYMax = -Float.MAX_VALUE;\n         mYMin = Float.MAX_VALUE;\n+        \n+        if (mValues == null || mValues.isEmpty())\n+            return;\n \n         int indexFrom = getEntryIndex(fromX, Float.NaN, Rounding.DOWN);\n         int indexTo = getEntryIndex(toX, Float.NaN, Rounding.UP);",
    "output": "Reset min/max when clearing ChartDataSet\n\nhttps://github.com/danielgindi/Charts/pull/3265"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n@@ -563,6 +563,18 @@ public void highlightValues(Highlight[] highs) {\n         invalidate();\n     }\n \n+    /**\n+     * Highlights any y-value at the given x-value in the given DataSet.\n+     * Provide -1 as the dataSetIndex to undo all highlighting.\n+     * This method will call the listener.\n+     * @param x The x-value to highlight\n+     * @param dataSetIndex The dataset index to search in\n+     * @param dataIndex The data index to search in (only used in CombinedChartView currently)\n+     */\n+    public void highlightValue(float x, int dataSetIndex, int dataIndex) {\n+        highlightValue(x, dataSetIndex, dataIndex, true);\n+    }\n+\n     /**\n      * Highlights any y-value at the given x-value in the given DataSet.\n      * Provide -1 as the dataSetIndex to undo all highlighting.\n@@ -571,7 +583,20 @@ public void highlightValues(Highlight[] highs) {\n      * @param dataSetIndex The dataset index to search in\n      */\n     public void highlightValue(float x, int dataSetIndex) {\n-        highlightValue(x, dataSetIndex, true);\n+        highlightValue(x, dataSetIndex, -1, true);\n+    }\n+\n+    /**\n+     * Highlights the value at the given x-value and y-value in the given DataSet.\n+     * Provide -1 as the dataSetIndex to undo all highlighting.\n+     * This method will call the listener.\n+     * @param x The x-value to highlight\n+     * @param y The y-value to highlight. Supply `NaN` for \"any\"\n+     * @param dataSetIndex The dataset index to search in\n+     * @param dataIndex The data index to search in (only used in CombinedChartView currently)\n+     */\n+    public void highlightValue(float x, float y, int dataSetIndex, int dataIndex) {\n+        highlightValue(x, y, dataSetIndex, dataIndex, true);\n     }\n \n     /**\n@@ -583,7 +608,19 @@ public void highlightValue(float x, int dataSetIndex) {\n      * @param dataSetIndex The dataset index to search in\n      */\n     public void highlightValue(float x, float y, int dataSetIndex) {\n-        highlightValue(x, y, dataSetIndex, true);\n+        highlightValue(x, y, dataSetIndex, -1, true);\n+    }\n+\n+    /**\n+     * Highlights any y-value at the given x-value in the given DataSet.\n+     * Provide -1 as the dataSetIndex to undo all highlighting.\n+     * @param x The x-value to highlight\n+     * @param dataSetIndex The dataset index to search in\n+     * @param dataIndex The data index to search in (only used in CombinedChartView currently)\n+     * @param callListener Should the listener be called for this change\n+     */\n+    public void highlightValue(float x, int dataSetIndex, int dataIndex, boolean callListener) {\n+        highlightValue(x, Float.NaN, dataSetIndex, dataIndex, callListener);\n     }\n \n     /**\n@@ -594,7 +631,7 @@ public void highlightValue(float x, float y, int dataSetIndex) {\n      * @param callListener Should the listener be called for this change\n      */\n     public void highlightValue(float x, int dataSetIndex, boolean callListener) {\n-        highlightValue(x, Float.NaN, dataSetIndex, callListener);\n+        highlightValue(x, Float.NaN, dataSetIndex, -1, callListener);\n     }\n \n     /**\n@@ -603,17 +640,30 @@ public void highlightValue(float x, int dataSetIndex, boolean callListener) {\n      * @param x The x-value to highlight\n      * @param y The y-value to highlight. Supply `NaN` for \"any\"\n      * @param dataSetIndex The dataset index to search in\n+     * @param dataIndex The data index to search in (only used in CombinedChartView currently)\n      * @param callListener Should the listener be called for this change\n      */\n-    public void highlightValue(float x, float y, int dataSetIndex, boolean callListener) {\n+    public void highlightValue(float x, float y, int dataSetIndex, int dataIndex, boolean callListener) {\n \n         if (dataSetIndex < 0 || dataSetIndex >= mData.getDataSetCount()) {\n             highlightValue(null, callListener);\n         } else {\n-            highlightValue(new Highlight(x, y, dataSetIndex), callListener);\n+            highlightValue(new Highlight(x, y, dataSetIndex, dataIndex), callListener);\n         }\n     }\n \n+    /**\n+     * Highlights any y-value at the given x-value in the given DataSet.\n+     * Provide -1 as the dataSetIndex to undo all highlighting.\n+     * @param x The x-value to highlight\n+     * @param y The y-value to highlight. Supply `NaN` for \"any\"\n+     * @param dataSetIndex The dataset index to search in\n+     * @param callListener Should the listener be called for this change\n+     */\n+    public void highlightValue(float x, float y, int dataSetIndex, boolean callListener) {\n+        highlightValue(x, y, dataSetIndex, -1, callListener);\n+    }\n+\n     /**\n      * Highlights the values represented by the provided Highlight object\n      * This method *will not* call the listener.\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlight.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlight.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlight.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlight.java\n@@ -60,10 +60,18 @@ public class Highlight {\n      */\n     private float mDrawY;\n \n+    public Highlight(float x, float y, int dataSetIndex, int dataIndex) {\n+        this.mX = x;\n+        this.mY = y;\n+        this.mDataSetIndex = dataSetIndex;\n+        this.mDataIndex = dataIndex;\n+    }\n+\n     public Highlight(float x, float y, int dataSetIndex) {\n         this.mX = x;\n         this.mY = y;\n         this.mDataSetIndex = dataSetIndex;\n+        this.mDataIndex = -1;\n     }\n \n     public Highlight(float x, int dataSetIndex, int stackIndex) {",
    "output": "Added dataIndex param for highlightValue (combined charts)\n\nhttps://github.com/danielgindi/Charts/pull/2852"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BubbleChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n@@ -108,7 +108,7 @@ protected void drawDataSet(Canvas c, IBubbleDataSet dataSet) {\n             if (!mViewPortHandler.isInBoundsRight(pointBuffer[0] - shapeHalf))\n                 break;\n \n-            final int color = dataSet.getColor((int) entry.getX());\n+            final int color = dataSet.getColor(j);\n \n             mRenderPaint.setColor(color);\n             c.drawCircle(pointBuffer[0], pointBuffer[1], shapeHalf, mRenderPaint);",
    "output": "Use correct color index for bubble chart\n\nhttps://github.com/danielgindi/Charts/pull/3202"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -394,66 +394,70 @@ protected void calculateLegendOffsets(RectF offsets) {\n         offsets.top = 0.f;\n         offsets.bottom = 0.f;\n \n-        // setup offsets for legend\n-        if (mLegend != null && mLegend.isEnabled() && !mLegend.isDrawInsideEnabled()) {\n-            switch (mLegend.getOrientation()) {\n-                case VERTICAL:\n-\n-                    switch (mLegend.getHorizontalAlignment()) {\n-                        case LEFT:\n-                            offsets.left += Math.min(mLegend.mNeededWidth,\n-                                    mViewPortHandler.getChartWidth() * mLegend.getMaxSizePercent())\n-                                    + mLegend.getXOffset();\n-                            break;\n-\n-                        case RIGHT:\n-                            offsets.right += Math.min(mLegend.mNeededWidth,\n-                                    mViewPortHandler.getChartWidth() * mLegend.getMaxSizePercent())\n-                                    + mLegend.getXOffset();\n-                            break;\n-\n-                        case CENTER:\n-\n-                            switch (mLegend.getVerticalAlignment()) {\n-                                case TOP:\n-                                    offsets.top += Math.min(mLegend.mNeededHeight,\n-                                            mViewPortHandler.getChartHeight() * mLegend.getMaxSizePercent())\n-                                            + mLegend.getYOffset();\n-                                    break;\n-\n-                                case BOTTOM:\n-                                    offsets.bottom += Math.min(mLegend.mNeededHeight,\n-                                            mViewPortHandler.getChartHeight() * mLegend.getMaxSizePercent())\n-                                            + mLegend.getYOffset();\n-                                    break;\n-\n-                                default:\n-                                    break;\n-                            }\n-                    }\n-\n-                    break;\n-\n-                case HORIZONTAL:\n-\n-                    switch (mLegend.getVerticalAlignment()) {\n-                        case TOP:\n-                            offsets.top += Math.min(mLegend.mNeededHeight,\n-                                    mViewPortHandler.getChartHeight() * mLegend.getMaxSizePercent())\n-                                    + mLegend.getYOffset();\n-                            break;\n-\n-                        case BOTTOM:\n-                            offsets.bottom += Math.min(mLegend.mNeededHeight,\n-                                    mViewPortHandler.getChartHeight() * mLegend.getMaxSizePercent())\n-                                    + mLegend.getYOffset();\n-                            break;\n-\n-                        default:\n-                            break;\n-                    }\n-                    break;\n-            }\n+        if (mLegend == null || !mLegend.isEnabled() || mLegend.isDrawInsideEnabled())\n+            return;\n+\n+        switch (mLegend.getOrientation()) {\n+            case VERTICAL:\n+\n+                switch (mLegend.getHorizontalAlignment()) {\n+                    case LEFT:\n+                        offsets.left += Math.min(mLegend.mNeededWidth,\n+                                mViewPortHandler.getChartWidth() * mLegend.getMaxSizePercent())\n+                                + mLegend.getXOffset();\n+                        break;\n+\n+                    case RIGHT:\n+                        offsets.right += Math.min(mLegend.mNeededWidth,\n+                                mViewPortHandler.getChartWidth() * mLegend.getMaxSizePercent())\n+                                + mLegend.getXOffset();\n+                        break;\n+\n+                    case CENTER:\n+\n+                        switch (mLegend.getVerticalAlignment()) {\n+                            case TOP:\n+                                offsets.top += Math.min(mLegend.mNeededHeight,\n+                                        mViewPortHandler.getChartHeight() * mLegend.getMaxSizePercent())\n+                                        + mLegend.getYOffset();\n+                                break;\n+\n+                            case BOTTOM:\n+                                offsets.bottom += Math.min(mLegend.mNeededHeight,\n+                                        mViewPortHandler.getChartHeight() * mLegend.getMaxSizePercent())\n+                                        + mLegend.getYOffset();\n+                                break;\n+\n+                            default:\n+                                break;\n+                        }\n+                }\n+\n+                break;\n+\n+            case HORIZONTAL:\n+\n+                switch (mLegend.getVerticalAlignment()) {\n+                    case TOP:\n+                        offsets.top += Math.min(mLegend.mNeededHeight,\n+                                mViewPortHandler.getChartHeight() * mLegend.getMaxSizePercent())\n+                                + mLegend.getYOffset();\n+\n+\n+                        break;\n+\n+                    case BOTTOM:\n+                        offsets.bottom += Math.min(mLegend.mNeededHeight,\n+                                mViewPortHandler.getChartHeight() * mLegend.getMaxSizePercent())\n+                                + mLegend.getYOffset();\n+\n+\n+                        break;\n+\n+                    default:\n+                        break;\n+                }\n+                break;\n         }\n     }\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java\n@@ -60,6 +60,84 @@ protected void init() {\n \n     private RectF mOffsetsBuffer = new RectF();\n \n+    protected void calculateLegendOffsets(RectF offsets) {\n+\n+        offsets.left = 0.f;\n+        offsets.right = 0.f;\n+        offsets.top = 0.f;\n+        offsets.bottom = 0.f;\n+\n+        if (mLegend == null || !mLegend.isEnabled() || mLegend.isDrawInsideEnabled())\n+            return;\n+\n+        switch (mLegend.getOrientation()) {\n+            case VERTICAL:\n+\n+                switch (mLegend.getHorizontalAlignment()) {\n+                    case LEFT:\n+                        offsets.left += Math.min(mLegend.mNeededWidth,\n+                                mViewPortHandler.getChartWidth() * mLegend.getMaxSizePercent())\n+                                + mLegend.getXOffset();\n+                        break;\n+\n+                    case RIGHT:\n+                        offsets.right += Math.min(mLegend.mNeededWidth,\n+                                mViewPortHandler.getChartWidth() * mLegend.getMaxSizePercent())\n+                                + mLegend.getXOffset();\n+                        break;\n+\n+                    case CENTER:\n+\n+                        switch (mLegend.getVerticalAlignment()) {\n+                            case TOP:\n+                                offsets.top += Math.min(mLegend.mNeededHeight,\n+                                        mViewPortHandler.getChartHeight() * mLegend.getMaxSizePercent())\n+                                        + mLegend.getYOffset();\n+                                break;\n+\n+                            case BOTTOM:\n+                                offsets.bottom += Math.min(mLegend.mNeededHeight,\n+                                        mViewPortHandler.getChartHeight() * mLegend.getMaxSizePercent())\n+                                        + mLegend.getYOffset();\n+                                break;\n+\n+                            default:\n+                                break;\n+                        }\n+                }\n+\n+                break;\n+\n+            case HORIZONTAL:\n+\n+                switch (mLegend.getVerticalAlignment()) {\n+                    case TOP:\n+                        offsets.top += Math.min(mLegend.mNeededHeight,\n+                                mViewPortHandler.getChartHeight() * mLegend.getMaxSizePercent())\n+                                + mLegend.getYOffset();\n+\n+                        if (mAxisLeft.isEnabled() && mAxisLeft.isDrawLabelsEnabled())\n+                            offsets.top += mAxisLeft.getRequiredHeightSpace(\n+                                    mAxisRendererLeft.getPaintAxisLabels());\n+                        break;\n+\n+                    case BOTTOM:\n+                        offsets.bottom += Math.min(mLegend.mNeededHeight,\n+                                mViewPortHandler.getChartHeight() * mLegend.getMaxSizePercent())\n+                                + mLegend.getYOffset();\n+\n+                        if (mAxisRight.isEnabled() && mAxisRight.isDrawLabelsEnabled())\n+                            offsets.bottom += mAxisRight.getRequiredHeightSpace(\n+                                    mAxisRendererRight.getPaintAxisLabels());\n+                        break;\n+\n+                    default:\n+                        break;\n+                }\n+                break;\n+        }\n+    }\n+\n     @Override\n     public void calculateOffsets() {\n ",
    "output": "Select correct axis for legend distance calculation in horz bar chart\n\nhttps://github.com/danielgindi/Charts/pull/2214"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n@@ -398,8 +398,23 @@ protected void onDraw(Canvas canvas) {\n             boolean hasText = !TextUtils.isEmpty(mNoDataText);\n \n             if (hasText) {\n-                MPPointF c = getCenter();\n-                canvas.drawText(mNoDataText, c.x, c.y, mInfoPaint);\n+                MPPointF pt = getCenter();\n+\n+                switch (mInfoPaint.getTextAlign()) {\n+                    case LEFT:\n+                        pt.x = 0;\n+                        canvas.drawText(mNoDataText, pt.x, pt.y, mInfoPaint);\n+                        break;\n+\n+                    case RIGHT:\n+                        pt.x *= 2.0;\n+                        canvas.drawText(mNoDataText, pt.x, pt.y, mInfoPaint);\n+                        break;\n+\n+                    default:\n+                        canvas.drawText(mNoDataText, pt.x, pt.y, mInfoPaint);\n+                        break;\n+                }\n             }\n \n             return;\n@@ -1162,6 +1177,15 @@ public void setNoDataTextTypeface(Typeface tf) {\n         mInfoPaint.setTypeface(tf);\n     }\n \n+    /**\n+     * alignment of the no data text\n+     *\n+     * @param align\n+     */\n+    public void setNoDataTextAlignment(Align align) {\n+        mInfoPaint.setTextAlign(align);\n+    }\n+\n     /**\n      * Set this to false to disable all gestures and touches on the chart,\n      * default: true",
    "output": "Custom text alignment for no-data\n\nhttps://github.com/danielgindi/Charts/pull/3199"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n@@ -174,9 +174,12 @@ protected void computeAxisValues(float min, float max) {\n         double intervalMagnitude = Utils.roundToNextSignificant(Math.pow(10, (int) Math.log10(interval)));\n         int intervalSigDigit = (int) (interval / intervalMagnitude);\n         if (intervalSigDigit > 5) {\n-            // Use one order of magnitude higher, to avoid intervals like 0.9 or\n-            // 90\n-            interval = Math.floor(10 * intervalMagnitude);\n+            // Use one order of magnitude higher, to avoid intervals like 0.9 or 90\n+            // if it's 0.0 after floor(), we use the old value\n+            interval = Math.floor(10.0 * intervalMagnitude) == 0.0\n+                    ? interval\n+                    : Math.floor(10.0 * intervalMagnitude);\n+\n         }\n \n         int n = mAxis.isCenterAxisLabelsEnabled() ? 1 : 0;\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n@@ -52,9 +52,11 @@ protected void computeAxisValues(float min, float max) {\n         double intervalMagnitude = Utils.roundToNextSignificant(Math.pow(10, (int) Math.log10(interval)));\n         int intervalSigDigit = (int) (interval / intervalMagnitude);\n         if (intervalSigDigit > 5) {\n-            // Use one order of magnitude higher, to avoid intervals like 0.9 or\n-            // 90\n-            interval = Math.floor(10 * intervalMagnitude);\n+            // Use one order of magnitude higher, to avoid intervals like 0.9 or 90\n+            // if it's 0.0 after floor(), we use the old value\n+            interval = Math.floor(10.0 * intervalMagnitude) == 0.0\n+                    ? interval\n+                    : Math.floor(10.0 * intervalMagnitude);\n         }\n \n         boolean centeringEnabled = mAxis.isCenterAxisLabelsEnabled();",
    "output": "Avoid race condition for interval/intervalMagnitude\n\nhttps://github.com/danielgindi/Charts/pull/2377"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n@@ -151,6 +151,39 @@ public abstract class AxisBase extends ComponentBase {\n      */\n     public float mAxisRange = 0f;\n \n+    private int mAxisMinLabels = 2;\n+    private int mAxisMaxLabels = 25;\n+\n+    /**\n+     * The minumum number of labels on the axis\n+     */\n+    public int getAxisMinLabels() {\n+        return mAxisMinLabels;\n+    }\n+\n+    /**\n+     * The minumum number of labels on the axis\n+     */\n+    public void setAxisMinLabels(int labels) {\n+        if (labels > 0)\n+            mAxisMinLabels = labels;\n+    }\n+\n+    /**\n+     * The maximum number of labels on the axis\n+     */\n+    public int getAxisMaxLabels() {\n+        return mAxisMaxLabels;\n+    }\n+\n+    /**\n+     * The maximum number of labels on the axis\n+     */\n+    public void setAxisMaxLabels(int labels) {\n+        if (labels > 0)\n+            mAxisMaxLabels = labels;\n+    }\n+\n     /**\n      * default constructor\n      */\n@@ -314,10 +347,10 @@ public boolean isDrawLabelsEnabled() {\n      */\n     public void setLabelCount(int count) {\n \n-        if (count > 25)\n-            count = 25;\n-        if (count < 2)\n-            count = 2;\n+        if (count > getAxisMaxLabels())\n+            count = getAxisMaxLabels();\n+        if (count < getAxisMinLabels())\n+            count = getAxisMinLabels();\n \n         mLabelCount = count;\n         mForceLabels = false;",
    "output": "Make min/max axis labels configurable\n\nhttps://github.com/danielgindi/Charts/pull/2894"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n@@ -214,11 +214,14 @@ protected void computeAxisValues(float min, float max) {\n             double f;\n             int i;\n \n-            if (interval != 0.0) {\n+            if (interval != 0.0 && last != first) {\n                 for (f = first; f <= last; f += interval) {\n                     ++n;\n                 }\n             }\n+            else if (last == first && n == 0) {\n+                n = 1;\n+            }\n \n             mAxis.mEntryCount = n;\n ",
    "output": "Fixed axis label disappearing when zooming in\n\nhttps://github.com/danielgindi/Charts/pull/3132"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/filter/ApproximatorN.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/filter/ApproximatorN.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/filter/ApproximatorN.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/filter/ApproximatorN.java\n@@ -0,0 +1,146 @@\n+\n+package com.github.mikephil.charting.data.filter;\n+\n+import java.util.ArrayList;\n+\n+/**\n+ * Implemented according to modified Douglas Peucker {@link}\n+ * http://psimpl.sourceforge.net/douglas-peucker.html\n+ */\n+public class ApproximatorN\n+{\n+    public float[] reduceWithDouglasPeucker(float[] points, float resultCount) {\n+\n+        int pointCount = points.length / 2;\n+\n+        // if a shape has 2 or less points it cannot be reduced\n+        if (resultCount <= 2 || resultCount >= pointCount)\n+            return points;\n+\n+        boolean[] keep = new boolean[pointCount];\n+\n+        // first and last always stay\n+        keep[0] = true;\n+        keep[pointCount - 1] = true;\n+\n+        int currentStoredPoints = 2;\n+\n+        ArrayList<Line> queue = new ArrayList<>();\n+        Line line = new Line(0, pointCount - 1, points);\n+        queue.add(line);\n+\n+        do {\n+            line = queue.remove(queue.size() - 1);\n+\n+            // store the key\n+            keep[line.index] = true;\n+\n+            // check point count tolerance\n+            currentStoredPoints += 1;\n+\n+            if (currentStoredPoints == resultCount)\n+                break;\n+\n+            // split the polyline at the key and recurse\n+            Line left = new Line(line.start, line.index, points);\n+            if (left.index > 0) {\n+                int insertionIndex = insertionIndex(left, queue);\n+                queue.add(insertionIndex, left);\n+            }\n+\n+            Line right = new Line(line.index, line.end, points);\n+            if (right.index > 0) {\n+                int insertionIndex = insertionIndex(right, queue);\n+                queue.add(insertionIndex, right);\n+            }\n+        } while (queue.isEmpty());\n+\n+        float[] reducedEntries = new float[currentStoredPoints * 2];\n+\n+        for (int i = 0, i2 = 0, r2 = 0; i < currentStoredPoints; i++, r2 += 2) {\n+            if (keep[i]) {\n+                reducedEntries[i2++] = points[r2];\n+                reducedEntries[i2++] = points[r2 + 1];\n+            }\n+        }\n+\n+        return reducedEntries;\n+    }\n+\n+    private static float distanceToLine(\n+            float ptX, float ptY, float[]\n+            fromLinePoint1, float[] fromLinePoint2) {\n+        float dx = fromLinePoint2[0] - fromLinePoint1[0];\n+        float dy = fromLinePoint2[1] - fromLinePoint1[1];\n+\n+        float dividend = Math.abs(\n+                dy * ptX -\n+                        dx * ptY -\n+                        fromLinePoint1[0] * fromLinePoint2[1] +\n+                        fromLinePoint2[0] * fromLinePoint1[1]);\n+        double divisor = Math.sqrt(dx * dx + dy * dy);\n+\n+        return (float)(dividend / divisor);\n+    }\n+\n+    private static class Line {\n+        int start;\n+        int end;\n+\n+        float distance = 0;\n+        int index = 0;\n+\n+        Line(int start, int end, float[] points) {\n+            this.start = start;\n+            this.end = end;\n+\n+            float[] startPoint = new float[]{points[start * 2], points[start * 2 + 1]};\n+            float[] endPoint = new float[]{points[end * 2], points[end * 2 + 1]};\n+\n+            if (end <= start + 1) return;\n+\n+            for (int i = start + 1, i2 = i * 2; i < end; i++, i2 += 2) {\n+                float distance = distanceToLine(\n+                        points[i2], points[i2 + 1],\n+                        startPoint, endPoint);\n+\n+                if (distance > this.distance) {\n+                    this.index = i;\n+                    this.distance = distance;\n+                }\n+            }\n+        }\n+\n+        boolean equals(final Line rhs) {\n+            return (start == rhs.start) && (end == rhs.end) && index == rhs.index;\n+        }\n+\n+        boolean lessThan(final Line rhs) {\n+            return distance < rhs.distance;\n+        }\n+    }\n+\n+    private static int insertionIndex(Line line, ArrayList<Line> queue) {\n+        int min = 0;\n+        int max = queue.size();\n+\n+        while (!queue.isEmpty()) {\n+            int midIndex = min + (max - min) / 2;\n+            Line midLine = queue.get(midIndex);\n+\n+            if (midLine.equals(line)) {\n+                return midIndex;\n+            }\n+            else if (line.lessThan(midLine)) {\n+                // perform search in left half\n+                max = midIndex;\n+            }\n+            else {\n+                // perform search in right half\n+                min = midIndex + 1;\n+            }\n+        }\n+\n+        return min;\n+    }\n+}",
    "output": "Added an implementation of Douglas Peucker with resultCount input\n\nhttps://github.com/danielgindi/Charts/pull/2848"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/CombinedData.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/CombinedData.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/CombinedData.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/CombinedData.java\n@@ -3,6 +3,7 @@\n \n import android.util.Log;\n \n+import com.github.mikephil.charting.components.YAxis;\n import com.github.mikephil.charting.highlight.Highlight;\n import com.github.mikephil.charting.interfaces.datasets.IBarLineScatterCandleBubbleDataSet;\n \n@@ -91,18 +92,26 @@ public void calcMinMax() {\n             if (data.getXMin() < mXMin)\n                 mXMin = data.getXMin();\n \n-            if (data.mLeftAxisMax > mLeftAxisMax)\n-                mLeftAxisMax = data.mLeftAxisMax;\n-\n-            if (data.mLeftAxisMin < mLeftAxisMin)\n-                mLeftAxisMin = data.mLeftAxisMin;\n-\n-            if (data.mRightAxisMax > mRightAxisMax)\n-                mRightAxisMax = data.mRightAxisMax;\n-\n-            if (data.mRightAxisMin < mRightAxisMin)\n-                mRightAxisMin = data.mRightAxisMin;\n-\n+            for (IBarLineScatterCandleBubbleDataSet<? extends Entry> dataset : sets) {\n+                if (dataset.getAxisDependency() == YAxis.AxisDependency.LEFT)  {\n+                    if (dataset.getYMax() > mLeftAxisMax) {\n+                        mLeftAxisMax = dataset.getYMax();\n+                    }\n+\n+                    if (dataset.getYMin() < mLeftAxisMin) {\n+                        mLeftAxisMin = dataset.getYMin();\n+                    }\n+                }\n+                else {\n+                    if (dataset.getYMax() > mRightAxisMax) {\n+                        mRightAxisMax = dataset.getYMax();\n+                    }\n+\n+                    if (dataset.getYMin() < mRightAxisMin) {\n+                        mRightAxisMin = dataset.getYMin();\n+                    }\n+                }\n+            }\n         }\n     }\n ",
    "output": "Consider axis dependency in Combined chart\n\nhttps://github.com/danielgindi/Charts/pull/2874"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java\n@@ -3,6 +3,7 @@\n \n import com.github.mikephil.charting.interfaces.datasets.IPieDataSet;\n import com.github.mikephil.charting.utils.Utils;\n+import android.support.annotation.Nullable;\n \n import java.util.ArrayList;\n import java.util.List;\n@@ -29,6 +30,7 @@ public class PieDataSet extends DataSet<PieEntry> implements IPieDataSet {\n     private float mValueLinePart1Length = 0.3f;\n     private float mValueLinePart2Length = 0.4f;\n     private boolean mValueLineVariableLength = true;\n+    private Integer mHighlightColor = null;\n \n     public PieDataSet(List<PieEntry> yVals, String label) {\n         super(yVals, label);\n@@ -218,6 +220,21 @@ public void setValueLineVariableLength(boolean valueLineVariableLength) {\n         this.mValueLineVariableLength = valueLineVariableLength;\n     }\n \n+    /** Gets the color for the highlighted sector */\n+    @Override\n+    @Nullable\n+    public Integer getHighlightColor()\n+    {\n+        return mHighlightColor;\n+    }\n+\n+    /** Sets the color for the highlighted sector (null for using entry color) */\n+    public void setHighlightColor(@Nullable Integer color)\n+    {\n+        this.mHighlightColor = color;\n+    }\n+\n+\n     public enum ValuePosition {\n         INSIDE_SLICE,\n         OUTSIDE_SLICE\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java\n@@ -1,5 +1,7 @@\n package com.github.mikephil.charting.interfaces.datasets;\n \n+import android.support.annotation.Nullable;\n+\n import com.github.mikephil.charting.data.PieDataSet;\n import com.github.mikephil.charting.data.PieEntry;\n \n@@ -70,5 +72,11 @@ public interface IPieDataSet extends IDataSet<PieEntry> {\n      * */\n     boolean isValueLineVariableLength();\n \n+    /**\n+     * Gets the color for the highlighted sector\n+     * */\n+    @Nullable\n+    Integer getHighlightColor();\n+\n }\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -857,7 +857,10 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n             final boolean accountForSliceSpacing = sliceSpace > 0.f && sliceAngle <= 180.f;\n \n-            mRenderPaint.setColor(set.getColor(index));\n+            Integer highlightColor = set.getHighlightColor();\n+            if (highlightColor == null)\n+                highlightColor = set.getColor(index);\n+            mRenderPaint.setColor(highlightColor);\n \n             final float sliceSpaceAngleOuter = visibleAngleCount == 1 ?\n                     0.f :",
    "output": "Added highlightColor parameter for pie charts\n\nhttps://github.com/danielgindi/Charts/pull/2961"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java\n@@ -86,6 +86,8 @@ public void calcMinMaxY(float fromX, float toX) {\n         int indexFrom = getEntryIndex(fromX, Float.NaN, Rounding.DOWN);\n         int indexTo = getEntryIndex(toX, Float.NaN, Rounding.UP);\n \n+        if (indexTo < indexFrom) return;\n+\n         for (int i = indexFrom; i <= indexTo; i++) {\n \n             // only recalculate y\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -90,6 +90,7 @@ public void computeLegend(ChartData<?> data) {\n             for (int i = 0; i < data.getDataSetCount(); i++) {\n \n                 IDataSet dataSet = data.getDataSetByIndex(i);\n+                if (dataSet == null) continue;\n \n                 List<Integer> clrs = dataSet.getColors();\n                 int entryCount = dataSet.getEntryCount();",
    "output": "Safe guards\n\nThese will be even more important when moving to Kotlin ranges"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/PercentFormatter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/PercentFormatter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/PercentFormatter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/PercentFormatter.java\n@@ -7,7 +7,7 @@\n \n /**\n  * This IValueFormatter is just for convenience and simply puts a \"%\" sign after\n- * each value. (Recommeded for PieChart)\n+ * each value. (Recommended for PieChart)\n  *\n  * @author Philipp Jahoda\n  */\n@@ -16,9 +16,11 @@ public class PercentFormatter extends ValueFormatter\n \n     public DecimalFormat mFormat;\n     private PieChart pieChart;\n+    private boolean percentSignSeparated;\n \n     public PercentFormatter() {\n         mFormat = new DecimalFormat(\"###,###,##0.0\");\n+        percentSignSeparated = true;\n     }\n \n     // Can be used to remove percent signs if the chart isn't in percent mode\n@@ -27,9 +29,15 @@ public PercentFormatter(PieChart pieChart) {\n         this.pieChart = pieChart;\n     }\n \n+    // Can be used to remove percent signs if the chart isn't in percent mode\n+    public PercentFormatter(PieChart pieChart, boolean percentSignSeparated) {\n+        this(pieChart);\n+        this.percentSignSeparated = percentSignSeparated;\n+    }\n+\n     @Override\n     public String getFormattedValue(float value) {\n-        return mFormat.format(value) + \" %\";\n+        return mFormat.format(value) + (percentSignSeparated ? \" %\" : \"%\");\n     }\n \n     @Override",
    "output": "Merge branch 'master' of github.com:PhilJay/MPAndroidChart"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/PercentFormatter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/PercentFormatter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/PercentFormatter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/PercentFormatter.java\n@@ -7,7 +7,7 @@\n \n /**\n  * This IValueFormatter is just for convenience and simply puts a \"%\" sign after\n- * each value. (Recommeded for PieChart)\n+ * each value. (Recommended for PieChart)\n  *\n  * @author Philipp Jahoda\n  */\n@@ -16,9 +16,11 @@ public class PercentFormatter extends ValueFormatter\n \n     public DecimalFormat mFormat;\n     private PieChart pieChart;\n+    private boolean percentSignSeparated;\n \n     public PercentFormatter() {\n         mFormat = new DecimalFormat(\"###,###,##0.0\");\n+        percentSignSeparated = true;\n     }\n \n     // Can be used to remove percent signs if the chart isn't in percent mode\n@@ -27,9 +29,15 @@ public PercentFormatter(PieChart pieChart) {\n         this.pieChart = pieChart;\n     }\n \n+    // Can be used to remove percent signs if the chart isn't in percent mode\n+    public PercentFormatter(PieChart pieChart, boolean percentSignSeparated) {\n+        this(pieChart);\n+        this.percentSignSeparated = percentSignSeparated;\n+    }\n+\n     @Override\n     public String getFormattedValue(float value) {\n-        return mFormat.format(value) + \" %\";\n+        return mFormat.format(value) + (percentSignSeparated ? \" %\" : \"%\");\n     }\n \n     @Override",
    "output": "Merge pull request #4512 from duchampdev/percent_formatter_sign_spacing\n\nPercentFormatter: make space between number and percent sign optional"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/PercentFormatter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/PercentFormatter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/PercentFormatter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/PercentFormatter.java\n@@ -16,9 +16,11 @@ public class PercentFormatter extends ValueFormatter\n \n     public DecimalFormat mFormat;\n     private PieChart pieChart;\n+    private boolean percentSignSeparated;\n \n     public PercentFormatter() {\n         mFormat = new DecimalFormat(\"###,###,##0.0\");\n+        percentSignSeparated = true;\n     }\n \n     // Can be used to remove percent signs if the chart isn't in percent mode\n@@ -27,9 +29,15 @@ public PercentFormatter(PieChart pieChart) {\n         this.pieChart = pieChart;\n     }\n \n+    // Can be used to remove percent signs if the chart isn't in percent mode\n+    public PercentFormatter(PieChart pieChart, boolean percentSignSeparated) {\n+        this(pieChart);\n+        this.percentSignSeparated = percentSignSeparated;\n+    }\n+\n     @Override\n     public String getFormattedValue(float value) {\n-        return mFormat.format(value) + \" %\";\n+        return mFormat.format(value) + (percentSignSeparated ? \" %\" : \"%\");\n     }\n \n     @Override",
    "output": "PercentFormatter: make space between number and percent sign optional"
  },
  {
    "input": "diff --git a/MPChartExample/src/main/java/com/xxmassdeveloper/mpchartexample/PieChartActivity.java b/MPChartExample/src/main/java/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n--- a/MPChartExample/src/main/java/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n+++ b/MPChartExample/src/main/java/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n@@ -210,6 +210,15 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 chart.invalidate();\n                 break;\n             }\n+            case R.id.actionToggleMinAngles: {\n+                if (chart.getMinAngleForSlices() == 0f)\n+                    chart.setMinAngleForSlices(36f);\n+                else\n+                    chart.setMinAngleForSlices(0f);\n+                chart.notifyDataSetChanged();\n+                chart.invalidate();\n+                break;\n+            }\n             case R.id.actionToggleCurvedSlices: {\n                 boolean toSet = !chart.isDrawRoundedSlicesEnabled() || !chart.isDrawHoleEnabled();\n                 chart.setDrawRoundedSlices(toSet);\n\ndiff --git a/MPChartExample/src/main/java/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java b/MPChartExample/src/main/java/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java\n--- a/MPChartExample/src/main/java/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java\n+++ b/MPChartExample/src/main/java/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java\n@@ -205,6 +205,15 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 chart.invalidate();\n                 break;\n             }\n+            case R.id.actionToggleMinAngles: {\n+                if (chart.getMinAngleForSlices() == 0f)\n+                    chart.setMinAngleForSlices(36f);\n+                else\n+                    chart.setMinAngleForSlices(0f);\n+                chart.notifyDataSetChanged();\n+                chart.invalidate();\n+                break;\n+            }\n             case R.id.actionToggleCurvedSlices: {\n                 boolean toSet = !chart.isDrawRoundedSlicesEnabled() || !chart.isDrawHoleEnabled();\n                 chart.setDrawRoundedSlices(toSet);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieChart.java\n@@ -94,6 +94,12 @@ public class PieChart extends PieRadarChartBase<PieData> {\n \n     protected float mMaxAngle = 360f;\n \n+    /**\n+     * Minimum angle to draw slices, this only works if there is enough room for all slices to have\n+     * the minimum angle, default 0f.\n+     */\n+    private float mMinAngleForSlices = 0f;\n+\n     public PieChart(Context context) {\n         super(context);\n     }\n@@ -228,15 +234,33 @@ private void calcAngles() {\n \n         List<IPieDataSet> dataSets = mData.getDataSets();\n \n+        boolean hasMinAngle = mMinAngleForSlices != 0f && entryCount * mMinAngleForSlices <= mMaxAngle;\n+        float[] minAngles = new float[entryCount];\n+\n         int cnt = 0;\n+        float offset = 0f;\n+        float diff = 0f;\n \n         for (int i = 0; i < mData.getDataSetCount(); i++) {\n \n             IPieDataSet set = dataSets.get(i);\n \n             for (int j = 0; j < set.getEntryCount(); j++) {\n \n-                mDrawAngles[cnt] = calcAngle(Math.abs(set.getEntryForIndex(j).getY()), yValueSum);\n+                float drawAngle = calcAngle(Math.abs(set.getEntryForIndex(j).getY()), yValueSum);\n+\n+                if (hasMinAngle) {\n+                    float temp = drawAngle - mMinAngleForSlices;\n+                    if (temp <= 0) {\n+                        minAngles[cnt] = mMinAngleForSlices;\n+                        offset += -temp;\n+                    } else {\n+                        minAngles[cnt] = drawAngle;\n+                        diff += temp;\n+                    }\n+                }\n+\n+                mDrawAngles[cnt] = drawAngle;\n \n                 if (cnt == 0) {\n                     mAbsoluteAngles[cnt] = mDrawAngles[cnt];\n@@ -248,6 +272,20 @@ private void calcAngles() {\n             }\n         }\n \n+        if (hasMinAngle) {\n+            // Correct bigger slices by relatively reducing their angles based on the total angle needed to subtract\n+            // This requires that `entryCount * mMinAngleForSlices <= mMaxAngle` be true to properly work!\n+            for (int i = 0; i < entryCount; i++) {\n+                minAngles[i] -= (minAngles[i] - mMinAngleForSlices) / diff * offset;\n+                if (i == 0) {\n+                    mAbsoluteAngles[0] = minAngles[0];\n+                } else {\n+                    mAbsoluteAngles[i] = mAbsoluteAngles[i - 1] + minAngles[i];\n+                }\n+            }\n+\n+            mDrawAngles = minAngles;\n+        }\n     }\n \n     /**\n@@ -729,6 +767,32 @@ public void setMaxAngle(float maxangle) {\n         this.mMaxAngle = maxangle;\n     }\n \n+    /**\n+     * The minimum angle slices on the chart are rendered with, default is 0f.\n+     *\n+     * @return minimum angle for slices\n+     */\n+    public float getMinAngleForSlices() {\n+        return mMinAngleForSlices;\n+    }\n+\n+    /**\n+     * Set the angle to set minimum size for slices, you must call {@link #notifyDataSetChanged()}\n+     * and {@link #invalidate()} when changing this, only works if there is enough room for all\n+     * slices to have the minimum angle.\n+     *\n+     * @param minAngle minimum 0, maximum is half of {@link #setMaxAngle(float)}\n+     */\n+    public void setMinAngleForSlices(float minAngle) {\n+\n+        if (minAngle > (mMaxAngle / 2f))\n+            minAngle = mMaxAngle / 2f;\n+        else if (minAngle < 0)\n+            minAngle = 0f;\n+\n+        this.mMinAngleForSlices = minAngle;\n+    }\n+\n     @Override\n     protected void onDetachedFromWindow() {\n         // releases the bitmap in the renderer to avoid oom error",
    "output": "Add option to set minimum angles\n\nAllows to force minimum slice angles when drawing charts, which means that any\nslices with angles lower than the minimum will be drawn with the minimum angle.\n\nWhen changing this setting on the fly, you have to call\n`notifyDataSetChanged()` and `invalidate()` for the minimum angle to take\neffect.\n\nThis only functions if all slices can be drawn with the minimum angle. For\nexample if a chart has 5 slices, the largest functioning minimum angle is\n`72f` degrees on a 360 degree chart, or 20% of the chart's `maxAngle`."
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -185,7 +185,6 @@ protected void drawHorizontalBezier(ILineDataSet dataSet) {\n \n     protected void drawCubicBezier(ILineDataSet dataSet) {\n \n-        float phaseX = Math.max(0.f, Math.min(1.f, mAnimator.getPhaseX()));\n         float phaseY = mAnimator.getPhaseY();\n \n         Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());",
    "output": "Merge pull request #2273 from vpop/update/unused-local\n\nRemove unused local variable"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/MarkerImage.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/MarkerImage.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/MarkerImage.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/MarkerImage.java\n@@ -142,10 +142,10 @@ public void draw(Canvas canvas, float posX, float posY) {\n         float width = mSize.width;\n         float height = mSize.height;\n \n-        if (width == 0.f && mDrawable != null) {\n+        if (width == 0.f) {\n             width = mDrawable.getIntrinsicWidth();\n         }\n-        if (height == 0.f && mDrawable != null) {\n+        if (height == 0.f) {\n             height = mDrawable.getIntrinsicHeight();\n         }\n ",
    "output": "Merge pull request #2187 from vpop/update/redundant-nullcheck\n\nRemove nullcheck for known non-null variable"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -212,9 +212,14 @@ protected void onDraw(Canvas canvas) {\n         mAxisRendererLeft.renderAxisLine(canvas);\n         mAxisRendererRight.renderAxisLine(canvas);\n \n-        mXAxisRenderer.renderGridLines(canvas);\n-        mAxisRendererLeft.renderGridLines(canvas);\n-        mAxisRendererRight.renderGridLines(canvas);\n+        if (mXAxis.isDrawGridLinesBehindDataEnabled())\n+            mXAxisRenderer.renderGridLines(canvas);\n+\n+        if (mAxisLeft.isDrawGridLinesBehindDataEnabled())\n+            mAxisRendererLeft.renderGridLines(canvas);\n+\n+        if (mAxisRight.isDrawGridLinesBehindDataEnabled())\n+            mAxisRendererRight.renderGridLines(canvas);\n \n         if (mXAxis.isEnabled() && mXAxis.isDrawLimitLinesBehindDataEnabled())\n             mXAxisRenderer.renderLimitLines(canvas);\n@@ -231,6 +236,15 @@ protected void onDraw(Canvas canvas) {\n \n         mRenderer.drawData(canvas);\n \n+        if (!mXAxis.isDrawGridLinesBehindDataEnabled())\n+            mXAxisRenderer.renderGridLines(canvas);\n+\n+        if (!mAxisLeft.isDrawGridLinesBehindDataEnabled())\n+            mAxisRendererLeft.renderGridLines(canvas);\n+\n+        if (!mAxisRight.isDrawGridLinesBehindDataEnabled())\n+            mAxisRendererRight.renderGridLines(canvas);\n+\n         // if highlighting is enabled\n         if (valuesToHighlight())\n             mRenderer.drawHighlighted(canvas, mIndicesToHighlight);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n@@ -112,6 +112,11 @@ public abstract class AxisBase extends ComponentBase {\n      */\n     protected boolean mDrawLimitLineBehindData = false;\n \n+    /**\n+     * flag indicating the grid lines layer depth\n+     */\n+    protected boolean mDrawGridLinesBehindData = true;\n+\n     /**\n      * Extra spacing for `axisMinimum` to be added to automatically calculated `axisMinimum`\n      */\n@@ -444,6 +449,18 @@ public boolean isDrawLimitLinesBehindDataEnabled() {\n         return mDrawLimitLineBehindData;\n     }\n \n+    /**\n+     * If this is set to false, the grid lines are draw on top of the actual data,\n+     * otherwise behind. Default: true\n+     *\n+     * @param enabled\n+     */\n+    public void setDrawGridLinesBehindData(boolean enabled) { mDrawGridLinesBehindData = enabled; }\n+\n+    public boolean isDrawGridLinesBehindDataEnabled() {\n+        return mDrawGridLinesBehindData;\n+    }\n+\n     /**\n      * Returns the longest formatted label (in terms of characters), this axis\n      * contains.",
    "output": "Merge pull request #3451 from davidgoli/add-grid-lines-on-top-of-data\n\nAdd option to draw limit lines on top of data"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/LargeValueFormatter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/LargeValueFormatter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/LargeValueFormatter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/LargeValueFormatter.java\n@@ -20,10 +20,10 @@\n public class LargeValueFormatter implements IValueFormatter, IAxisValueFormatter\n {\n \n-    private static String[] SUFFIX = new String[]{\n+    private String[] mSuffix = new String[]{\n             \"\", \"k\", \"m\", \"b\", \"t\"\n     };\n-    private static final int MAX_LENGTH = 5;\n+    private int mMaxLength = 5;\n     private DecimalFormat mFormat;\n     private String mText = \"\";\n \n@@ -66,10 +66,14 @@ public void setAppendix(String appendix) {\n      * Set custom suffix to be appended after the values.\n      * Default suffix: [\"\", \"k\", \"m\", \"b\", \"t\"]\n      *\n-     * @param suff new suffix\n+     * @param suffix new suffix\n      */\n-    public void setSuffix(String[] suff) {\n-        SUFFIX = suff;\n+    public void setSuffix(String[] suffix) {\n+        this.mSuffix = suffix;\n+    }\n+\n+    public void setMaxLength(int maxLength) {\n+        this.mMaxLength = maxLength;\n     }\n \n     /**\n@@ -84,9 +88,9 @@ private String makePretty(double number) {\n         int numericValue2 = Character.getNumericValue(r.charAt(r.length() - 2));\n         int combined = Integer.valueOf(numericValue2 + \"\" + numericValue1);\n \n-        r = r.replaceAll(\"E[0-9][0-9]\", SUFFIX[combined / 3]);\n+        r = r.replaceAll(\"E[0-9][0-9]\", mSuffix[combined / 3]);\n \n-        while (r.length() > MAX_LENGTH || r.matches(\"[0-9]+\\\\.[a-z]\")) {\n+        while (r.length() > mMaxLength || r.matches(\"[0-9]+\\\\.[a-z]\")) {\n             r = r.substring(0, r.length() - 2) + r.substring(r.length() - 1);\n         }\n ",
    "output": "Merge pull request #3478 from MaximPestryakov/patch-1\n\nRefactored LargeValueFormatter"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -427,18 +427,12 @@ protected void calculateLegendOffsets(RectF offsets) {\n                             offsets.top += Math.min(mLegend.mNeededHeight,\n                                     mViewPortHandler.getChartHeight() * mLegend.getMaxSizePercent())\n                                     + mLegend.getYOffset();\n-\n-                            if (getXAxis().isEnabled() && getXAxis().isDrawLabelsEnabled())\n-                                offsets.top += getXAxis().mLabelRotatedHeight;\n                             break;\n \n                         case BOTTOM:\n                             offsets.bottom += Math.min(mLegend.mNeededHeight,\n                                     mViewPortHandler.getChartHeight() * mLegend.getMaxSizePercent())\n                                     + mLegend.getYOffset();\n-\n-                            if (getXAxis().isEnabled() && getXAxis().isDrawLabelsEnabled())\n-                                offsets.bottom += getXAxis().mLabelRotatedHeight;\n                             break;\n \n                         default:\n@@ -478,21 +472,21 @@ public void calculateOffsets() {\n \n             if (mXAxis.isEnabled() && mXAxis.isDrawLabelsEnabled()) {\n \n-                float xlabelheight = mXAxis.mLabelRotatedHeight + mXAxis.getYOffset();\n+                float xLabelHeight = mXAxis.mLabelRotatedHeight + mXAxis.getYOffset();\n \n                 // offsets for x-labels\n                 if (mXAxis.getPosition() == XAxisPosition.BOTTOM) {\n \n-                    offsetBottom += xlabelheight;\n+                    offsetBottom += xLabelHeight;\n \n                 } else if (mXAxis.getPosition() == XAxisPosition.TOP) {\n \n-                    offsetTop += xlabelheight;\n+                    offsetTop += xLabelHeight;\n \n                 } else if (mXAxis.getPosition() == XAxisPosition.BOTH_SIDED) {\n \n-                    offsetBottom += xlabelheight;\n-                    offsetTop += xlabelheight;\n+                    offsetBottom += xLabelHeight;\n+                    offsetTop += xLabelHeight;\n                 }\n             }\n \n@@ -1224,7 +1218,7 @@ public boolean isDrawBordersEnabled() {\n \n     /**\n      * When enabled, the values will be clipped to contentRect,\n-     *   otherwise they can bleed outside the content rect.\n+     * otherwise they can bleed outside the content rect.\n      *\n      * @param enabled\n      */\n@@ -1234,7 +1228,7 @@ public void setClipValuesToContent(boolean enabled) {\n \n     /**\n      * When enabled, the values will be clipped to contentRect,\n-     *   otherwise they can bleed outside the content rect.\n+     * otherwise they can bleed outside the content rect.\n      *\n      * @return\n      */",
    "output": "Merge pull request #4013 from RobertZagorski/bugfix/#2369-legend-offset-is-not-calculated-twice-for-line-chart\n\nRemove mLabelRotatedHeight counted twice, when calculating legend offset"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java\n@@ -38,6 +38,16 @@ public class YAxis extends AxisBase {\n      */\n     protected boolean mDrawZeroLine = false;\n \n+    /**\n+     * flag indicating that auto scale min restriction should be used\n+     */\n+    private boolean mUseAutoScaleRestrictionMin = false;\n+\n+    /**\n+     * flag indicating that auto scale max restriction should be used\n+     */\n+    private boolean mUseAutoScaleRestrictionMax = false;\n+\n     /**\n      * Color of the zero line\n      */\n@@ -357,12 +367,57 @@ public boolean needsOffset() {\n             return false;\n     }\n \n+    /**\n+     * Returns true if autoscale restriction for axis min value is enabled\n+     */\n+    public boolean isUseAutoScaleMinRestriction( ) {\n+        return mUseAutoScaleRestrictionMin;\n+    }\n+\n+    /**\n+     * Sets autoscale restriction for axis min value as enabled/disabled\n+     */\n+    public void setUseAutoScaleMinRestriction( boolean isEnabled ) {\n+        mUseAutoScaleRestrictionMin = isEnabled;\n+    }\n+\n+    /**\n+     * Returns true if autoscale restriction for axis max value is enabled\n+     */\n+    public boolean isUseAutoScaleMaxRestriction() {\n+        return mUseAutoScaleRestrictionMax;\n+    }\n+\n+    /**\n+     * Sets autoscale restriction for axis max value as enabled/disabled\n+     */\n+    public void setUseAutoScaleMaxRestriction( boolean isEnabled ) {\n+        mUseAutoScaleRestrictionMax = isEnabled;\n+    }\n+\n+\n     @Override\n     public void calculate(float dataMin, float dataMax) {\n \n+        float min = dataMin;\n+        float max = dataMax;\n+\n         // if custom, use value as is, else use data value\n-        float min = mCustomAxisMin ? mAxisMinimum : dataMin;\n-        float max = mCustomAxisMax ? mAxisMaximum : dataMax;\n+        if( mCustomAxisMin ) {\n+            if( mUseAutoScaleRestrictionMin ) {\n+                min = Math.min( dataMin, mAxisMinimum );\n+            } else {\n+                min = mAxisMinimum;\n+            }\n+        }\n+\n+        if( mCustomAxisMax ) {\n+            if( mUseAutoScaleRestrictionMax ) {\n+                max = Math.max( max, mAxisMaximum );\n+            } else {\n+                max = mAxisMaximum;\n+            }\n+        }\n \n         // temporary range (before calculations)\n         float range = Math.abs(max - min);",
    "output": "Merge pull request #3642 from pagrzybe/autoscale_restrictions\n\nOption to set restrictions for Y axis autoscaling."
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -427,18 +427,12 @@ protected void calculateLegendOffsets(RectF offsets) {\n                             offsets.top += Math.min(mLegend.mNeededHeight,\n                                     mViewPortHandler.getChartHeight() * mLegend.getMaxSizePercent())\n                                     + mLegend.getYOffset();\n-\n-                            if (getXAxis().isEnabled() && getXAxis().isDrawLabelsEnabled())\n-                                offsets.top += getXAxis().mLabelRotatedHeight;\n                             break;\n \n                         case BOTTOM:\n                             offsets.bottom += Math.min(mLegend.mNeededHeight,\n                                     mViewPortHandler.getChartHeight() * mLegend.getMaxSizePercent())\n                                     + mLegend.getYOffset();\n-\n-                            if (getXAxis().isEnabled() && getXAxis().isDrawLabelsEnabled())\n-                                offsets.bottom += getXAxis().mLabelRotatedHeight;\n                             break;\n \n                         default:\n@@ -478,21 +472,21 @@ public void calculateOffsets() {\n \n             if (mXAxis.isEnabled() && mXAxis.isDrawLabelsEnabled()) {\n \n-                float xlabelheight = mXAxis.mLabelRotatedHeight + mXAxis.getYOffset();\n+                float xLabelHeight = mXAxis.mLabelRotatedHeight + mXAxis.getYOffset();\n \n                 // offsets for x-labels\n                 if (mXAxis.getPosition() == XAxisPosition.BOTTOM) {\n \n-                    offsetBottom += xlabelheight;\n+                    offsetBottom += xLabelHeight;\n \n                 } else if (mXAxis.getPosition() == XAxisPosition.TOP) {\n \n-                    offsetTop += xlabelheight;\n+                    offsetTop += xLabelHeight;\n \n                 } else if (mXAxis.getPosition() == XAxisPosition.BOTH_SIDED) {\n \n-                    offsetBottom += xlabelheight;\n-                    offsetTop += xlabelheight;\n+                    offsetBottom += xLabelHeight;\n+                    offsetTop += xLabelHeight;\n                 }\n             }\n \n@@ -1224,7 +1218,7 @@ public boolean isDrawBordersEnabled() {\n \n     /**\n      * When enabled, the values will be clipped to contentRect,\n-     *   otherwise they can bleed outside the content rect.\n+     * otherwise they can bleed outside the content rect.\n      *\n      * @param enabled\n      */\n@@ -1234,7 +1228,7 @@ public void setClipValuesToContent(boolean enabled) {\n \n     /**\n      * When enabled, the values will be clipped to contentRect,\n-     *   otherwise they can bleed outside the content rect.\n+     * otherwise they can bleed outside the content rect.\n      *\n      * @return\n      */",
    "output": "Remove mLabelRotatedHeight counted twice, when calculating legend offsets. (Fix for #2369).\n\nRemoved statements where completely not needed as calculating offsets is alredy done in BarLineCharBase#calculateOffsets(...)"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java\n@@ -41,23 +41,12 @@ public class YAxis extends AxisBase {\n     /**\n      * flag indicating that auto scale min restriction should be used\n      */\n-\n     private boolean mUseAutoScaleRestrictionMin = false;\n+\n     /**\n      * flag indicating that auto scale max restriction should be used\n      */\n-\n     private boolean mUseAutoScaleRestrictionMax = false;\n-    /**\n-     * restriction value of autoscale min\n-     */\n-\n-    private float mAutoScaleMinRestriction = 0f;\n-\n-    /**\n-     * restriction value of autoscale max\n-     */\n-    private float mAutoScaleMaxRestriction = 0f;\n \n     /**\n      * Color of the zero line\n@@ -379,35 +368,34 @@ public boolean needsOffset() {\n     }\n \n     /**\n-     * Sets min value restriction for autoscale\n+     * Returns true if autoscale restriction for axis min value is enabled\n      */\n-    public void setAutoScaleMinRestriction(float restrictionValue) {\n-        mUseAutoScaleRestrictionMin = true;\n-        mAutoScaleMinRestriction = restrictionValue;\n+    public boolean isUseAutoScaleMinRestriction( ) {\n+        return mUseAutoScaleRestrictionMin;\n     }\n \n     /**\n-     * Sets max value restriction for autoscale\n+     * Sets autoscale restriction for axis min value as enabled/disabled\n      */\n-    public void setAutoScaleMaxRestriction(float restrictionValue) {\n-        mUseAutoScaleRestrictionMax = true;\n-        mAutoScaleMaxRestriction = restrictionValue;\n+    public void setUseAutoScaleMinRestriction( boolean isEnabled ) {\n+        mUseAutoScaleRestrictionMin = isEnabled;\n     }\n \n     /**\n-     * Resets min value restriction for autoscale\n+     * Returns true if autoscale restriction for axis max value is enabled\n      */\n-    public void resetAutoScaleMinRestriction() {\n-        mUseAutoScaleRestrictionMin = false;\n+    public boolean isUseAutoScaleMaxRestriction() {\n+        return mUseAutoScaleRestrictionMax;\n     }\n \n     /**\n-     * Resets max value restriction for autoscale\n+     * Sets autoscale restriction for axis max value as enabled/disabled\n      */\n-    public void resetAutoScaleMaxRestriction() {\n-        mUseAutoScaleRestrictionMax = false;\n+    public void setUseAutoScaleMaxRestriction( boolean isEnabled ) {\n+        mUseAutoScaleRestrictionMax = isEnabled;\n     }\n \n+\n     @Override\n     public void calculate(float dataMin, float dataMax) {\n \n@@ -416,15 +404,19 @@ public void calculate(float dataMin, float dataMax) {\n \n         // if custom, use value as is, else use data value\n         if( mCustomAxisMin ) {\n-            min = mAxisMinimum;\n-        } else if( mUseAutoScaleRestrictionMin ) {\n-            min = Math.min( min, mAutoScaleMinRestriction );\n+            if( mUseAutoScaleRestrictionMin ) {\n+                min = Math.min( dataMin, mAxisMinimum );\n+            } else {\n+                min = mAxisMinimum;\n+            }\n         }\n \n         if( mCustomAxisMax ) {\n-            max = mAxisMaximum;\n-        } else if( mUseAutoScaleRestrictionMax ) {\n-            max = Math.max( max, mAutoScaleMaxRestriction );\n+            if( mUseAutoScaleRestrictionMax ) {\n+                max = Math.max( max, mAxisMaximum );\n+            } else {\n+                max = mAxisMaximum;\n+            }\n         }\n \n         // temporary range (before calculations)",
    "output": "Fixed code review comments."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MyEasingFunction.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MyEasingFunction.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MyEasingFunction.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MyEasingFunction.java\n@@ -1,18 +0,0 @@\n-\n-package com.xxmassdeveloper.mpchartexample.custom;\n-\n-import com.github.mikephil.charting.animation.EasingFunction;\n-\n-/**\n- * Example of a custom made animation EasingFunction.\n- * \n- * @author Philipp Jahoda\n- */\n-public class MyEasingFunction implements EasingFunction {\n-\n-    @Override\n-    public float getInterpolation(float input) {\n-        // do awesome stuff here, this is just linear easing\n-        return input;\n-    }\n-}",
    "output": "Delete lingering MyEasingFunction.java\n\nI made the decision to remove this file instead of updating it, as I'm\nsure most will instead prefer to look at the actual Easing class. If you\nmiss this example class... ¯\\_(ツ)_/¯"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/jobs/AnimatedZoomJob.java b/MPChartLib/src/main/java/com/github/mikephil/charting/jobs/AnimatedZoomJob.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/jobs/AnimatedZoomJob.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/jobs/AnimatedZoomJob.java\n@@ -33,6 +33,8 @@ public static AnimatedZoomJob getInstance(ViewPortHandler viewPortHandler, View\n         result.view = v;\n         result.xOrigin = xOrigin;\n         result.yOrigin = yOrigin;\n+        result.yAxis = axis;\n+        result.xAxisRange = xAxisRange;\n         result.resetAnimator();\n         result.animator.setDuration(duration);\n         return result;",
    "output": "Merge pull request #2856 from stephenmcbride/master\n\nFix for missing setters in getInstance method"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java\n@@ -373,19 +373,11 @@ public void calculate(float dataMin, float dataMax) {\n             min = min - 1f;\n         }\n \n-        // bottom-space only effects non-custom min\n-        if (!mCustomAxisMin) {\n-\n-            float bottomSpace = range / 100f * getSpaceBottom();\n-            this.mAxisMinimum = (min - bottomSpace);\n-        }\n-\n-        // top-space only effects non-custom max\n-        if (!mCustomAxisMax) {\n-\n-            float topSpace = range / 100f * getSpaceTop();\n-            this.mAxisMaximum = (max + topSpace);\n-        }\n+        float bottomSpace = range / 100f * getSpaceBottom();\n+        this.mAxisMinimum = (min - bottomSpace);\n+            \n+        float topSpace = range / 100f * getSpaceTop();\n+        this.mAxisMaximum = (max + topSpace);\n \n         // calc actual range\n         this.mAxisRange = Math.abs(this.mAxisMaximum - this.mAxisMinimum);",
    "output": "Merge pull request #3982 from almic/yaxis-calc\n\nRemove YAxis Custom Min/Max Check for Padding"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java\n@@ -207,7 +207,7 @@ protected void drawLabels(Canvas c, float pos, MPPointF anchor) {\n                 if (mXAxis.isAvoidFirstLastClippingEnabled()) {\n \n                     // avoid clipping of the last\n-                    if (i == mXAxis.mEntryCount - 1 && mXAxis.mEntryCount > 1) {\n+                    if (i / 2 == mXAxis.mEntryCount - 1 && mXAxis.mEntryCount > 1) {\n                         float width = Utils.calcTextWidth(mAxisLabelPaint, label);\n \n                         if (width > mViewPortHandler.offsetRight() * 2",
    "output": "Merge pull request #3820 from longup/master\n\nFix last entry clipping bug #3819"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -76,19 +76,21 @@ public void drawData(Canvas c) {\n         int width = (int) mViewPortHandler.getChartWidth();\n         int height = (int) mViewPortHandler.getChartHeight();\n \n-        if (mDrawBitmap == null\n-                || (mDrawBitmap.get().getWidth() != width)\n-                || (mDrawBitmap.get().getHeight() != height)) {\n+        Bitmap drawBitmap = mDrawBitmap == null ? null : mDrawBitmap.get();\n \n-            if (width > 0 && height > 0) {\n+        if (drawBitmap == null\n+                || (drawBitmap.getWidth() != width)\n+                || (drawBitmap.getHeight() != height)) {\n \n-                mDrawBitmap = new WeakReference<Bitmap>(Bitmap.createBitmap(width, height, mBitmapConfig));\n-                mBitmapCanvas = new Canvas(mDrawBitmap.get());\n+            if (width > 0 && height > 0) {\n+                drawBitmap = Bitmap.createBitmap(width, height, mBitmapConfig);\n+                mDrawBitmap = new WeakReference<>(drawBitmap);\n+                mBitmapCanvas = new Canvas(drawBitmap);\n             } else\n                 return;\n         }\n \n-        mDrawBitmap.get().eraseColor(Color.TRANSPARENT);\n+        drawBitmap.eraseColor(Color.TRANSPARENT);\n \n         LineData lineData = mChart.getLineData();\n \n@@ -98,7 +100,7 @@ public void drawData(Canvas c) {\n                 drawDataSet(c, set);\n         }\n \n-        c.drawBitmap(mDrawBitmap.get(), 0, 0, mRenderPaint);\n+        c.drawBitmap(drawBitmap, 0, 0, mRenderPaint);\n     }\n \n     protected void drawDataSet(Canvas c, ILineDataSet dataSet) {\n@@ -738,7 +740,10 @@ public void releaseBitmap() {\n             mBitmapCanvas = null;\n         }\n         if (mDrawBitmap != null) {\n-            mDrawBitmap.get().recycle();\n+            Bitmap drawBitmap = mDrawBitmap.get();\n+            if (drawBitmap != null) {\n+                drawBitmap.recycle();\n+            }\n             mDrawBitmap.clear();\n             mDrawBitmap = null;\n         }\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -126,19 +126,21 @@ public void drawData(Canvas c) {\n         int width = (int) mViewPortHandler.getChartWidth();\n         int height = (int) mViewPortHandler.getChartHeight();\n \n-        if (mDrawBitmap == null\n-                || (mDrawBitmap.get().getWidth() != width)\n-                || (mDrawBitmap.get().getHeight() != height)) {\n+        Bitmap drawBitmap = mDrawBitmap == null ? null : mDrawBitmap.get();\n \n-            if (width > 0 && height > 0) {\n+        if (drawBitmap == null\n+                || (drawBitmap.getWidth() != width)\n+                || (drawBitmap.getHeight() != height)) {\n \n-                mDrawBitmap = new WeakReference<Bitmap>(Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_4444));\n-                mBitmapCanvas = new Canvas(mDrawBitmap.get());\n+            if (width > 0 && height > 0) {\n+                drawBitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_4444);\n+                mDrawBitmap = new WeakReference<>(drawBitmap);\n+                mBitmapCanvas = new Canvas(drawBitmap);\n             } else\n                 return;\n         }\n \n-        mDrawBitmap.get().eraseColor(Color.TRANSPARENT);\n+        drawBitmap.eraseColor(Color.TRANSPARENT);\n \n         PieData pieData = mChart.getData();\n \n@@ -1015,7 +1017,10 @@ public void releaseBitmap() {\n             mBitmapCanvas = null;\n         }\n         if (mDrawBitmap != null) {\n-            mDrawBitmap.get().recycle();\n+            Bitmap drawBitmap = mDrawBitmap.get();\n+            if (drawBitmap != null) {\n+                drawBitmap.recycle();\n+            }\n             mDrawBitmap.clear();\n             mDrawBitmap = null;\n         }",
    "output": "Merge pull request #3207 from scottkennedy/weakref-fixes\n\nFix some potential NPEs with WeakReference usage"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java\n@@ -19,7 +19,6 @@\n import com.github.mikephil.charting.animation.Easing;\n import com.github.mikephil.charting.charts.PieChart;\n import com.github.mikephil.charting.components.Legend;\n-import com.github.mikephil.charting.components.Legend.LegendPosition;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.PieData;\n import com.github.mikephil.charting.data.PieDataSet;\n@@ -226,6 +225,8 @@ private void setData(int count, float range) {\n         dataSet.setValueLinePart1OffsetPercentage(80.f);\n         dataSet.setValueLinePart1Length(0.2f);\n         dataSet.setValueLinePart2Length(0.4f);\n+        //dataSet.setUsingSliceColorAsValueLineColor(true);\n+\n         //dataSet.setXValuePosition(PieDataSet.ValuePosition.OUTSIDE_SLICE);\n         dataSet.setYValuePosition(PieDataSet.ValuePosition.OUTSIDE_SLICE);\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java\n@@ -18,6 +18,7 @@ public class PieDataSet extends DataSet<PieEntry> implements IPieDataSet {\n \n     private ValuePosition mXValuePosition = ValuePosition.INSIDE_SLICE;\n     private ValuePosition mYValuePosition = ValuePosition.INSIDE_SLICE;\n+    private boolean mUsingSliceColorAsValueLineColor = false;\n     private int mValueLineColor = 0xff000000;\n     private float mValueLineWidth = 1.0f;\n     private float mValueLinePart1OffsetPercentage = 75.f;\n@@ -134,15 +135,26 @@ public void setYValuePosition(ValuePosition yValuePosition)\n         this.mYValuePosition = yValuePosition;\n     }\n \n+    /**\n+     * When valuePosition is OutsideSlice, use slice colors as line color if true\n+     * */\n+    @Override\n+    public boolean isUsingSliceColorAsValueLineColor() {\n+        return mUsingSliceColorAsValueLineColor;\n+    }\n+\n+    public void setUsingSliceColorAsValueLineColor(boolean usingSliceColorAsValueLineColor) {\n+        this.mUsingSliceColorAsValueLineColor = usingSliceColorAsValueLineColor;\n+    }\n+\n     /** When valuePosition is OutsideSlice, indicates line color */\n     @Override\n     public int getValueLineColor()\n     {\n         return mValueLineColor;\n     }\n \n-    public void setValueLineColor(int valueLineColor)\n-    {\n+    public void setValueLineColor(int valueLineColor) {\n         this.mValueLineColor = valueLineColor;\n     }\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java\n@@ -1,6 +1,5 @@\n package com.github.mikephil.charting.interfaces.datasets;\n \n-import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.PieDataSet;\n import com.github.mikephil.charting.data.PieEntry;\n \n@@ -36,6 +35,11 @@ public interface IPieDataSet extends IDataSet<PieEntry> {\n     PieDataSet.ValuePosition getXValuePosition();\n     PieDataSet.ValuePosition getYValuePosition();\n \n+    /**\n+     * When valuePosition is OutsideSlice, use slice colors as line color if true\n+     * */\n+    boolean isUsingSliceColorAsValueLineColor();\n+\n     /**\n      * When valuePosition is OutsideSlice, indicates line color\n      * */\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -536,6 +536,11 @@ public void drawValues(Canvas c) {\n                     }\n \n                     if (dataSet.getValueLineColor() != ColorTemplate.COLOR_NONE) {\n+\n+                        if (dataSet.isUsingSliceColorAsValueLineColor()) {\n+                            mValueLinePaint.setColor(dataSet.getColor(j));\n+                        }\n+\n                         c.drawLine(pt0x, pt0y, pt1x, pt1y, mValueLinePaint);\n                         c.drawLine(pt1x, pt1y, pt2x, pt2y, mValueLinePaint);\n                     }",
    "output": "Merge pull request #3898 from sembozdemir/pie_chart_value_line_colors\n\nPieChart: Add option for using slice color as value line color"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivity.java\n@@ -13,7 +13,6 @@\n import com.github.mikephil.charting.charts.RadarChart;\n import com.github.mikephil.charting.components.AxisBase;\n import com.github.mikephil.charting.components.Legend;\n-import com.github.mikephil.charting.components.Legend.LegendPosition;\n import com.github.mikephil.charting.components.MarkerView;\n import com.github.mikephil.charting.components.XAxis;\n import com.github.mikephil.charting.components.YAxis;\n@@ -28,7 +27,7 @@\n \n import java.util.ArrayList;\n \n-public class RadarChartActivitry extends DemoBase {\n+public class RadarChartActivity extends DemoBase {\n \n     private RadarChart mChart;\n \n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n@@ -39,7 +39,7 @@\n import com.xxmassdeveloper.mpchartexample.PieChartActivity;\n import com.xxmassdeveloper.mpchartexample.PiePolylineChartActivity;\n import com.xxmassdeveloper.mpchartexample.R;\n-import com.xxmassdeveloper.mpchartexample.RadarChartActivitry;\n+import com.xxmassdeveloper.mpchartexample.RadarChartActivity;\n import com.xxmassdeveloper.mpchartexample.RealtimeLineChartActivity;\n import com.xxmassdeveloper.mpchartexample.ScatterChartActivity;\n import com.xxmassdeveloper.mpchartexample.ScrollViewActivity;\n@@ -242,7 +242,7 @@ public void onItemClick(AdapterView<?> av, View v, int pos, long arg3) {\n                 startActivity(i);\n                 break;\n             case 20:\n-                i = new Intent(this, RadarChartActivitry.class);\n+                i = new Intent(this, RadarChartActivity.class);\n                 startActivity(i);\n                 break;\n             case 21:",
    "output": "Merge pull request #3949 from WilderPereira/master\n\nRename RadarChartActivitry to RadarChartActivity"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java\n@@ -373,19 +373,11 @@ public void calculate(float dataMin, float dataMax) {\n             min = min - 1f;\n         }\n \n-        // bottom-space only effects non-custom min\n-        if (!mCustomAxisMin) {\n-\n-            float bottomSpace = range / 100f * getSpaceBottom();\n-            this.mAxisMinimum = (min - bottomSpace);\n-        }\n-\n-        // top-space only effects non-custom max\n-        if (!mCustomAxisMax) {\n-\n-            float topSpace = range / 100f * getSpaceTop();\n-            this.mAxisMaximum = (max + topSpace);\n-        }\n+        float bottomSpace = range / 100f * getSpaceBottom();\n+        this.mAxisMinimum = (min - bottomSpace);\n+            \n+        float topSpace = range / 100f * getSpaceTop();\n+        this.mAxisMaximum = (max + topSpace);\n \n         // calc actual range\n         this.mAxisRange = Math.abs(this.mAxisMaximum - this.mAxisMinimum);",
    "output": "Remove Custom Check\n\ncalculate() no longer checks if min and max is custom, it just adds the padding."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivity.java\n@@ -13,7 +13,6 @@\n import com.github.mikephil.charting.charts.RadarChart;\n import com.github.mikephil.charting.components.AxisBase;\n import com.github.mikephil.charting.components.Legend;\n-import com.github.mikephil.charting.components.Legend.LegendPosition;\n import com.github.mikephil.charting.components.MarkerView;\n import com.github.mikephil.charting.components.XAxis;\n import com.github.mikephil.charting.components.YAxis;",
    "output": "Remove unused imports"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivity.java\n@@ -28,7 +28,7 @@\n \n import java.util.ArrayList;\n \n-public class RadarChartActivitry extends DemoBase {\n+public class RadarChartActivity extends DemoBase {\n \n     private RadarChart mChart;\n \n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n@@ -39,7 +39,7 @@\n import com.xxmassdeveloper.mpchartexample.PieChartActivity;\n import com.xxmassdeveloper.mpchartexample.PiePolylineChartActivity;\n import com.xxmassdeveloper.mpchartexample.R;\n-import com.xxmassdeveloper.mpchartexample.RadarChartActivitry;\n+import com.xxmassdeveloper.mpchartexample.RadarChartActivity;\n import com.xxmassdeveloper.mpchartexample.RealtimeLineChartActivity;\n import com.xxmassdeveloper.mpchartexample.ScatterChartActivity;\n import com.xxmassdeveloper.mpchartexample.ScrollViewActivity;\n@@ -242,7 +242,7 @@ public void onItemClick(AdapterView<?> av, View v, int pos, long arg3) {\n                 startActivity(i);\n                 break;\n             case 20:\n-                i = new Intent(this, RadarChartActivitry.class);\n+                i = new Intent(this, RadarChartActivity.class);\n                 startActivity(i);\n                 break;\n             case 21:",
    "output": "Rename RadarChartActivitry to RadarChartActivity"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java\n@@ -19,7 +19,6 @@\n import com.github.mikephil.charting.animation.Easing;\n import com.github.mikephil.charting.charts.PieChart;\n import com.github.mikephil.charting.components.Legend;\n-import com.github.mikephil.charting.components.Legend.LegendPosition;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.PieData;\n import com.github.mikephil.charting.data.PieDataSet;\n@@ -226,6 +225,8 @@ private void setData(int count, float range) {\n         dataSet.setValueLinePart1OffsetPercentage(80.f);\n         dataSet.setValueLinePart1Length(0.2f);\n         dataSet.setValueLinePart2Length(0.4f);\n+        //dataSet.setUsingSliceColorAsValueLineColor(true);\n+\n         //dataSet.setXValuePosition(PieDataSet.ValuePosition.OUTSIDE_SLICE);\n         dataSet.setYValuePosition(PieDataSet.ValuePosition.OUTSIDE_SLICE);\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java\n@@ -18,6 +18,7 @@ public class PieDataSet extends DataSet<PieEntry> implements IPieDataSet {\n \n     private ValuePosition mXValuePosition = ValuePosition.INSIDE_SLICE;\n     private ValuePosition mYValuePosition = ValuePosition.INSIDE_SLICE;\n+    private boolean mUsingSliceColorAsValueLineColor = false;\n     private int mValueLineColor = 0xff000000;\n     private float mValueLineWidth = 1.0f;\n     private float mValueLinePart1OffsetPercentage = 75.f;\n@@ -134,15 +135,26 @@ public void setYValuePosition(ValuePosition yValuePosition)\n         this.mYValuePosition = yValuePosition;\n     }\n \n+    /**\n+     * When valuePosition is OutsideSlice, use slice colors as line color if true\n+     * */\n+    @Override\n+    public boolean isUsingSliceColorAsValueLineColor() {\n+        return mUsingSliceColorAsValueLineColor;\n+    }\n+\n+    public void setUsingSliceColorAsValueLineColor(boolean usingSliceColorAsValueLineColor) {\n+        this.mUsingSliceColorAsValueLineColor = usingSliceColorAsValueLineColor;\n+    }\n+\n     /** When valuePosition is OutsideSlice, indicates line color */\n     @Override\n     public int getValueLineColor()\n     {\n         return mValueLineColor;\n     }\n \n-    public void setValueLineColor(int valueLineColor)\n-    {\n+    public void setValueLineColor(int valueLineColor) {\n         this.mValueLineColor = valueLineColor;\n     }\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java\n@@ -1,6 +1,5 @@\n package com.github.mikephil.charting.interfaces.datasets;\n \n-import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.PieDataSet;\n import com.github.mikephil.charting.data.PieEntry;\n \n@@ -36,6 +35,11 @@ public interface IPieDataSet extends IDataSet<PieEntry> {\n     PieDataSet.ValuePosition getXValuePosition();\n     PieDataSet.ValuePosition getYValuePosition();\n \n+    /**\n+     * When valuePosition is OutsideSlice, use slice colors as line color if true\n+     * */\n+    boolean isUsingSliceColorAsValueLineColor();\n+\n     /**\n      * When valuePosition is OutsideSlice, indicates line color\n      * */\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -536,6 +536,11 @@ public void drawValues(Canvas c) {\n                     }\n \n                     if (dataSet.getValueLineColor() != ColorTemplate.COLOR_NONE) {\n+\n+                        if (dataSet.isUsingSliceColorAsValueLineColor()) {\n+                            mValueLinePaint.setColor(dataSet.getColor(j));\n+                        }\n+\n                         c.drawLine(pt0x, pt0y, pt1x, pt1y, mValueLinePaint);\n                         c.drawLine(pt1x, pt1y, pt2x, pt2y, mValueLinePaint);\n                     }",
    "output": "Add option for using slice color as value line color\n\nFixes: #3897"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java\n@@ -207,7 +207,7 @@ protected void drawLabels(Canvas c, float pos, MPPointF anchor) {\n                 if (mXAxis.isAvoidFirstLastClippingEnabled()) {\n \n                     // avoid clipping of the last\n-                    if (i == mXAxis.mEntryCount - 1 && mXAxis.mEntryCount > 1) {\n+                    if (i / 2 == mXAxis.mEntryCount - 1 && mXAxis.mEntryCount > 1) {\n                         float width = Utils.calcTextWidth(mAxisLabelPaint, label);\n \n                         if (width > mViewPortHandler.offsetRight() * 2",
    "output": "Avoid that the last label entry in the x-labels clip off the edge of the screen #3819"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n@@ -90,7 +90,8 @@ protected void onCreate(Bundle savedInstanceState) {\n                 \"A bar chart with multiple DataSet objects. One multiple colors per DataSet.\"));\n         objects.add(new ContentItem(\n                 \"Charts in ViewPager Fragments\",\n-                \"Demonstration of charts inside ViewPager Fragments. In this example the focus was on the design and look and feel of the chart.\"));\n+                \"Demonstration of charts inside ViewPager Fragments. In this example the focus was on the design and look and feel of the\" +\n+                        \" chart.\"));\n         objects.add(new ContentItem(\n                 \"BarChart inside ListView\",\n                 \"Demonstrates the usage of a BarChart inside a ListView item.\"));\n@@ -135,12 +136,10 @@ protected void onCreate(Bundle savedInstanceState) {\n                 \"Realm.io Database\",\n                 \"This demonstrates how to use this library with Realm.io mobile database.\");\n         objects.add(realm);\n-\n-        ContentItem time = new ContentItem(\n+        objects.add(new ContentItem(\n                 \"Time Chart\",\n-                \"Simple demonstration of a time-chart. This chart draws one line entry per hour originating from the current time in milliseconds.\");\n-        time.isNew = true;\n-        objects.add(time);\n+                \"Simple demonstration of a time-chart. This chart draws one line entry per hour originating from the current time in \" +\n+                        \"milliseconds.\"));\n         objects.add(new ContentItem(\n                 \"Filled LineChart\",\n                 \"This demonstrates how to fill an area between two LineDataSets.\"));",
    "output": "Update gitignore, add assets"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java\n@@ -38,6 +38,27 @@ public class YAxis extends AxisBase {\n      */\n     protected boolean mDrawZeroLine = false;\n \n+    /**\n+     * flag indicating that auto scale min restriction should be used\n+     */\n+\n+    private boolean mUseAutoScaleRestrictionMin = false;\n+    /**\n+     * flag indicating that auto scale max restriction should be used\n+     */\n+\n+    private boolean mUseAutoScaleRestrictionMax = false;\n+    /**\n+     * restriction value of autoscale min\n+     */\n+\n+    private float mAutoScaleMinRestriction = 0f;\n+\n+    /**\n+     * restriction value of autoscale max\n+     */\n+    private float mAutoScaleMaxRestriction = 0f;\n+\n     /**\n      * Color of the zero line\n      */\n@@ -357,12 +378,54 @@ public boolean needsOffset() {\n             return false;\n     }\n \n+    /**\n+     * Sets min value restriction for autoscale\n+     */\n+    public void setAutoScaleMinRestriction(float restrictionValue) {\n+        mUseAutoScaleRestrictionMin = true;\n+        mAutoScaleMinRestriction = restrictionValue;\n+    }\n+\n+    /**\n+     * Sets max value restriction for autoscale\n+     */\n+    public void setAutoScaleMaxRestriction(float restrictionValue) {\n+        mUseAutoScaleRestrictionMax = true;\n+        mAutoScaleMaxRestriction = restrictionValue;\n+    }\n+\n+    /**\n+     * Resets min value restriction for autoscale\n+     */\n+    public void resetAutoScaleMinRestriction() {\n+        mUseAutoScaleRestrictionMin = false;\n+    }\n+\n+    /**\n+     * Resets max value restriction for autoscale\n+     */\n+    public void resetAutoScaleMaxRestriction() {\n+        mUseAutoScaleRestrictionMax = false;\n+    }\n+\n     @Override\n     public void calculate(float dataMin, float dataMax) {\n \n+        float min = dataMin;\n+        float max = dataMax;\n+\n         // if custom, use value as is, else use data value\n-        float min = mCustomAxisMin ? mAxisMinimum : dataMin;\n-        float max = mCustomAxisMax ? mAxisMaximum : dataMax;\n+        if( mCustomAxisMin ) {\n+            min = mAxisMinimum;\n+        } else if( mUseAutoScaleRestrictionMin ) {\n+            min = Math.min( min, mAutoScaleMinRestriction );\n+        }\n+\n+        if( mCustomAxisMax ) {\n+            max = mAxisMaximum;\n+        } else if( mUseAutoScaleRestrictionMax ) {\n+            max = Math.max( max, mAutoScaleMaxRestriction );\n+        }\n \n         // temporary range (before calculations)\n         float range = Math.abs(max - min);",
    "output": "Added option to set restrictions for Y axis autoscaling."
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/LargeValueFormatter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/LargeValueFormatter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/LargeValueFormatter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/LargeValueFormatter.java\n@@ -20,10 +20,10 @@\n public class LargeValueFormatter implements IValueFormatter, IAxisValueFormatter\n {\n \n-    private static String[] SUFFIX = new String[]{\n+    private String[] mSuffix = new String[]{\n             \"\", \"k\", \"m\", \"b\", \"t\"\n     };\n-    private static final int MAX_LENGTH = 5;\n+    private int mMaxLength = 5;\n     private DecimalFormat mFormat;\n     private String mText = \"\";\n \n@@ -68,8 +68,12 @@ public void setAppendix(String appendix) {\n      *\n      * @param suff new suffix\n      */\n-    public void setSuffix(String[] suff) {\n-        SUFFIX = suff;\n+    public void setSuffix(String[] suffix) {\n+        this.mSuffix = suffix;\n+    }\n+\n+    public void setMaxLength(int maxLength) {\n+        this.mMaxLength = maxLength;\n     }\n \n     /**\n@@ -84,9 +88,9 @@ private String makePretty(double number) {\n         int numericValue2 = Character.getNumericValue(r.charAt(r.length() - 2));\n         int combined = Integer.valueOf(numericValue2 + \"\" + numericValue1);\n \n-        r = r.replaceAll(\"E[0-9][0-9]\", SUFFIX[combined / 3]);\n+        r = r.replaceAll(\"E[0-9][0-9]\", mSuffix[combined / 3]);\n \n-        while (r.length() > MAX_LENGTH || r.matches(\"[0-9]+\\\\.[a-z]\")) {\n+        while (r.length() > mMaxLength || r.matches(\"[0-9]+\\\\.[a-z]\")) {\n             r = r.substring(0, r.length() - 2) + r.substring(r.length() - 1);\n         }\n ",
    "output": "Refactored LargeValueFormatter"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -212,9 +212,14 @@ protected void onDraw(Canvas canvas) {\n         mAxisRendererLeft.renderAxisLine(canvas);\n         mAxisRendererRight.renderAxisLine(canvas);\n \n-        mXAxisRenderer.renderGridLines(canvas);\n-        mAxisRendererLeft.renderGridLines(canvas);\n-        mAxisRendererRight.renderGridLines(canvas);\n+        if (mXAxis.isDrawGridLinesBehindDataEnabled())\n+            mXAxisRenderer.renderGridLines(canvas);\n+\n+        if (mAxisLeft.isDrawGridLinesBehindDataEnabled())\n+            mAxisRendererLeft.renderGridLines(canvas);\n+\n+        if (mAxisRight.isDrawGridLinesBehindDataEnabled())\n+            mAxisRendererRight.renderGridLines(canvas);\n \n         if (mXAxis.isEnabled() && mXAxis.isDrawLimitLinesBehindDataEnabled())\n             mXAxisRenderer.renderLimitLines(canvas);\n@@ -231,6 +236,15 @@ protected void onDraw(Canvas canvas) {\n \n         mRenderer.drawData(canvas);\n \n+        if (!mXAxis.isDrawGridLinesBehindDataEnabled())\n+            mXAxisRenderer.renderGridLines(canvas);\n+\n+        if (!mAxisLeft.isDrawGridLinesBehindDataEnabled())\n+            mAxisRendererLeft.renderGridLines(canvas);\n+\n+        if (!mAxisRight.isDrawGridLinesBehindDataEnabled())\n+            mAxisRendererRight.renderGridLines(canvas);\n+\n         // if highlighting is enabled\n         if (valuesToHighlight())\n             mRenderer.drawHighlighted(canvas, mIndicesToHighlight);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n@@ -112,6 +112,11 @@ public abstract class AxisBase extends ComponentBase {\n      */\n     protected boolean mDrawLimitLineBehindData = false;\n \n+    /**\n+     * flag indicating the grid lines layer depth\n+     */\n+    protected boolean mDrawGridLinesBehindData = true;\n+\n     /**\n      * Extra spacing for `axisMinimum` to be added to automatically calculated `axisMinimum`\n      */\n@@ -444,6 +449,18 @@ public boolean isDrawLimitLinesBehindDataEnabled() {\n         return mDrawLimitLineBehindData;\n     }\n \n+    /**\n+     * If this is set to false, the grid lines are draw on top of the actual data,\n+     * otherwise behind. Default: true\n+     *\n+     * @param enabled\n+     */\n+    public void setDrawGridLinesBehindData(boolean enabled) { mDrawGridLinesBehindData = enabled; }\n+\n+    public boolean isDrawGridLinesBehindDataEnabled() {\n+        return mDrawGridLinesBehindData;\n+    }\n+\n     /**\n      * Returns the longest formatted label (in terms of characters), this axis\n      * contains.",
    "output": "add option to draw limit lines on top of data"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -78,7 +78,8 @@ public abstract class BarLineChartBase<T extends BarLineScatterCandleBubbleData<\n     /**\n      * if true, dragging is enabled for the chart\n      */\n-    private boolean mDragEnabled = true;\n+    private boolean mDragXEnabled = true;\n+    private boolean mDragYEnabled = true;\n \n     private boolean mScaleXEnabled = true;\n     private boolean mScaleYEnabled = true;\n@@ -1097,7 +1098,8 @@ public void setGridBackgroundColor(int color) {\n      * @param enabled\n      */\n     public void setDragEnabled(boolean enabled) {\n-        this.mDragEnabled = enabled;\n+        this.mDragXEnabled = enabled;\n+        this.mDragYEnabled = enabled;\n     }\n \n     /**\n@@ -1106,7 +1108,43 @@ public void setDragEnabled(boolean enabled) {\n      * @return\n      */\n     public boolean isDragEnabled() {\n-        return mDragEnabled;\n+        return mDragXEnabled || mDragYEnabled;\n+    }\n+\n+    /**\n+     * Set this to true to enable dragging on the X axis\n+     *\n+     * @param enabled\n+     */\n+    public void setDragXEnabled(boolean enabled) {\n+        this.mDragXEnabled = enabled;\n+    }\n+\n+    /**\n+     * Returns true if dragging on the X axis is enabled for the chart, false if not.\n+     *\n+     * @return\n+     */\n+    public boolean isDragXEnabled() {\n+        return mDragXEnabled;\n+    }\n+\n+    /**\n+     * Set this to true to enable dragging on the Y axis\n+     *\n+     * @param enabled\n+     */\n+    public void setDragYEnabled(boolean enabled) {\n+        this.mDragYEnabled = enabled;\n+    }\n+\n+    /**\n+     * Returns true if dragging on the Y axis is enabled for the chart, false if not.\n+     *\n+     * @return\n+     */\n+    public boolean isDragYEnabled() {\n+        return mDragYEnabled;\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -127,6 +127,7 @@ public boolean onTouch(View v, MotionEvent event) {\n                 saveTouchStart(event);\n \n                 break;\n+\n             case MotionEvent.ACTION_POINTER_DOWN:\n \n                 if (event.getPointerCount() >= 2) {\n@@ -161,12 +162,17 @@ public boolean onTouch(View v, MotionEvent event) {\n                     midPoint(mTouchPointCenter, event);\n                 }\n                 break;\n+\n             case MotionEvent.ACTION_MOVE:\n \n                 if (mTouchMode == DRAG) {\n \n                     mChart.disableScroll();\n-                    performDrag(event);\n+\n+                    float x = mChart.isDragXEnabled() ? event.getX() - mTouchStartPoint.x : 0.f;\n+                    float y = mChart.isDragYEnabled() ? event.getY() - mTouchStartPoint.y : 0.f;\n+\n+                    performDrag(event, x, y);\n \n                 } else if (mTouchMode == X_ZOOM || mTouchMode == Y_ZOOM || mTouchMode == PINCH_ZOOM) {\n \n@@ -179,22 +185,36 @@ public boolean onTouch(View v, MotionEvent event) {\n                         && Math.abs(distance(event.getX(), mTouchStartPoint.x, event.getY(),\n                         mTouchStartPoint.y)) > mDragTriggerDist) {\n \n-                    if (mChart.hasNoDragOffset()) {\n+                    if (mChart.isDragEnabled()) {\n+\n+                        boolean shouldPan = !mChart.isFullyZoomedOut() ||\n+                                !mChart.hasNoDragOffset();\n+\n+                        if (shouldPan) {\n+\n+                            float distanceX = Math.abs(event.getX() - mTouchStartPoint.x);\n+                            float distanceY = Math.abs(event.getY() - mTouchStartPoint.y);\n+\n+                            // Disable dragging in a direction that's disallowed\n+                            if ((mChart.isDragXEnabled() || distanceY >= distanceX) &&\n+                                    (mChart.isDragYEnabled() || distanceY <= distanceX)) {\n+\n+                                mLastGesture = ChartGesture.DRAG;\n+                                mTouchMode = DRAG;\n+                            }\n \n-                        if (!mChart.isFullyZoomedOut() && mChart.isDragEnabled()) {\n-                            mTouchMode = DRAG;\n                         } else {\n \n-                            mLastGesture = ChartGesture.DRAG;\n+                            if (mChart.isHighlightPerDragEnabled()) {\n+                                mLastGesture = ChartGesture.DRAG;\n \n-                            if (mChart.isHighlightPerDragEnabled())\n-                                performHighlightDrag(event);\n+                                if (mChart.isHighlightPerDragEnabled())\n+                                    performHighlightDrag(event);\n+                            }\n                         }\n \n-                    } else if (mChart.isDragEnabled()) {\n-                        mLastGesture = ChartGesture.DRAG;\n-                        mTouchMode = DRAG;\n                     }\n+\n                 }\n                 break;\n \n@@ -292,36 +312,29 @@ private void saveTouchStart(MotionEvent event) {\n      *\n      * @param event\n      */\n-    private void performDrag(MotionEvent event) {\n+    private void performDrag(MotionEvent event, float distanceX, float distanceY) {\n \n         mLastGesture = ChartGesture.DRAG;\n \n         mMatrix.set(mSavedMatrix);\n \n         OnChartGestureListener l = mChart.getOnChartGestureListener();\n \n-        float dX, dY;\n-\n         // check if axis is inverted\n         if (inverted()) {\n \n             // if there is an inverted horizontalbarchart\n             if (mChart instanceof HorizontalBarChart) {\n-                dX = -(event.getX() - mTouchStartPoint.x);\n-                dY = event.getY() - mTouchStartPoint.y;\n+                distanceX = -distanceX;\n             } else {\n-                dX = event.getX() - mTouchStartPoint.x;\n-                dY = -(event.getY() - mTouchStartPoint.y);\n+                distanceY = -distanceY;\n             }\n-        } else {\n-            dX = event.getX() - mTouchStartPoint.x;\n-            dY = event.getY() - mTouchStartPoint.y;\n         }\n \n-        mMatrix.postTranslate(dX, dY);\n+        mMatrix.postTranslate(distanceX, distanceY);\n \n         if (l != null)\n-            l.onChartTranslate(event, dX, dY);\n+            l.onChartTranslate(event, distanceX, distanceY);\n     }\n \n     /**\n@@ -652,7 +665,12 @@ public void computeScroll() {\n \n         MotionEvent event = MotionEvent.obtain(currentTime, currentTime, MotionEvent.ACTION_MOVE, mDecelerationCurrentPoint.x,\n                 mDecelerationCurrentPoint.y, 0);\n-        performDrag(event);\n+\n+        float dragDistanceX = mChart.isDragXEnabled() ? mDecelerationCurrentPoint.x - mTouchStartPoint.x : 0.f;\n+        float dragDistanceY = mChart.isDragYEnabled() ? mDecelerationCurrentPoint.y - mTouchStartPoint.y : 0.f;\n+\n+        performDrag(event, dragDistanceX, dragDistanceY);\n+\n         event.recycle();\n         mMatrix = mChart.getViewPortHandler().refresh(mMatrix, mChart, false);\n ",
    "output": "Allow locking drag on either axes"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java\n@@ -2,18 +2,21 @@\n package com.github.mikephil.charting.charts;\n \n import android.content.Context;\n+import android.graphics.Canvas;\n import android.util.AttributeSet;\n import android.util.Log;\n \n import com.github.mikephil.charting.data.BarData;\n import com.github.mikephil.charting.data.BubbleData;\n import com.github.mikephil.charting.data.CandleData;\n import com.github.mikephil.charting.data.CombinedData;\n+import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.LineData;\n import com.github.mikephil.charting.data.ScatterData;\n import com.github.mikephil.charting.highlight.CombinedHighlighter;\n import com.github.mikephil.charting.highlight.Highlight;\n import com.github.mikephil.charting.interfaces.dataprovider.CombinedDataProvider;\n+import com.github.mikephil.charting.interfaces.datasets.IDataSet;\n import com.github.mikephil.charting.renderer.CombinedChartRenderer;\n \n /**\n@@ -226,4 +229,44 @@ public void setDrawOrder(DrawOrder[] order) {\n             return;\n         mDrawOrder = order;\n     }\n+\n+    /**\n+     * draws all MarkerViews on the highlighted positions\n+     */\n+    protected void drawMarkers(Canvas canvas) {\n+\n+        // if there is no marker view or drawing marker is disabled\n+        if (mMarker == null || !isDrawMarkersEnabled() || !valuesToHighlight())\n+            return;\n+\n+        for (int i = 0; i < mIndicesToHighlight.length; i++) {\n+\n+            Highlight highlight = mIndicesToHighlight[i];\n+\n+            IDataSet set = mData.getDataSetByHighlight(highlight);\n+\n+            Entry e = mData.getEntryForHighlight(highlight);\n+            if (e == null)\n+                continue;\n+\n+            int entryIndex = set.getEntryIndex(e);\n+\n+            // make sure entry not null\n+            if (entryIndex > set.getEntryCount() * mAnimator.getPhaseX())\n+                continue;\n+\n+            float[] pos = getMarkerPosition(highlight);\n+\n+            // check bounds\n+            if (!mViewPortHandler.isInBounds(pos[0], pos[1]))\n+                continue;\n+\n+            // callbacks to update the content\n+            mMarker.refreshContent(e, highlight);\n+\n+            // draw the marker\n+            mMarker.draw(canvas, pos[0], pos[1]);\n+        }\n+    }\n+\n }\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/CombinedData.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/CombinedData.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/CombinedData.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/CombinedData.java\n@@ -177,28 +177,44 @@ public void notifyDataChanged() {\n     @Override\n     public Entry getEntryForHighlight(Highlight highlight) {\n \n-        List<BarLineScatterCandleBubbleData> dataObjects = getAllData();\n-\n-        if (highlight.getDataIndex() >= dataObjects.size())\n+        if (highlight.getDataIndex() >= getAllData().size())\n             return null;\n \n-        ChartData data = dataObjects.get(highlight.getDataIndex());\n+        ChartData data = getDataByIndex(highlight.getDataIndex());\n \n         if (highlight.getDataSetIndex() >= data.getDataSetCount())\n             return null;\n-        else {\n-            // The value of the highlighted entry could be NaN -\n-            //   if we are not interested in highlighting a specific value.\n \n-            List<Entry> entries = data.getDataSetByIndex(highlight.getDataSetIndex())\n-                    .getEntriesForXValue(highlight.getX());\n-            for (Entry entry : entries)\n-                if (entry.getY() == highlight.getY() ||\n-                        Float.isNaN(highlight.getY()))\n-                    return entry;\n+        // The value of the highlighted entry could be NaN -\n+        //   if we are not interested in highlighting a specific value.\n+\n+        List<Entry> entries = data.getDataSetByIndex(highlight.getDataSetIndex())\n+                .getEntriesForXValue(highlight.getX());\n+        for (Entry entry : entries)\n+            if (entry.getY() == highlight.getY() ||\n+                    Float.isNaN(highlight.getY()))\n+                return entry;\n+\n+        return null;\n+    }\n \n+    /**\n+     * Get dataset for highlight\n+     *\n+     * @param highlight current highlight\n+     * @return dataset related to highlight\n+     */\n+    public IBarLineScatterCandleBubbleDataSet<? extends Entry> getDataSetByHighlight(Highlight highlight) {\n+        if (highlight.getDataIndex() >= getAllData().size())\n             return null;\n-        }\n+\n+        BarLineScatterCandleBubbleData data = getDataByIndex(highlight.getDataIndex());\n+\n+        if (highlight.getDataSetIndex() >= data.getDataSetCount())\n+            return null;\n+\n+        return (IBarLineScatterCandleBubbleDataSet<? extends Entry>)\n+                data.getDataSets().get(highlight.getDataSetIndex());\n     }\n \n     public int getDataIndex(ChartData data) {",
    "output": "Fix CombinedChartView not drawing markers"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/ScatterChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/ScatterChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/ScatterChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/ScatterChart.java\n@@ -35,6 +35,9 @@ protected void init() {\n         super.init();\n \n         mRenderer = new ScatterChartRenderer(this, mAnimator, mViewPortHandler);\n+\n+        getXAxis().setSpaceMin(0.5f);\n+        getXAxis().setSpaceMax(0.5f);\n     }\n \n     @Override",
    "output": "Add default x spacing (half width) for scatter chart as well"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n@@ -1676,20 +1676,23 @@ protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n             Log.i(LOG_TAG, \"OnSizeChanged()\");\n \n         if (w > 0 && h > 0 && w < 10000 && h < 10000) {\n-\n-            mViewPortHandler.setChartDimens(w, h);\n-\n             if (mLogEnabled)\n                 Log.i(LOG_TAG, \"Setting chart dimens, width: \" + w + \", height: \" + h);\n+            mViewPortHandler.setChartDimens(w, h);\n+        } else {\n+            if (mLogEnabled)\n+                Log.w(LOG_TAG, \"*Avoiding* setting chart dimens! width: \" + w + \", height: \" + h);\n+        }\n \n-            for (Runnable r : mJobs) {\n-                post(r);\n-            }\n+        // This may cause the chart view to mutate properties affecting the view port --\n+        //   lets do this before we try to run any pending jobs on the view port itself\n+        notifyDataSetChanged();\n \n-            mJobs.clear();\n+        for (Runnable r : mJobs) {\n+            post(r);\n         }\n \n-        notifyDataSetChanged();\n+        mJobs.clear();\n \n         super.onSizeChanged(w, h, oldw, oldh);\n     }",
    "output": "Run view port jobs after applying changes"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -76,19 +76,21 @@ public void drawData(Canvas c) {\n         int width = (int) mViewPortHandler.getChartWidth();\n         int height = (int) mViewPortHandler.getChartHeight();\n \n-        if (mDrawBitmap == null\n-                || (mDrawBitmap.get().getWidth() != width)\n-                || (mDrawBitmap.get().getHeight() != height)) {\n+        Bitmap drawBitmap = mDrawBitmap == null ? null : mDrawBitmap.get();\n \n-            if (width > 0 && height > 0) {\n+        if (drawBitmap == null\n+                || (drawBitmap.getWidth() != width)\n+                || (drawBitmap.getHeight() != height)) {\n \n-                mDrawBitmap = new WeakReference<Bitmap>(Bitmap.createBitmap(width, height, mBitmapConfig));\n-                mBitmapCanvas = new Canvas(mDrawBitmap.get());\n+            if (width > 0 && height > 0) {\n+                drawBitmap = Bitmap.createBitmap(width, height, mBitmapConfig);\n+                mDrawBitmap = new WeakReference<>(drawBitmap);\n+                mBitmapCanvas = new Canvas(drawBitmap);\n             } else\n                 return;\n         }\n \n-        mDrawBitmap.get().eraseColor(Color.TRANSPARENT);\n+        drawBitmap.eraseColor(Color.TRANSPARENT);\n \n         LineData lineData = mChart.getLineData();\n \n@@ -98,7 +100,7 @@ public void drawData(Canvas c) {\n                 drawDataSet(c, set);\n         }\n \n-        c.drawBitmap(mDrawBitmap.get(), 0, 0, mRenderPaint);\n+        c.drawBitmap(drawBitmap, 0, 0, mRenderPaint);\n     }\n \n     protected void drawDataSet(Canvas c, ILineDataSet dataSet) {\n@@ -738,7 +740,10 @@ public void releaseBitmap() {\n             mBitmapCanvas = null;\n         }\n         if (mDrawBitmap != null) {\n-            mDrawBitmap.get().recycle();\n+            Bitmap drawBitmap = mDrawBitmap.get();\n+            if (drawBitmap != null) {\n+                drawBitmap.recycle();\n+            }\n             mDrawBitmap.clear();\n             mDrawBitmap = null;\n         }\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -126,19 +126,21 @@ public void drawData(Canvas c) {\n         int width = (int) mViewPortHandler.getChartWidth();\n         int height = (int) mViewPortHandler.getChartHeight();\n \n-        if (mDrawBitmap == null\n-                || (mDrawBitmap.get().getWidth() != width)\n-                || (mDrawBitmap.get().getHeight() != height)) {\n+        Bitmap drawBitmap = mDrawBitmap == null ? null : mDrawBitmap.get();\n \n-            if (width > 0 && height > 0) {\n+        if (drawBitmap == null\n+                || (drawBitmap.getWidth() != width)\n+                || (drawBitmap.getHeight() != height)) {\n \n-                mDrawBitmap = new WeakReference<Bitmap>(Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_4444));\n-                mBitmapCanvas = new Canvas(mDrawBitmap.get());\n+            if (width > 0 && height > 0) {\n+                drawBitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_4444);\n+                mDrawBitmap = new WeakReference<>(drawBitmap);\n+                mBitmapCanvas = new Canvas(drawBitmap);\n             } else\n                 return;\n         }\n \n-        mDrawBitmap.get().eraseColor(Color.TRANSPARENT);\n+        drawBitmap.eraseColor(Color.TRANSPARENT);\n \n         PieData pieData = mChart.getData();\n \n@@ -1010,7 +1012,10 @@ public void releaseBitmap() {\n             mBitmapCanvas = null;\n         }\n         if (mDrawBitmap != null) {\n-            mDrawBitmap.get().recycle();\n+            Bitmap drawBitmap = mDrawBitmap.get();\n+            if (drawBitmap != null) {\n+                drawBitmap.recycle();\n+            }\n             mDrawBitmap.clear();\n             mDrawBitmap = null;\n         }",
    "output": "Fix some potential NPEs with WeakReference usage\n\nEven if the WeakReference field is not null, the contained value may be null.  Additionally, you always need a strong reference to the value to ensure it isn't garbage collected while you're using it."
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n@@ -315,6 +315,7 @@ public void clear() {\n         mData = null;\n         mOffsetsCalculated = false;\n         mIndicesToHighlight = null;\n+        mChartTouchListener.setLastHighlighted(null);\n         invalidate();\n     }\n ",
    "output": "Clear lastHighlighted when `clear` is called"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/LineRadarDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/LineRadarDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/LineRadarDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/LineRadarDataSet.java\n@@ -101,8 +101,8 @@ public void setFillAlpha(int alpha) {\n      */\n     public void setLineWidth(float width) {\n \n-        if (width < 0.2f)\n-            width = 0.2f;\n+        if (width < 0.0f)\n+            width = 0.0f;\n         if (width > 10.0f)\n             width = 10.0f;\n         mLineWidth = Utils.convertDpToPixel(width);",
    "output": "Remove line width minimum constraint"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/jobs/AnimatedZoomJob.java b/MPChartLib/src/main/java/com/github/mikephil/charting/jobs/AnimatedZoomJob.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/jobs/AnimatedZoomJob.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/jobs/AnimatedZoomJob.java\n@@ -33,6 +33,8 @@ public static AnimatedZoomJob getInstance(ViewPortHandler viewPortHandler, View\n         result.view = v;\n         result.xOrigin = xOrigin;\n         result.yOrigin = yOrigin;\n+        result.yAxis = axis;\n+        result.xAxisRange = xAxisRange;\n         result.resetAnimator();\n         result.animator.setDuration(duration);\n         return result;",
    "output": "Fix for missing setters in getInstance method\n\nThe zoomAndCenterAnimated method in BarLineChartBase crashes with a NullPointer exception because the yAxis variable is null when onAnimationUpdate is called. The yAxis is null because of missing setters in the getInstance method of AnimatedZoomJob."
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -194,17 +194,19 @@ protected void onDraw(Canvas canvas) {\n         // execute all drawing commands\n         drawGridBackground(canvas);\n \n+        if (mAutoScaleMinMaxEnabled) {\n+            autoScale();\n+        }\n+\n         if (mAxisLeft.isEnabled())\n             mAxisRendererLeft.computeAxis(mAxisLeft.mAxisMinimum, mAxisLeft.mAxisMaximum, mAxisLeft.isInverted());\n+\n         if (mAxisRight.isEnabled())\n             mAxisRendererRight.computeAxis(mAxisRight.mAxisMinimum, mAxisRight.mAxisMaximum, mAxisRight.isInverted());\n+\n         if (mXAxis.isEnabled())\n             mXAxisRenderer.computeAxis(mXAxis.mAxisMinimum, mXAxis.mAxisMaximum, false);\n \n-        if (mAutoScaleMinMaxEnabled) {\n-            autoScale();\n-        }\n-\n         mXAxisRenderer.renderAxisLine(canvas);\n         mAxisRendererLeft.renderAxisLine(canvas);\n         mAxisRendererRight.renderAxisLine(canvas);\n@@ -213,13 +215,13 @@ protected void onDraw(Canvas canvas) {\n         mAxisRendererLeft.renderGridLines(canvas);\n         mAxisRendererRight.renderGridLines(canvas);\n \n-        if (mXAxis.isDrawLimitLinesBehindDataEnabled())\n+        if (mXAxis.isEnabled() && mXAxis.isDrawLimitLinesBehindDataEnabled())\n             mXAxisRenderer.renderLimitLines(canvas);\n \n-        if (mAxisLeft.isDrawLimitLinesBehindDataEnabled())\n+        if (mAxisLeft.isEnabled() && mAxisLeft.isDrawLimitLinesBehindDataEnabled())\n             mAxisRendererLeft.renderLimitLines(canvas);\n \n-        if (mAxisRight.isDrawLimitLinesBehindDataEnabled())\n+        if (mAxisRight.isEnabled() && mAxisRight.isDrawLimitLinesBehindDataEnabled())\n             mAxisRendererRight.renderLimitLines(canvas);\n \n         // make sure the data cannot be drawn outside the content-rect\n@@ -237,13 +239,13 @@ protected void onDraw(Canvas canvas) {\n \n         mRenderer.drawExtras(canvas);\n \n-        if (!mXAxis.isDrawLimitLinesBehindDataEnabled())\n+        if (mXAxis.isEnabled() && !mXAxis.isDrawLimitLinesBehindDataEnabled())\n             mXAxisRenderer.renderLimitLines(canvas);\n \n-        if (!mAxisLeft.isDrawLimitLinesBehindDataEnabled())\n+        if (mAxisLeft.isEnabled() && !mAxisLeft.isDrawLimitLinesBehindDataEnabled())\n             mAxisRendererLeft.renderLimitLines(canvas);\n \n-        if (!mAxisRight.isDrawLimitLinesBehindDataEnabled())\n+        if (mAxisRight.isEnabled() && !mAxisRight.isDrawLimitLinesBehindDataEnabled())\n             mAxisRendererRight.renderLimitLines(canvas);\n \n         mXAxisRenderer.renderAxisLabels(canvas);\n@@ -347,9 +349,14 @@ protected void autoScale() {\n         mXAxis.calculate(mData.getXMin(), mData.getXMax());\n \n         // calculate axis range (min / max) according to provided data\n-        mAxisLeft.calculate(mData.getYMin(AxisDependency.LEFT), mData.getYMax(AxisDependency.LEFT));\n-        mAxisRight.calculate(mData.getYMin(AxisDependency.RIGHT), mData.getYMax(AxisDependency\n-                .RIGHT));\n+\n+        if (mAxisLeft.isEnabled())\n+            mAxisLeft.calculate(mData.getYMin(AxisDependency.LEFT),\n+                    mData.getYMax(AxisDependency.LEFT));\n+\n+        if (mAxisRight.isEnabled())\n+            mAxisRight.calculate(mData.getYMin(AxisDependency.RIGHT),\n+                    mData.getYMax(AxisDependency.RIGHT));\n \n         calculateOffsets();\n     }\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/RadarChart.java\n@@ -137,13 +137,17 @@ protected void onDraw(Canvas canvas) {\n         if (mDrawWeb)\n             mRenderer.drawExtras(canvas);\n \n-        mYAxisRenderer.renderLimitLines(canvas);\n+        if (mYAxis.isEnabled() && mYAxis.isDrawLimitLinesBehindDataEnabled())\n+            mYAxisRenderer.renderLimitLines(canvas);\n \n         mRenderer.drawData(canvas);\n \n         if (valuesToHighlight())\n             mRenderer.drawHighlighted(canvas, mIndicesToHighlight);\n \n+        if (mYAxis.isEnabled() && !mYAxis.isDrawLimitLinesBehindDataEnabled())\n+            mYAxisRenderer.renderLimitLines(canvas);\n+\n         mYAxisRenderer.renderAxisLabels(canvas);\n \n         mRenderer.drawValues(canvas);",
    "output": "Consider isEnabled in more axis rendering cases"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java\n@@ -11,7 +11,7 @@ public class DayAxisValueFormatter implements IAxisValueFormatter\n {\n \n     protected String[] mMonths = new String[]{\n-            \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dec\"\n+            \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n     };\n \n     private BarLineChartBase<?> chart;",
    "output": "Merge pull request #2463 from maheshgaya/master\n\nFix: typo for October"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -675,7 +675,7 @@ protected void drawCircles(Canvas c) {\n                 Bitmap circleBitmap = imageCache.getBitmap(j);\n \n                 if (circleBitmap != null) {\n-                    c.drawBitmap(circleBitmap, mCirclesBuffer[0] - circleRadius, mCirclesBuffer[1] - circleRadius, mRenderPaint);\n+                    c.drawBitmap(circleBitmap, mCirclesBuffer[0] - circleRadius, mCirclesBuffer[1] - circleRadius, null);\n                 }\n             }\n         }",
    "output": "Merge pull request #2622 from patrick-iv/fix_circle_inherit_alpha\n\nFix circles inherit alpha #2620"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/ComponentBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/ComponentBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/ComponentBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/ComponentBase.java\n@@ -36,7 +36,7 @@ public abstract class ComponentBase {\n     /**\n      * the text size of the labels\n      */\n-    protected float mTextSize = 10f;\n+    protected float mTextSize = Utils.convertDpToPixel(10f);\n \n     /**\n      * the text color to use for the labels",
    "output": "Merge pull request #2621 from patrick-iv/fix_default_text_size\n\nFix for default text size being set in PX instead of DP"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -201,14 +201,14 @@ protected void onDraw(Canvas canvas) {\n         if (mXAxis.isEnabled())\n             mXAxisRenderer.computeAxis(mXAxis.mAxisMinimum, mXAxis.mAxisMaximum, false);\n \n-        mXAxisRenderer.renderAxisLine(canvas);\n-        mAxisRendererLeft.renderAxisLine(canvas);\n-        mAxisRendererRight.renderAxisLine(canvas);\n-\n         if (mAutoScaleMinMaxEnabled) {\n             autoScale();\n         }\n \n+        mXAxisRenderer.renderAxisLine(canvas);\n+        mAxisRendererLeft.renderAxisLine(canvas);\n+        mAxisRendererRight.renderAxisLine(canvas);\n+\n         mXAxisRenderer.renderGridLines(canvas);\n         mAxisRendererLeft.renderGridLines(canvas);\n         mAxisRendererRight.renderGridLines(canvas);",
    "output": "Moved auto scale before render of axis lines\n\nhttps://github.com/danielgindi/Charts/pull/2177"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java\n@@ -73,14 +73,14 @@ private int getDaysForMonth(int month, int year) {\n         // month is 0-based\n \n         if (month == 1) {\n-            int x400 = month % 400;\n-            if (x400 < 0)\n-            {\n-                x400 = -x400;\n-            }\n-            boolean is29 = (month % 4) == 0 && x400 != 100 && x400 != 200 && x400 != 300;\n+            boolean is29Feb = false;\n+\n+            if (year < 1582)\n+                is29Feb = (year < 1 ? year + 1 : year) % 4 == 0;\n+            else if (year > 1582)\n+                is29Feb = year % 4 == 0 && (year % 100 != 0 || year % 400 == 0);\n \n-            return is29 ? 29 : 28;\n+            return is29Feb ? 29 : 28;\n         }\n \n         if (month == 3 || month == 5 || month == 8 || month == 10)",
    "output": "Improved feb29 formula"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -652,7 +652,7 @@ protected void drawCircles(Canvas c) {\n                 Bitmap circleBitmap = imageCache.getBitmap(j);\n \n                 if (circleBitmap != null) {\n-                    c.drawBitmap(circleBitmap, mCirclesBuffer[0] - circleRadius, mCirclesBuffer[1] - circleRadius, mRenderPaint);\n+                    c.drawBitmap(circleBitmap, mCirclesBuffer[0] - circleRadius, mCirclesBuffer[1] - circleRadius, null);\n                 }\n             }\n         }",
    "output": "Fix circles inherit alpha (Fixes #2620)\n\nISSUE:\nWhen using multiple LineDataSets like the follows:\n\n    int solidColor = 0xFFFF00FF;\n    dataSet.setColor(solidColor);\n    dataSet.setCircleColor(solidColor);\n\n    int semiTransparentColor = 0x8A000000;\n    fadedSet.setColor(semiTransparentColor);\n\n    LineData data = new LineData(dataSet, fadedSet);\n\nthe circles in 'dataSet' will rendered with the alpha from\nfadedSet (0x8A).\n\nThe reason for this is that mRenderPaint is not reset properly\nbefore drawing the circles. The first time drawCircles is called\nthe imageCache.fill(...) method is used where the color is set by\nmRenderPaint.setColor(set.getCircleColor(i)), restoring the alpha\nto 0xFF. The second time homever, imageCache.fill(...) is not called\nwhich means that mRenderPaint will use it's old color/alpha,\nwhich in this case is from fadedSet.\n\nTEST INFO:\nTo trigger the issue, add the following to LineChartActivity1:\n\n    final ArrayList<Entry> fadedEntries = new ArrayList<>();\n    for (int i = 0; i < count; i++) {\n\n        float val = (float) (Math.random() * range) + 3;\n        fadedEntries.add(new Entry(i, val));\n    }\n    final LineDataSet fadedDateSet = new LineDataSet(fadedEntries, \"Faded\");\n    fadedDateSet.setColor(0x42000000);\n\n    dataSets.add(fadedDateSet); // add the datasets\n\nand launch the first item in the example app.\n\nSOLUTION:\nThis commit replaces mRenderPaint with null when drawing the circle\nbitmap. If circleColor has been defined with a semi-transparent\ncolor, it will be drawn that way in the cached bitmap, hence the the\nbitmap itself does not need to be drawn with an alpha."
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/ComponentBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/ComponentBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/ComponentBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/ComponentBase.java\n@@ -36,7 +36,7 @@ public abstract class ComponentBase {\n     /**\n      * the text size of the labels\n      */\n-    protected float mTextSize = 10f;\n+    protected float mTextSize = Utils.convertDpToPixel(10f);\n \n     /**\n      * the text color to use for the labels",
    "output": "Fix for default text size being set in PX instead of DP\n\nThe default text size in ComponentBase was defined as 10 pixels\ninstead of 10dp, which causes tiny text and does not reflect\nthe javadoc and the general behavior of setTextSize(...)"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/buffer/BarBuffer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/buffer/BarBuffer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/buffer/BarBuffer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/buffer/BarBuffer.java\n@@ -90,7 +90,11 @@ public void feed(IBarDataSet data) {\n \n                     float value = vals[k];\n \n-                    if (value >= 0f) {\n+                    if (value == 0.0f && (posY == 0.0f || negY == 0.0f)) {\n+                        // Take care of the situation of a 0.0 value, which overlaps a non-zero bar\n+                        y = value;\n+                        yStart = y;\n+                    } else if (value >= 0.0f) {\n                         y = posY;\n                         yStart = posY + value;\n                         posY = yStart;\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -292,7 +292,10 @@ public void drawValues(Canvas c) {\n                                 float value = vals[idx];\n                                 float y;\n \n-                                if (value >= 0f) {\n+                                if (value == 0.0f && (posY == 0.0f || negY == 0.0f)) {\n+                                    // Take care of the situation of a 0.0 value, which overlaps a non-zero bar\n+                                    y = value;\n+                                } else if (value >= 0.0f) {\n                                     posY += value;\n                                     y = posY;\n                                 } else {\n@@ -307,8 +310,12 @@ public void drawValues(Canvas c) {\n \n                             for (int k = 0; k < transformed.length; k += 2) {\n \n+                                final float val = vals[k / 2];\n+                                final boolean drawBelow =\n+                                        (val == 0.0f && negY == 0.0f && posY > 0.0f) ||\n+                                                val < 0.0f;\n                                 float y = transformed[k + 1]\n-                                        + (vals[k / 2] >= 0 ? posOffset : negOffset);\n+                                        + (drawBelow ? negOffset : posOffset);\n \n                                 if (!mViewPortHandler.isInBoundsRight(x))\n                                     break;\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n@@ -264,7 +264,10 @@ public void drawValues(Canvas c) {\n                                 float value = vals[idx];\n                                 float y;\n \n-                                if (value >= 0f) {\n+                                if (value == 0.0f && (posY == 0.0f || negY == 0.0f)) {\n+                                    // Take care of the situation of a 0.0 value, which overlaps a non-zero bar\n+                                    y = value;\n+                                } else if (value >= 0.0f) {\n                                     posY += value;\n                                     y = posY;\n                                 } else {\n@@ -279,7 +282,7 @@ public void drawValues(Canvas c) {\n \n                             for (int k = 0; k < transformed.length; k += 2) {\n \n-                                float val = vals[k / 2];\n+                                final float val = vals[k / 2];\n                                 String formattedValue = formatter.getFormattedValue(val, e, i, mViewPortHandler);\n \n                                 // calculate the correct offset depending on the draw position of the value\n@@ -292,8 +295,12 @@ public void drawValues(Canvas c) {\n                                     negOffset = -negOffset - valueTextWidth;\n                                 }\n \n+                                final boolean drawBelow =\n+                                        (val == 0.0f && negY == 0.0f && posY > 0.0f) ||\n+                                                val < 0.0f;\n+\n                                 float x = transformed[k]\n-                                        + (val >= 0 ? posOffset : negOffset);\n+                                        + (drawBelow ? negOffset : posOffset);\n                                 float y = (buffer.buffer[bufferIndex + 1] + buffer.buffer[bufferIndex + 3]) / 2f;\n \n                                 if (!mViewPortHandler.isInBoundsTop(y))",
    "output": "Correctly position 0 in stacked bar"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -571,17 +571,17 @@ public void computeScroll() {\n      * VIEWPORT\n      */\n \n-    protected Matrix mZoomInMatrixBuffer = new Matrix();\n+    protected Matrix mZoomMatrixBuffer = new Matrix();\n \n     /**\n-     * Zooms in by 1.4f, into the charts center. center.\n+     * Zooms in by 1.4f, into the charts center.\n      */\n     public void zoomIn() {\n \n         MPPointF center = mViewPortHandler.getContentCenter();\n \n-        mViewPortHandler.zoomIn(center.x, -center.y, mZoomInMatrixBuffer);\n-        mViewPortHandler.refresh(mZoomInMatrixBuffer, this, false);\n+        mViewPortHandler.zoomIn(center.x, -center.y, mZoomMatrixBuffer);\n+        mViewPortHandler.refresh(mZoomMatrixBuffer, this, false);\n \n         MPPointF.recycleInstance(center);\n \n@@ -592,17 +592,15 @@ public void zoomIn() {\n         postInvalidate();\n     }\n \n-    protected Matrix mZoomOutMatrixBuffer = new Matrix();\n-\n     /**\n-     * Zooms out by 0.7f, from the charts center. center.\n+     * Zooms out by 0.7f, from the charts center.\n      */\n     public void zoomOut() {\n \n         MPPointF center = mViewPortHandler.getContentCenter();\n \n-        mViewPortHandler.zoomOut(center.x, -center.y, mZoomOutMatrixBuffer);\n-        mViewPortHandler.refresh(mZoomOutMatrixBuffer, this, false);\n+        mViewPortHandler.zoomOut(center.x, -center.y, mZoomMatrixBuffer);\n+        mViewPortHandler.refresh(mZoomMatrixBuffer, this, false);\n \n         MPPointF.recycleInstance(center);\n \n@@ -613,7 +611,20 @@ public void zoomOut() {\n         postInvalidate();\n     }\n \n-    protected Matrix mZoomMatrixBuffer = new Matrix();\n+    /**\n+     * Zooms out to original size.\n+     */\n+    public void resetZoom() {\n+\n+        mViewPortHandler.resetZoom(mZoomMatrixBuffer);\n+        mViewPortHandler.refresh(mZoomMatrixBuffer, this, false);\n+\n+        // Range might have changed, which means that Y-axis labels\n+        // could have changed in size, affecting Y-axis size.\n+        // So we need to recalculate offsets.\n+        calculateOffsets();\n+        postInvalidate();\n+    }\n \n     /**\n      * Zooms in or out by the given scale factor. x and y are the coordinates\n@@ -625,9 +636,9 @@ public void zoomOut() {\n      * @param y\n      */\n     public void zoom(float scaleX, float scaleY, float x, float y) {\n-        Matrix save = mZoomMatrixBuffer;\n-        mViewPortHandler.zoom(scaleX, scaleY, x, -y, save);\n-        mViewPortHandler.refresh(save, this, false);\n+\n+        mViewPortHandler.zoom(scaleX, scaleY, x, -y, mZoomMatrixBuffer);\n+        mViewPortHandler.refresh(mZoomMatrixBuffer, this, false);\n \n         // Range might have changed, which means that Y-axis labels\n         // could have changed in size, affecting Y-axis size.\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ViewPortHandler.java b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ViewPortHandler.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ViewPortHandler.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ViewPortHandler.java\n@@ -223,6 +223,16 @@ public void zoomOut(float x, float y, Matrix outputMatrix) {\n         outputMatrix.postScale(0.7f, 0.7f, x, y);\n     }\n \n+    /**\n+     * Zooms out to original size.\n+     * @param outputMatrix\n+     */\n+    public void resetZoom(Matrix outputMatrix) {\n+        outputMatrix.reset();\n+        outputMatrix.set(mMatrixTouch);\n+        outputMatrix.postScale(1.0f, 1.0f, 0.0f, 0.0f);\n+    }\n+\n     /**\n      * Post-scales by the specified scale factors.\n      *",
    "output": "resetZoom()"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java\n@@ -18,6 +18,11 @@\n  */\n public class YAxis extends AxisBase {\n \n+    /**\n+     * indicates if the bottom y-label entry is drawn or not\n+     */\n+    private boolean mDrawBottomYLabelEntry = true;\n+\n     /**\n      * indicates if the top y-label entry is drawn or not\n      */\n@@ -168,6 +173,15 @@ public boolean isDrawTopYLabelEntryEnabled() {\n         return mDrawTopYLabelEntry;\n     }\n \n+    /**\n+     * returns true if drawing the bottom y-axis label entry is enabled\n+     *\n+     * @return\n+     */\n+    public boolean isDrawBottomYLabelEntryEnabled() {\n+        return mDrawBottomYLabelEntry;\n+    }\n+\n     /**\n      * set this to true to enable drawing the top y-label entry. Disabling this can be helpful\n      * when the top y-label and\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -114,14 +114,16 @@ public void renderAxisLine(Canvas c) {\n      */\n     protected void drawYLabels(Canvas c, float fixedPosition, float[] positions, float offset) {\n \n+        final int from = mYAxis.isDrawBottomYLabelEntryEnabled() ? 0 : 1;\n+        final int to = mYAxis.isDrawTopYLabelEntryEnabled()\n+                ? mYAxis.mEntryCount\n+                : (mYAxis.mEntryCount - 1);\n+\n         // draw\n-        for (int i = 0; i < mYAxis.mEntryCount; i++) {\n+        for (int i = from; i < to; i++) {\n \n             String text = mYAxis.getFormattedLabel(i);\n \n-            if (!mYAxis.isDrawTopYLabelEntryEnabled() && i >= mYAxis.mEntryCount - 1)\n-                return;\n-\n             c.drawText(text, fixedPosition, positions[i * 2 + 1] + offset, mAxisLabelPaint);\n         }\n     }\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n@@ -137,12 +137,14 @@ protected void drawYLabels(Canvas c, float fixedPosition, float[] positions, flo\n         mAxisLabelPaint.setTextSize(mYAxis.getTextSize());\n         mAxisLabelPaint.setColor(mYAxis.getTextColor());\n \n-        for (int i = 0; i < mYAxis.mEntryCount; i++) {\n+        final int from = mYAxis.isDrawBottomYLabelEntryEnabled() ? 0 : 1;\n+        final int to = mYAxis.isDrawTopYLabelEntryEnabled()\n+                ? mYAxis.mEntryCount\n+                : (mYAxis.mEntryCount - 1);\n \n-            String text = mYAxis.getFormattedLabel(i);\n+        for (int i = from; i < to; i++) {\n \n-            if (!mYAxis.isDrawTopYLabelEntryEnabled() && i >= mYAxis.mEntryCount - 1)\n-                return;\n+            String text = mYAxis.getFormattedLabel(i);\n \n             c.drawText(text, positions[i * 2], fixedPosition - offset, mAxisLabelPaint);\n         }\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n@@ -156,12 +156,12 @@ public void renderAxisLabels(Canvas c) {\n         MPPointF pOut = MPPointF.getInstance(0,0);\n         float factor = mChart.getFactor();\n \n-        int labelCount = mYAxis.mEntryCount;\n+        final int from = mYAxis.isDrawBottomYLabelEntryEnabled() ? 0 : 1;\n+        final int to = mYAxis.isDrawTopYLabelEntryEnabled()\n+                ? mYAxis.mEntryCount\n+                : (mYAxis.mEntryCount - 1);\n \n-        for (int j = 0; j < labelCount; j++) {\n-\n-            if (j == labelCount - 1 && mYAxis.isDrawTopYLabelEntryEnabled() == false)\n-                break;\n+        for (int j = from; j < to; j++) {\n \n             float r = (mYAxis.mEntries[j] - mYAxis.mAxisMinimum) * factor;\n ",
    "output": "drawBottomYLabelEntryEnabled"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -269,7 +269,7 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n                     float arcStartPointX = center.x + radius * (float) Math.cos(startAngleOuter * Utils.FDEG2RAD);\n                     float arcStartPointY = center.y + radius * (float) Math.sin(startAngleOuter * Utils.FDEG2RAD);\n \n-                    if (sweepAngleOuter % 360f <= Utils.FLOAT_EPSILON) {\n+                    if (sweepAngleOuter >= 360.f && sweepAngleOuter % 360f <= Utils.FLOAT_EPSILON) {\n                         // Android is doing \"mod 360\"\n                         mPathBuffer.addCircle(center.x, center.y, radius, Path.Direction.CW);\n                     } else {\n@@ -318,7 +318,7 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n                         }\n                         final float endAngleInner = startAngleInner + sweepAngleInner;\n \n-                        if (sweepAngleOuter % 360f == 0.f) {\n+                        if (sweepAngleOuter >= 360.f && sweepAngleOuter % 360f <= Utils.FLOAT_EPSILON) {\n                             // Android is doing \"mod 360\"\n                             mPathBuffer.addCircle(center.x, center.y, innerRadius, Path.Direction.CCW);\n                         } else {\n@@ -335,7 +335,7 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n                         }\n                     } else {\n \n-                        if (sweepAngleOuter % 360f != 0.f) {\n+                        if (sweepAngleOuter % 360f > Utils.FLOAT_EPSILON) {\n                             if (accountForSliceSpacing) {\n \n                                 float angleMiddle = startAngleOuter + sweepAngleOuter / 2.f;\n@@ -818,7 +818,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n             mPathBuffer.reset();\n \n-            if (sweepAngleOuter % 360f == 0.f) {\n+            if (sweepAngleOuter >= 360.f && sweepAngleOuter % 360f <= Utils.FLOAT_EPSILON) {\n                 // Android is doing \"mod 360\"\n                 mPathBuffer.addCircle(center.x, center.y, highlightedRadius, Path.Direction.CW);\n             } else {\n@@ -875,7 +875,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n                 }\n                 final float endAngleInner = startAngleInner + sweepAngleInner;\n \n-                if (sweepAngleOuter % 360f == 0.f) {\n+                if (sweepAngleOuter >= 360.f && sweepAngleOuter % 360f <= Utils.FLOAT_EPSILON) {\n                     // Android is doing \"mod 360\"\n                     mPathBuffer.addCircle(center.x, center.y, innerRadius, Path.Direction.CCW);\n                 } else {\n@@ -892,7 +892,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n                 }\n             } else {\n \n-                if (sweepAngleOuter % 360f != 0.f) {\n+                if (sweepAngleOuter % 360f > Utils.FLOAT_EPSILON) {\n \n                     if (accountForSliceSpacing) {\n                         final float angleMiddle = startAngleOuter + sweepAngleOuter / 2.f;",
    "output": "Fixed a bug where the mod-360 bypass draws a full-circle for 0 slices."
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java\n@@ -40,10 +40,10 @@ public abstract class Utils {\n     public final static float FDEG2RAD = ((float) Math.PI / 180.f);\n \n     @SuppressWarnings(\"unused\")\n-    public final static double DOUBLE_EPSILON = Double.longBitsToDouble(Double.doubleToLongBits(1.0) + 1);\n+    public final static double DOUBLE_EPSILON = Double.longBitsToDouble(1);\n \n     @SuppressWarnings(\"unused\")\n-    public final static float FLOAT_EPSILON = Float.intBitsToFloat(Float.floatToIntBits(1f) + 1);\n+    public final static float FLOAT_EPSILON = Float.intBitsToFloat(1);\n \n     /**\n      * initialize method, called inside the Chart.init() method.",
    "output": "Fixed EPSILON. (Closes #2432)\n\nCloses #2424\nCloses #2394\nCloses #2393\nCloses #2385"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java\n@@ -11,7 +11,7 @@ public class DayAxisValueFormatter implements IAxisValueFormatter\n {\n \n     protected String[] mMonths = new String[]{\n-            \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dec\"\n+            \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n     };\n \n     private BarLineChartBase<?> chart;",
    "output": "Fix: typo for October"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -397,18 +397,12 @@ protected void calculateLegendOffsets(RectF offsets) {\n                                     offsets.top += Math.min(mLegend.mNeededHeight,\n                                             mViewPortHandler.getChartHeight() * mLegend.getMaxSizePercent())\n                                             + mLegend.getYOffset();\n-\n-                                    if (getXAxis().isEnabled() && getXAxis().isDrawLabelsEnabled())\n-                                        offsets.top += getXAxis().mLabelRotatedHeight;\n                                     break;\n \n                                 case BOTTOM:\n                                     offsets.bottom += Math.min(mLegend.mNeededHeight,\n                                             mViewPortHandler.getChartHeight() * mLegend.getMaxSizePercent())\n                                             + mLegend.getYOffset();\n-\n-                                    if (getXAxis().isEnabled() && getXAxis().isDrawLabelsEnabled())\n-                                        offsets.bottom += getXAxis().mLabelRotatedHeight;\n                                     break;\n \n                                 default:",
    "output": "Fixed double calculation of xAxis spacing"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarEntry.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarEntry.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarEntry.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarEntry.java\n@@ -42,8 +42,8 @@ public BarEntry(float x, float[] vals) {\n         super(x, calcSum(vals));\n \n         this.mYVals = vals;\n-        calcRanges();\n         calcPosNegSum();\n+        calcRanges();\n     }\n \n     /**\n@@ -67,8 +67,8 @@ public BarEntry(float x, float[] vals, String label) {\n         super(x, calcSum(vals), label);\n \n         this.mYVals = vals;\n-        calcRanges();\n         calcPosNegSum();\n+        calcRanges();\n     }\n \n     /**\n@@ -242,8 +242,8 @@ protected void calcRanges() {\n             float value = values[i];\n \n             if (value < 0) {\n-                mRanges[i] = new Range(negRemain, negRemain + value);\n-                negRemain += Math.abs(value);\n+                mRanges[i] = new Range(negRemain, negRemain - value);\n+                negRemain -= value;\n             } else {\n                 mRanges[i] = new Range(posRemain, posRemain + value);\n                 posRemain += value;",
    "output": "Fixed weird glitch in mixed (pos/neg) stacked bars highlight\n\nhttps://github.com/danielgindi/Charts/pull/1744\nhttps://github.com/danielgindi/Charts/issues/1726"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -1153,15 +1153,25 @@ public void setDrawGridBackground(boolean enabled) {\n     }\n \n     /**\n-     * Sets drawing the borders rectangle to true. If this is enabled, there is\n-     * no point drawing the axis-lines of x- and y-axis.\n+     * When enabled, the borders rectangle will be rendered.\n+     * If this is enabled, there is no point drawing the axis-lines of x- and y-axis.\n      *\n      * @param enabled\n      */\n     public void setDrawBorders(boolean enabled) {\n         mDrawBorders = enabled;\n     }\n \n+    /**\n+     * When enabled, the borders rectangle will be rendered.\n+     * If this is enabled, there is no point drawing the axis-lines of x- and y-axis.\n+     *\n+     * @return\n+     */\n+    public boolean isDrawBordersEnabled() {\n+        return mDrawBorders;\n+    }\n+\n     /**\n      * When enabled, the values will be clipped to contentRect,\n      *   otherwise they can bleed outside the content rect.",
    "output": "Added missing isDrawBordersEnabled getter"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -97,6 +97,8 @@ public abstract class BarLineChartBase<T extends BarLineScatterCandleBubbleData<\n \n     protected boolean mDrawBorders = false;\n \n+    protected boolean mClipValuesToContent = false;\n+\n     /**\n      * Sets the minimum offset (padding) around the chart, defaults to 15\n      */\n@@ -248,7 +250,16 @@ protected void onDraw(Canvas canvas) {\n         mAxisRendererLeft.renderAxisLabels(canvas);\n         mAxisRendererRight.renderAxisLabels(canvas);\n \n-        mRenderer.drawValues(canvas);\n+        if (isClipValuesToContentEnabled()) {\n+            clipRestoreCount = canvas.save();\n+            canvas.clipRect(mViewPortHandler.getContentRect());\n+\n+            mRenderer.drawValues(canvas);\n+\n+            canvas.restoreToCount(clipRestoreCount);\n+        } else {\n+            mRenderer.drawValues(canvas);\n+        }\n \n         mLegendRenderer.renderLegend(canvas);\n \n@@ -1151,6 +1162,26 @@ public void setDrawBorders(boolean enabled) {\n         mDrawBorders = enabled;\n     }\n \n+    /**\n+     * When enabled, the values will be clipped to contentRect,\n+     *   otherwise they can bleed outside the content rect.\n+     *\n+     * @param enabled\n+     */\n+    public void setClipValuesToContent(boolean enabled) {\n+        mClipValuesToContent = enabled;\n+    }\n+\n+    /**\n+     * When enabled, the values will be clipped to contentRect,\n+     *   otherwise they can bleed outside the content rect.\n+     *\n+     * @return\n+     */\n+    public boolean isClipValuesToContentEnabled() {\n+        return mClipValuesToContent;\n+    }\n+\n     /**\n      * Sets the width of the border lines in dp.\n      *",
    "output": "Added `clipValuesToContent` property for clipping values"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java\n@@ -93,7 +93,7 @@ public void setAutomaticallyDisableSliceSpacing(boolean autoDisable) {\n      * @return\n      */\n     @Override\n-    public boolean isAutomaticallyDisableSliceSpacing() {\n+    public boolean isAutomaticallyDisableSliceSpacingEnabled() {\n         return mAutomaticallyDisableSliceSpacing;\n     }\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java\n@@ -23,7 +23,7 @@ public interface IPieDataSet extends IDataSet<PieEntry> {\n      *\n      * @return\n      */\n-    boolean isAutomaticallyDisableSliceSpacing();\n+    boolean isAutomaticallyDisableSliceSpacingEnabled();\n \n     /**\n      * Returns the distance a highlighted piechart slice is \"shifted\" away from\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -199,7 +199,7 @@ protected float calculateMinimumRadiusForSpacedSlice(\n      */\n     protected float getSliceSpace(IPieDataSet dataSet) {\n \n-        if (!dataSet.isAutomaticallyDisableSliceSpacing())\n+        if (!dataSet.isAutomaticallyDisableSliceSpacingEnabled())\n             return dataSet.getSliceSpace();\n \n         float spaceSizeRatio = dataSet.getSliceSpace() / mViewPortHandler.getSmallestContentExtension();",
    "output": "Renamed new property getter"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java\n@@ -270,7 +270,7 @@ public void renderGridLines(Canvas c) {\n \n     public RectF getGridClippingRect() {\n         mGridClippingRect.set(mViewPortHandler.getContentRect());\n-        mGridClippingRect.inset(-mAxis.getGridLineWidth() / 2.f, 0.f);\n+        mGridClippingRect.inset(-mAxis.getGridLineWidth(), 0.f);\n         return mGridClippingRect;\n     }\n \n@@ -322,7 +322,7 @@ public void renderLimitLines(Canvas c) {\n \n             int clipRestoreCount = c.save();\n             mLimitLineClippingRect.set(mViewPortHandler.getContentRect());\n-            mLimitLineClippingRect.inset(-l.getLineWidth() / 2.f, 0.f);\n+            mLimitLineClippingRect.inset(-l.getLineWidth(), 0.f);\n             c.clipRect(mLimitLineClippingRect);\n \n             position[0] = l.getLimit();\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java\n@@ -165,7 +165,7 @@ protected void drawLabels(Canvas c, float pos, MPPointF anchor) {\n     @Override\n     public RectF getGridClippingRect() {\n         mGridClippingRect.set(mViewPortHandler.getContentRect());\n-        mGridClippingRect.inset(0.f, -mAxis.getGridLineWidth() / 2.f);\n+        mGridClippingRect.inset(0.f, -mAxis.getGridLineWidth());\n         return mGridClippingRect;\n     }\n \n@@ -238,7 +238,7 @@ public void renderLimitLines(Canvas c) {\n \n             int clipRestoreCount = c.save();\n             mLimitLineClippingRect.set(mViewPortHandler.getContentRect());\n-            mLimitLineClippingRect.inset(0.f, -l.getLineWidth() / 2.f);\n+            mLimitLineClippingRect.inset(0.f, -l.getLineWidth());\n             c.clipRect(mLimitLineClippingRect);\n \n \t\t\tmLimitLinePaint.setStyle(Paint.Style.STROKE);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -167,7 +167,7 @@ public void renderGridLines(Canvas c) {\n \n     public RectF getGridClippingRect() {\n         mGridClippingRect.set(mViewPortHandler.getContentRect());\n-        mGridClippingRect.inset(0.f, -mAxis.getGridLineWidth() / 2.f);\n+        mGridClippingRect.inset(0.f, -mAxis.getGridLineWidth());\n         return mGridClippingRect;\n     }\n \n@@ -220,7 +220,7 @@ protected void drawZeroLine(Canvas c) {\n \n         int clipRestoreCount = c.save();\n         mZeroLineClippingRect.set(mViewPortHandler.getContentRect());\n-        mZeroLineClippingRect.inset(0.f, -mYAxis.getZeroLineWidth() / 2.f);\n+        mZeroLineClippingRect.inset(0.f, -mYAxis.getZeroLineWidth());\n         c.clipRect(mZeroLineClippingRect);\n \n         // draw zero line\n@@ -232,8 +232,8 @@ protected void drawZeroLine(Canvas c) {\n         Path zeroLinePath = mDrawZeroLinePath;\n         zeroLinePath.reset();\n \n-        zeroLinePath.moveTo(mViewPortHandler.contentLeft(), (float) pos.y - 1);\n-        zeroLinePath.lineTo(mViewPortHandler.contentRight(), (float) pos.y - 1);\n+        zeroLinePath.moveTo(mViewPortHandler.contentLeft(), (float) pos.y);\n+        zeroLinePath.lineTo(mViewPortHandler.contentRight(), (float) pos.y);\n \n         // draw a path because lines don't support dashing on lower android versions\n         c.drawPath(zeroLinePath, mZeroLinePaint);\n@@ -272,7 +272,7 @@ public void renderLimitLines(Canvas c) {\n \n             int clipRestoreCount = c.save();\n             mLimitLineClippingRect.set(mViewPortHandler.getContentRect());\n-            mLimitLineClippingRect.inset(0.f, -l.getLineWidth() / 2.f);\n+            mLimitLineClippingRect.inset(0.f, -l.getLineWidth());\n             c.clipRect(mLimitLineClippingRect);\n \n             mLimitLinePaint.setStyle(Paint.Style.STROKE);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n@@ -168,7 +168,7 @@ protected float[] getTransformedPositions() {\n     @Override\n     public RectF getGridClippingRect() {\n         mGridClippingRect.set(mViewPortHandler.getContentRect());\n-        mGridClippingRect.inset(-mAxis.getGridLineWidth() / 2.f, 0.f);\n+        mGridClippingRect.inset(-mAxis.getGridLineWidth(), 0.f);\n         return mGridClippingRect;\n     }\n \n@@ -188,7 +188,7 @@ protected void drawZeroLine(Canvas c) {\n \n         int clipRestoreCount = c.save();\n         mZeroLineClippingRect.set(mViewPortHandler.getContentRect());\n-        mZeroLineClippingRect.inset(-mYAxis.getZeroLineWidth() / 2.f, 0.f);\n+        mZeroLineClippingRect.inset(-mYAxis.getZeroLineWidth(), 0.f);\n         c.clipRect(mLimitLineClippingRect);\n \n         // draw zero line\n@@ -242,7 +242,7 @@ public void renderLimitLines(Canvas c) {\n \n             int clipRestoreCount = c.save();\n             mLimitLineClippingRect.set(mViewPortHandler.getContentRect());\n-            mLimitLineClippingRect.inset(-l.getLineWidth() / 2.f, 0.f);\n+            mLimitLineClippingRect.inset(-l.getLineWidth(), 0.f);\n             c.clipRect(mLimitLineClippingRect);\n \n             pts[0] = l.getLimit();",
    "output": "Fixed glitch in clipping rects.\n\nIt's the Android's renderer's bug.\nWhen specifying exact clipping rects,\n  they are clipping more than they should!\nSo drawing a thin 1px line on the edge of a clipping rect fail.\nInstead of insetting by half the line width, inset by full line width."
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -221,7 +221,7 @@ protected void drawZeroLine(Canvas c) {\n         int clipRestoreCount = c.save();\n         mZeroLineClippingRect.set(mViewPortHandler.getContentRect());\n         mZeroLineClippingRect.inset(0.f, -mYAxis.getZeroLineWidth() / 2.f);\n-        c.clipRect(mLimitLineClippingRect);\n+        c.clipRect(mZeroLineClippingRect);\n \n         // draw zero line\n         MPPointD pos = mTrans.getPixelForValues(0f, 0f);",
    "output": "Bugfix: Corrected clipRect on the proper rect variable"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java\n@@ -11,6 +11,7 @@ public class PieDataSet extends DataSet<PieEntry> implements IPieDataSet {\n \n     /** the space in pixels between the chart-slices, default 0f */\n     private float mSliceSpace = 0f;\n+    private boolean mAutomaticallyDisableSliceSpacing;\n \n     /** indicates the selection distance of a pie slice */\n     private float mShift = 18f;\n@@ -75,6 +76,27 @@ public float getSliceSpace() {\n         return mSliceSpace;\n     }\n \n+    /**\n+     * When enabled, slice spacing will be 0.0 when the smallest value is going to be\n+     *   smaller than the slice spacing itself.\n+     *\n+     * @param autoDisable\n+     */\n+    public void setAutomaticallyDisableSliceSpacing(boolean autoDisable) {\n+        mAutomaticallyDisableSliceSpacing = autoDisable;\n+    }\n+\n+    /**\n+     * When enabled, slice spacing will be 0.0 when the smallest value is going to be\n+     *   smaller than the slice spacing itself.\n+     *\n+     * @return\n+     */\n+    @Override\n+    public boolean isAutomaticallyDisableSliceSpacing() {\n+        return mAutomaticallyDisableSliceSpacing;\n+    }\n+\n     /**\n      * sets the distance the highlighted piechart-slice of this DataSet is\n      * \"shifted\" away from the center of the chart, default 12f\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java\n@@ -17,6 +17,14 @@ public interface IPieDataSet extends IDataSet<PieEntry> {\n      */\n     float getSliceSpace();\n \n+    /**\n+     * When enabled, slice spacing will be 0.0 when the smallest value is going to be\n+     *   smaller than the slice spacing itself.\n+     *\n+     * @return\n+     */\n+    boolean isAutomaticallyDisableSliceSpacing();\n+\n     /**\n      * Returns the distance a highlighted piechart slice is \"shifted\" away from\n      * the chart-center in dp.\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -199,6 +199,9 @@ protected float calculateMinimumRadiusForSpacedSlice(\n      */\n     protected float getSliceSpace(IPieDataSet dataSet) {\n \n+        if (!dataSet.isAutomaticallyDisableSliceSpacing())\n+            return dataSet.getSliceSpace();\n+\n         float spaceSizeRatio = dataSet.getSliceSpace() / mViewPortHandler.getSmallestContentExtension();\n         float minValueRatio = dataSet.getYMin() / mChart.getData().getYValueSum() * 2;\n ",
    "output": "Make automatically disabling slice-spacing an opt-in feature"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java\n@@ -83,7 +83,7 @@ protected void onResume() {\n         super.onResume();\n \n         // Create a RealmConfiguration that saves the Realm file in the app's \"files\" directory.\n-        RealmConfiguration realmConfig = new RealmConfiguration.Builder(getApplicationContext()).build();\n+        RealmConfiguration realmConfig = new RealmConfiguration.Builder().build();\n         Realm.setDefaultConfiguration(realmConfig);\n \n         mRealm = Realm.getDefaultInstance();\n@@ -189,8 +189,8 @@ protected void writeToDBPie() {\n         float value4 = 15f + (float) (Math.random() * 8f);\n         float value5 = 100f - value1 - value2 - value3 - value4;\n \n-        float[] values = new float[] { value1, value2, value3, value4, value5 };\n-        String[] labels = new String[]{ \"iOS\", \"Android\", \"WP 10\", \"BlackBerry\", \"Other\"};\n+        float[] values = new float[]{value1, value2, value3, value4, value5};\n+        String[] labels = new String[]{\"iOS\", \"Android\", \"WP 10\", \"BlackBerry\", \"Other\"};\n \n         for (int i = 0; i < values.length; i++) {\n             RealmDemoData d = new RealmDemoData(values[i], labels[i]);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityPie.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityPie.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityPie.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityPie.java\n@@ -53,8 +53,7 @@ private void setData() {\n \n         RealmResults<RealmDemoData> result = mRealm.where(RealmDemoData.class).findAll();\n \n-        //RealmBarDataSet<RealmDemoData> set = new RealmBarDataSet<RealmDemoData>(result, \"stackValues\", \"xIndex\"); // normal entries\n-        RealmPieDataSet<RealmDemoData> set = new RealmPieDataSet<RealmDemoData>(result, \"yValue\", \"label\"); // stacked entries\n+        RealmPieDataSet<RealmDemoData> set = new RealmPieDataSet<RealmDemoData>(result, \"yValue\", \"label\");\n         set.setColors(ColorTemplate.VORDIPLOM_COLORS);\n         set.setLabel(\"Example market share\");\n         set.setSliceSpace(2);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmMainActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmMainActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmMainActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmMainActivity.java\n@@ -56,8 +56,10 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         lv.setOnItemClickListener(this);\n \n+        Realm.init(this);\n+\n         // Create a RealmConfiguration that saves the Realm file in the app's \"files\" directory.\n-        RealmConfiguration realmConfig = new RealmConfiguration.Builder(getApplicationContext()).build();\n+        RealmConfiguration realmConfig = new RealmConfiguration.Builder().build();\n         Realm.setDefaultConfiguration(realmConfig);\n \n         Realm realm = Realm.getDefaultInstance();",
    "output": "Migrate to Realm v2.0.2, fix example"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityLine.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityLine.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityLine.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityLine.java\n@@ -6,6 +6,7 @@\n import com.github.mikephil.charting.animation.Easing;\n import com.github.mikephil.charting.charts.LineChart;\n import com.github.mikephil.charting.data.LineData;\n+import com.github.mikephil.charting.data.LineDataSet;\n import com.github.mikephil.charting.data.realm.implementation.RealmLineDataSet;\n import com.github.mikephil.charting.interfaces.datasets.ILineDataSet;\n import com.github.mikephil.charting.utils.ColorTemplate;\n@@ -55,13 +56,13 @@ private void setData() {\n         RealmResults<RealmDemoData> result = mRealm.where(RealmDemoData.class).findAll();\n \n         RealmLineDataSet<RealmDemoData> set = new RealmLineDataSet<RealmDemoData>(result, \"xValue\", \"yValue\");\n-        set.setDrawCubic(false);\n+        set.setMode(LineDataSet.Mode.CUBIC_BEZIER);\n         set.setLabel(\"Realm LineDataSet\");\n         set.setDrawCircleHole(false);\n         set.setColor(ColorTemplate.rgb(\"#FF5722\"));\n         set.setCircleColor(ColorTemplate.rgb(\"#FF5722\"));\n         set.setLineWidth(1.8f);\n-        set.setCircleSize(3.6f);\n+        set.setCircleRadius(3.6f);\n \n         ArrayList<ILineDataSet> dataSets = new ArrayList<ILineDataSet>();\n         dataSets.add(set); // add the dataset\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmWikiExample.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmWikiExample.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmWikiExample.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmWikiExample.java\n@@ -9,6 +9,7 @@\n import com.github.mikephil.charting.components.AxisBase;\n import com.github.mikephil.charting.data.BarData;\n import com.github.mikephil.charting.data.LineData;\n+import com.github.mikephil.charting.data.LineDataSet;\n import com.github.mikephil.charting.data.realm.implementation.RealmBarDataSet;\n import com.github.mikephil.charting.data.realm.implementation.RealmLineDataSet;\n import com.github.mikephil.charting.formatter.IAxisValueFormatter;\n@@ -100,13 +101,13 @@ public int getDecimalDigits() {\n         barChart.getXAxis().setValueFormatter(formatter);\n \n         RealmLineDataSet<Score> lineDataSet = new RealmLineDataSet<Score>(results, \"scoreNr\", \"totalScore\");\n-        lineDataSet.setDrawCubic(false);\n+        lineDataSet.setMode(LineDataSet.Mode.CUBIC_BEZIER);\n         lineDataSet.setLabel(\"Result Scores\");\n         lineDataSet.setDrawCircleHole(false);\n         lineDataSet.setColor(ColorTemplate.rgb(\"#FF5722\"));\n         lineDataSet.setCircleColor(ColorTemplate.rgb(\"#FF5722\"));\n         lineDataSet.setLineWidth(1.8f);\n-        lineDataSet.setCircleSize(3.6f);\n+        lineDataSet.setCircleRadius(3.6f);\n \n         ArrayList<ILineDataSet> dataSets = new ArrayList<ILineDataSet>();\n         dataSets.add(lineDataSet);",
    "output": "Move to Realm v2.0.2, update example"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java\n@@ -92,8 +92,15 @@ public Highlight getHighlightByTouchPoint(float x, float y) {\n         if (mData == null) {\n             Log.e(LOG_TAG, \"Can't select by touch. No data set.\");\n             return null;\n-        } else\n-            return getHighlighter().getHighlight(x, y);\n+        } else {\n+            Highlight h = getHighlighter().getHighlight(x, y);\n+            if (h == null || !isHighlightFullBarEnabled()) return h;\n+\n+            // For isHighlightFullBarEnabled, remove stackIndex\n+            return new Highlight(h.getX(), h.getY(),\n+                    h.getXPx(), h.getYPx(),\n+                    h.getDataSetIndex(), -1, h.getAxis());\n+        }\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java\n@@ -3,6 +3,7 @@\n \n import android.content.Context;\n import android.util.AttributeSet;\n+import android.util.Log;\n \n import com.github.mikephil.charting.data.BarData;\n import com.github.mikephil.charting.data.BubbleData;\n@@ -11,6 +12,7 @@\n import com.github.mikephil.charting.data.LineData;\n import com.github.mikephil.charting.data.ScatterData;\n import com.github.mikephil.charting.highlight.CombinedHighlighter;\n+import com.github.mikephil.charting.highlight.Highlight;\n import com.github.mikephil.charting.interfaces.dataprovider.CombinedDataProvider;\n import com.github.mikephil.charting.renderer.CombinedChartRenderer;\n \n@@ -92,6 +94,32 @@ public void setData(CombinedData data) {\n         mRenderer.initBuffers();\n     }\n \n+    /**\n+     * Returns the Highlight object (contains x-index and DataSet index) of the selected value at the given touch\n+     * point\n+     * inside the CombinedChart.\n+     *\n+     * @param x\n+     * @param y\n+     * @return\n+     */\n+    @Override\n+    public Highlight getHighlightByTouchPoint(float x, float y) {\n+\n+        if (mData == null) {\n+            Log.e(LOG_TAG, \"Can't select by touch. No data set.\");\n+            return null;\n+        } else {\n+            Highlight h = getHighlighter().getHighlight(x, y);\n+            if (h == null || !isHighlightFullBarEnabled()) return h;\n+\n+            // For isHighlightFullBarEnabled, remove stackIndex\n+            return new Highlight(h.getX(), h.getY(),\n+                    h.getXPx(), h.getYPx(),\n+                    h.getDataSetIndex(), -1, h.getAxis());\n+        }\n+    }\n+\n     @Override\n     public LineData getLineData() {\n         if (mData == null)\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlight.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlight.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlight.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlight.java\n@@ -78,7 +78,7 @@ public Highlight(float x, int dataSetIndex, int stackIndex) {\n      * @param y            the y-value of the highlighted value\n      * @param dataSetIndex the index of the DataSet the highlighted value belongs to\n      */\n-    protected Highlight(float x, float y, float xPx, float yPx, int dataSetIndex, YAxis.AxisDependency axis) {\n+    public Highlight(float x, float y, float xPx, float yPx, int dataSetIndex, YAxis.AxisDependency axis) {\n         this.mX = x;\n         this.mY = y;\n         this.mXPx = xPx;\n@@ -96,7 +96,7 @@ protected Highlight(float x, float y, float xPx, float yPx, int dataSetIndex, YA\n      * @param stackIndex   references which value of a stacked-bar entry has been\n      *                     selected\n      */\n-    protected Highlight(float x, float y, float xPx, float yPx, int dataSetIndex, int stackIndex, YAxis.AxisDependency axis) {\n+    public Highlight(float x, float y, float xPx, float yPx, int dataSetIndex, int stackIndex, YAxis.AxisDependency axis) {\n         this(x, y, xPx, yPx, dataSetIndex, axis);\n         this.mStackIndex = stackIndex;\n     }",
    "output": "Make highlightFullBarEnabled feature work again"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n@@ -14,7 +14,6 @@\n import com.github.mikephil.charting.charts.BarChart;\n import com.github.mikephil.charting.components.AxisBase;\n import com.github.mikephil.charting.components.Legend;\n-import com.github.mikephil.charting.components.Legend.LegendPosition;\n import com.github.mikephil.charting.components.XAxis;\n import com.github.mikephil.charting.components.YAxis;\n import com.github.mikephil.charting.data.BarData;\n@@ -46,6 +45,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         setContentView(R.layout.activity_barchart);\n \n         tvX = (TextView) findViewById(R.id.tvXMax);\n+        tvX.setTextSize(10);\n         tvY = (TextView) findViewById(R.id.tvYMax);\n \n         mSeekBarX = (SeekBar) findViewById(R.id.seekBar1);\n@@ -59,7 +59,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart.getDescription().setEnabled(false);\n \n //        mChart.setDrawBorders(true);\n-        \n+\n         // scaling can now only be done on x- and y-axis separately\n         mChart.setPinchZoom(false);\n \n@@ -83,14 +83,15 @@ protected void onCreate(Bundle savedInstanceState) {\n         l.setDrawInside(true);\n         l.setTypeface(mTfLight);\n         l.setYOffset(0f);\n+        l.setXOffset(10f);\n         l.setYEntrySpace(0f);\n         l.setTextSize(8f);\n \n-        XAxis xl = mChart.getXAxis();\n-        xl.setTypeface(mTfLight);\n-        xl.setGranularity(1f);\n-        xl.setCenterAxisLabels(true);\n-        xl.setValueFormatter(new IAxisValueFormatter() {\n+        XAxis xAxis = mChart.getXAxis();\n+        xAxis.setTypeface(mTfLight);\n+        xAxis.setGranularity(1f);\n+        xAxis.setCenterAxisLabels(true);\n+        xAxis.setValueFormatter(new IAxisValueFormatter() {\n             @Override\n             public String getFormattedValue(float value, AxisBase axis) {\n                 return String.valueOf((int) value);\n@@ -106,7 +107,7 @@ public int getDecimalDigits() {\n         leftAxis.setTypeface(mTfLight);\n         leftAxis.setValueFormatter(new LargeValueFormatter());\n         leftAxis.setDrawGridLines(false);\n-        leftAxis.setSpaceTop(30f);\n+        leftAxis.setSpaceTop(35f);\n         leftAxis.setAxisMinimum(0f); // this replaces setStartAtZero(true)\n \n         mChart.getAxisRight().setEnabled(false);\n@@ -145,13 +146,13 @@ public boolean onOptionsItemSelected(MenuItem item) {\n             }\n             case R.id.actionToggleBarBorders: {\n                 for (IBarDataSet set : mChart.getData().getDataSets())\n-                    ((BarDataSet)set).setBarBorderWidth(set.getBarBorderWidth() == 1.f ? 0.f : 1.f);\n+                    ((BarDataSet) set).setBarBorderWidth(set.getBarBorderWidth() == 1.f ? 0.f : 1.f);\n \n                 mChart.invalidate();\n                 break;\n             }\n             case R.id.actionToggleHighlight: {\n-                if(mChart.getData() != null) {\n+                if (mChart.getData() != null) {\n                     mChart.getData().setHighlightEnabled(!mChart.getData().isHighlightEnabled());\n                     mChart.invalidate();\n                 }\n@@ -171,7 +172,6 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 break;\n             }\n             case R.id.animateXY: {\n-\n                 mChart.animateXY(3000, 3000);\n                 break;\n             }\n@@ -182,92 +182,85 @@ public boolean onOptionsItemSelected(MenuItem item) {\n     @Override\n     public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n \n-        float groupSpace = 0.04f;\n-        float barSpace = 0.02f; // x3 dataset\n-        float barWidth = 0.3f; // x3 dataset\n-        // (0.3 + 0.02) * 3 + 0.04 = 1.00 -> interval per \"group\"\n+        float groupSpace = 0.08f;\n+        float barSpace = 0.03f; // x4 DataSet\n+        float barWidth = 0.2f; // x4 DataSet\n+        // (0.2 + 0.03) * 4 + 0.08 = 1.00 -> interval per \"group\"\n \n+        int groupCount = mSeekBarX.getProgress() + 1;\n         int startYear = 1980;\n-        int endYear = startYear + mSeekBarX.getProgress();\n+        int endYear = startYear + groupCount;\n \n-        tvX.setText(startYear + \"\\n-\" + endYear);\n+        tvX.setText(startYear + \"-\" + endYear);\n         tvY.setText(\"\" + (mSeekBarY.getProgress()));\n \n         ArrayList<BarEntry> yVals1 = new ArrayList<BarEntry>();\n         ArrayList<BarEntry> yVals2 = new ArrayList<BarEntry>();\n         ArrayList<BarEntry> yVals3 = new ArrayList<BarEntry>();\n+        ArrayList<BarEntry> yVals4 = new ArrayList<BarEntry>();\n \n-        float mult = mSeekBarY.getProgress() * 100000f;\n+        float randomMultiplier = mSeekBarY.getProgress() * 100000f;\n \n         for (int i = startYear; i < endYear; i++) {\n-            float val = (float) (Math.random() * mult) + 3;\n-            yVals1.add(new BarEntry(i, val));\n+            yVals1.add(new BarEntry(i, (float) (Math.random() * randomMultiplier)));\n+            yVals2.add(new BarEntry(i, (float) (Math.random() * randomMultiplier)));\n+            yVals3.add(new BarEntry(i, (float) (Math.random() * randomMultiplier)));\n+            yVals4.add(new BarEntry(i, (float) (Math.random() * randomMultiplier)));\n         }\n \n-        for (int i = startYear; i < endYear; i++) {\n-            float val = (float) (Math.random() * mult) + 3;\n-            yVals2.add(new BarEntry(i, val));\n-        }\n-\n-        for (int i = startYear; i < endYear; i++) {\n-            float val = (float) (Math.random() * mult) + 3;\n-            yVals3.add(new BarEntry(i, val));\n-        }\n+        BarDataSet set1, set2, set3, set4;\n \n-        BarDataSet set1, set2, set3;\n+        if (mChart.getData() != null && mChart.getData().getDataSetCount() > 0) {\n \n-        if (mChart.getData() != null &&\n-                mChart.getData().getDataSetCount() > 0) {\n-            set1 = (BarDataSet)mChart.getData().getDataSetByIndex(0);\n-            set2 = (BarDataSet)mChart.getData().getDataSetByIndex(1);\n-            set3 = (BarDataSet)mChart.getData().getDataSetByIndex(2);\n+            set1 = (BarDataSet) mChart.getData().getDataSetByIndex(0);\n+            set2 = (BarDataSet) mChart.getData().getDataSetByIndex(1);\n+            set3 = (BarDataSet) mChart.getData().getDataSetByIndex(2);\n+            set4 = (BarDataSet) mChart.getData().getDataSetByIndex(3);\n             set1.setValues(yVals1);\n             set2.setValues(yVals2);\n             set3.setValues(yVals3);\n+            set4.setValues(yVals4);\n             mChart.getData().notifyDataChanged();\n             mChart.notifyDataSetChanged();\n+\n         } else {\n-            // create 3 datasets with different types\n+            // create 4 DataSets\n             set1 = new BarDataSet(yVals1, \"Company A\");\n-            // set1.setColors(ColorTemplate.createColors(getApplicationContext(),\n-            // ColorTemplate.FRESH_COLORS));\n             set1.setColor(Color.rgb(104, 241, 175));\n             set2 = new BarDataSet(yVals2, \"Company B\");\n             set2.setColor(Color.rgb(164, 228, 251));\n             set3 = new BarDataSet(yVals3, \"Company C\");\n             set3.setColor(Color.rgb(242, 247, 158));\n+            set4 = new BarDataSet(yVals4, \"Company D\");\n+            set4.setColor(Color.rgb(255, 102, 0));\n \n-            ArrayList<IBarDataSet> dataSets = new ArrayList<IBarDataSet>();\n-            dataSets.add(set1);\n-            dataSets.add(set2);\n-            dataSets.add(set3);\n-\n-            BarData data = new BarData(dataSets);\n+            BarData data = new BarData(set1, set2, set3, set4);\n             data.setValueFormatter(new LargeValueFormatter());\n-\n-            // add space between the dataset groups in percent of bar-width\n             data.setValueTypeface(mTfLight);\n \n             mChart.setData(data);\n         }\n \n+        // specify the width each bar should have\n         mChart.getBarData().setBarWidth(barWidth);\n+\n+        // restrict the x-axis range\n         mChart.getXAxis().setAxisMinimum(startYear);\n-        mChart.getXAxis().setAxisMaximum(mChart.getBarData().getGroupWidth(groupSpace, barSpace) * mSeekBarX.getProgress() + startYear);\n+\n+        // barData.getGroupWith(...) is a helper that calculates the width each group needs based on the provided parameters\n+        mChart.getXAxis().setAxisMaximum(startYear + mChart.getBarData().getGroupWidth(groupSpace, barSpace) * groupCount);\n         mChart.groupBars(startYear, groupSpace, barSpace);\n         mChart.invalidate();\n     }\n \n     @Override\n     public void onStartTrackingTouch(SeekBar seekBar) {\n         // TODO Auto-generated method stub\n-\n     }\n \n     @Override\n     public void onStopTrackingTouch(SeekBar seekBar) {\n         // TODO Auto-generated method stub\n-\n     }\n \n     @Override",
    "output": "Clear up grouped bar example"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -229,7 +229,7 @@ public void onStopTrackingTouch(SeekBar seekBar) {\n \n     private void setData(int count, float range) {\n \n-        float start = 0f;\n+        float start = 1f;\n \n         ArrayList<BarEntry> yVals1 = new ArrayList<BarEntry>();\n \n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java\n@@ -107,19 +107,19 @@ private int determineMonth(int dayOfYear) {\n         return Math.max(month, 0);\n     }\n \n-    private int determineDayOfMonth(int dayOfYear, int month) {\n+    private int determineDayOfMonth(int days, int month) {\n \n         int count = 0;\n-        int days = 0;\n+        int daysForMonths = 0;\n \n         while (count < month) {\n \n-            int year = determineYear(days);\n-            days += getDaysForMonth(count % 12, year);\n+            int year = determineYear(daysForMonths);\n+            daysForMonths += getDaysForMonth(count % 12, year);\n             count++;\n         }\n \n-        return dayOfYear - days;\n+        return days - daysForMonths;\n     }\n \n     private int determineYear(int days) {",
    "output": "Fixed bar chart demo first value being empty"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java\n@@ -169,9 +169,10 @@ public float[] generateTransformedValuesBubble(IBubbleDataSet data, float phaseY\n      * @return\n      */\n     public float[] generateTransformedValuesLine(ILineDataSet data,\n-                                                 float phaseX, float phaseY, int from, int to) {\n+                                                 float phaseX, float phaseY,\n+                                                 int min, int max) {\n \n-        final int count = (int) ((to - from) * phaseX) * 2;\n+        final int count = ((int) ((max - min) * phaseX) + 1) * 2;\n \n         if (valuePointsForGenerateTransformedValuesLine.length != count) {\n             valuePointsForGenerateTransformedValuesLine = new float[count];\n@@ -180,7 +181,7 @@ public float[] generateTransformedValuesLine(ILineDataSet data,\n \n         for (int j = 0; j < count; j += 2) {\n \n-            Entry e = data.getEntryForIndex(j / 2 + from);\n+            Entry e = data.getEntryForIndex(j / 2 + min);\n \n             if (e != null) {\n                 valuePoints[j] = e.getX();",
    "output": "Fixed last label of line chart not rendering"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CandleStickChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CandleStickChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CandleStickChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CandleStickChart.java\n@@ -32,6 +32,9 @@ protected void init() {\n         super.init();\n \n         mRenderer = new CandleStickChartRenderer(this, mAnimator, mViewPortHandler);\n+\n+        getXAxis().setSpaceMin(0.5f);\n+        getXAxis().setSpaceMax(0.5f);\n     }\n \n     @Override",
    "output": "Default spaceMin/max for xAxis in candlestick charts"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarLineScatterCandleBubbleRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarLineScatterCandleBubbleRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarLineScatterCandleBubbleRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarLineScatterCandleBubbleRenderer.java\n@@ -88,8 +88,8 @@ public void set(BarLineScatterCandleBubbleDataProvider chart, IBarLineScatterCan\n             Entry entryFrom = dataSet.getEntryForXValue(low, Float.NaN, DataSet.Rounding.DOWN);\n             Entry entryTo = dataSet.getEntryForXValue(high, Float.NaN, DataSet.Rounding.UP);\n \n-            min = dataSet.getEntryIndex(entryFrom);\n-            max = dataSet.getEntryIndex(entryTo);\n+            min = entryFrom == null ? 0 : dataSet.getEntryIndex(entryFrom);\n+            max = entryTo == null ? 0 : dataSet.getEntryIndex(entryTo);\n             range = (int) ((max - min) * phaseX);\n         }\n     }\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java\n@@ -171,7 +171,7 @@ public float[] generateTransformedValuesBubble(IBubbleDataSet data, float phaseY\n     public float[] generateTransformedValuesLine(ILineDataSet data,\n                                                  float phaseX, float phaseY, int from, int to) {\n \n-        final int count = (int) ((to - from) * phaseX + 1) * 2;\n+        final int count = (int) ((to - from) * phaseX) * 2;\n \n         if (valuePointsForGenerateTransformedValuesLine.length != count) {\n             valuePointsForGenerateTransformedValuesLine = new float[count];",
    "output": "Avoid crash when dataset is empty"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -231,15 +231,12 @@ private void setData(int count, float range) {\n \n         float start = 0f;\n \n-        mChart.getXAxis().setAxisMinimum(start);\n-        mChart.getXAxis().setAxisMaximum(start + count + 2);\n-\n         ArrayList<BarEntry> yVals1 = new ArrayList<BarEntry>();\n \n         for (int i = (int) start; i < start + count + 1; i++) {\n             float mult = (range + 1);\n             float val = (float) (Math.random() * mult);\n-            yVals1.add(new BarEntry(i + 1f, val));\n+            yVals1.add(new BarEntry(i, val));\n         }\n \n         BarDataSet set1;\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java\n@@ -61,8 +61,6 @@ protected void onCreate(Bundle savedInstanceState) {\n         xAxis.setDrawAxisLine(false);\n         xAxis.setTextColor(Color.LTGRAY);\n         xAxis.setTextSize(13f);\n-        xAxis.setAxisMinimum(0f);\n-        xAxis.setAxisMaximum(5f);\n         xAxis.setLabelCount(5);\n         xAxis.setCenterAxisLabels(true);\n         xAxis.setGranularity(1f);\n@@ -81,11 +79,11 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         // THIS IS THE ORIGINAL DATA YOU WANT TO PLOT\n         final List<Data> data = new ArrayList<>();\n-        data.add(new Data(0.5f, -224.1f, \"12-29\"));\n-        data.add(new Data(1.5f, 238.5f, \"12-30\"));\n-        data.add(new Data(2.5f, 1280.1f, \"12-31\"));\n-        data.add(new Data(3.5f, -442.3f, \"01-01\"));\n-        data.add(new Data(4.5f, -2280.1f, \"01-02\"));\n+        data.add(new Data(0f, -224.1f, \"12-29\"));\n+        data.add(new Data(1f, 238.5f, \"12-30\"));\n+        data.add(new Data(2f, 1280.1f, \"12-31\"));\n+        data.add(new Data(3f, -442.3f, \"01-01\"));\n+        data.add(new Data(4f, -2280.1f, \"01-02\"));\n \n         xAxis.setValueFormatter(new IAxisValueFormatter() {\n             @Override\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java\n@@ -57,6 +57,9 @@ protected void init() {\n         mRenderer = new BarChartRenderer(this, mAnimator, mViewPortHandler);\n \n         setHighlighter(new BarHighlighter(this));\n+\n+        getXAxis().setSpaceMin(0.5f);\n+        getXAxis().setSpaceMax(0.5f);\n     }\n \n     @Override",
    "output": "Default spaceMin/spaceMax for bar charts\n\nThis avoids having to set custom axisMinimum/axisMaximum, or offsetting x"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n@@ -112,6 +112,16 @@ public abstract class AxisBase extends ComponentBase {\n      */\n     protected boolean mDrawLimitLineBehindData = false;\n \n+    /**\n+     * Extra spacing for `axisMinimum` to be added to automatically calculated `axisMinimum`\n+     */\n+    protected float mSpaceMin = 0.f;\n+\n+    /**\n+     * Extra spacing for `axisMaximum` to be added to automatically calculated `axisMaximum`\n+     */\n+    protected float mSpaceMax = 0.f;\n+\n     /**\n      * flag indicating that the axis-min value has been customized\n      */\n@@ -705,8 +715,8 @@ public void setAxisMaxValue(float max) {\n     public void calculate(float dataMin, float dataMax) {\n \n         // if custom, use value as is, else use data value\n-        float min = mCustomAxisMin ? mAxisMinimum : dataMin;\n-        float max = mCustomAxisMax ? mAxisMaximum : dataMax;\n+        float min = mCustomAxisMin ? mAxisMinimum : (dataMin - mSpaceMin);\n+        float max = mCustomAxisMax ? mAxisMaximum : (dataMax + mSpaceMax);\n \n         // temporary range (before calculations)\n         float range = Math.abs(max - min);\n@@ -723,4 +733,36 @@ public void calculate(float dataMin, float dataMax) {\n         // actual range\n         this.mAxisRange = Math.abs(max - min);\n     }\n+\n+    /**\n+     * Gets extra spacing for `axisMinimum` to be added to automatically calculated `axisMinimum`\n+     */\n+    public float getSpaceMin()\n+    {\n+        return mSpaceMin;\n+    }\n+\n+    /**\n+     * Sets extra spacing for `axisMinimum` to be added to automatically calculated `axisMinimum`\n+     */\n+    public void setSpaceMin(float mSpaceMin)\n+    {\n+        this.mSpaceMin = mSpaceMin;\n+    }\n+\n+    /**\n+     * Gets extra spacing for `axisMaximum` to be added to automatically calculated `axisMaximum`\n+     */\n+    public float getSpaceMax()\n+    {\n+        return mSpaceMax;\n+    }\n+\n+    /**\n+     * Sets extra spacing for `axisMaximum` to be added to automatically calculated `axisMaximum`\n+     */\n+    public void setSpaceMax(float mSpaceMax)\n+    {\n+        this.mSpaceMax = mSpaceMax;\n+    }\n }",
    "output": "Feature: spaceMin/spaceMax for axis"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/CandleDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/CandleDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/CandleDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/CandleDataSet.java\n@@ -112,6 +112,22 @@ protected void calcMinMax(CandleEntry e) {\n         calcMinMaxX(e);\n     }\n \n+    @Override\n+    protected void calcMinMaxY(CandleEntry e) {\n+\n+        if (e.getHigh() < mYMin)\n+            mYMin = e.getHigh();\n+\n+        if (e.getHigh() > mYMax)\n+            mYMax = e.getHigh();\n+\n+        if (e.getLow() < mYMin)\n+            mYMin = e.getLow();\n+\n+        if (e.getLow() > mYMax)\n+            mYMax = e.getLow();\n+    }\n+\n     /**\n      * Sets the space that is left out on the left and right side of each\n      * candle, default 0.1f (10%), max 0.45f, min 0f",
    "output": "Corrected calcMinMaxY for autoScaleMinMax"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n@@ -179,7 +179,7 @@ protected void computeAxisValues(float min, float max) {\n             interval = Math.floor(10 * intervalMagnitude);\n         }\n \n-        int n = centeringEnabled ? 1 : 0;\n+        int n = mAxis.isCenterAxisLabelsEnabled() ? 1 : 0;\n \n         // force label count\n         if (mAxis.isForceLabelsEnabled()) {",
    "output": "Merge pull request #2314 from mikedream89/master\n\n[FIX] not find centeringEnabled"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n@@ -179,7 +179,7 @@ protected void computeAxisValues(float min, float max) {\n             interval = Math.floor(10 * intervalMagnitude);\n         }\n \n-        int n = centeringEnabled ? 1 : 0;\n+        int n = mAxis.isCenterAxisLabelsEnabled() ? 1 : 0;\n \n         // force label count\n         if (mAxis.isForceLabelsEnabled()) {",
    "output": "[FIX] not find centeringEnabled"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -252,10 +252,10 @@ protected void onDraw(Canvas canvas) {\n \n         mLegendRenderer.renderLegend(canvas);\n \n-        drawMarkers(canvas);\n-\n         drawDescription(canvas);\n \n+        drawMarkers(canvas);\n+\n         if (mLogEnabled) {\n             long drawtime = (System.currentTimeMillis() - starttime);\n             totalTime += drawtime;",
    "output": "Set z-index of markers to be the highest"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n@@ -194,7 +194,7 @@ public void setCenterAxisLabels(boolean enabled) {\n     }\n \n     public boolean isCenterAxisLabelsEnabled() {\n-        return mCenterAxisLabels && mEntryCount > 1;\n+        return mCenterAxisLabels && mEntryCount > 0;\n     }\n \n     /**",
    "output": "Allow label centering for 1 label"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n@@ -179,13 +179,12 @@ protected void computeAxisValues(float min, float max) {\n             interval = Math.floor(10 * intervalMagnitude);\n         }\n \n-        boolean centeringEnabled = mAxis.isCenterAxisLabelsEnabled();\n         int n = centeringEnabled ? 1 : 0;\n \n         // force label count\n         if (mAxis.isForceLabelsEnabled()) {\n \n-            float step = (float) range / (float) (labelCount - 1);\n+            interval = (float) range / (float) (labelCount - 1);\n             mAxis.mEntryCount = labelCount;\n \n             if (mAxis.mEntries.length < labelCount) {\n@@ -197,7 +196,7 @@ protected void computeAxisValues(float min, float max) {\n \n             for (int i = 0; i < labelCount; i++) {\n                 mAxis.mEntries[i] = v;\n-                v += step;\n+                v += interval;\n             }\n \n             n = labelCount;\n@@ -206,7 +205,7 @@ protected void computeAxisValues(float min, float max) {\n         } else {\n \n             double first = interval == 0.0 ? 0.0 : Math.ceil(yMin / interval) * interval;\n-            if(centeringEnabled) {\n+            if(mAxis.isCenterAxisLabelsEnabled()) {\n                 first -= interval;\n             }\n \n@@ -244,15 +243,13 @@ protected void computeAxisValues(float min, float max) {\n             mAxis.mDecimals = 0;\n         }\n \n-        if (centeringEnabled) {\n+        if (mAxis.isCenterAxisLabelsEnabled()) {\n \n             if (mAxis.mCenteredEntries.length < n) {\n                 mAxis.mCenteredEntries = new float[n];\n             }\n \n-            float offset = 0.f;\n-            if (mAxis.mEntries.length > 1)\n-                offset = (mAxis.mEntries[1] - mAxis.mEntries[0]) / 2f;\n+            float offset = (float)interval / 2f;\n \n             for (int i = 0; i < n; i++) {\n                 mAxis.mCenteredEntries[i] = mAxis.mEntries[i] + offset;",
    "output": "Minor fixes for interval in axis labels"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java\n@@ -360,6 +360,11 @@ public static String formatNumber(float number, int digitCount, boolean separate\n      * @return\n      */\n     public static float roundToNextSignificant(double number) {\n+        if (Double.isInfinite(number) || \n+            Double.isNaN(number) || \n+            number == 0.0)\n+            return 0;\n+        \n         final float d = (float) Math.ceil((float) Math.log10(number < 0 ? -number : number));\n         final int pw = 1 - (int) d;\n         final float magnitude = (float) Math.pow(10, pw);\n@@ -377,6 +382,10 @@ public static float roundToNextSignificant(double number) {\n     public static int getDecimals(float number) {\n \n         float i = roundToNextSignificant(number);\n+        \n+        if (Float.isInfinite(i))\n+            return 0;\n+        \n         return (int) Math.ceil(-Math.log10(i)) + 2;\n     }\n ",
    "output": "Guard `roundToNextSignificant` and `decimal` from invalids"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -361,8 +361,6 @@ protected void drawLinear(Canvas c, ILineDataSet dataSet) {\n                 // make sure the lines don't do shitty things outside\n                 // bounds\n                 if (!mViewPortHandler.isInBoundsLeft(mLineBuffer[2])\n-                        || (!mViewPortHandler.isInBoundsTop(mLineBuffer[1]) && !mViewPortHandler\n-                        .isInBoundsBottom(mLineBuffer[3]))\n                         || (!mViewPortHandler.isInBoundsTop(mLineBuffer[1]) && !mViewPortHandler\n                         .isInBoundsBottom(mLineBuffer[3])))\n                     continue;",
    "output": "Removed redundant condition"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -199,22 +199,33 @@ protected void drawCubicBezier(ILineDataSet dataSet) {\n             float curDx = 0f;\n             float curDy = 0f;\n \n-            Entry prevPrev = dataSet.getEntryForIndex(mXBounds.min);\n-            Entry prev = prevPrev;\n-            Entry cur = prev;\n-            Entry next = dataSet.getEntryForIndex(mXBounds.min + 1);\n+            // Take an extra point from the left, and an extra from the right.\n+            // That's because we need 4 points for a cubic bezier (cubic=4), otherwise we get lines moving and doing weird stuff on the edges of the chart.\n+            // So in the starting `prev` and `cur`, go -2, -1\n+            // And in the `lastIndex`, add +1\n+\n+            final int firstIndex = mXBounds.min + 1;\n+            final int lastIndex = mXBounds.min + mXBounds.range;\n+\n+            Entry prevPrev;\n+            Entry prev = dataSet.getEntryForIndex(Math.max(firstIndex - 2, 0));\n+            Entry cur = dataSet.getEntryForIndex(Math.max(firstIndex - 1, 0));\n+            Entry next = cur;\n+            int nextIndex = -1;\n \n-            if (cur == null || next == null) return;\n+            if (cur == null) return;\n \n             // let the spline start\n             cubicPath.moveTo(cur.getX(), cur.getY() * phaseY);\n \n             for (int j = mXBounds.min + 1; j <= mXBounds.range + mXBounds.min; j++) {\n \n-                prevPrev = dataSet.getEntryForIndex(j == 1 ? 0 : j - 2);\n-                prev = dataSet.getEntryForIndex(j - 1);\n-                cur = dataSet.getEntryForIndex(j);\n-                next = mXBounds.max > j + 1 ? dataSet.getEntryForIndex(j + 1) : cur;\n+                prevPrev = prev;\n+                prev = cur;\n+                cur = nextIndex == j ? next : dataSet.getEntryForIndex(j);\n+\n+                nextIndex = j + 1 < dataSet.getEntryCount() ? j + 1 : j;\n+                next = dataSet.getEntryForIndex(nextIndex);\n \n                 prevDx = (cur.getX() - prevPrev.getX()) * intensity;\n                 prevDy = (cur.getY() - prevPrev.getY()) * intensity;",
    "output": "Fixes for cubic bezier edges"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n@@ -250,7 +250,9 @@ protected void computeAxisValues(float min, float max) {\n                 mAxis.mCenteredEntries = new float[n];\n             }\n \n-            float offset = (mAxis.mEntries[1] - mAxis.mEntries[0]) / 2f;\n+            float offset = 0.f;\n+            if (mAxis.mEntries.length > 1)\n+                offset = (mAxis.mEntries[1] - mAxis.mEntries[0]) / 2f;\n \n             for (int i = 0; i < n; i++) {\n                 mAxis.mCenteredEntries[i] = mAxis.mEntries[i] + offset;",
    "output": "Avoid crash for `centerAxisLabelsEnabled` when entry count == 1"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java\n@@ -298,13 +298,28 @@ public int getEntryIndex(float xValue, Rounding rounding) {\n         while (low < high) {\n             int m = (low + high) / 2;\n \n-            float d1 = Math.abs(mValues.get(m).getX() - xValue);\n-            float d2 = Math.abs(mValues.get(m + 1).getX() - xValue);\n+            final float d1 = mValues.get(m).getX() - xValue,\n+                    d2 = mValues.get(m + 1).getX() - xValue,\n+                    ad1 = Math.abs(d1), ad2 = Math.abs(d2);\n \n-            if (d2 <= d1) {\n+            if (ad2 < ad1) {\n+                // [m + 1] is closer to xValue\n+                // Search in an higher place\n                 low = m + 1;\n-            } else {\n+            } else if (ad1 < ad2) {\n+                // [m] is closer to xValue\n+                // Search in a lower place\n                 high = m;\n+            } else {\n+                // We have multiple sequential x-value with same distance\n+\n+                if (d1 >= 0.0) {\n+                    // Search in a lower place\n+                    high = m;\n+                } else if (d1 < 0.0) {\n+                    // Search in an higher place\n+                    low = m + 1;\n+                }\n             }\n         }\n ",
    "output": "Fixed entry searching algorithm to handle sequential same values"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n@@ -430,16 +430,18 @@ protected void drawDescription(Canvas c) {\n             mDescPaint.setColor(mDescription.getTextColor());\n             mDescPaint.setTextAlign(mDescription.getTextAlign());\n \n+            float x, y;\n+\n             // if no position specified, draw on default position\n             if (position == null) {\n-\n-                float x = getWidth() - mViewPortHandler.offsetRight() - mDescription.getXOffset();\n-                float y = getHeight() - mViewPortHandler.offsetBottom() - mDescription.getYOffset();\n-\n-                c.drawText(mDescription.getText(), x, y, mDescPaint);\n+                x = getWidth() - mViewPortHandler.offsetRight() - mDescription.getXOffset();\n+                y = getHeight() - mViewPortHandler.offsetBottom() - mDescription.getYOffset();\n             } else {\n-                c.drawText(mDescription.getText(), position.x, position.y, mDescPaint);\n+                x = position.x;\n+                y = position.y;\n             }\n+\n+            c.drawText(mDescription.getText(), x, y, mDescPaint);\n         }\n     }\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n@@ -207,8 +207,6 @@ protected void drawZeroLine(Canvas c) {\n         c.drawPath(zeroLinePath, mZeroLinePaint);\n \n         c.restoreToCount(clipRestoreCount);\n-\n-        c.restoreToCount(clipRestoreCount);\n     }\n \n     protected Path mRenderLimitLinesPathBuffer = new Path();",
    "output": "Removed redundancies"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -181,7 +181,6 @@ protected void drawHorizontalBezier(ILineDataSet dataSet) {\n \n     protected void drawCubicBezier(ILineDataSet dataSet) {\n \n-        float phaseX = Math.max(0.f, Math.min(1.f, mAnimator.getPhaseX()));\n         float phaseY = mAnimator.getPhaseY();\n \n         Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());",
    "output": "Remove unused local variable"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java\n@@ -25,10 +25,12 @@\n import com.github.mikephil.charting.utils.ColorTemplate;\n import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n \n+import java.sql.Time;\n import java.text.SimpleDateFormat;\n import java.util.ArrayList;\n import java.util.Date;\n import java.util.List;\n+import java.util.concurrent.TimeUnit;\n \n public class LineChartTime extends DemoBase implements OnSeekBarChangeListener {\n \n@@ -87,14 +89,16 @@ protected void onCreate(Bundle savedInstanceState) {\n         xAxis.setDrawGridLines(true);\n         xAxis.setTextColor(Color.rgb(255, 192, 56));\n         xAxis.setCenterAxisLabels(true);\n-        xAxis.setGranularity(60000L); // one minute in millis\n+        xAxis.setGranularity(1f); // one hour\n         xAxis.setValueFormatter(new IAxisValueFormatter() {\n \n             private SimpleDateFormat mFormat = new SimpleDateFormat(\"dd MMM HH:mm\");\n \n             @Override\n             public String getFormattedValue(float value, AxisBase axis) {\n-                return mFormat.format(new Date((long) value));\n+\n+                long millis = TimeUnit.HOURS.toMillis((long) value);\n+                return mFormat.format(new Date(millis));\n             }\n \n             @Override\n@@ -264,15 +268,18 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n \n     private void setData(int count, float range) {\n \n-        long now = System.currentTimeMillis();\n-        long hourMillis = 3600000L;\n+        // now in hours\n+        long now = TimeUnit.MILLISECONDS.toHours(System.currentTimeMillis());\n \n         ArrayList<Entry> values = new ArrayList<Entry>();\n \n-        float from = now - (count / 2) * hourMillis;\n-        float to = now + (count / 2) * hourMillis;\n+        float from = now;\n+\n+        // count = hours\n+        float to = now + count;\n \n-        for (float x = from; x < to; x += hourMillis) {\n+        // increment by 1 hour\n+        for (float x = from; x < to; x++) {\n \n             float y = getRandom(range, 50);\n             values.add(new Entry(x, y)); // add one entry per hour",
    "output": "Fix time chart example"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n@@ -154,18 +154,15 @@ protected void computeAxisValues(float min, float max) {\n         int labelCount = mAxis.getLabelCount();\n         double range = Math.abs(yMax - yMin);\n \n-        if (labelCount == 0 || range <= 0) {\n+        if (labelCount == 0 || range <= 0 || Double.isInfinite(range)) {\n             mAxis.mEntries = new float[]{};\n+            mAxis.mCenteredEntries = new float[]{};\n             mAxis.mEntryCount = 0;\n             return;\n         }\n \n         // Find out how much spacing (in y value space) between axis values\n         double rawInterval = range / labelCount;\n-        if (Double.isInfinite(rawInterval))\n-        {\n-            rawInterval = range > 0.0 && !Double.isInfinite(range)  ? range : 1.0;\n-        }\n         double interval = Utils.roundToNextSignificant(rawInterval);\n \n         // If granularity is enabled, then do not allow the interval to go below specified granularity.\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n@@ -32,18 +32,15 @@ protected void computeAxisValues(float min, float max) {\n         int labelCount = mAxis.getLabelCount();\n         double range = Math.abs(yMax - yMin);\n \n-        if (labelCount == 0 || range <= 0) {\n+        if (labelCount == 0 || range <= 0 || Double.isInfinite(range)) {\n             mAxis.mEntries = new float[]{};\n+            mAxis.mCenteredEntries = new float[]{};\n             mAxis.mEntryCount = 0;\n             return;\n         }\n \n         // Find out how much spacing (in y value space) between axis values\n         double rawInterval = range / labelCount;\n-        if (Double.isInfinite(rawInterval))\n-        {\n-            rawInterval = range > 0.0 && !Double.isInfinite(range) ? range : 1.0;\n-        }\n         double interval = Utils.roundToNextSignificant(rawInterval);\n \n         // If granularity is enabled, then do not allow the interval to go below specified granularity.",
    "output": "Fix issue causing ANR for empty charts"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n@@ -239,8 +239,6 @@ public void onAnimationUpdate(ValueAnimator animation) {\n         mInfoPaint.setTextAlign(Align.CENTER);\n         mInfoPaint.setTextSize(Utils.convertDpToPixel(12f));\n \n-        mDrawPaint = new Paint(Paint.DITHER_FLAG);\n-\n         if (mLogEnabled)\n             Log.i(\"\", \"Chart.init()\");\n     }\n@@ -394,11 +392,6 @@ protected void setupDefaultFormatter(float min, float max) {\n      */\n     private boolean mOffsetsCalculated = false;\n \n-    /**\n-     * paint object used for drawing the bitmap\n-     */\n-    protected Paint mDrawPaint;\n-\n     @Override\n     protected void onDraw(Canvas canvas) {\n         // super.onDraw(canvas);",
    "output": "Remove unused mDrawPaint instance"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -73,7 +73,6 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         // no description text\n         mChart.getDescription().setEnabled(false);\n-        mChart.setNoDataTextDescription(\"You need to provide data for the chart.\");\n \n         // enable touch gestures\n         mChart.setTouchEnabled(true);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n@@ -62,7 +62,6 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         // no description text\n         mChart.getDescription().setEnabled(false);\n-        mChart.setNoDataTextDescription(\"You need to provide data for the chart.\");\n \n         // enable touch gestures\n         mChart.setTouchEnabled(true);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java\n@@ -57,7 +57,6 @@ private void setupChart(LineChart chart, LineData data, int color) {\n \n         // no description text\n         chart.getDescription().setEnabled(false);\n-        chart.setNoDataTextDescription(\"You need to provide data for the chart.\");\n         \n         // mChart.setDrawHorizontalGrid(false);\n         //\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java\n@@ -54,7 +54,6 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         // no description text\n         mChart.getDescription().setEnabled(false);\n-        mChart.setNoDataTextDescription(\"You need to provide data for the chart.\");\n \n         // enable touch gestures\n         mChart.setTouchEnabled(true);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PerformanceLineChart.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PerformanceLineChart.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PerformanceLineChart.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PerformanceLineChart.java\n@@ -43,7 +43,6 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         // no description text\n         mChart.getDescription().setEnabled(false);\n-        mChart.setNoDataTextDescription(\"You need to provide data for the chart.\");\n \n         // enable touch gestures\n         mChart.setTouchEnabled(true);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java\n@@ -39,9 +39,8 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart = (LineChart) findViewById(R.id.chart1);\n         mChart.setOnChartValueSelectedListener(this);\n \n-        // no description text\n-        mChart.getDescription().setEnabled(false);\n-        mChart.setNoDataTextDescription(\"You need to provide data for the chart.\");\n+        // enable description text\n+        mChart.getDescription().setEnabled(true);\n \n         // enable touch gestures\n         mChart.setTouchEnabled(true);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java\n@@ -37,7 +37,6 @@ protected void setup(Chart<?> chart) {\n \n         // no description text\n         chart.getDescription().setEnabled(false);\n-        chart.setNoDataTextDescription(\"You need to provide data for the chart.\");\n \n         // enable touch gestures\n         chart.setTouchEnabled(true);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n@@ -13,6 +13,7 @@\n import android.graphics.Paint;\n import android.graphics.Paint.Align;\n import android.graphics.RectF;\n+import android.graphics.Typeface;\n import android.graphics.drawable.Drawable;\n import android.os.Environment;\n import android.provider.MediaStore.Images;\n@@ -149,12 +150,6 @@ public abstract class Chart<T extends ChartData<? extends IDataSet<? extends Ent\n      */\n     private OnChartGestureListener mGestureListener;\n \n-    /**\n-     * text that is displayed when the chart is empty that describes why the\n-     * chart is empty\n-     */\n-    private String mNoDataTextDescription;\n-\n     protected LegendRenderer mLegendRenderer;\n \n     /**\n@@ -411,29 +406,12 @@ protected void onDraw(Canvas canvas) {\n         if (mData == null) {\n \n             boolean hasText = !TextUtils.isEmpty(mNoDataText);\n-            boolean hasDescription = !TextUtils.isEmpty(mNoDataTextDescription);\n-            float line1height = hasText ? Utils.calcTextHeight(mInfoPaint, mNoDataText) : 0.f;\n-            float line2height = hasDescription ? Utils.calcTextHeight(mInfoPaint, mNoDataTextDescription) : 0.f;\n-            float lineSpacing = (hasText && hasDescription) ?\n-                    (mInfoPaint.getFontSpacing() - line1height) : 0.f;\n-\n-            // if no data, inform the user\n-\n-            float y = (getHeight() -\n-                    (line1height + lineSpacing + line2height)) / 2.f\n-                    + line1height;\n \n             if (hasText) {\n-                canvas.drawText(mNoDataText, getWidth() / 2, y, mInfoPaint);\n-\n-                if (hasDescription) {\n-                    y = y + line1height + lineSpacing;\n-                }\n+                MPPointF c = getCenter();\n+                canvas.drawText(mNoDataText, c.x, c.y, mInfoPaint);\n             }\n \n-            if (hasDescription) {\n-                canvas.drawText(mNoDataTextDescription, getWidth() / 2, y, mInfoPaint);\n-            }\n             return;\n         }\n \n@@ -1181,13 +1159,12 @@ public void setNoDataTextColor(int color) {\n     }\n \n     /**\n-     * Sets descriptive text to explain to the user why there is no chart\n-     * available Defaults to empty if not set\n+     * Sets the typeface to be used for the no data text.\n      *\n-     * @param text\n+     * @param tf\n      */\n-    public void setNoDataTextDescription(String text) {\n-        mNoDataTextDescription = text;\n+    public void setNoDataTextTypeface(Typeface tf) {\n+        mInfoPaint.setTypeface(tf);\n     }\n \n     /**",
    "output": "Remove noDataTextDescription - this can be done via noDataText as well"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -211,11 +211,18 @@ protected float[] getTransformedPositions() {\n     }\n \n     protected Path mDrawZeroLinePath = new Path();\n+    protected RectF mZeroLineClippingRect = new RectF();\n+\n     /**\n      * Draws the zero line.\n      */\n     protected void drawZeroLine(Canvas c) {\n \n+        int clipRestoreCount = c.save();\n+        mZeroLineClippingRect.set(mViewPortHandler.getContentRect());\n+        mZeroLineClippingRect.inset(0.f, -mYAxis.getZeroLineWidth() / 2.f);\n+        c.clipRect(mLimitLineClippingRect);\n+\n         // draw zero line\n         MPPointD pos = mTrans.getPixelForValues(0f, 0f);\n \n@@ -230,6 +237,8 @@ protected void drawZeroLine(Canvas c) {\n \n         // draw a path because lines don't support dashing on lower android versions\n         c.drawPath(zeroLinePath, mZeroLinePaint);\n+\n+        c.restoreToCount(clipRestoreCount);\n     }\n \n     protected Path mRenderLimitLines = new Path();\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n@@ -186,6 +186,11 @@ protected Path linePath(Path p, int i, float[] positions) {\n     @Override\n     protected void drawZeroLine(Canvas c) {\n \n+        int clipRestoreCount = c.save();\n+        mZeroLineClippingRect.set(mViewPortHandler.getContentRect());\n+        mZeroLineClippingRect.inset(-mYAxis.getZeroLineWidth() / 2.f, 0.f);\n+        c.clipRect(mLimitLineClippingRect);\n+\n         // draw zero line\n         MPPointD pos = mTrans.getPixelForValues(0f, 0f);\n \n@@ -200,6 +205,10 @@ protected void drawZeroLine(Canvas c) {\n \n         // draw a path because lines don't support dashing on lower android versions\n         c.drawPath(zeroLinePath, mZeroLinePaint);\n+\n+        c.restoreToCount(clipRestoreCount);\n+\n+        c.restoreToCount(clipRestoreCount);\n     }\n \n     protected Path mRenderLimitLinesPathBuffer = new Path();",
    "output": "Added missing clip rect for zero line"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/IMarker.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/IMarker.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/IMarker.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/IMarker.java\n@@ -24,7 +24,7 @@ public interface IMarker {\n      * @param posY This is the X position at which the marker wants to be drawn.\n      *             You can adjust the offset conditionally based on this argument.\n      */\n-    MPPointF getOffsetForDrawingAtPos(float posX, float posY);\n+    MPPointF getOffsetForDrawingAtPoint(float posX, float posY);\n \n     /**\n      * This method enables a specified custom IMarker to update it's content every time the IMarker is redrawn.\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/MarkerImage.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/MarkerImage.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/MarkerImage.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/MarkerImage.java\n@@ -94,7 +94,7 @@ public Chart getChartView() {\n     }\n \n     @Override\n-    public MPPointF getOffsetForDrawingAtPos(float posX, float posY) {\n+    public MPPointF getOffsetForDrawingAtPoint(float posX, float posY) {\n \n         MPPointF offset = getOffset();\n         mOffset2.x = offset.x;\n@@ -137,7 +137,7 @@ public void draw(Canvas canvas, float posX, float posY) {\n \n         if (mDrawable == null) return;\n \n-        MPPointF offset = getOffsetForDrawingAtPos(posX, posY);\n+        MPPointF offset = getOffsetForDrawingAtPoint(posX, posY);\n \n         float width = mSize.width;\n         float height = mSize.height;\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/MarkerView.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/MarkerView.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/MarkerView.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/MarkerView.java\n@@ -80,7 +80,7 @@ public Chart getChartView() {\n     }\n \n     @Override\n-    public MPPointF getOffsetForDrawingAtPos(float posX, float posY) {\n+    public MPPointF getOffsetForDrawingAtPoint(float posX, float posY) {\n \n         MPPointF offset = getOffset();\n         mOffset2.x = offset.x;\n@@ -118,7 +118,7 @@ public void refreshContent(Entry e, Highlight highlight) {\n     @Override\n     public void draw(Canvas canvas, float posX, float posY) {\n \n-        MPPointF offset = getOffsetForDrawingAtPos(posX, posY);\n+        MPPointF offset = getOffsetForDrawingAtPoint(posX, posY);\n \n         int saveId = canvas.save();\n         // translate to the correct position and draw",
    "output": "Improved naming before the big release"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarEntry.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarEntry.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarEntry.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarEntry.java\n@@ -142,7 +142,15 @@ public boolean isStacked() {\n         return mYVals != null;\n     }\n \n+    /**\n+     * Use `getSumBelow(stackIndex)` instead.\n+     */\n+    @Deprecated\n     public float getBelowSum(int stackIndex) {\n+        return getSumBelow(stackIndex);\n+    }\n+\n+    public float getSumBelow(int stackIndex) {\n \n         if (mYVals == null)\n             return 0;",
    "output": "Improved naming"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n@@ -183,6 +183,12 @@ public boolean isDrawAxisLineEnabled() {\n         return mDrawAxisLine;\n     }\n \n+    /**\n+     * Centers the axis labels instead of drawing them at their original position.\n+     * This is useful especially for grouped BarChart.\n+     *\n+     * @param enabled\n+     */\n     public void setCenterAxisLabels(boolean enabled) {\n         mCenterAxisLabels = enabled;\n     }\n@@ -504,13 +510,13 @@ public void enableGridDashedLine(float lineLength, float spaceLength, float phas\n                 lineLength, spaceLength\n         }, phase);\n     }\n-    \n+\n     /**\n      * Enables the grid line to be drawn in dashed mode, e.g. like this\n      * \"- - - - - -\". THIS ONLY WORKS IF HARDWARE-ACCELERATION IS TURNED OFF.\n      * Keep in mind that hardware acceleration boosts performance.\n      *\n-     * @param effect  the DashPathEffect\n+     * @param effect the DashPathEffect\n      */\n     public void setGridDashedLine(DashPathEffect effect) {\n         mGridDashPathEffect = effect;\n@@ -540,7 +546,7 @@ public boolean isGridDashedLineEnabled() {\n     public DashPathEffect getGridDashPathEffect() {\n         return mGridDashPathEffect;\n     }\n-    \n+\n \n     /**\n      * Enables the axis line to be drawn in dashed mode, e.g. like this\n@@ -556,13 +562,13 @@ public void enableAxisLineDashedLine(float lineLength, float spaceLength, float\n                 lineLength, spaceLength\n         }, phase);\n     }\n-    \n+\n     /**\n      * Enables the axis line to be drawn in dashed mode, e.g. like this\n      * \"- - - - - -\". THIS ONLY WORKS IF HARDWARE-ACCELERATION IS TURNED OFF.\n      * Keep in mind that hardware acceleration boosts performance.\n      *\n-     * @param effect  the DashPathEffect\n+     * @param effect the DashPathEffect\n      */\n     public void setAxisLineDashedLine(DashPathEffect effect) {\n         mAxisLineDashPathEffect = effect;",
    "output": "Minor changes & documentation"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -263,16 +263,14 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n \n                     mPathBuffer.reset();\n \n-                    float arcStartPointX = 0.f, arcStartPointY = 0.f;\n+                    float arcStartPointX = center.x + radius * (float) Math.cos(startAngleOuter * Utils.FDEG2RAD);\n+                    float arcStartPointY = center.y + radius * (float) Math.sin(startAngleOuter * Utils.FDEG2RAD);\n \n                     if (sweepAngleOuter % 360f <= Utils.FLOAT_EPSILON) {\n                         // Android is doing \"mod 360\"\n                         mPathBuffer.addCircle(center.x, center.y, radius, Path.Direction.CW);\n                     } else {\n \n-                        arcStartPointX = center.x + radius * (float) Math.cos(startAngleOuter * Utils.FDEG2RAD);\n-                        arcStartPointY = center.y + radius * (float) Math.sin(startAngleOuter * Utils.FDEG2RAD);\n-\n                         mPathBuffer.moveTo(arcStartPointX, arcStartPointY);\n \n                         mPathBuffer.arcTo(",
    "output": "Merge pull request #2193 from relair/PieChart_FixForBackgroundIssue_WhenSliceIsTooSmall\n\nPie chart, fix for small values appearing as background"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -146,7 +146,7 @@ protected void drawHorizontalBezier(ILineDataSet dataSet) {\n \n             for (int j = mXBounds.min + 1; j <= mXBounds.range + mXBounds.min; j++) {\n \n-                prev = dataSet.getEntryForIndex(j - 1);\n+                prev = cur;\n                 cur = dataSet.getEntryForIndex(j);\n \n                 final float cpx = (prev.getX())",
    "output": "Reuse index"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -263,16 +263,14 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n \n                     mPathBuffer.reset();\n \n-                    float arcStartPointX = 0.f, arcStartPointY = 0.f;\n+                    float arcStartPointX = center.x + radius * (float) Math.cos(startAngleOuter * Utils.FDEG2RAD);\n+                    float arcStartPointY = center.y + radius * (float) Math.sin(startAngleOuter * Utils.FDEG2RAD);\n \n                     if (sweepAngleOuter % 360f <= Utils.FLOAT_EPSILON) {\n                         // Android is doing \"mod 360\"\n                         mPathBuffer.addCircle(center.x, center.y, radius, Path.Direction.CW);\n                     } else {\n \n-                        arcStartPointX = center.x + radius * (float) Math.cos(startAngleOuter * Utils.FDEG2RAD);\n-                        arcStartPointY = center.y + radius * (float) Math.sin(startAngleOuter * Utils.FDEG2RAD);\n-\n                         mPathBuffer.moveTo(arcStartPointX, arcStartPointY);\n \n                         mPathBuffer.arcTo(",
    "output": "Fix for pie chart, so small values won't appear as \"background\" (which really is a huge circle)"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/MarkerImage.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/MarkerImage.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/MarkerImage.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/MarkerImage.java\n@@ -142,10 +142,10 @@ public void draw(Canvas canvas, float posX, float posY) {\n         float width = mSize.width;\n         float height = mSize.height;\n \n-        if (width == 0.f && mDrawable != null) {\n+        if (width == 0.f) {\n             width = mDrawable.getIntrinsicWidth();\n         }\n-        if (height == 0.f && mDrawable != null) {\n+        if (height == 0.f) {\n             height = mDrawable.getIntrinsicHeight();\n         }\n ",
    "output": "Remove nullcheck for known non-null value"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n@@ -92,6 +92,11 @@ public abstract class AxisBase extends ComponentBase {\n \n     protected boolean mCenterAxisLabels = false;\n \n+    /**\n+     * the path effect of the axis line that makes dashed lines possible\n+     */\n+    private DashPathEffect mAxisLineDashPathEffect = null;\n+\n     /**\n      * the path effect of the grid lines that makes dashed lines possible\n      */\n@@ -499,6 +504,17 @@ public void enableGridDashedLine(float lineLength, float spaceLength, float phas\n                 lineLength, spaceLength\n         }, phase);\n     }\n+    \n+    /**\n+     * Enables the grid line to be drawn in dashed mode, e.g. like this\n+     * \"- - - - - -\". THIS ONLY WORKS IF HARDWARE-ACCELERATION IS TURNED OFF.\n+     * Keep in mind that hardware acceleration boosts performance.\n+     *\n+     * @param effect  the DashPathEffect\n+     */\n+    public void setGridDashedLine(DashPathEffect effect) {\n+        mGridDashPathEffect = effect;\n+    }\n \n     /**\n      * Disables the grid line to be drawn in dashed mode.\n@@ -524,6 +540,58 @@ public boolean isGridDashedLineEnabled() {\n     public DashPathEffect getGridDashPathEffect() {\n         return mGridDashPathEffect;\n     }\n+    \n+\n+    /**\n+     * Enables the axis line to be drawn in dashed mode, e.g. like this\n+     * \"- - - - - -\". THIS ONLY WORKS IF HARDWARE-ACCELERATION IS TURNED OFF.\n+     * Keep in mind that hardware acceleration boosts performance.\n+     *\n+     * @param lineLength  the length of the line pieces\n+     * @param spaceLength the length of space in between the pieces\n+     * @param phase       offset, in degrees (normally, use 0)\n+     */\n+    public void enableAxisLineDashedLine(float lineLength, float spaceLength, float phase) {\n+        mAxisLineDashPathEffect = new DashPathEffect(new float[]{\n+                lineLength, spaceLength\n+        }, phase);\n+    }\n+    \n+    /**\n+     * Enables the axis line to be drawn in dashed mode, e.g. like this\n+     * \"- - - - - -\". THIS ONLY WORKS IF HARDWARE-ACCELERATION IS TURNED OFF.\n+     * Keep in mind that hardware acceleration boosts performance.\n+     *\n+     * @param effect  the DashPathEffect\n+     */\n+    public void setAxisLineDashedLine(DashPathEffect effect) {\n+        mAxisLineDashPathEffect = effect;\n+    }\n+\n+    /**\n+     * Disables the axis line to be drawn in dashed mode.\n+     */\n+    public void disableAxisLineDashedLine() {\n+        mAxisLineDashPathEffect = null;\n+    }\n+\n+    /**\n+     * Returns true if the axis dashed-line effect is enabled, false if not.\n+     *\n+     * @return\n+     */\n+    public boolean isAxisLineDashedLineEnabled() {\n+        return mAxisLineDashPathEffect == null ? false : true;\n+    }\n+\n+    /**\n+     * returns the DashPathEffect that is set for axis line\n+     *\n+     * @return\n+     */\n+    public DashPathEffect getAxisLineDashPathEffect() {\n+        return mAxisLineDashPathEffect;\n+    }\n \n     /**\n      * ###### BELOW CODE RELATED TO CUSTOM AXIS VALUES ######\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java\n@@ -153,6 +153,7 @@ public void renderAxisLine(Canvas c) {\n \n         mAxisLinePaint.setColor(mXAxis.getAxisLineColor());\n         mAxisLinePaint.setStrokeWidth(mXAxis.getAxisLineWidth());\n+        mAxisLinePaint.setPathEffect(mXAxis.getAxisLineDashPathEffect());\n \n         if (mXAxis.getPosition() == XAxisPosition.TOP\n                 || mXAxis.getPosition() == XAxisPosition.TOP_INSIDE",
    "output": "Merge pull request #2110 from Akylas/dasheffect\n\nAxisLine DashEffect"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -252,8 +252,8 @@ protected void drawCubicFill(Canvas c, ILineDataSet dataSet, Path spline, Transf\n         float fillMin = dataSet.getFillFormatter()\n                 .getFillLinePosition(dataSet, mChart);\n \n-        spline.lineTo(bounds.min + bounds.range, fillMin);\n-        spline.lineTo(bounds.min, fillMin);\n+        spline.lineTo(dataSet.getEntryForIndex(bounds.min + bounds.range).getX(), fillMin);\n+        spline.lineTo(dataSet.getEntryForIndex(bounds.min).getX(), fillMin);\n         spline.close();\n \n         trans.pathValueToPixel(spline);",
    "output": "Merge pull request #2168 from Sin-Wave/master\n\nFixed Bug in LineChartRenderer"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -252,8 +252,8 @@ protected void drawCubicFill(Canvas c, ILineDataSet dataSet, Path spline, Transf\n         float fillMin = dataSet.getFillFormatter()\n                 .getFillLinePosition(dataSet, mChart);\n \n-        spline.lineTo(dataSet.getEntryForIndex(mXBounds.max).getX(), fillMin);\n-        spline.lineTo(dataSet.getEntryForIndex(mXBounds.min).getX(), fillMin);\n+        spline.lineTo(dataSet.getEntryForIndex(bounds.min + bounds.range).getX(), fillMin);\n+        spline.lineTo(dataSet.getEntryForIndex(bounds.min).getX(), fillMin);\n         spline.close();\n \n         trans.pathValueToPixel(spline);",
    "output": "respect phaseX when drawing cubicFill"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -252,8 +252,8 @@ protected void drawCubicFill(Canvas c, ILineDataSet dataSet, Path spline, Transf\n         float fillMin = dataSet.getFillFormatter()\n                 .getFillLinePosition(dataSet, mChart);\n \n-        spline.lineTo(bounds.min + bounds.range, fillMin);\n-        spline.lineTo(bounds.min, fillMin);\n+        spline.lineTo(dataSet.getEntryForIndex(mXBounds.max).getX(), fillMin);\n+        spline.lineTo(dataSet.getEntryForIndex(mXBounds.min).getX(), fillMin);\n         spline.close();\n \n         trans.pathValueToPixel(spline);",
    "output": "fixed LineChartRenderer to get correct x values when using cubicFill"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -300,6 +300,11 @@ protected void drawLinear(Canvas c, ILineDataSet dataSet) {\n \n         mXBounds.set(mChart, dataSet);\n \n+        // if drawing filled is enabled\n+        if (dataSet.isDrawFilledEnabled() && entryCount > 0) {\n+            drawLinearFill(c, dataSet, trans, mXBounds);\n+        }\n+\n         // more than 1 color\n         if (dataSet.getColors().size() > 1) {\n \n@@ -403,11 +408,6 @@ protected void drawLinear(Canvas c, ILineDataSet dataSet) {\n         }\n \n         mRenderPaint.setPathEffect(null);\n-\n-        // if drawing filled is enabled\n-        if (dataSet.isDrawFilledEnabled() && entryCount > 0) {\n-            drawLinearFill(c, dataSet, trans, mXBounds);\n-        }\n     }\n \n     protected Path mGenerateFilledPathBuffer = new Path();",
    "output": "Fill before stroke - because the fill may cover half of a thick stroke"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ViewPortHandler.java b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ViewPortHandler.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ViewPortHandler.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ViewPortHandler.java\n@@ -576,42 +576,33 @@ public Matrix getMatrixTouch() {\n      */\n \n     public boolean isInBoundsX(float x) {\n-        if (isInBoundsLeft(x) && isInBoundsRight(x))\n-            return true;\n-        else\n-            return false;\n+        return isInBoundsLeft(x) && isInBoundsRight(x);\n     }\n \n     public boolean isInBoundsY(float y) {\n-        if (isInBoundsTop(y) && isInBoundsBottom(y))\n-            return true;\n-        else\n-            return false;\n+        return isInBoundsTop(y) && isInBoundsBottom(y);\n     }\n \n     public boolean isInBounds(float x, float y) {\n-        if (isInBoundsX(x) && isInBoundsY(y))\n-            return true;\n-        else\n-            return false;\n+        return isInBoundsX(x) && isInBoundsY(y);\n     }\n \n     public boolean isInBoundsLeft(float x) {\n-        return mContentRect.left <= x + 1 ? true : false;\n+        return mContentRect.left <= x + 1;\n     }\n \n     public boolean isInBoundsRight(float x) {\n         x = (float) ((int) (x * 100.f)) / 100.f;\n-        return mContentRect.right >= x - 1 ? true : false;\n+        return mContentRect.right >= x - 1;\n     }\n \n     public boolean isInBoundsTop(float y) {\n-        return mContentRect.top <= y ? true : false;\n+        return mContentRect.top <= y;\n     }\n \n     public boolean isInBoundsBottom(float y) {\n         y = (float) ((int) (y * 100.f)) / 100.f;\n-        return mContentRect.bottom >= y ? true : false;\n+        return mContentRect.bottom >= y;\n     }\n \n     /**\n@@ -669,10 +660,7 @@ public float getTransY() {\n      */\n     public boolean isFullyZoomedOut() {\n \n-        if (isFullyZoomedOutX() && isFullyZoomedOutY())\n-            return true;\n-        else\n-            return false;\n+        return isFullyZoomedOutX() && isFullyZoomedOutY();\n     }\n \n     /**\n@@ -681,10 +669,7 @@ public boolean isFullyZoomedOut() {\n      * @return\n      */\n     public boolean isFullyZoomedOutY() {\n-        if (mScaleY > mMinScaleY || mMinScaleY > 1f)\n-            return false;\n-        else\n-            return true;\n+        return !(mScaleY > mMinScaleY || mMinScaleY > 1f);\n     }\n \n     /**\n@@ -694,10 +679,7 @@ public boolean isFullyZoomedOutY() {\n      * @return\n      */\n     public boolean isFullyZoomedOutX() {\n-        if (mScaleX > mMinScaleX || mMinScaleX > 1f)\n-            return false;\n-        else\n-            return true;\n+        return !(mScaleX > mMinScaleX || mMinScaleX > 1f);\n     }\n \n     /**\n@@ -735,7 +717,7 @@ public boolean hasNoDragOffset() {\n      * @return\n      */\n     public boolean canZoomOutMoreX() {\n-        return (mScaleX > mMinScaleX);\n+        return mScaleX > mMinScaleX;\n     }\n \n     /**\n@@ -744,7 +726,7 @@ public boolean canZoomOutMoreX() {\n      * @return\n      */\n     public boolean canZoomInMoreX() {\n-        return (mScaleX < mMaxScaleX);\n+        return mScaleX < mMaxScaleX;\n     }\n \n     /**\n@@ -753,7 +735,7 @@ public boolean canZoomInMoreX() {\n      * @return\n      */\n     public boolean canZoomOutMoreY() {\n-        return (mScaleY > mMinScaleY);\n+        return mScaleY > mMinScaleY;\n     }\n \n     /**\n@@ -762,6 +744,6 @@ public boolean canZoomOutMoreY() {\n      * @return\n      */\n     public boolean canZoomInMoreY() {\n-        return (mScaleY < mMaxScaleY);\n+        return mScaleY < mMaxScaleY;\n     }\n }",
    "output": "Simplified some code"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n@@ -164,7 +164,7 @@ protected void computeAxisValues(float min, float max) {\n         double rawInterval = range / labelCount;\n         if (Double.isInfinite(rawInterval))\n         {\n-            rawInterval = range > 0.0 ? range : 1.0;\n+            rawInterval = range > 0.0 && !Double.isInfinite(range)  ? range : 1.0;\n         }\n         double interval = Utils.roundToNextSignificant(rawInterval);\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n@@ -42,7 +42,7 @@ protected void computeAxisValues(float min, float max) {\n         double rawInterval = range / labelCount;\n         if (Double.isInfinite(rawInterval))\n         {\n-            rawInterval = range > 0.0 ? range : 1.0;\n+            rawInterval = range > 0.0 && !Double.isInfinite(range) ? range : 1.0;\n         }\n         double interval = Utils.roundToNextSignificant(rawInterval);\n ",
    "output": "range may also be Infinite when xMin/xMax are MAX"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n@@ -162,6 +162,10 @@ protected void computeAxisValues(float min, float max) {\n \n         // Find out how much spacing (in y value space) between axis values\n         double rawInterval = range / labelCount;\n+        if (Double.isInfinite(rawInterval))\n+        {\n+            rawInterval = range > 0.0 ? range : 1.0;\n+        }\n         double interval = Utils.roundToNextSignificant(rawInterval);\n \n         // If granularity is enabled, then do not allow the interval to go below specified granularity.\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n@@ -40,6 +40,10 @@ protected void computeAxisValues(float min, float max) {\n \n         // Find out how much spacing (in y value space) between axis values\n         double rawInterval = range / labelCount;\n+        if (Double.isInfinite(rawInterval))\n+        {\n+            rawInterval = range > 0.0 ? range : 1.0;\n+        }\n         double interval = Utils.roundToNextSignificant(rawInterval);\n \n         // If granularity is enabled, then do not allow the interval to go below specified granularity.",
    "output": "Take care of edge cases when calculating intervals (labelCount == 0)"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java\n@@ -62,9 +62,6 @@ protected void init() {\n     @Override\n     protected void calcMinMax() {\n \n-        if (mAutoScaleMinMaxEnabled)\n-            mData.calcMinMax(getLowestVisibleX(), getHighestVisibleX());\n-\n         if (mFitBars) {\n             mXAxis.calculate(mData.getXMin() - mData.getBarWidth() / 2f, mData.getXMax() + mData.getBarWidth() / 2f);\n         } else {\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -204,9 +204,7 @@ protected void onDraw(Canvas canvas) {\n         mAxisRendererRight.renderAxisLine(canvas);\n \n         if (mAutoScaleMinMaxEnabled) {\n-\n-            calcMinMax();\n-            calculateOffsets();\n+            autoScale();\n         }\n \n         mXAxisRenderer.renderGridLines(canvas);\n@@ -325,12 +323,29 @@ public void notifyDataSetChanged() {\n         calculateOffsets();\n     }\n \n+    /**\n+     * Performs auto scaling of the axis by recalculating the minimum and maximum y-values based on the entries currently in view.\n+     */\n+    protected void autoScale() {\n+\n+        final float fromX = getLowestVisibleX();\n+        final float toX = getHighestVisibleX();\n+\n+        mData.calcMinMaxY(fromX, toX);\n+\n+        mXAxis.calculate(mData.getXMin(), mData.getXMax());\n+\n+        // calculate axis range (min / max) according to provided data\n+        mAxisLeft.calculate(mData.getYMin(AxisDependency.LEFT), mData.getYMax(AxisDependency.LEFT));\n+        mAxisRight.calculate(mData.getYMin(AxisDependency.RIGHT), mData.getYMax(AxisDependency\n+                .RIGHT));\n+\n+        calculateOffsets();\n+    }\n+\n     @Override\n     protected void calcMinMax() {\n \n-        if (mAutoScaleMinMaxEnabled)\n-            mData.calcMinMax(getLowestVisibleX(), getHighestVisibleX());\n-\n         mXAxis.calculate(mData.getXMin(), mData.getXMax());\n \n         // calculate axis range (min / max) according to provided data\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java\n@@ -127,11 +127,7 @@ protected void calcMinMax(BarEntry e) {\n                     mYMax = e.getPositiveSum();\n             }\n \n-            if (e.getX() < mXMin)\n-                mXMin = e.getX();\n-\n-            if (e.getX() > mXMax)\n-                mXMax = e.getX();\n+            calcMinMaxX(e);\n         }\n     }\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/CandleDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/CandleDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/CandleDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/CandleDataSet.java\n@@ -109,11 +109,7 @@ protected void calcMinMax(CandleEntry e) {\n         if (e.getHigh() > mYMax)\n             mYMax = e.getHigh();\n \n-        if (e.getX() < mXMin)\n-            mXMin = e.getX();\n-\n-        if (e.getX() > mXMax)\n-            mXMax = e.getX();\n+        calcMinMaxX(e);\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ChartData.java\n@@ -108,18 +108,19 @@ public void notifyDataChanged() {\n     }\n \n     /**\n-     * Calc minimum and maximum values (both x and y) over all DataSets.\n-     * Tell DataSets to recalculate their min and max values, this is needed for autoScaleMinMax.\n+     * Calc minimum and maximum y-values over all DataSets.\n+     * Tell DataSets to recalculate their min and max y-values, this is only needed for autoScaleMinMax.\n      *\n      * @param fromX the x-value to start the calculation from\n      * @param toX   the x-value to which the calculation should be performed\n      */\n-    public void calcMinMax(float fromX, float toX) {\n+    public void calcMinMaxY(float fromX, float toX) {\n \n         for (T set : mDataSets) {\n-            set.calcMinMax(fromX, toX);\n+            set.calcMinMaxY(fromX, toX);\n         }\n \n+        // apply the new data\n         calcMinMax();\n     }\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java\n@@ -75,21 +75,21 @@ public void calcMinMax() {\n     }\n \n     @Override\n-    public void calcMinMax(float fromX, float toX) {\n+    public void calcMinMaxY(float fromX, float toX) {\n \n         if (mValues == null || mValues.isEmpty())\n             return;\n \n         mYMax = -Float.MAX_VALUE;\n         mYMin = Float.MAX_VALUE;\n-        mXMax = -Float.MAX_VALUE;\n-        mXMin = Float.MAX_VALUE;\n \n-        int indexFrom = getEntryIndex(fromX, Rounding.CLOSEST);\n-        int indexTo = getEntryIndex(toX, Rounding.CLOSEST);\n+        int indexFrom = getEntryIndex(fromX, Rounding.DOWN);\n+        int indexTo = getEntryIndex(toX, Rounding.UP);\n \n         for (int i = indexFrom; i <= indexTo; i++) {\n-            calcMinMax(mValues.get(i));\n+\n+            // only recalculate y\n+            calcMinMaxY(mValues.get(i));\n         }\n     }\n \n@@ -103,11 +103,12 @@ protected void calcMinMax(T e) {\n         if (e == null)\n             return;\n \n-        if (e.getY() < mYMin)\n-            mYMin = e.getY();\n+        calcMinMaxX(e);\n \n-        if (e.getY() > mYMax)\n-            mYMax = e.getY();\n+        calcMinMaxY(e);\n+    }\n+\n+    protected void calcMinMaxX(T e) {\n \n         if (e.getX() < mXMin)\n             mXMin = e.getX();\n@@ -116,6 +117,15 @@ protected void calcMinMax(T e) {\n             mXMax = e.getX();\n     }\n \n+    protected void calcMinMaxY(T e) {\n+\n+        if (e.getY() < mYMin)\n+            mYMin = e.getY();\n+\n+        if (e.getY() > mYMax)\n+            mYMax = e.getY();\n+    }\n+\n     @Override\n     public int getEntryCount() {\n         return mValues.size();\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java\n@@ -51,11 +51,7 @@ protected void calcMinMax(PieEntry e) {\n         if (e == null)\n             return;\n \n-        if (e.getY() < mYMin)\n-            mYMin = e.getY();\n-\n-        if (e.getY() > mYMax)\n-            mYMax = e.getY();\n+        calcMinMaxY(e);\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IDataSet.java\n@@ -60,12 +60,13 @@ public interface IDataSet<T extends Entry> {\n     void calcMinMax();\n \n     /**\n-     * Calculates the min and max values from the given x-value to the given x-value.\n+     * Calculates the min and max y-values from the Entry closest to the given fromX to the Entry closest to the given toX value.\n+     * This is only needed for the autoScaleMinMax feature.\n      *\n      * @param fromX\n      * @param toX\n      */\n-    void calcMinMax(float fromX, float toX);\n+    void calcMinMaxY(float fromX, float toX);\n \n     /**\n      * Returns the first Entry object found at the given x-value with binary",
    "output": "Fixes and finishing up of autoScaleMinMax feature"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ChartData.java\n@@ -68,7 +68,7 @@ public ChartData() {\n      */\n     public ChartData(T... dataSets) {\n         mDataSets = arrayToList(dataSets);\n-        init();\n+        notifyDataChanged();\n     }\n \n     /**\n@@ -95,15 +95,7 @@ private List<T> arrayToList(T[] array) {\n      */\n     public ChartData(List<T> sets) {\n         this.mDataSets = sets;\n-        init();\n-    }\n-\n-    /**\n-     * performs all kinds of initialization calculations, such as min-max and\n-     * value count and sum\n-     */\n-    protected void init() {\n-        calcMinMax();\n+        notifyDataChanged();\n     }\n \n     /**\n@@ -112,11 +104,11 @@ protected void init() {\n      * the contained data has changed.\n      */\n     public void notifyDataChanged() {\n-        init();\n+        calcMinMax();\n     }\n \n     /**\n-     * calc minimum and maximum values (both x and y) over all DataSets\n+     * Calc minimum and maximum values (both x and y) over all DataSets.\n      */\n     public void calcMinMax() {\n \n@@ -145,7 +137,7 @@ public void calcMinMax() {\n             mLeftAxisMax = firstLeft.getYMax();\n             mLeftAxisMin = firstLeft.getYMin();\n \n-            for (IDataSet dataSet : mDataSets) {\n+            for (T dataSet : mDataSets) {\n                 if (dataSet.getAxisDependency() == AxisDependency.LEFT) {\n                     if (dataSet.getYMin() < mLeftAxisMin)\n                         mLeftAxisMin = dataSet.getYMin();\n@@ -164,7 +156,7 @@ public void calcMinMax() {\n             mRightAxisMax = firstRight.getYMax();\n             mRightAxisMin = firstRight.getYMin();\n \n-            for (IDataSet dataSet : mDataSets) {\n+            for (T dataSet : mDataSets) {\n                 if (dataSet.getAxisDependency() == AxisDependency.RIGHT) {\n                     if (dataSet.getYMin() < mRightAxisMin)\n                         mRightAxisMin = dataSet.getYMin();\n@@ -436,6 +428,12 @@ public void addEntry(Entry e, int dataSetIndex) {\n         }\n     }\n \n+    /**\n+     * Adjusts the current minimum and maximum values based on the provided Entry object.\n+     *\n+     * @param e\n+     * @param axis\n+     */\n     protected void calcMinMax(Entry e, AxisDependency axis) {\n \n         if (mYMax < e.getY())\n@@ -462,6 +460,11 @@ protected void calcMinMax(Entry e, AxisDependency axis) {\n         }\n     }\n \n+    /**\n+     * Adjusts the minimum and maximum values based on the given DataSet.\n+     *\n+     * @param d\n+     */\n     protected void calcMinMax(T d) {\n \n         if (mYMax < d.getYMax())\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/CombinedData.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/CombinedData.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/CombinedData.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/CombinedData.java\n@@ -29,27 +29,27 @@ public CombinedData() {\n \n     public void setData(LineData data) {\n         mLineData = data;\n-        init();\n+        notifyDataChanged();\n     }\n \n     public void setData(BarData data) {\n         mBarData = data;\n-        init();\n+        notifyDataChanged();\n     }\n \n     public void setData(ScatterData data) {\n         mScatterData = data;\n-        init();\n+        notifyDataChanged();\n     }\n \n     public void setData(CandleData data) {\n         mCandleData = data;\n-        init();\n+        notifyDataChanged();\n     }\n \n     public void setData(BubbleData data) {\n         mBubbleData = data;\n-        init();\n+        notifyDataChanged();\n     }\n \n     @Override\n@@ -104,7 +104,6 @@ public void calcMinMax() {\n                 mRightAxisMin = data.mRightAxisMin;\n \n         }\n-\n     }\n \n     public BubbleData getBubbleData() {\n@@ -166,7 +165,7 @@ public void notifyDataChanged() {\n         if (mBubbleData != null)\n             mBubbleData.notifyDataChanged();\n \n-        init(); // recalculate everything\n+        calcMinMax(); // recalculate everything\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieData.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieData.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieData.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieData.java\n@@ -33,7 +33,7 @@ public PieData(IPieDataSet dataSet) {\n     public void setDataSet(IPieDataSet dataSet) {\n         mDataSets.clear();\n         mDataSets.add(dataSet);\n-        init();\n+        notifyDataChanged();\n     }\n \n     /**",
    "output": "Cleanup, preparations for autoScaleMinMax fix"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -115,8 +115,7 @@ public void calculateOffsets() {\n         if (mLegend != null && mLegend.isEnabled() && !mLegend.isDrawInsideEnabled()) {\n \n             float fullLegendWidth = Math.min(mLegend.mNeededWidth,\n-                    mViewPortHandler.getChartWidth() * mLegend.getMaxSizePercent()) +\n-                    mLegend.getFormSize() + mLegend.getFormToTextSpace();\n+                    mViewPortHandler.getChartWidth() * mLegend.getMaxSizePercent());\n \n             switch (mLegend.getOrientation()) {\n                 case VERTICAL: {",
    "output": "neededWidth should be enough here. formSize has no meaning globally.\n\nIf more offset is needed - use extraOffsets, or adjust the maxSizePercent)."
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java\n@@ -161,13 +161,7 @@ public enum LegendDirection {\n      */\n     public Legend() {\n \n-        mFormSize = Utils.convertDpToPixel(8f);\n-        mFormLineWidth = Utils.convertDpToPixel(3f);\n-        mXEntrySpace = Utils.convertDpToPixel(6f);\n-        mYEntrySpace = Utils.convertDpToPixel(0f);\n-        mFormToTextSpace = Utils.convertDpToPixel(5f);\n-        mTextSize = Utils.convertDpToPixel(10f);\n-        mStackSpace = Utils.convertDpToPixel(3f);\n+        this.mTextSize = Utils.convertDpToPixel(10f);\n         this.mXOffset = Utils.convertDpToPixel(5f);\n         this.mYOffset = Utils.convertDpToPixel(3f); // 2\n     }\n@@ -248,10 +242,12 @@ public float getMaximumEntryWidth(Paint p) {\n \n         float max = 0f;\n         float maxFormSize = 0f;\n+        float formToTextSpace = Utils.convertDpToPixel(mFormToTextSpace);\n \n         for (LegendEntry entry : mEntries) {\n-            final float formSize = Float.isNaN(entry.formSize)\n-                    ? mFormSize : entry.formSize;\n+            final float formSize = Utils.convertDpToPixel(\n+                    Float.isNaN(entry.formSize)\n+                    ? mFormSize : entry.formSize);\n             if (formSize > maxFormSize)\n                 maxFormSize = formSize;\n \n@@ -264,7 +260,7 @@ public float getMaximumEntryWidth(Paint p) {\n                 max = length;\n         }\n \n-        return max + maxFormSize + mFormToTextSpace;\n+        return max + maxFormSize + formToTextSpace;\n     }\n \n     /**\n@@ -643,7 +639,7 @@ public void setForm(LegendForm shape) {\n      * @param size\n      */\n     public void setFormSize(float size) {\n-        mFormSize = Utils.convertDpToPixel(size);\n+        mFormSize = size;\n     }\n \n     /**\n@@ -661,7 +657,7 @@ public float getFormSize() {\n      * @param size\n      */\n     public void setFormLineWidth(float size) {\n-        mFormLineWidth = Utils.convertDpToPixel(size);\n+        mFormLineWidth = size;\n     }\n \n     /**\n@@ -706,7 +702,7 @@ public float getXEntrySpace() {\n      * @param space\n      */\n     public void setXEntrySpace(float space) {\n-        mXEntrySpace = Utils.convertDpToPixel(space);\n+        mXEntrySpace = space;\n     }\n \n     /**\n@@ -725,7 +721,7 @@ public float getYEntrySpace() {\n      * @param space\n      */\n     public void setYEntrySpace(float space) {\n-        mYEntrySpace = Utils.convertDpToPixel(space);\n+        mYEntrySpace = space;\n     }\n \n     /**\n@@ -744,7 +740,7 @@ public float getFormToTextSpace() {\n      * @param space\n      */\n     public void setFormToTextSpace(float space) {\n-        this.mFormToTextSpace = Utils.convertDpToPixel(space);\n+        this.mFormToTextSpace = space;\n     }\n \n     /**\n@@ -858,11 +854,11 @@ public List<FSize> getCalculatedLineSizes() {\n      */\n     public void calculateDimensions(Paint labelpaint, ViewPortHandler viewPortHandler) {\n \n-        float defaultFormSize = mFormSize;\n-        float stackSpace = mStackSpace;\n-        float formToTextSpace = mFormToTextSpace;\n-        float xEntrySpace = mXEntrySpace;\n-        float yEntrySpace = mYEntrySpace;\n+        float defaultFormSize = Utils.convertDpToPixel(mFormSize);\n+        float stackSpace = Utils.convertDpToPixel(mStackSpace);\n+        float formToTextSpace = Utils.convertDpToPixel(mFormToTextSpace);\n+        float xEntrySpace = Utils.convertDpToPixel(mXEntrySpace);\n+        float yEntrySpace = Utils.convertDpToPixel(mYEntrySpace);\n         boolean wordWrapEnabled = mWordWrapEnabled;\n         LegendEntry[] entries = mEntries;\n         int entryCount = entries.length;\n@@ -881,7 +877,9 @@ public void calculateDimensions(Paint labelpaint, ViewPortHandler viewPortHandle\n \n                     LegendEntry e = entries[i];\n                     boolean drawingForm = e.form != LegendForm.NONE;\n-                    float formSize = Float.isNaN(e.formSize) ? defaultFormSize : e.formSize;\n+                    float formSize = Float.isNaN(e.formSize)\n+                            ? defaultFormSize\n+                            : Utils.convertDpToPixel(e.formSize);\n                     String label = e.label;\n \n                     if (!wasStacked)\n@@ -945,7 +943,9 @@ else if (wasStacked) {\n \n                     LegendEntry e = entries[i];\n                     boolean drawingForm = e.form != LegendForm.NONE;\n-                    float formSize = Float.isNaN(e.formSize) ? defaultFormSize : e.formSize;\n+                    float formSize = Float.isNaN(e.formSize)\n+                            ? defaultFormSize\n+                            : Utils.convertDpToPixel(e.formSize);\n                     String label = e.label;\n \n                     mCalculatedLabelBreakPoints.add(false);\n@@ -963,7 +963,7 @@ else if (wasStacked) {\n                     if (label != null) {\n \n                         mCalculatedLabelSizes.add(Utils.calcTextSize(labelpaint, label));\n-                        requiredWidth += drawingForm ? mFormToTextSpace + formSize : 0.f;\n+                        requiredWidth += drawingForm ? formToTextSpace + formSize : 0.f;\n                         requiredWidth += mCalculatedLabelSizes.get(i).width;\n                     } else {\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -236,21 +236,22 @@ public void renderLegend(Canvas c) {\n         mLegendLabelPaint.setColor(mLegend.getTextColor());\n \n         float labelLineHeight = Utils.getLineHeight(mLegendLabelPaint, legendFontMetrics);\n-        float labelLineSpacing = Utils.getLineSpacing(mLegendLabelPaint, legendFontMetrics) + mLegend.getYEntrySpace();\n+        float labelLineSpacing = Utils.getLineSpacing(mLegendLabelPaint, legendFontMetrics)\n+                + Utils.convertDpToPixel(mLegend.getYEntrySpace());\n         float formYOffset = labelLineHeight - Utils.calcTextHeight(mLegendLabelPaint, \"ABC\") / 2.f;\n \n         LegendEntry[] entries = mLegend.getEntries();\n \n-        float formToTextSpace = mLegend.getFormToTextSpace();\n-        float xEntrySpace = mLegend.getXEntrySpace();\n+        float formToTextSpace = Utils.convertDpToPixel(mLegend.getFormToTextSpace());\n+        float xEntrySpace = Utils.convertDpToPixel(mLegend.getXEntrySpace());\n         Legend.LegendOrientation orientation = mLegend.getOrientation();\n         Legend.LegendHorizontalAlignment horizontalAlignment = mLegend.getHorizontalAlignment();\n         Legend.LegendVerticalAlignment verticalAlignment = mLegend.getVerticalAlignment();\n         Legend.LegendDirection direction = mLegend.getDirection();\n-        float defaultFormSize = mLegend.getFormSize();\n+        float defaultFormSize = Utils.convertDpToPixel(mLegend.getFormSize());\n \n         // space between the entries\n-        float stackSpace = mLegend.getStackSpace();\n+        float stackSpace = Utils.convertDpToPixel(mLegend.getStackSpace());\n \n         float yoffset = mLegend.getYOffset();\n         float xoffset = mLegend.getXOffset();\n@@ -334,7 +335,7 @@ public void renderLegend(Canvas c) {\n \n                     LegendEntry e = entries[i];\n                     boolean drawingForm = e.form != Legend.LegendForm.NONE;\n-                    float formSize = Float.isNaN(e.formSize) ? defaultFormSize : e.formSize;\n+                    float formSize = Float.isNaN(e.formSize) ? defaultFormSize : Utils.convertDpToPixel(e.formSize);\n \n                     if (i < calculatedLabelBreakPoints.size() && calculatedLabelBreakPoints.get(i)) {\n                         posX = originPosX;\n@@ -415,7 +416,7 @@ public void renderLegend(Canvas c) {\n \n                     LegendEntry e = entries[i];\n                     boolean drawingForm = e.form != Legend.LegendForm.NONE;\n-                    float formSize = Float.isNaN(e.formSize) ? defaultFormSize : e.formSize;\n+                    float formSize = Float.isNaN(e.formSize) ? defaultFormSize : Utils.convertDpToPixel(e.formSize);\n \n                     float posX = originPosX;\n \n@@ -495,7 +496,10 @@ protected void drawForm(\n \n         mLegendFormPaint.setColor(entry.formColor);\n \n-        final float formSize = Float.isNaN(entry.formSize) ? legend.getFormSize() : entry.formSize;\n+        final float formSize = Utils.convertDpToPixel(\n+                Float.isNaN(entry.formSize)\n+                        ? legend.getFormSize()\n+                        : entry.formSize);\n         final float half = formSize / 2f;\n \n         switch (form) {\n@@ -520,9 +524,10 @@ protected void drawForm(\n \n             case LINE:\n             {\n-                final float formLineWidth = Float.isNaN(entry.formLineWidth)\n-                        ? legend.getFormLineWidth()\n-                        : entry.formLineWidth;\n+                final float formLineWidth = Utils.convertDpToPixel(\n+                        Float.isNaN(entry.formLineWidth)\n+                                ? legend.getFormLineWidth()\n+                                : entry.formLineWidth);\n                 final DashPathEffect formLineDashEffect = entry.formLineDashEffect == null\n                         ? legend.getFormLineDashEffect()\n                         : entry.formLineDashEffect;",
    "output": "Set those sizes to dps, convert internally.\n\nUntil now it was set-dps, get-pixels."
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -149,10 +149,11 @@ public boolean onTouch(View v, MotionEvent event) {\n                         if (mChart.isPinchZoomEnabled()) {\n                             mTouchMode = PINCH_ZOOM;\n                         } else {\n-                            if (mSavedXDist > mSavedYDist)\n-                                mTouchMode = X_ZOOM;\n-                            else\n-                                mTouchMode = Y_ZOOM;\n+                            if (mChart.isScaleXEnabled() != mChart.isScaleYEnabled()) {\n+                                mTouchMode = mChart.isScaleXEnabled() ? X_ZOOM : Y_ZOOM;\n+                            } else {\n+                                mTouchMode = mSavedXDist > mSavedYDist ? X_ZOOM : Y_ZOOM;\n+                            }\n                         }\n                     }\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -229,7 +229,7 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n         int visibleAngleCount = 0;\n         for (int j = 0; j < entryCount; j++) {\n             // draw only if the value is greater than zero\n-            if ((Math.abs(dataSet.getEntryForIndex(j).getY()) > 0.000001)) {\n+            if ((Math.abs(dataSet.getEntryForIndex(j).getY()) > Utils.FLOAT_EPSILON)) {\n                 visibleAngleCount++;\n             }\n         }\n@@ -244,7 +244,7 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n             Entry e = dataSet.getEntryForIndex(j);\n \n             // draw only if the value is greater than zero\n-            if ((Math.abs(e.getY()) > 0.000001)) {\n+            if ((Math.abs(e.getY()) > Utils.FLOAT_EPSILON)) {\n \n                 if (!mChart.needsHighlight(j)) {\n \n@@ -265,7 +265,7 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n \n                     float arcStartPointX = 0.f, arcStartPointY = 0.f;\n \n-                    if (sweepAngleOuter % 360f < Utils.FLOAT_EPSILON) {\n+                    if (sweepAngleOuter % 360f <= Utils.FLOAT_EPSILON) {\n                         // Android is doing \"mod 360\"\n                         mPathBuffer.addCircle(center.x, center.y, radius, Path.Direction.CW);\n                     } else {\n@@ -771,7 +771,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             int visibleAngleCount = 0;\n             for (int j = 0; j < entryCount; j++) {\n                 // draw only if the value is greater than zero\n-                if ((Math.abs(set.getEntryForIndex(j).getY()) > 0.000001)) {\n+                if ((Math.abs(set.getEntryForIndex(j).getY()) > Utils.FLOAT_EPSILON)) {\n                     visibleAngleCount++;\n                 }\n             }\n@@ -958,7 +958,7 @@ protected void drawRoundedSlices(Canvas c) {\n             Entry e = dataSet.getEntryForIndex(j);\n \n             // draw only if the value is greater than zero\n-            if ((Math.abs(e.getY()) > 0.000001)) {\n+            if ((Math.abs(e.getY()) > Utils.FLOAT_EPSILON)) {\n \n                 float x = (float) ((r - circleRadius)\n                         * Math.cos(Math.toRadians((angle + sliceAngle)",
    "output": "Merge"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -265,7 +265,7 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n \n                     float arcStartPointX = 0.f, arcStartPointY = 0.f;\n \n-                    if (sweepAngleOuter % 360f < 0.00001f) {\n+                    if (sweepAngleOuter % 360f < Utils.FLOAT_EPSILON) {\n                         // Android is doing \"mod 360\"\n                         mPathBuffer.addCircle(center.x, center.y, radius, Path.Direction.CW);\n                     } else {",
    "output": "Changes related to #2119"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -265,7 +265,7 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n \n                     float arcStartPointX = 0.f, arcStartPointY = 0.f;\n \n-                    if (sweepAngleOuter % 360f < Utils.FLOAT_EPSILON) {\n+                    if (sweepAngleOuter % 360f <= Utils.FLOAT_EPSILON) {\n                         // Android is doing \"mod 360\"\n                         mPathBuffer.addCircle(center.x, center.y, radius, Path.Direction.CW);\n                     } else {",
    "output": "We need an \"equals or less\" here"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -149,10 +149,11 @@ public boolean onTouch(View v, MotionEvent event) {\n                         if (mChart.isPinchZoomEnabled()) {\n                             mTouchMode = PINCH_ZOOM;\n                         } else {\n-                            if (mSavedXDist > mSavedYDist)\n-                                mTouchMode = X_ZOOM;\n-                            else\n-                                mTouchMode = Y_ZOOM;\n+                            if (mChart.isScaleXEnabled() != mChart.isScaleYEnabled()) {\n+                                mTouchMode = mChart.isScaleXEnabled() ? X_ZOOM : Y_ZOOM;\n+                            } else {\n+                                mTouchMode = mSavedXDist > mSavedYDist ? X_ZOOM : Y_ZOOM;\n+                            }\n                         }\n                     }\n ",
    "output": "Refined scaleXEnabled/scaleYEnabled conditioning"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -229,7 +229,7 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n         int visibleAngleCount = 0;\n         for (int j = 0; j < entryCount; j++) {\n             // draw only if the value is greater than zero\n-            if ((Math.abs(dataSet.getEntryForIndex(j).getY()) > 0.000001)) {\n+            if ((Math.abs(dataSet.getEntryForIndex(j).getY()) > Utils.FLOAT_EPSILON)) {\n                 visibleAngleCount++;\n             }\n         }\n@@ -244,7 +244,7 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n             Entry e = dataSet.getEntryForIndex(j);\n \n             // draw only if the value is greater than zero\n-            if ((Math.abs(e.getY()) > 0.000001)) {\n+            if ((Math.abs(e.getY()) > Utils.FLOAT_EPSILON)) {\n \n                 if (!mChart.needsHighlight(j)) {\n \n@@ -265,7 +265,7 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n \n                     float arcStartPointX = 0.f, arcStartPointY = 0.f;\n \n-                    if (sweepAngleOuter % 360f < 0.00001f) {\n+                    if (sweepAngleOuter % 360f < Utils.FLOAT_EPSILON) {\n                         // Android is doing \"mod 360\"\n                         mPathBuffer.addCircle(center.x, center.y, radius, Path.Direction.CW);\n                     } else {\n@@ -771,7 +771,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             int visibleAngleCount = 0;\n             for (int j = 0; j < entryCount; j++) {\n                 // draw only if the value is greater than zero\n-                if ((Math.abs(set.getEntryForIndex(j).getY()) > 0.000001)) {\n+                if ((Math.abs(set.getEntryForIndex(j).getY()) > Utils.FLOAT_EPSILON)) {\n                     visibleAngleCount++;\n                 }\n             }\n@@ -958,7 +958,7 @@ protected void drawRoundedSlices(Canvas c) {\n             Entry e = dataSet.getEntryForIndex(j);\n \n             // draw only if the value is greater than zero\n-            if ((Math.abs(e.getY()) > 0.000001)) {\n+            if ((Math.abs(e.getY()) > Utils.FLOAT_EPSILON)) {\n \n                 float x = (float) ((r - circleRadius)\n                         * Math.cos(Math.toRadians((angle + sliceAngle)",
    "output": "Use an actual Epsilon here"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -65,7 +65,8 @@ public LineChartRenderer(LineDataProvider chart, ChartAnimator animator,\n     }\n \n     @Override\n-    public void initBuffers() { }\n+    public void initBuffers() {\n+    }\n \n     @Override\n     public void drawData(Canvas c) {\n@@ -231,7 +232,7 @@ protected void drawCubicBezier(ILineDataSet dataSet) {\n \n             cubicFillPath.reset();\n             cubicFillPath.addPath(cubicPath);\n-            // create a new path, this is bad for performance\n+\n             drawCubicFill(mBitmapCanvas, dataSet, cubicFillPath, trans, mXBounds);\n         }\n \n@@ -440,7 +441,6 @@ protected void drawLinearFill(Canvas c, ILineDataSet dataSet, Transformer trans,\n             if (currentStartIndex <= currentEndIndex) {\n                 generateFilledPath(dataSet, currentStartIndex, currentEndIndex, filled);\n \n-\n                 trans.pathValueToPixel(filled);\n \n                 final Drawable drawable = dataSet.getFillDrawable();\n@@ -504,7 +504,6 @@ private void generateFilledPath(final ILineDataSet dataSet, final int startIndex\n         }\n \n         filled.close();\n-\n     }\n \n     @Override",
    "output": "Cleanup"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -265,7 +265,7 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n \n                     float arcStartPointX = 0.f, arcStartPointY = 0.f;\n \n-                    if (sweepAngleOuter % 360f == 0.f) {\n+                    if (sweepAngleOuter % 360f < 0.00001f) {\n                         // Android is doing \"mod 360\"\n                         mPathBuffer.addCircle(center.x, center.y, radius, Path.Direction.CW);\n                     } else {",
    "output": "Fix #2119"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/LineDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/LineDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/LineDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/LineDataSet.java\n@@ -4,6 +4,7 @@\n import android.content.Context;\n import android.graphics.Color;\n import android.graphics.DashPathEffect;\n+import android.util.Log;\n \n import com.github.mikephil.charting.formatter.DefaultFillFormatter;\n import com.github.mikephil.charting.formatter.IFillFormatter;\n@@ -146,13 +147,18 @@ public float getCubicIntensity() {\n \n \n     /**\n-     * sets the radius of the drawn circles.\n-     * Default radius = 4f\n+     * Sets the radius of the drawn circles.\n+     * Default radius = 4f, Min = 1f\n      *\n      * @param radius\n      */\n     public void setCircleRadius(float radius) {\n-        mCircleRadius = Utils.convertDpToPixel(radius);\n+\n+        if (radius >= 1f) {\n+            mCircleRadius = Utils.convertDpToPixel(radius);\n+        } else {\n+            Log.e(\"LineDataSet\", \"Circle radius cannot be < 1\");\n+        }\n     }\n \n     @Override\n@@ -161,13 +167,18 @@ public float getCircleRadius() {\n     }\n \n     /**\n-     * sets the hole radius of the drawn circles.\n-     * Default radius = 2f\n+     * Sets the hole radius of the drawn circles.\n+     * Default radius = 2f, Min = 0.5f\n      *\n      * @param holeRadius\n      */\n     public void setCircleHoleRadius(float holeRadius) {\n-        mCircleHoleRadius = Utils.convertDpToPixel(holeRadius);\n+\n+        if (holeRadius >= 0.5f) {\n+            mCircleHoleRadius = Utils.convertDpToPixel(holeRadius);\n+        } else {\n+            Log.e(\"LineDataSet\", \"Circle radius cannot be < 0.5\");\n+        }\n     }\n \n     @Override",
    "output": "Fix crash related to circle size (#2115)"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarData.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarData.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarData.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarData.java\n@@ -15,7 +15,7 @@ public class BarData extends BarLineScatterCandleBubbleData<IBarDataSet> {\n     /**\n      * the width of the bars on the x-axis, in values (not pixels)\n      */\n-    private float mBarWidth = 1f;\n+    private float mBarWidth = 0.85f;\n \n     public BarData() {\n         super();\n@@ -31,7 +31,7 @@ public BarData(List<IBarDataSet> dataSets) {\n \n     /**\n      * Sets the width each bar should have on the x-axis (in values, not pixels).\n-     * Default 1f\n+     * Default 0.85f\n      *\n      * @param mBarWidth\n      */",
    "output": "Choose a default that matches the default v2 behavior\n\nTo avoid hurting existing stylings drastically"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmWikiExample.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmWikiExample.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmWikiExample.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmWikiExample.java\n@@ -11,7 +11,7 @@\n import com.github.mikephil.charting.data.LineData;\n import com.github.mikephil.charting.data.realm.implementation.RealmBarDataSet;\n import com.github.mikephil.charting.data.realm.implementation.RealmLineDataSet;\n-import com.github.mikephil.charting.formatter.AxisValueFormatter;\n+import com.github.mikephil.charting.formatter.IAxisValueFormatter;\n import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;\n import com.github.mikephil.charting.interfaces.datasets.ILineDataSet;\n import com.github.mikephil.charting.utils.ColorTemplate;\n@@ -84,7 +84,7 @@ private void setData() {\n         final RealmResults<Score> results = mRealm.where(Score.class).findAll();\n \n \n-        AxisValueFormatter formatter = new AxisValueFormatter() {\n+        IAxisValueFormatter formatter = new IAxisValueFormatter() {\n             @Override\n             public String getFormattedValue(float value, AxisBase axis) {\n                 return results.get((int) value).getPlayerName();",
    "output": "Updated Realm sample"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java\n@@ -70,12 +70,17 @@ public String getFormattedValue(float value, AxisBase axis) {\n \n     private int getDaysForMonth(int month, int year) {\n \n+        // month is 0-based\n+\n         if (month == 1) {\n+            int x400 = month % 400;\n+            if (x400 < 0)\n+            {\n+                x400 = -x400;\n+            }\n+            boolean is29 = (month % 4) == 0 && x400 != 100 && x400 != 200 && x400 != 300;\n \n-            if (year == 2016 || year == 2020)\n-                return 29;\n-            else\n-                return 28;\n+            return is29 ? 29 : 28;\n         }\n \n         if (month == 3 || month == 5 || month == 8 || month == 10)",
    "output": "Corrected formula for 29-feb :-)"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java\n@@ -45,6 +45,19 @@ public DataSet<PieEntry> copy() {\n         return copied;\n     }\n \n+    @Override\n+    protected void calcMinMax(PieEntry e) {\n+\n+        if (e == null)\n+            return;\n+\n+        if (e.getY() < mYMin)\n+            mYMin = e.getY();\n+\n+        if (e.getY() > mYMax)\n+            mYMax = e.getY();\n+    }\n+\n     /**\n      * Sets the space that is left out between the piechart-slices in dp.\n      * Default: 0 --> no space, maximum 20f\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieEntry.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieEntry.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieEntry.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieEntry.java\n@@ -1,6 +1,7 @@\n package com.github.mikephil.charting.data;\n \n import android.annotation.SuppressLint;\n+import android.util.Log;\n \n /**\n  * Created by Philipp Jahoda on 31/05/16.\n@@ -49,11 +50,13 @@ public void setLabel(String label) {\n     @Override\n     public void setX(float x) {\n         super.setX(x);\n+        Log.i(\"DEPRECATED\", \"Pie entries do not have x values\");\n     }\n \n     @Deprecated\n     @Override\n     public float getX() {\n+        Log.i(\"DEPRECATED\", \"Pie entries do not have x values\");\n         return super.getX();\n     }\n ",
    "output": "Pie's x is deprecated - log it out, and avoid in calcMinMax"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n@@ -98,7 +98,7 @@ public abstract class Chart<T extends ChartData<? extends IDataSet<? extends Ent\n     /**\n      * default value-formatter, number of digits depends on provided chart-data\n      */\n-    protected DefaultValueFormatter mDefaultFormatter = new DefaultValueFormatter(0);\n+    protected DefaultValueFormatter mDefaultValueFormatter = new DefaultValueFormatter(0);\n \n     /**\n      * paint object used for drawing the description text in the bottom right\n@@ -305,8 +305,8 @@ public void setData(T data) {\n         setupDefaultFormatter(data.getYMin(), data.getYMax());\n \n         for (IDataSet set : mData.getDataSets()) {\n-            if (set.needsFormatter() || set.getValueFormatter() == mDefaultFormatter)\n-                set.setValueFormatter(mDefaultFormatter);\n+            if (set.needsFormatter() || set.getValueFormatter() == mDefaultValueFormatter)\n+                set.setValueFormatter(mDefaultValueFormatter);\n         }\n \n         // let the chart know there is new data\n@@ -393,7 +393,7 @@ protected void setupDefaultFormatter(float min, float max) {\n         int digits = Utils.getDecimals(reference);\n \n         // setup the formatter with a new number of digits\n-        mDefaultFormatter.setup(digits);\n+        mDefaultValueFormatter.setup(digits);\n     }\n \n     /**\n@@ -981,7 +981,7 @@ public XAxis getXAxis() {\n      * @return\n      */\n     public IValueFormatter getDefaultValueFormatter() {\n-        return mDefaultFormatter;\n+        return mDefaultValueFormatter;\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java\n@@ -268,7 +268,7 @@ public void setValueFormatter(IValueFormatter f) {\n     @Override\n     public IValueFormatter getValueFormatter() {\n         if (needsFormatter())\n-            return new DefaultValueFormatter(1);\n+            return Utils.getDefaultValueFormatter();\n         return mValueFormatter;\n     }\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java\n@@ -18,6 +18,9 @@\n import android.view.View;\n import android.view.ViewConfiguration;\n \n+import com.github.mikephil.charting.formatter.DefaultValueFormatter;\n+import com.github.mikephil.charting.formatter.IValueFormatter;\n+\n import java.util.List;\n \n /**\n@@ -233,6 +236,19 @@ public static void calcTextSize(Paint paint, String demoText, FSize outputFSize)\n             1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000\n     };\n \n+    private static IValueFormatter mDefaultValueFormatter = generateDefaultValueFormatter();\n+\n+    private static IValueFormatter generateDefaultValueFormatter() {\n+        final DefaultValueFormatter formatter = new DefaultValueFormatter(1);\n+        return formatter;\n+    }\n+\n+    /// - returns: The default value formatter used for all chart components that needs a default\n+    public static IValueFormatter getDefaultValueFormatter()\n+    {\n+        return mDefaultValueFormatter;\n+    }\n+\n     /**\n      * Formats the given number to the given number of decimals, and returns the\n      * number as a string, maximum 35 characters. If thousands are separated, the separating",
    "output": "Avoid creating a new formatter if null\n\nThis can improve performance in certain cases,\n  and has the advantage of controlling the \"global\" default formatter\n  that is used for null cases."
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -273,7 +273,7 @@ public void renderLegend(Canvas c) {\n                 List<FSize> calculatedLabelSizes = mLegend.getCalculatedLabelSizes();\n                 List<Boolean> calculatedLabelBreakPoints = mLegend.getCalculatedLabelBreakPoints();\n \n-                float posX = originPosX + xoffset;\n+                float posX = originPosX;\n                 float posY = 0.f;\n \n                 switch (verticalAlignment) {\n@@ -372,7 +372,7 @@ public void renderLegend(Canvas c) {\n                 for (int i = 0; i < labels.length; i++) {\n \n                     Boolean drawingForm = colors[i] != ColorTemplate.COLOR_SKIP;\n-                    float posX = originPosX + xoffset;\n+                    float posX = originPosX;\n \n                     if (drawingForm) {\n                         if (direction == Legend.LegendDirection.LEFT_TO_RIGHT)",
    "output": "Removed the extra offset that messed up legend location"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n@@ -36,7 +36,7 @@\n import com.github.mikephil.charting.formatter.ValueFormatter;\n import com.github.mikephil.charting.highlight.ChartHighlighter;\n import com.github.mikephil.charting.highlight.Highlight;\n-import com.github.mikephil.charting.highlight.Highlighter;\n+import com.github.mikephil.charting.highlight.IHighlighter;\n import com.github.mikephil.charting.interfaces.dataprovider.ChartInterface;\n import com.github.mikephil.charting.interfaces.datasets.IDataSet;\n import com.github.mikephil.charting.listener.ChartTouchListener;\n@@ -163,7 +163,7 @@ public abstract class Chart<T extends ChartData<? extends IDataSet<? extends Ent\n      */\n     protected DataRenderer mRenderer;\n \n-    protected Highlighter mHighlighter;\n+    protected IHighlighter mHighlighter;\n \n     /**\n      * object that manages the bounds and drawing constraints of the chart\n@@ -1478,7 +1478,7 @@ public void setRenderer(DataRenderer renderer) {\n             mRenderer = renderer;\n     }\n \n-    public Highlighter getHighlighter() {\n+    public IHighlighter getHighlighter() {\n         return mHighlighter;\n     }\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java\n@@ -14,7 +14,8 @@\n /**\n  * Created by Philipp Jahoda on 21/07/15.\n  */\n-public class ChartHighlighter<T extends BarLineScatterCandleBubbleDataProvider> implements Highlighter {\n+public class ChartHighlighter<T extends BarLineScatterCandleBubbleDataProvider> implements IHighlighter\n+{\n \n     /**\n      * instance of the data-provider\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java\n@@ -13,7 +13,8 @@\n /**\n  * Created by Philipp Jahoda on 12/09/15.\n  */\n-public class CombinedHighlighter extends ChartHighlighter<CombinedDataProvider> implements Highlighter {\n+public class CombinedHighlighter extends ChartHighlighter<CombinedDataProvider> implements IHighlighter\n+{\n \n     /**\n      * bar highlighter for supporting stacked highlighting\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/IHighlighter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/IHighlighter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/IHighlighter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/IHighlighter.java\n@@ -3,7 +3,8 @@\n /**\n  * Created by philipp on 10/06/16.\n  */\n-public interface Highlighter {\n+public interface IHighlighter\n+{\n \n     /**\n      * Returns a Highlight object corresponding to the given x- and y- touch positions in pixels.\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/PieRadarHighlighter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/PieRadarHighlighter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/PieRadarHighlighter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/PieRadarHighlighter.java\n@@ -9,7 +9,8 @@\n /**\n  * Created by philipp on 12/06/16.\n  */\n-public abstract class PieRadarHighlighter<T extends PieRadarChartBase> implements Highlighter {\n+public abstract class PieRadarHighlighter<T extends PieRadarChartBase> implements IHighlighter\n+{\n \n     protected T mChart;\n ",
    "output": "Renamed Highlighter -> IHighlighter"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -206,6 +206,8 @@ protected void drawCubicBezier(ILineDataSet dataSet) {\n             Entry cur = prev;\n             Entry next = dataSet.getEntryForIndex(mXBounds.min + 1);\n \n+            if (cur == null || next == null) return;\n+\n             // let the spline start\n             cubicPath.moveTo(cur.getX(), cur.getY() * phaseY);\n ",
    "output": "Safeguard for cubic bezier drawing"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java\n@@ -40,9 +40,7 @@ public class CombinedChart extends BarLineChartBase<CombinedData> implements Com\n      */\n     private boolean mDrawBarShadow = false;\n \n-    protected DrawOrder[] mDrawOrder = new DrawOrder[]{\n-            DrawOrder.BAR, DrawOrder.BUBBLE, DrawOrder.LINE, DrawOrder.CANDLE, DrawOrder.SCATTER\n-    };\n+    protected DrawOrder[] mDrawOrder;\n \n     /**\n      * enum that allows to specify the order in which the different data objects\n@@ -68,10 +66,17 @@ public CombinedChart(Context context, AttributeSet attrs, int defStyle) {\n     protected void init() {\n         super.init();\n \n+        // Default values are not ready here yet\n+        mDrawOrder = new DrawOrder[]{\n+                DrawOrder.BAR, DrawOrder.BUBBLE, DrawOrder.LINE, DrawOrder.CANDLE, DrawOrder.SCATTER\n+        };\n+\n         setHighlighter(new CombinedHighlighter(this, this));\n \n         // Old default behaviour\n         setHighlightFullBarEnabled(true);\n+\n+        mRenderer = new CombinedChartRenderer(this, mAnimator, mViewPortHandler);\n     }\n \n     @Override",
    "output": "Added back missing `new CombinedChartRenderer`"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -1206,7 +1206,7 @@ public void setKeepPositionOnRotation(boolean keepPositionOnRotation) {\n      * Returns the x and y values in the chart at the given touch point\n      * (encapsulated in a MPPointD). This method transforms pixel coordinates to\n      * coordinates / values in the chart. This is the opposite method to\n-     * getPixelsForValues(...).\n+     * getPixelForValues(...).\n      *\n      * @param x\n      * @param y\n@@ -1231,8 +1231,8 @@ public void getValuesByTouchPoint(float x, float y, AxisDependency axis, MPPoint\n      * @param y\n      * @return\n      */\n-    public MPPointD getPixelsForValues(float x, float y, AxisDependency axis) {\n-        return getTransformer(axis).getPixelsForValues(x, y);\n+    public MPPointD getPixelForValues(float x, float y, AxisDependency axis) {\n+        return getTransformer(axis).getPixelForValues(x, y);\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java\n@@ -68,7 +68,7 @@ public Highlight getStackedHighlight(Highlight high, IBarDataSet set, float xVal\n             if (ranges.length > 0) {\n                 int stackIndex = getClosestStackIndex(ranges, yVal);\n \n-                MPPointD pixels = mChart.getTransformer(set.getAxisDependency()).getPixelsForValues(high.getX(), ranges[stackIndex].to);\n+                MPPointD pixels = mChart.getTransformer(set.getAxisDependency()).getPixelForValues(high.getX(), ranges[stackIndex].to);\n \n                 Highlight stackedHigh = new Highlight(\n                         entry.getX(),\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java\n@@ -167,7 +167,7 @@ protected Highlight buildHighlight(IDataSet set, int dataSetIndex, float xVal, D\n         if (e == null)\n             return null;\n \n-        MPPointD pixels = mChart.getTransformer(set.getAxisDependency()).getPixelsForValues(e.getX(), e.getY());\n+        MPPointD pixels = mChart.getTransformer(set.getAxisDependency()).getPixelForValues(e.getX(), e.getY());\n \n         return new Highlight(e.getX(), e.getY(), (float) pixels.x, (float) pixels.y, dataSetIndex, set.getAxisDependency());\n     }\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/HorizontalBarHighlighter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/HorizontalBarHighlighter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/HorizontalBarHighlighter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/HorizontalBarHighlighter.java\n@@ -47,7 +47,7 @@ protected Highlight buildHighlight(IDataSet set, int dataSetIndex, float xVal, D\n \n \t\tfinal Entry e = set.getEntryForXPos(xVal, rounding);\n \n-\t\tMPPointD pixels = mChart.getTransformer(set.getAxisDependency()).getPixelsForValues(e.getY(), e.getX());\n+\t\tMPPointD pixels = mChart.getTransformer(set.getAxisDependency()).getPixelForValues(e.getY(), e.getX());\n \n \t\treturn new Highlight(e.getX(), e.getY(), (float) pixels.x, (float) pixels.y, dataSetIndex, set.getAxisDependency());\n \t}\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n@@ -326,7 +326,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             float highValue = e.getHigh() * mAnimator.getPhaseY();\n             float y = (lowValue + highValue) / 2f;\n \n-            MPPointD pix = mChart.getTransformer(set.getAxisDependency()).getPixelsForValues(e.getX(), y);\n+            MPPointD pix = mChart.getTransformer(set.getAxisDependency()).getPixelForValues(e.getX(), y);\n \n             high.setDraw((float) pix.x, (float) pix.y);\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -668,7 +668,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             if (!isInBoundsX(e, set))\n                 continue;\n \n-            MPPointD pix = mChart.getTransformer(set.getAxisDependency()).getPixelsForValues(e.getX(), e.getY() * mAnimator\n+            MPPointD pix = mChart.getTransformer(set.getAxisDependency()).getPixelForValues(e.getX(), e.getY() * mAnimator\n                     .getPhaseY());\n \n             high.setDraw((float) pix.x, (float) pix.y);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/ScatterChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n@@ -148,7 +148,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             if (!isInBoundsX(e, set))\n                 continue;\n \n-            MPPointD pix = mChart.getTransformer(set.getAxisDependency()).getPixelsForValues(e.getX(), e.getY() * mAnimator\n+            MPPointD pix = mChart.getTransformer(set.getAxisDependency()).getPixelForValues(e.getX(), e.getY() * mAnimator\n                     .getPhaseY());\n \n             high.setDraw((float) pix.x, (float) pix.y);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -203,7 +203,7 @@ protected float[] getTransformedPositions() {\n     protected void drawZeroLine(Canvas c) {\n \n         // draw zero line\n-        MPPointD pos = mTrans.getPixelsForValues(0f, 0f);\n+        MPPointD pos = mTrans.getPixelForValues(0f, 0f);\n \n         mZeroLinePaint.setColor(mYAxis.getZeroLineColor());\n         mZeroLinePaint.setStrokeWidth(mYAxis.getZeroLineWidth());\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n@@ -179,7 +179,7 @@ protected Path linePath(Path p, int i, float[] positions) {\n     protected void drawZeroLine(Canvas c) {\n \n         // draw zero line\n-        MPPointD pos = mTrans.getPixelsForValues(0f, 0f);\n+        MPPointD pos = mTrans.getPixelForValues(0f, 0f);\n \n         mZeroLinePaint.setColor(mYAxis.getZeroLineColor());\n         mZeroLinePaint.setStrokeWidth(mYAxis.getZeroLineWidth());\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java\n@@ -353,7 +353,7 @@ public void rectValuesToPixel(List<RectF> rects) {\n             m.mapRect(rects.get(i));\n     }\n \n-    protected Matrix mPixelsToValueMatrixBuffer = new Matrix();\n+    protected Matrix mPixelToValueMatrixBuffer = new Matrix();\n \n     /**\n      * Transforms the given array of touch positions (pixels) (x, y, x, y, ...)\n@@ -363,7 +363,7 @@ public void rectValuesToPixel(List<RectF> rects) {\n      */\n     public void pixelsToValue(float[] pixels) {\n \n-        Matrix tmp = mPixelsToValueMatrixBuffer;\n+        Matrix tmp = mPixelToValueMatrixBuffer;\n         tmp.reset();\n \n         // invert all matrixes to convert back to the original value\n@@ -387,7 +387,7 @@ public void pixelsToValue(float[] pixels) {\n      * returns the x and y values in the chart at the given touch point\n      * (encapsulated in a MPPointD). This method transforms pixel coordinates to\n      * coordinates / values in the chart. This is the opposite method to\n-     * getPixelsForValues(...).\n+     * getPixelForValues(...).\n      *\n      * @param x\n      * @param y\n@@ -419,7 +419,7 @@ public void getValuesByTouchPoint(float x, float y, MPPointD outputPoint) {\n      * @param y\n      * @return\n      */\n-    public MPPointD getPixelsForValues(float x, float y) {\n+    public MPPointD getPixelForValues(float x, float y) {\n \n         ptsBuffer[0] = x;\n         ptsBuffer[1] = y;",
    "output": "These return a single pixel (x/y), for values (x value and y value)"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java\n@@ -81,11 +81,9 @@ public CombinedData getCombinedData() {\n \n     @Override\n     public void setData(CombinedData data) {\n-        mData = null;\n-        mRenderer = null;\n         super.setData(data);\n         setHighlighter(new CombinedHighlighter(this, this));\n-        mRenderer = new CombinedChartRenderer(this, mAnimator, mViewPortHandler);\n+        ((CombinedChartRenderer)mRenderer).createRenderers();\n         mRenderer.initBuffers();\n     }\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CombinedChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CombinedChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CombinedChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CombinedChartRenderer.java\n@@ -9,6 +9,7 @@\n import com.github.mikephil.charting.data.ChartData;\n import com.github.mikephil.charting.data.CombinedData;\n import com.github.mikephil.charting.highlight.Highlight;\n+import com.github.mikephil.charting.interfaces.dataprovider.BarLineScatterCandleBubbleDataProvider;\n import com.github.mikephil.charting.utils.ViewPortHandler;\n \n import java.lang.ref.WeakReference;\n@@ -30,45 +31,45 @@ public class CombinedChartRenderer extends DataRenderer {\n     public CombinedChartRenderer(CombinedChart chart, ChartAnimator animator, ViewPortHandler viewPortHandler) {\n         super(animator, viewPortHandler);\n         mChart = new WeakReference<Chart>(chart);\n-        createRenderers(chart, animator, viewPortHandler);\n+        createRenderers();\n     }\n \n     /**\n      * Creates the renderers needed for this combined-renderer in the required order. Also takes the DrawOrder into\n      * consideration.\n-     *\n-     * @param chart\n-     * @param animator\n-     * @param viewPortHandler\n      */\n-    protected void createRenderers(CombinedChart chart, ChartAnimator animator, ViewPortHandler viewPortHandler) {\n+    public void createRenderers() {\n \n         mRenderers.clear();\n \n+        CombinedChart chart = (CombinedChart)mChart.get();\n+        if (chart == null)\n+            return;\n+\n         DrawOrder[] orders = chart.getDrawOrder();\n \n         for (DrawOrder order : orders) {\n \n             switch (order) {\n                 case BAR:\n                     if (chart.getBarData() != null)\n-                        mRenderers.add(new BarChartRenderer(chart, animator, viewPortHandler));\n+                        mRenderers.add(new BarChartRenderer(chart, mAnimator, mViewPortHandler));\n                     break;\n                 case BUBBLE:\n                     if (chart.getBubbleData() != null)\n-                        mRenderers.add(new BubbleChartRenderer(chart, animator, viewPortHandler));\n+                        mRenderers.add(new BubbleChartRenderer(chart, mAnimator, mViewPortHandler));\n                     break;\n                 case LINE:\n                     if (chart.getLineData() != null)\n-                        mRenderers.add(new LineChartRenderer(chart, animator, viewPortHandler));\n+                        mRenderers.add(new LineChartRenderer(chart, mAnimator, mViewPortHandler));\n                     break;\n                 case CANDLE:\n                     if (chart.getCandleData() != null)\n-                        mRenderers.add(new CandleStickChartRenderer(chart, animator, viewPortHandler));\n+                        mRenderers.add(new CandleStickChartRenderer(chart, mAnimator, mViewPortHandler));\n                     break;\n                 case SCATTER:\n                     if (chart.getScatterData() != null)\n-                        mRenderers.add(new ScatterChartRenderer(chart, animator, viewPortHandler));\n+                        mRenderers.add(new ScatterChartRenderer(chart, mAnimator, mViewPortHandler));\n                     break;\n             }\n         }",
    "output": "Call createRenderers() instead of recreating the renderer each time"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/ScatterChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/ScatterChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/ScatterChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/ScatterChart.java\n@@ -48,7 +48,12 @@ public ScatterData getScatterData() {\n      */\n     public enum ScatterShape {\n \n-        SQUARE(\"SQUARE\"), CIRCLE(\"CIRCLE\"), TRIANGLE(\"TRIANGLE\"), CROSS(\"CROSS\"), X(\"X\"), CHEVRON_UP(\"CHEVRON_UP\"),\n+        SQUARE(\"SQUARE\"),\n+        CIRCLE(\"CIRCLE\"),\n+        TRIANGLE(\"TRIANGLE\"),\n+        CROSS(\"CROSS\"),\n+        X(\"X\"),\n+        CHEVRON_UP(\"CHEVRON_UP\"),\n         CHEVRON_DOWN(\"CHEVRON_DOWN\");\n \n         private final String shapeIdentifier;\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/ScatterDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ScatterDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/ScatterDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ScatterDataSet.java\n@@ -3,10 +3,15 @@\n \n import com.github.mikephil.charting.charts.ScatterChart;\n import com.github.mikephil.charting.interfaces.datasets.IScatterDataSet;\n+import com.github.mikephil.charting.renderer.scatter.ChevronDownShapeRenderer;\n+import com.github.mikephil.charting.renderer.scatter.ChevronUpShapeRenderer;\n+import com.github.mikephil.charting.renderer.scatter.CircleShapeRenderer;\n+import com.github.mikephil.charting.renderer.scatter.CrossShapeRenderer;\n import com.github.mikephil.charting.renderer.scatter.IShapeRenderer;\n import com.github.mikephil.charting.renderer.scatter.SquareShapeRenderer;\n+import com.github.mikephil.charting.renderer.scatter.TriangleShapeRenderer;\n+import com.github.mikephil.charting.renderer.scatter.XShapeRenderer;\n import com.github.mikephil.charting.utils.ColorTemplate;\n-import com.github.mikephil.charting.utils.ShapeRendererHandler;\n \n import java.util.ArrayList;\n import java.util.List;\n@@ -36,11 +41,6 @@ public class ScatterDataSet extends LineScatterCandleRadarDataSet<Entry> impleme\n      */\n     private int mScatterShapeHoleColor = ColorTemplate.COLOR_NONE;\n \n-    /**\n-     * Custom path object the user can provide that is drawn where the values\n-     * are at. This is used when ScatterShape.CUSTOM is set for a DataSet.\n-     */\n-    //private Path mCustomScatterPath = null;\n     public ScatterDataSet(List<Entry> yVals, String label) {\n         super(yVals, label);\n     }\n@@ -91,9 +91,7 @@ public float getScatterShapeSize() {\n      * @param shape\n      */\n     public void setScatterShape(ScatterChart.ScatterShape shape) {\n-\n-        ShapeRendererHandler handler = new ShapeRendererHandler();\n-        mShapeRenderer = handler.getShapeRenderer(shape);\n+        mShapeRenderer = getRendererForShape(shape);\n     }\n \n     /**\n@@ -139,4 +137,19 @@ public void setScatterShapeHoleColor(int holeColor) {\n     public int getScatterShapeHoleColor() {\n         return mScatterShapeHoleColor;\n     }\n+\n+    public static IShapeRenderer getRendererForShape(ScatterChart.ScatterShape shape) {\n+\n+        switch (shape) {\n+            case SQUARE: return new SquareShapeRenderer();\n+            case CIRCLE: return new CircleShapeRenderer();\n+            case TRIANGLE: return new TriangleShapeRenderer();\n+            case CROSS: return new CrossShapeRenderer();\n+            case X: return new XShapeRenderer();\n+            case CHEVRON_UP: return new ChevronUpShapeRenderer();\n+            case CHEVRON_DOWN: return new ChevronDownShapeRenderer();\n+        }\n+\n+        return null;\n+    }\n }\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ShapeRendererHandler.java b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ShapeRendererHandler.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ShapeRendererHandler.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ShapeRendererHandler.java\n@@ -1,59 +0,0 @@\n-package com.github.mikephil.charting.utils;\n-\n-import com.github.mikephil.charting.charts.ScatterChart;\n-import com.github.mikephil.charting.renderer.scatter.ChevronDownShapeRenderer;\n-import com.github.mikephil.charting.renderer.scatter.ChevronUpShapeRenderer;\n-import com.github.mikephil.charting.renderer.scatter.CircleShapeRenderer;\n-import com.github.mikephil.charting.renderer.scatter.CrossShapeRenderer;\n-import com.github.mikephil.charting.renderer.scatter.IShapeRenderer;\n-import com.github.mikephil.charting.renderer.scatter.SquareShapeRenderer;\n-import com.github.mikephil.charting.renderer.scatter.TriangleShapeRenderer;\n-import com.github.mikephil.charting.renderer.scatter.XShapeRenderer;\n-\n-import java.util.HashMap;\n-\n-/**\n- * Created by Philipp Jahoda on 27/06/16.\n- * Class allowing to determine the corresponding IShapeRenderer for a given ScatterShape.\n- */\n-public final class ShapeRendererHandler {\n-\n-    /**\n-     * Dictionary of IShapeRenderer which are responsible for drawing custom shapes.\n-     * Can add to it your custom shapes.\n-     * CustomShapeRenderer Implements IShapeRenderer{}\n-     */\n-    protected HashMap<String, IShapeRenderer> shapeRendererList;\n-\n-    /**\n-     * Constructor\n-     */\n-    public ShapeRendererHandler() {\n-        initShapeRenderers();\n-    }\n-\n-    /**\n-     * Returns the corresponding IShapeRenderer for a given ScatterShape.\n-     *\n-     * @param shape\n-     * @return\n-     */\n-    public IShapeRenderer getShapeRenderer(ScatterChart.ScatterShape shape) {\n-        return shapeRendererList.get(shape.toString());\n-    }\n-\n-    /**\n-     * Init default ShapeRenderers.\n-     */\n-    protected void initShapeRenderers() {\n-        shapeRendererList = new HashMap<>();\n-\n-        shapeRendererList.put(ScatterChart.ScatterShape.SQUARE.toString(), new SquareShapeRenderer());\n-        shapeRendererList.put(ScatterChart.ScatterShape.CIRCLE.toString(), new CircleShapeRenderer());\n-        shapeRendererList.put(ScatterChart.ScatterShape.TRIANGLE.toString(), new TriangleShapeRenderer());\n-        shapeRendererList.put(ScatterChart.ScatterShape.CROSS.toString(), new CrossShapeRenderer());\n-        shapeRendererList.put(ScatterChart.ScatterShape.X.toString(), new XShapeRenderer());\n-        shapeRendererList.put(ScatterChart.ScatterShape.CHEVRON_UP.toString(), new ChevronUpShapeRenderer());\n-        shapeRendererList.put(ScatterChart.ScatterShape.CHEVRON_DOWN.toString(), new ChevronDownShapeRenderer());\n-    }\n-}",
    "output": "Simplified scatter shape enum model\n\n(Why would anyone try to subclass an enum?)"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -657,7 +657,7 @@ public void zoom(float scaleX, float scaleY, float xValue, float yValue, AxisDep\n      * @param scaleX\n      * @param scaleY\n      */\n-    public void zoomCenter(float scaleX, float scaleY) {\n+    public void zoomToCenter(float scaleX, float scaleY) {\n \n         MPPointF center = getCenterOffsets();\n ",
    "output": "Renamed `zoomCenter` to `zoomToCenter`"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -80,11 +80,12 @@ public void drawData(Canvas c) {\n         }\n     }\n \n+    private RectF mBarShadowRectBuffer = new RectF();\n+\n     protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n \n         Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n \n-        mShadowPaint.setColor(dataSet.getBarShadowColor());\n         mBarBorderPaint.setColor(dataSet.getBarBorderColor());\n         mBarBorderPaint.setStrokeWidth(Utils.convertDpToPixel(dataSet.getBarBorderWidth()));\n \n@@ -93,34 +94,53 @@ protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n         float phaseX = mAnimator.getPhaseX();\n         float phaseY = mAnimator.getPhaseY();\n \n-        // initialize the buffer\n-        BarBuffer buffer = mBarBuffers[index];\n-        buffer.setPhases(phaseX, phaseY);\n-        buffer.setDataSet(index);\n-        buffer.setInverted(mChart.isInverted(dataSet.getAxisDependency()));\n-        buffer.setBarWidth(mChart.getBarData().getBarWidth());\n+        // draw the bar shadow before the values\n+        if (mChart.isDrawBarShadowEnabled()) {\n+            mShadowPaint.setColor(dataSet.getBarShadowColor());\n \n-        buffer.feed(dataSet);\n+            BarData barData = mChart.getBarData();\n \n-        trans.pointValuesToPixel(buffer.buffer);\n+            final float barWidth = barData.getBarWidth();\n+            final float barWidthHalf = barWidth / 2.0f;\n+            float x;\n \n-        // draw the bar shadow before the values\n-        if (mChart.isDrawBarShadowEnabled()) {\n+            for (int i = 0, count = Math.min((int)(Math.ceil((float)(dataSet.getEntryCount()) * phaseX)), dataSet.getEntryCount());\n+                i < count;\n+                i++) {\n+\n+                BarEntry e = dataSet.getEntryForIndex(i);\n \n-            for (int j = 0; j < buffer.size(); j += 4) {\n+                x = e.getX();\n \n-                if (!mViewPortHandler.isInBoundsLeft(buffer.buffer[j + 2]))\n+                mBarShadowRectBuffer.left = x - barWidthHalf;\n+                mBarShadowRectBuffer.right = x + barWidthHalf;\n+\n+                trans.rectValueToPixel(mBarShadowRectBuffer);\n+\n+                if (!mViewPortHandler.isInBoundsLeft(mBarShadowRectBuffer.right))\n                     continue;\n \n-                if (!mViewPortHandler.isInBoundsRight(buffer.buffer[j]))\n+                if (!mViewPortHandler.isInBoundsRight(mBarShadowRectBuffer.left))\n                     break;\n \n-                c.drawRect(buffer.buffer[j], mViewPortHandler.contentTop(),\n-                        buffer.buffer[j + 2],\n-                        mViewPortHandler.contentBottom(), mShadowPaint);\n+                mBarShadowRectBuffer.top = mViewPortHandler.contentTop();\n+                mBarShadowRectBuffer.bottom = mViewPortHandler.contentBottom();\n+\n+                c.drawRect(mBarShadowRectBuffer, mShadowPaint);\n             }\n         }\n \n+        // initialize the buffer\n+        BarBuffer buffer = mBarBuffers[index];\n+        buffer.setPhases(phaseX, phaseY);\n+        buffer.setDataSet(index);\n+        buffer.setInverted(mChart.isInverted(dataSet.getAxisDependency()));\n+        buffer.setBarWidth(mChart.getBarData().getBarWidth());\n+\n+        buffer.feed(dataSet);\n+\n+        trans.pointValuesToPixel(buffer.buffer);\n+\n         final boolean isSingleColor = dataSet.getColors().size() == 1;\n \n         if (isSingleColor) {\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n@@ -48,12 +48,13 @@ public void initBuffers() {\n         }\n     }\n \n+    private RectF mBarShadowRectBuffer = new RectF();\n+\n     @Override\n     protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n \n         Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n \n-        mShadowPaint.setColor(dataSet.getBarShadowColor());\n         mBarBorderPaint.setColor(dataSet.getBarBorderColor());\n         mBarBorderPaint.setStrokeWidth(Utils.convertDpToPixel(dataSet.getBarBorderWidth()));\n \n@@ -62,6 +63,42 @@ protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n         float phaseX = mAnimator.getPhaseX();\n         float phaseY = mAnimator.getPhaseY();\n \n+        // draw the bar shadow before the values\n+        if (mChart.isDrawBarShadowEnabled()) {\n+            mShadowPaint.setColor(dataSet.getBarShadowColor());\n+\n+            BarData barData = mChart.getBarData();\n+\n+            final float barWidth = barData.getBarWidth();\n+            final float barWidthHalf = barWidth / 2.0f;\n+            float x;\n+\n+            for (int i = 0, count = Math.min((int)(Math.ceil((float)(dataSet.getEntryCount()) * phaseX)), dataSet.getEntryCount());\n+                 i < count;\n+                 i++) {\n+\n+                BarEntry e = dataSet.getEntryForIndex(i);\n+\n+                x = e.getX();\n+\n+                mBarShadowRectBuffer.top = x - barWidthHalf;\n+                mBarShadowRectBuffer.bottom = x + barWidthHalf;\n+\n+                trans.rectValueToPixel(mBarShadowRectBuffer);\n+\n+                if (!mViewPortHandler.isInBoundsTop(mBarShadowRectBuffer.bottom))\n+                    continue;\n+\n+                if (!mViewPortHandler.isInBoundsBottom(mBarShadowRectBuffer.top))\n+                    break;\n+\n+                mBarShadowRectBuffer.left = mViewPortHandler.contentLeft();\n+                mBarShadowRectBuffer.right = mViewPortHandler.contentRight();\n+\n+                c.drawRect(mBarShadowRectBuffer, mShadowPaint);\n+            }\n+        }\n+\n         // initialize the buffer\n         BarBuffer buffer = mBarBuffers[index];\n         buffer.setPhases(phaseX, phaseY);\n@@ -87,12 +124,6 @@ protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n             if (!mViewPortHandler.isInBoundsBottom(buffer.buffer[j + 1]))\n                 continue;\n \n-            if (mChart.isDrawBarShadowEnabled()) {\n-                c.drawRect(mViewPortHandler.contentLeft(), buffer.buffer[j + 1],\n-                        mViewPortHandler.contentRight(),\n-                        buffer.buffer[j + 3], mShadowPaint);\n-            }\n-\n             if (!isSingleColor) {\n                 // Set the color for the currently drawn value. If the index\n                 // is out of bounds, reuse colors.",
    "output": "`drawBarShadowEnabled` is working again"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -121,47 +121,32 @@ protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n             }\n         }\n \n-        // if multiple colors\n-        if (dataSet.getColors().size() > 1) {\n+        final boolean isSingleColor = dataSet.getColors().size() == 1;\n \n-            for (int j = 0; j < buffer.size(); j += 4) {\n+        if (isSingleColor) {\n+            mRenderPaint.setColor(dataSet.getColor());\n+        }\n \n-                if (!mViewPortHandler.isInBoundsLeft(buffer.buffer[j + 2]))\n-                    continue;\n+        for (int j = 0; j < buffer.size(); j += 4) {\n \n-                if (!mViewPortHandler.isInBoundsRight(buffer.buffer[j]))\n-                    break;\n+            if (!mViewPortHandler.isInBoundsLeft(buffer.buffer[j + 2]))\n+                continue;\n+\n+            if (!mViewPortHandler.isInBoundsRight(buffer.buffer[j]))\n+                break;\n \n+            if (!isSingleColor) {\n                 // Set the color for the currently drawn value. If the index\n                 // is out of bounds, reuse colors.\n                 mRenderPaint.setColor(dataSet.getColor(j / 4));\n-                c.drawRect(buffer.buffer[j], buffer.buffer[j + 1], buffer.buffer[j + 2],\n-                        buffer.buffer[j + 3], mRenderPaint);\n-\n-                if (drawBorder) {\n-                    c.drawRect(buffer.buffer[j], buffer.buffer[j + 1], buffer.buffer[j + 2],\n-                            buffer.buffer[j + 3], mBarBorderPaint);\n-                }\n             }\n-        } else {\n \n-            mRenderPaint.setColor(dataSet.getColor());\n-\n-            for (int j = 0; j < buffer.size(); j += 4) {\n-\n-                if (!mViewPortHandler.isInBoundsLeft(buffer.buffer[j + 2]))\n-                    continue;\n-\n-                if (!mViewPortHandler.isInBoundsRight(buffer.buffer[j]))\n-                    break;\n+            c.drawRect(buffer.buffer[j], buffer.buffer[j + 1], buffer.buffer[j + 2],\n+                    buffer.buffer[j + 3], mRenderPaint);\n \n+            if (drawBorder) {\n                 c.drawRect(buffer.buffer[j], buffer.buffer[j + 1], buffer.buffer[j + 2],\n-                        buffer.buffer[j + 3], mRenderPaint);\n-\n-                if (drawBorder) {\n-                    c.drawRect(buffer.buffer[j], buffer.buffer[j + 1], buffer.buffer[j + 2],\n-                            buffer.buffer[j + 3], mBarBorderPaint);\n-                }\n+                        buffer.buffer[j + 3], mBarBorderPaint);\n             }\n         }\n     }\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n@@ -73,6 +73,12 @@ protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n \n         trans.pointValuesToPixel(buffer.buffer);\n \n+        final boolean isSingleColor = dataSet.getColors().size() == 1;\n+\n+        if (isSingleColor) {\n+            mRenderPaint.setColor(dataSet.getColor());\n+        }\n+\n         for (int j = 0; j < buffer.size(); j += 4) {\n \n             if (!mViewPortHandler.isInBoundsTop(buffer.buffer[j + 3]))\n@@ -87,9 +93,12 @@ protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n                         buffer.buffer[j + 3], mShadowPaint);\n             }\n \n-            // Set the color for the currently drawn value. If the index\n-            // is out of bounds, reuse colors.\n-            mRenderPaint.setColor(dataSet.getColor(j / 4));\n+            if (!isSingleColor) {\n+                // Set the color for the currently drawn value. If the index\n+                // is out of bounds, reuse colors.\n+                mRenderPaint.setColor(dataSet.getColor(j / 4));\n+            }\n+\n             c.drawRect(buffer.buffer[j], buffer.buffer[j + 1], buffer.buffer[j + 2],\n                     buffer.buffer[j + 3], mRenderPaint);\n ",
    "output": "DRYed that code"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -217,6 +217,8 @@ public void drawValues(Canvas c) {\n                 // get the buffer\n                 BarBuffer buffer = mBarBuffers[i];\n \n+                final float phaseY = mAnimator.getPhaseY();\n+\n                 // if only single values are drawn (sum)\n                 if (!dataSet.isStacked()) {\n \n@@ -293,7 +295,7 @@ public void drawValues(Canvas c) {\n                                     negY -= value;\n                                 }\n \n-                                transformed[k + 1] = y * mAnimator.getPhaseY();\n+                                transformed[k + 1] = y * phaseY;\n                             }\n \n                             trans.pointValuesToPixel(transformed);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n@@ -130,6 +130,8 @@ public void drawValues(Canvas c) {\n                 // get the buffer\n                 BarBuffer buffer = mBarBuffers[i];\n \n+                final float phaseY = mAnimator.getPhaseY();\n+\n                 // if only single values are drawn (sum)\n                 if (!dataSet.isStacked()) {\n \n@@ -230,7 +232,7 @@ public void drawValues(Canvas c) {\n                                     negY -= value;\n                                 }\n \n-                                transformed[k] = y * mAnimator.getPhaseY();\n+                                transformed[k] = y * phaseY;\n                             }\n \n                             trans.pointValuesToPixel(transformed);",
    "output": "Keep that in a variable"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/Entry.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/Entry.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/Entry.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/Entry.java\n@@ -5,6 +5,8 @@\n import android.os.ParcelFormatException;\n import android.os.Parcelable;\n \n+import com.github.mikephil.charting.utils.Utils;\n+\n /**\n  * Class representing one entry in the chart. Might contain multiple values.\n  * Might only contain a single value depending on the used constructor.\n@@ -87,10 +89,10 @@ public boolean equalTo(Entry e) {\n         if (e.getData() != this.getData())\n             return false;\n \n-        if (Math.abs(e.x - this.x) > 0.000001f)\n+        if (Math.abs(e.x - this.x) > Utils.FLOAT_EPSILON)\n             return false;\n \n-        if (Math.abs(e.getY() - this.getY()) > 0.000001f)\n+        if (Math.abs(e.getY() - this.getY()) > Utils.FLOAT_EPSILON)\n             return false;\n \n         return true;\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java\n@@ -36,6 +36,12 @@ public abstract class Utils {\n     public final static double DEG2RAD = (Math.PI / 180.0);\n     public final static float FDEG2RAD = ((float) Math.PI / 180.f);\n \n+    @SuppressWarnings(\"unused\")\n+    public final static double DOUBLE_EPSILON = Double.longBitsToDouble(Double.doubleToLongBits(1.0) + 1);\n+\n+    @SuppressWarnings(\"unused\")\n+    public final static float FLOAT_EPSILON = Float.intBitsToFloat(Float.floatToIntBits(1f) + 1);\n+\n     /**\n      * initialize method, called inside the Chart.init() method.\n      *",
    "output": "Use scientific EPSILON"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java\n@@ -115,7 +115,7 @@ public void renderAxisLabels(Canvas c) {\n         MPPointF pointF = MPPointF.getInstance(0,0);\n         if (mXAxis.getPosition() == XAxisPosition.TOP) {\n             pointF.x = 0.5f;\n-            pointF.y = 0.9f;\n+            pointF.y = 1.0f;\n             drawLabels(c, mViewPortHandler.contentTop() - yoffset, pointF);\n \n         } else if (mXAxis.getPosition() == XAxisPosition.TOP_INSIDE) {",
    "output": "Fixed legend anchor for TOP"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BubbleChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n@@ -193,57 +193,64 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             if (set == null || !set.isHighlightEnabled())\n                 continue;\n \n-            final BubbleEntry entry = set.getEntryForXPos(high.getX());\n+            // In bubble charts - it makes sense to have multiple bubbles on the same X value in the same dataset.\n+            final List<BubbleEntry> entries = set.getEntriesForXPos(high.getX());\n \n-            if (!isInBoundsX(entry, set))\n-                continue;\n+            for (BubbleEntry entry : entries) {\n \n-            Transformer trans = mChart.getTransformer(set.getAxisDependency());\n+                if (entry.getY() != high.getY())\n+                    continue;\n \n-            sizeBuffer[0] = 0f;\n-            sizeBuffer[2] = 1f;\n+                if (!isInBoundsX(entry, set))\n+                    continue;\n \n-            trans.pointValuesToPixel(sizeBuffer);\n+                Transformer trans = mChart.getTransformer(set.getAxisDependency());\n \n-            boolean normalizeSize = set.isNormalizeSizeEnabled();\n+                sizeBuffer[0] = 0f;\n+                sizeBuffer[2] = 1f;\n \n-            // calcualte the full width of 1 step on the x-axis\n-            final float maxBubbleWidth = Math.abs(sizeBuffer[2] - sizeBuffer[0]);\n-            final float maxBubbleHeight = Math.abs(\n-                    mViewPortHandler.contentBottom() - mViewPortHandler.contentTop());\n-            final float referenceSize = Math.min(maxBubbleHeight, maxBubbleWidth);\n+                trans.pointValuesToPixel(sizeBuffer);\n \n-            pointBuffer[0] = entry.getX();\n-            pointBuffer[1] = (entry.getY()) * phaseY;\n-            trans.pointValuesToPixel(pointBuffer);\n+                boolean normalizeSize = set.isNormalizeSizeEnabled();\n \n-            high.setDraw(pointBuffer[0], pointBuffer[1]);\n+                // calcualte the full width of 1 step on the x-axis\n+                final float maxBubbleWidth = Math.abs(sizeBuffer[2] - sizeBuffer[0]);\n+                final float maxBubbleHeight = Math.abs(\n+                        mViewPortHandler.contentBottom() - mViewPortHandler.contentTop());\n+                final float referenceSize = Math.min(maxBubbleHeight, maxBubbleWidth);\n \n-            float shapeHalf = getShapeSize(entry.getSize(),\n-                    set.getMaxSize(),\n-                    referenceSize,\n-                    normalizeSize) / 2f;\n+                pointBuffer[0] = entry.getX();\n+                pointBuffer[1] = (entry.getY()) * phaseY;\n+                trans.pointValuesToPixel(pointBuffer);\n \n-            if (!mViewPortHandler.isInBoundsTop(pointBuffer[1] + shapeHalf)\n-                    || !mViewPortHandler.isInBoundsBottom(pointBuffer[1] - shapeHalf))\n-                continue;\n+                high.setDraw(pointBuffer[0], pointBuffer[1]);\n \n-            if (!mViewPortHandler.isInBoundsLeft(pointBuffer[0] + shapeHalf))\n-                continue;\n+                float shapeHalf = getShapeSize(entry.getSize(),\n+                        set.getMaxSize(),\n+                        referenceSize,\n+                        normalizeSize) / 2f;\n \n-            if (!mViewPortHandler.isInBoundsRight(pointBuffer[0] - shapeHalf))\n-                break;\n+                if (!mViewPortHandler.isInBoundsTop(pointBuffer[1] + shapeHalf)\n+                        || !mViewPortHandler.isInBoundsBottom(pointBuffer[1] - shapeHalf))\n+                    continue;\n \n-            final int originalColor = set.getColor((int) entry.getX());\n+                if (!mViewPortHandler.isInBoundsLeft(pointBuffer[0] + shapeHalf))\n+                    continue;\n+\n+                if (!mViewPortHandler.isInBoundsRight(pointBuffer[0] - shapeHalf))\n+                    break;\n \n-            Color.RGBToHSV(Color.red(originalColor), Color.green(originalColor),\n-                    Color.blue(originalColor), _hsvBuffer);\n-            _hsvBuffer[2] *= 0.5f;\n-            final int color = Color.HSVToColor(Color.alpha(originalColor), _hsvBuffer);\n+                final int originalColor = set.getColor((int) entry.getX());\n \n-            mHighlightPaint.setColor(color);\n-            mHighlightPaint.setStrokeWidth(set.getHighlightCircleWidth());\n-            c.drawCircle(pointBuffer[0], pointBuffer[1], shapeHalf, mHighlightPaint);\n+                Color.RGBToHSV(Color.red(originalColor), Color.green(originalColor),\n+                        Color.blue(originalColor), _hsvBuffer);\n+                _hsvBuffer[2] *= 0.5f;\n+                final int color = Color.HSVToColor(Color.alpha(originalColor), _hsvBuffer);\n+\n+                mHighlightPaint.setColor(color);\n+                mHighlightPaint.setStrokeWidth(set.getHighlightCircleWidth());\n+                c.drawCircle(pointBuffer[0], pointBuffer[1], shapeHalf, mHighlightPaint);\n+            }\n         }\n     }\n }",
    "output": "Groundwork for future support of highlight for multiple bubbles per x"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n@@ -504,6 +504,17 @@ public void enableGridDashedLine(float lineLength, float spaceLength, float phas\n                 lineLength, spaceLength\n         }, phase);\n     }\n+    \n+    /**\n+     * Enables the grid line to be drawn in dashed mode, e.g. like this\n+     * \"- - - - - -\". THIS ONLY WORKS IF HARDWARE-ACCELERATION IS TURNED OFF.\n+     * Keep in mind that hardware acceleration boosts performance.\n+     *\n+     * @param effect  the DashPathEffect\n+     */\n+    public void setGridDashedLine(DashPathEffect effect) {\n+        mGridDashPathEffect = effect;\n+    }\n \n     /**\n      * Disables the grid line to be drawn in dashed mode.",
    "output": "method to set the dash effect"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n@@ -92,6 +92,11 @@ public abstract class AxisBase extends ComponentBase {\n \n     protected boolean mCenterAxisLabels = false;\n \n+    /**\n+     * the path effect of the axis line that makes dashed lines possible\n+     */\n+    private DashPathEffect mAxisLineDashPathEffect = null;\n+\n     /**\n      * the path effect of the grid lines that makes dashed lines possible\n      */\n@@ -524,6 +529,58 @@ public boolean isGridDashedLineEnabled() {\n     public DashPathEffect getGridDashPathEffect() {\n         return mGridDashPathEffect;\n     }\n+    \n+\n+    /**\n+     * Enables the axis line to be drawn in dashed mode, e.g. like this\n+     * \"- - - - - -\". THIS ONLY WORKS IF HARDWARE-ACCELERATION IS TURNED OFF.\n+     * Keep in mind that hardware acceleration boosts performance.\n+     *\n+     * @param lineLength  the length of the line pieces\n+     * @param spaceLength the length of space in between the pieces\n+     * @param phase       offset, in degrees (normally, use 0)\n+     */\n+    public void enableAxisLineDashedLine(float lineLength, float spaceLength, float phase) {\n+        mAxisLineDashPathEffect = new DashPathEffect(new float[]{\n+                lineLength, spaceLength\n+        }, phase);\n+    }\n+    \n+    /**\n+     * Enables the axis line to be drawn in dashed mode, e.g. like this\n+     * \"- - - - - -\". THIS ONLY WORKS IF HARDWARE-ACCELERATION IS TURNED OFF.\n+     * Keep in mind that hardware acceleration boosts performance.\n+     *\n+     * @param effect  the DashPathEffect\n+     */\n+    public void setAxisLineDashedLine(DashPathEffect effect) {\n+        mAxisLineDashPathEffect = effect;\n+    }\n+\n+    /**\n+     * Disables the axis line to be drawn in dashed mode.\n+     */\n+    public void disableAxisLineDashedLine() {\n+        mAxisLineDashPathEffect = null;\n+    }\n+\n+    /**\n+     * Returns true if the axis dashed-line effect is enabled, false if not.\n+     *\n+     * @return\n+     */\n+    public boolean isAxisLineDashedLineEnabled() {\n+        return mAxisLineDashPathEffect == null ? false : true;\n+    }\n+\n+    /**\n+     * returns the DashPathEffect that is set for axis line\n+     *\n+     * @return\n+     */\n+    public DashPathEffect getAxisLineDashPathEffect() {\n+        return mAxisLineDashPathEffect;\n+    }\n \n     /**\n      * ###### BELOW CODE RELATED TO CUSTOM AXIS VALUES ######\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java\n@@ -152,6 +152,7 @@ public void renderAxisLine(Canvas c) {\n \n         mAxisLinePaint.setColor(mXAxis.getAxisLineColor());\n         mAxisLinePaint.setStrokeWidth(mXAxis.getAxisLineWidth());\n+        mAxisLinePaint.setPathEffect(mXAxis.getAxisLineDashPathEffect());\n \n         if (mXAxis.getPosition() == XAxisPosition.TOP\n                 || mXAxis.getPosition() == XAxisPosition.TOP_INSIDE",
    "output": "axis line dash effect"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -37,6 +37,7 @@\n import com.github.mikephil.charting.utils.MPPointF;\n import com.xxmassdeveloper.mpchartexample.custom.DayAxisValueFormatter;\n import com.xxmassdeveloper.mpchartexample.custom.MyAxisValueFormatter;\n+import com.xxmassdeveloper.mpchartexample.custom.XYMarkerView;\n import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n \n import java.util.ArrayList;\n@@ -79,13 +80,15 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart.setDrawGridBackground(false);\n         // mChart.setDrawYLabels(false);\n \n+        AxisValueFormatter xAxisFormatter = new DayAxisValueFormatter(mChart);\n+\n         XAxis xAxis = mChart.getXAxis();\n         xAxis.setPosition(XAxisPosition.BOTTOM);\n         xAxis.setTypeface(mTfLight);\n         xAxis.setDrawGridLines(false);\n         xAxis.setGranularity(1f); // only intervals of 1 day\n         xAxis.setLabelCount(7);\n-        xAxis.setValueFormatter(new DayAxisValueFormatter(mChart));\n+        xAxis.setValueFormatter(xAxisFormatter);\n \n         AxisValueFormatter custom = new MyAxisValueFormatter();\n \n@@ -116,6 +119,8 @@ protected void onCreate(Bundle savedInstanceState) {\n         // l.setCustom(ColorTemplate.VORDIPLOM_COLORS, new String[] { \"abc\",\n         // \"def\", \"ghj\", \"ikl\", \"mno\" });\n \n+        mChart.setMarkerView(new XYMarkerView(this, xAxisFormatter));\n+\n         setData(12, 50);\n \n         // setting data\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java\n@@ -32,7 +32,7 @@ public String getFormattedValue(float value, AxisBase axis) {\n         String monthName = mMonths[month % mMonths.length];\n         String yearName = String.valueOf(year);\n \n-        if (chart.getVisibleXRange() > 30 * axis.getLabelCount()) {\n+        if (chart.getVisibleXRange() > 30 * 6) {\n \n             return monthName + \" \" + yearName;\n         } else {\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/XYMarkerView.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/XYMarkerView.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/XYMarkerView.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/XYMarkerView.java\n@@ -1,7 +1,56 @@\n+\n package com.xxmassdeveloper.mpchartexample.custom;\n \n+import android.content.Context;\n+import android.widget.TextView;\n+\n+import com.github.mikephil.charting.components.MarkerView;\n+import com.github.mikephil.charting.data.CandleEntry;\n+import com.github.mikephil.charting.data.Entry;\n+import com.github.mikephil.charting.formatter.AxisValueFormatter;\n+import com.github.mikephil.charting.highlight.Highlight;\n+import com.github.mikephil.charting.utils.Utils;\n+import com.xxmassdeveloper.mpchartexample.R;\n+\n+import java.text.DecimalFormat;\n+\n /**\n- * Created by philipp on 16/07/16.\n+ * Custom implementation of the MarkerView.\n+ *\n+ * @author Philipp Jahoda\n  */\n-public class XYMarkerView {\n+public class XYMarkerView extends MarkerView {\n+\n+    private TextView tvContent;\n+    private AxisValueFormatter xAxisValueFormatter;\n+\n+    private DecimalFormat format;\n+\n+    public XYMarkerView(Context context, AxisValueFormatter xAxisValueFormatter) {\n+        super(context, R.layout.custom_marker_view);\n+\n+        this.xAxisValueFormatter = xAxisValueFormatter;\n+        tvContent = (TextView) findViewById(R.id.tvContent);\n+        format = new DecimalFormat(\"###.0\");\n+    }\n+\n+    // callbacks everytime the MarkerView is redrawn, can be used to update the\n+    // content (user-interface)\n+    @Override\n+    public void refreshContent(Entry e, Highlight highlight) {\n+\n+        tvContent.setText(\"x: \" + xAxisValueFormatter.getFormattedValue(e.getX(), null) + \", y: \" + format.format(e.getY()));\n+    }\n+\n+    @Override\n+    public int getXOffset(float xpos) {\n+        // this will center the marker-view horizontally\n+        return -(getWidth() / 2);\n+    }\n+\n+    @Override\n+    public int getYOffset(float ypos) {\n+        // this will cause the marker-view to be above the selected value\n+        return -getHeight();\n+    }\n }",
    "output": "Create example for XYMarkerView (#2029)"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/XYMarkerView.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/XYMarkerView.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/XYMarkerView.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/XYMarkerView.java\n@@ -0,0 +1,7 @@\n+package com.xxmassdeveloper.mpchartexample.custom;\n+\n+/**\n+ * Created by philipp on 16/07/16.\n+ */\n+public class XYMarkerView {\n+}",
    "output": "Create new XYMarkerView (#2029)"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n@@ -229,7 +229,7 @@ public void onAnimationUpdate(ValueAnimator animation) {\n \n         // initialize the utils\n         Utils.init(getContext());\n-        mMaxHighlightDistance = Utils.convertDpToPixel(100f);\n+        mMaxHighlightDistance = Utils.convertDpToPixel(500f);\n \n         mLegend = new Legend();\n ",
    "output": "Change max-highlight-distance default to 500dp"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -74,7 +74,7 @@ public void drawData(Canvas c) {\n \n             IBarDataSet set = barData.getDataSetByIndex(i);\n \n-            if (set.isVisible() && set.getEntryCount() > 0) {\n+            if (set.isVisible()) {\n                 drawDataSet(c, set, i);\n             }\n         }\n@@ -195,7 +195,7 @@ public void drawValues(Canvas c) {\n \n                 IBarDataSet dataSet = dataSets.get(i);\n \n-                if (!dataSet.isDrawValuesEnabled() || dataSet.getEntryCount() == 0)\n+                if (!shouldDrawValues(dataSet))\n                     continue;\n \n                 // apply the text-styling defined by the DataSet\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarLineScatterCandleBubbleRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarLineScatterCandleBubbleRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarLineScatterCandleBubbleRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarLineScatterCandleBubbleRenderer.java\n@@ -5,20 +5,33 @@\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.interfaces.dataprovider.BarLineScatterCandleBubbleDataProvider;\n import com.github.mikephil.charting.interfaces.datasets.IBarLineScatterCandleBubbleDataSet;\n+import com.github.mikephil.charting.interfaces.datasets.IDataSet;\n import com.github.mikephil.charting.utils.ViewPortHandler;\n \n /**\n  * Created by Philipp Jahoda on 09/06/16.\n  */\n public abstract class BarLineScatterCandleBubbleRenderer extends DataRenderer {\n \n-    /** buffer for storing the current minimum and maximum visible x */\n+    /**\n+     * buffer for storing the current minimum and maximum visible x\n+     */\n     protected XBounds mXBounds = new XBounds();\n \n     public BarLineScatterCandleBubbleRenderer(ChartAnimator animator, ViewPortHandler viewPortHandler) {\n         super(animator, viewPortHandler);\n     }\n \n+    /**\n+     * Returns true if the DataSet values should be drawn, false if not.\n+     *\n+     * @param set\n+     * @return\n+     */\n+    protected boolean shouldDrawValues(IDataSet set) {\n+        return set.isVisible() && set.isDrawValuesEnabled();\n+    }\n+\n     /**\n      * Checks if the provided entry object is in bounds for drawing considering the current animation phase.\n      *\n@@ -66,7 +79,7 @@ protected class XBounds {\n          * @param chart\n          * @param dataSet\n          */\n-        public void set(BarLineScatterCandleBubbleDataProvider chart, IBarLineScatterCandleBubbleDataSet dataSet){\n+        public void set(BarLineScatterCandleBubbleDataProvider chart, IBarLineScatterCandleBubbleDataSet dataSet) {\n             float phaseX = Math.max(0.f, Math.min(1.f, mAnimator.getPhaseX()));\n \n             float low = chart.getLowestVisibleX();\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BubbleChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n@@ -52,7 +52,7 @@ public void drawData(Canvas c) {\n         for (int i = 0; i < setCount; i++) {\n             set = dataSets.get(i);\n \n-            if (set.isVisible() && set.getEntryCount() > 0)\n+            if (set.isVisible())\n                 drawDataSet(c, set);\n         }\n     }\n@@ -133,7 +133,7 @@ public void drawValues(Canvas c) {\n \n                 IBubbleDataSet dataSet = dataSets.get(i);\n \n-                if (!dataSet.isDrawValuesEnabled() || dataSet.getEntryCount() == 0)\n+                if (!shouldDrawValues(dataSet))\n                     continue;\n \n                 // apply the text-styling defined by the DataSet\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n@@ -50,7 +50,7 @@ public void drawData(Canvas c) {\n         for (int i = 0; i < setCount; i++) {\n             set = dataSets.get(i);\n \n-            if (set.isVisible() && set.getEntryCount() > 0)\n+            if (set.isVisible())\n                 drawDataSet(c, set);\n         }\n     }\n@@ -266,7 +266,7 @@ public void drawValues(Canvas c) {\n \n                 ICandleDataSet dataSet = dataSets.get(i);\n \n-                if (!dataSet.isDrawValuesEnabled() || dataSet.getEntryCount() == 0)\n+                if (!shouldDrawValues(dataSet))\n                     continue;\n \n                 // apply the text-styling defined by the DataSet\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n@@ -116,7 +116,7 @@ public void drawValues(Canvas c) {\n \n                 IBarDataSet dataSet = dataSets.get(i);\n \n-                if (!dataSet.isDrawValuesEnabled() || dataSet.getEntryCount() == 0)\n+                if (!shouldDrawValues(dataSet))\n                     continue;\n \n                 boolean isInverted = mChart.isInverted(dataSet.getAxisDependency());\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -94,7 +94,7 @@ public void drawData(Canvas c) {\n         for (int i = 0; i < setCount; i++) {\n             set = lineData.getDataSets().get(i);\n \n-            if (set.isVisible() && set.getEntryCount() > 0)\n+            if (set.isVisible())\n                 drawDataSet(c, set);\n         }\n \n@@ -519,7 +519,7 @@ public void drawValues(Canvas c) {\n \n                 ILineDataSet dataSet = dataSets.get(i);\n \n-                if (!dataSet.isDrawValuesEnabled() || dataSet.getEntryCount() == 0)\n+                if (!shouldDrawValues(dataSet))\n                     continue;\n \n                 // apply the text-styling defined by the DataSet\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/RadarChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n@@ -5,7 +5,6 @@\n import android.graphics.Color;\n import android.graphics.Paint;\n import android.graphics.Path;\n-import android.graphics.PointF;\n import android.graphics.drawable.Drawable;\n \n import com.github.mikephil.charting.animation.ChartAnimator;\n@@ -70,7 +69,7 @@ public void drawData(Canvas c) {\n         for(int i = 0 ; i < setCount ; i++){\n             set = dataSets.get(i);\n \n-            if (set.isVisible() && set.getEntryCount() > 0) {\n+            if (set.isVisible()) {\n                 drawDataSet(c, set, mostEntries);\n             }\n         }\n@@ -174,7 +173,7 @@ public void drawValues(Canvas c) {\n \n             IRadarDataSet dataSet = mChart.getData().getDataSetByIndex(i);\n \n-            if (!dataSet.isDrawValuesEnabled() || dataSet.getEntryCount() == 0)\n+            if (!shouldDrawValues(dataSet))\n                 continue;\n \n             // apply the text-styling defined by the DataSet\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/ScatterChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n@@ -94,7 +94,7 @@ public void drawValues(Canvas c) {\n \n                 IScatterDataSet dataSet = dataSets.get(i);\n \n-                if (!dataSet.isDrawValuesEnabled() || dataSet.getEntryCount() == 0)\n+                if (!shouldDrawValues(dataSet))\n                     continue;\n \n                 // apply the text-styling defined by the DataSet",
    "output": "Fix #1978"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -111,7 +111,7 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         Typeface tf = Typeface.createFromAsset(getAssets(), \"OpenSans-Regular.ttf\");\n \n-        LimitLine ll1 = new LimitLine(130f, \"Upper Limit\");\n+        LimitLine ll1 = new LimitLine(150f, \"Upper Limit\");\n         ll1.setLineWidth(4f);\n         ll1.enableDashedLine(10f, 10f, 0f);\n         ll1.setLabelPosition(LimitLabelPosition.RIGHT_TOP);\n@@ -129,7 +129,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         leftAxis.removeAllLimitLines(); // reset all limit lines to avoid overlapping lines\n         leftAxis.addLimitLine(ll1);\n         leftAxis.addLimitLine(ll2);\n-        leftAxis.setAxisMaxValue(220f);\n+        leftAxis.setAxisMaxValue(200f);\n         leftAxis.setAxisMinValue(-50f);\n         //leftAxis.setYOffset(20f);\n         leftAxis.enableGridDashedLine(10f, 10f, 0f);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -449,6 +449,8 @@ protected void drawLinear(Canvas c, ILineDataSet dataSet) {\n         }\n     }\n \n+    protected Path mGenerateFilledPathBuffer = new Path();\n+\n     /**\n      * Draws a filled linear path on the canvas.\n      *\n@@ -459,60 +461,92 @@ protected void drawLinear(Canvas c, ILineDataSet dataSet) {\n      */\n     protected void drawLinearFill(Canvas c, ILineDataSet dataSet, Transformer trans, XBounds bounds) {\n \n-        Path filled = generateFilledPath(dataSet, bounds);\n+        final Path filled = mGenerateFilledPathBuffer;\n \n-        trans.pathValueToPixel(filled);\n+        final int startingIndex = bounds.min;\n+        final int endingIndex = bounds.range + bounds.min;\n+        final int indexInterval = 128;\n \n-        final Drawable drawable = dataSet.getFillDrawable();\n-        if (drawable != null) {\n+        int currentStartIndex = 0;\n+        int currentEndIndex = indexInterval;\n+        int iterations = 0;\n \n-            drawFilledPath(c, filled, drawable);\n-        } else {\n+        // Doing this iteratively in order to avoid OutOfMemory errors that can happen on large bounds sets.\n+        do{\n+            currentStartIndex = startingIndex + (iterations * indexInterval);\n+            currentEndIndex = currentStartIndex + indexInterval;\n+            currentEndIndex = currentEndIndex > endingIndex ? endingIndex : currentEndIndex;\n+\n+            if(currentStartIndex <= currentEndIndex) {\n+                generateFilledPath(dataSet, currentStartIndex, currentEndIndex, filled);\n+\n+\n+\n+                trans.pathValueToPixel(filled);\n+\n+                final Drawable drawable = dataSet.getFillDrawable();\n+                if (drawable != null) {\n+\n+                    drawFilledPath(c, filled, drawable);\n+                } else {\n+\n+                    drawFilledPath(c, filled, dataSet.getFillColor(), dataSet.getFillAlpha());\n+                }\n+            }\n+\n+            iterations++;\n+\n+        }while(currentStartIndex <= currentEndIndex);\n \n-            drawFilledPath(c, filled, dataSet.getFillColor(), dataSet.getFillAlpha());\n-        }\n     }\n \n-    protected Path mGenerateFilledPathBuffer = new Path();\n     /**\n-     * Generates the path that is used for filled drawing.\n+     * Generates a path that is used for filled drawing.\n+     *\n+     * @param dataSet The dataset from which to read the entries.\n+     * @param startIndex The index from which to start reading the dataset\n+     * @param endIndex The index from which to stop reading the dataset\n+     * @param outputPath The path object that will be assigned the chart data.\n      *\n-     * @param dataSet\n      * @return\n      */\n-    private Path generateFilledPath(ILineDataSet dataSet, XBounds bounds) {\n+    private void generateFilledPath(final ILineDataSet dataSet, final int startIndex, final int endIndex, final Path outputPath) {\n \n-        float fillMin = dataSet.getFillFormatter().getFillLinePosition(dataSet, mChart);\n-        float phaseY = mAnimator.getPhaseY();\n+        final float fillMin = dataSet.getFillFormatter().getFillLinePosition(dataSet, mChart);\n+        final float phaseY = mAnimator.getPhaseY();\n         final boolean isDrawSteppedEnabled = dataSet.getMode() == LineDataSet.Mode.STEPPED;\n \n-        Path filled = mGenerateFilledPathBuffer;\n+        final Path filled = outputPath;\n         filled.reset();\n-        Entry entry = dataSet.getEntryForIndex(bounds.min);\n+\n+        final Entry entry = dataSet.getEntryForIndex(startIndex);\n \n         filled.moveTo(entry.getX(), fillMin);\n         filled.lineTo(entry.getX(), entry.getY() * phaseY);\n \n         // create a new path\n-        for (int x = bounds.min + 1; x <= bounds.range + bounds.min; x++) {\n-\n-            Entry e = dataSet.getEntryForIndex(x);\n+        Entry currentEntry = null;\n+        Entry previousEntry = null;\n+        for (int x = startIndex + 1 ; x <= endIndex ; x++) {\n \n-            if (isDrawSteppedEnabled) {\n-                final Entry ePrev = dataSet.getEntryForIndex(x - 1);\n-                if (ePrev == null) continue;\n+            currentEntry = dataSet.getEntryForIndex(x);\n \n-                filled.lineTo(e.getX(), ePrev.getY() * phaseY);\n+            if (isDrawSteppedEnabled && previousEntry != null) {\n+                filled.lineTo(currentEntry.getX(), previousEntry.getY() * phaseY);\n             }\n \n-            filled.lineTo(e.getX(), e.getY() * phaseY);\n+            filled.lineTo(currentEntry.getX(), currentEntry.getY() * phaseY);\n+\n+            previousEntry = currentEntry;\n         }\n \n         // close up\n-        filled.lineTo(dataSet.getEntryForIndex(bounds.range + bounds.min).getX(), fillMin);\n+        if(currentEntry != null) {\n+            filled.lineTo(currentEntry.getX(), fillMin);\n+        }\n+\n         filled.close();\n \n-        return filled;\n     }\n \n     @Override",
    "output": "Crash fix - Create small clip paths (#1895)\n\nWith large data sets, the Path object created was sufficiently large as to cause an OutOfMemory error. This is resolved by only pathing a limited number of points on the chart at a time, then clearing the path and resuming. Stress testing with 1500 entries."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -111,7 +111,7 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         Typeface tf = Typeface.createFromAsset(getAssets(), \"OpenSans-Regular.ttf\");\n \n-        LimitLine ll1 = new LimitLine(150f, \"Upper Limit\");\n+        LimitLine ll1 = new LimitLine(130f, \"Upper Limit\");\n         ll1.setLineWidth(4f);\n         ll1.enableDashedLine(10f, 10f, 0f);\n         ll1.setLabelPosition(LimitLabelPosition.RIGHT_TOP);\n@@ -129,7 +129,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         leftAxis.removeAllLimitLines(); // reset all limit lines to avoid overlapping lines\n         leftAxis.addLimitLine(ll1);\n         leftAxis.addLimitLine(ll2);\n-        leftAxis.setAxisMaxValue(200f);\n+        leftAxis.setAxisMaxValue(220f);\n         leftAxis.setAxisMinValue(-50f);\n         //leftAxis.setYOffset(20f);\n         leftAxis.enableGridDashedLine(10f, 10f, 0f);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java\n@@ -157,7 +157,7 @@ private LineDataSet createSet() {\n         LineDataSet set = new LineDataSet(null, \"Dynamic Data\");\n         set.setAxisDependency(AxisDependency.LEFT);\n         set.setColor(ColorTemplate.getHoloBlue());\n-        set.setCircleColors(ColorTemplate.COLORFUL_COLORS);\n+        set.setCircleColor(Color.WHITE);\n         set.setLineWidth(2f);\n         set.setCircleRadius(4f);\n         set.setFillAlpha(65);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -449,8 +449,6 @@ protected void drawLinear(Canvas c, ILineDataSet dataSet) {\n         }\n     }\n \n-    protected Path mGenerateFilledPathBuffer = new Path();\n-\n     /**\n      * Draws a filled linear path on the canvas.\n      *\n@@ -461,92 +459,60 @@ protected void drawLinear(Canvas c, ILineDataSet dataSet) {\n      */\n     protected void drawLinearFill(Canvas c, ILineDataSet dataSet, Transformer trans, XBounds bounds) {\n \n-        final Path filled = mGenerateFilledPathBuffer;\n-\n-        final int startingIndex = bounds.min;\n-        final int endingIndex = bounds.range + bounds.min;\n-        final int indexInterval = 128;\n-\n-        int currentStartIndex = 0;\n-        int currentEndIndex = indexInterval;\n-        int iterations = 0;\n-\n-        // Doing this iteratively in order to avoid OutOfMemory errors that can happen on large bounds sets.\n-        do{\n-            currentStartIndex = startingIndex + (iterations * indexInterval);\n-            currentEndIndex = currentStartIndex + indexInterval;\n-            currentEndIndex = currentEndIndex > endingIndex ? endingIndex : currentEndIndex;\n-\n-            if(currentStartIndex <= currentEndIndex) {\n-                generateFilledPath(dataSet, currentStartIndex, currentEndIndex, filled);\n-\n+        Path filled = generateFilledPath(dataSet, bounds);\n \n+        trans.pathValueToPixel(filled);\n \n-                trans.pathValueToPixel(filled);\n-\n-                final Drawable drawable = dataSet.getFillDrawable();\n-                if (drawable != null) {\n-\n-                    drawFilledPath(c, filled, drawable);\n-                } else {\n-\n-                    drawFilledPath(c, filled, dataSet.getFillColor(), dataSet.getFillAlpha());\n-                }\n-            }\n-\n-            iterations++;\n+        final Drawable drawable = dataSet.getFillDrawable();\n+        if (drawable != null) {\n \n-        }while(currentStartIndex <= currentEndIndex);\n+            drawFilledPath(c, filled, drawable);\n+        } else {\n \n+            drawFilledPath(c, filled, dataSet.getFillColor(), dataSet.getFillAlpha());\n+        }\n     }\n \n+    protected Path mGenerateFilledPathBuffer = new Path();\n     /**\n-     * Generates a path that is used for filled drawing.\n-     *\n-     * @param dataSet The dataset from which to read the entries.\n-     * @param startIndex The index from which to start reading the dataset\n-     * @param endIndex The index from which to stop reading the dataset\n-     * @param outputPath The path object that will be assigned the chart data.\n+     * Generates the path that is used for filled drawing.\n      *\n+     * @param dataSet\n      * @return\n      */\n-    private void generateFilledPath(final ILineDataSet dataSet, final int startIndex, final int endIndex, final Path outputPath) {\n+    private Path generateFilledPath(ILineDataSet dataSet, XBounds bounds) {\n \n-        final float fillMin = dataSet.getFillFormatter().getFillLinePosition(dataSet, mChart);\n-        final float phaseY = mAnimator.getPhaseY();\n+        float fillMin = dataSet.getFillFormatter().getFillLinePosition(dataSet, mChart);\n+        float phaseY = mAnimator.getPhaseY();\n         final boolean isDrawSteppedEnabled = dataSet.getMode() == LineDataSet.Mode.STEPPED;\n \n-        final Path filled = outputPath;\n+        Path filled = mGenerateFilledPathBuffer;\n         filled.reset();\n-\n-        final Entry entry = dataSet.getEntryForIndex(startIndex);\n+        Entry entry = dataSet.getEntryForIndex(bounds.min);\n \n         filled.moveTo(entry.getX(), fillMin);\n         filled.lineTo(entry.getX(), entry.getY() * phaseY);\n \n         // create a new path\n-        Entry currentEntry = null;\n-        Entry previousEntry = null;\n-        for (int x = startIndex + 1 ; x <= endIndex ; x++) {\n+        for (int x = bounds.min + 1; x <= bounds.range + bounds.min; x++) {\n \n-            currentEntry = dataSet.getEntryForIndex(x);\n+            Entry e = dataSet.getEntryForIndex(x);\n \n-            if (isDrawSteppedEnabled && previousEntry != null) {\n-                filled.lineTo(currentEntry.getX(), previousEntry.getY() * phaseY);\n-            }\n+            if (isDrawSteppedEnabled) {\n+                final Entry ePrev = dataSet.getEntryForIndex(x - 1);\n+                if (ePrev == null) continue;\n \n-            filled.lineTo(currentEntry.getX(), currentEntry.getY() * phaseY);\n+                filled.lineTo(e.getX(), ePrev.getY() * phaseY);\n+            }\n \n-            previousEntry = currentEntry;\n+            filled.lineTo(e.getX(), e.getY() * phaseY);\n         }\n \n         // close up\n-        if(currentEntry != null) {\n-            filled.lineTo(currentEntry.getX(), fillMin);\n-        }\n-\n+        filled.lineTo(dataSet.getEntryForIndex(bounds.range + bounds.min).getX(), fillMin);\n         filled.close();\n \n+        return filled;\n     }\n \n     @Override",
    "output": "Revert \"Crash fix - Create small clip paths (#1895)\"\n\nThis reverts commit d5df3ad795cb1fa45a24deb32e4f8bdc038c8414."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -111,7 +111,7 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         Typeface tf = Typeface.createFromAsset(getAssets(), \"OpenSans-Regular.ttf\");\n \n-        LimitLine ll1 = new LimitLine(130f, \"Upper Limit\");\n+        LimitLine ll1 = new LimitLine(150f, \"Upper Limit\");\n         ll1.setLineWidth(4f);\n         ll1.enableDashedLine(10f, 10f, 0f);\n         ll1.setLabelPosition(LimitLabelPosition.RIGHT_TOP);\n@@ -129,7 +129,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         leftAxis.removeAllLimitLines(); // reset all limit lines to avoid overlapping lines\n         leftAxis.addLimitLine(ll1);\n         leftAxis.addLimitLine(ll2);\n-        leftAxis.setAxisMaxValue(220f);\n+        leftAxis.setAxisMaxValue(200f);\n         leftAxis.setAxisMinValue(-50f);\n         //leftAxis.setYOffset(20f);\n         leftAxis.enableGridDashedLine(10f, 10f, 0f);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java\n@@ -157,7 +157,7 @@ private LineDataSet createSet() {\n         LineDataSet set = new LineDataSet(null, \"Dynamic Data\");\n         set.setAxisDependency(AxisDependency.LEFT);\n         set.setColor(ColorTemplate.getHoloBlue());\n-        set.setCircleColor(Color.WHITE);\n+        set.setCircleColors(ColorTemplate.COLORFUL_COLORS);\n         set.setLineWidth(2f);\n         set.setCircleRadius(4f);\n         set.setFillAlpha(65);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -449,6 +449,8 @@ protected void drawLinear(Canvas c, ILineDataSet dataSet) {\n         }\n     }\n \n+    protected Path mGenerateFilledPathBuffer = new Path();\n+\n     /**\n      * Draws a filled linear path on the canvas.\n      *\n@@ -459,60 +461,92 @@ protected void drawLinear(Canvas c, ILineDataSet dataSet) {\n      */\n     protected void drawLinearFill(Canvas c, ILineDataSet dataSet, Transformer trans, XBounds bounds) {\n \n-        Path filled = generateFilledPath(dataSet, bounds);\n+        final Path filled = mGenerateFilledPathBuffer;\n \n-        trans.pathValueToPixel(filled);\n+        final int startingIndex = bounds.min;\n+        final int endingIndex = bounds.range + bounds.min;\n+        final int indexInterval = 128;\n \n-        final Drawable drawable = dataSet.getFillDrawable();\n-        if (drawable != null) {\n+        int currentStartIndex = 0;\n+        int currentEndIndex = indexInterval;\n+        int iterations = 0;\n \n-            drawFilledPath(c, filled, drawable);\n-        } else {\n+        // Doing this iteratively in order to avoid OutOfMemory errors that can happen on large bounds sets.\n+        do{\n+            currentStartIndex = startingIndex + (iterations * indexInterval);\n+            currentEndIndex = currentStartIndex + indexInterval;\n+            currentEndIndex = currentEndIndex > endingIndex ? endingIndex : currentEndIndex;\n+\n+            if(currentStartIndex <= currentEndIndex) {\n+                generateFilledPath(dataSet, currentStartIndex, currentEndIndex, filled);\n+\n+\n+\n+                trans.pathValueToPixel(filled);\n+\n+                final Drawable drawable = dataSet.getFillDrawable();\n+                if (drawable != null) {\n+\n+                    drawFilledPath(c, filled, drawable);\n+                } else {\n+\n+                    drawFilledPath(c, filled, dataSet.getFillColor(), dataSet.getFillAlpha());\n+                }\n+            }\n+\n+            iterations++;\n+\n+        }while(currentStartIndex <= currentEndIndex);\n \n-            drawFilledPath(c, filled, dataSet.getFillColor(), dataSet.getFillAlpha());\n-        }\n     }\n \n-    protected Path mGenerateFilledPathBuffer = new Path();\n     /**\n-     * Generates the path that is used for filled drawing.\n+     * Generates a path that is used for filled drawing.\n+     *\n+     * @param dataSet The dataset from which to read the entries.\n+     * @param startIndex The index from which to start reading the dataset\n+     * @param endIndex The index from which to stop reading the dataset\n+     * @param outputPath The path object that will be assigned the chart data.\n      *\n-     * @param dataSet\n      * @return\n      */\n-    private Path generateFilledPath(ILineDataSet dataSet, XBounds bounds) {\n+    private void generateFilledPath(final ILineDataSet dataSet, final int startIndex, final int endIndex, final Path outputPath) {\n \n-        float fillMin = dataSet.getFillFormatter().getFillLinePosition(dataSet, mChart);\n-        float phaseY = mAnimator.getPhaseY();\n+        final float fillMin = dataSet.getFillFormatter().getFillLinePosition(dataSet, mChart);\n+        final float phaseY = mAnimator.getPhaseY();\n         final boolean isDrawSteppedEnabled = dataSet.getMode() == LineDataSet.Mode.STEPPED;\n \n-        Path filled = mGenerateFilledPathBuffer;\n+        final Path filled = outputPath;\n         filled.reset();\n-        Entry entry = dataSet.getEntryForIndex(bounds.min);\n+\n+        final Entry entry = dataSet.getEntryForIndex(startIndex);\n \n         filled.moveTo(entry.getX(), fillMin);\n         filled.lineTo(entry.getX(), entry.getY() * phaseY);\n \n         // create a new path\n-        for (int x = bounds.min + 1; x <= bounds.range + bounds.min; x++) {\n-\n-            Entry e = dataSet.getEntryForIndex(x);\n+        Entry currentEntry = null;\n+        Entry previousEntry = null;\n+        for (int x = startIndex + 1 ; x <= endIndex ; x++) {\n \n-            if (isDrawSteppedEnabled) {\n-                final Entry ePrev = dataSet.getEntryForIndex(x - 1);\n-                if (ePrev == null) continue;\n+            currentEntry = dataSet.getEntryForIndex(x);\n \n-                filled.lineTo(e.getX(), ePrev.getY() * phaseY);\n+            if (isDrawSteppedEnabled && previousEntry != null) {\n+                filled.lineTo(currentEntry.getX(), previousEntry.getY() * phaseY);\n             }\n \n-            filled.lineTo(e.getX(), e.getY() * phaseY);\n+            filled.lineTo(currentEntry.getX(), currentEntry.getY() * phaseY);\n+\n+            previousEntry = currentEntry;\n         }\n \n         // close up\n-        filled.lineTo(dataSet.getEntryForIndex(bounds.range + bounds.min).getX(), fillMin);\n+        if(currentEntry != null) {\n+            filled.lineTo(currentEntry.getX(), fillMin);\n+        }\n+\n         filled.close();\n \n-        return filled;\n     }\n \n     @Override",
    "output": "Crash fix - Create small clip paths (#1895)\n\nWith large data sets, the Path object created was sufficiently large as to cause an OutOfMemory error.  This is resolved by only pathing a limited number of points on the chart at a time, then clearing the path and resuming.  Stress testing with 1500 entries."
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n@@ -543,6 +543,20 @@ public boolean valuesToHighlight() {\n                 : true;\n     }\n \n+    /**\n+     * Sets the last highlighted value for the touchlistener.\n+     *\n+     * @param highs\n+     */\n+    protected void setLastHighlighted(Highlight[] highs) {\n+\n+        if (highs == null || highs.length <= 0 || highs[0] == null) {\n+            mChartTouchListener.setLastHighlighted(null);\n+        } else {\n+            mChartTouchListener.setLastHighlighted(highs[0]);\n+        }\n+    }\n+\n     /**\n      * Highlights the values at the given indices in the given DataSets. Provide\n      * null or an empty array to undo all highlighting. This should be used to\n@@ -556,11 +570,7 @@ public void highlightValues(Highlight[] highs) {\n         // set the indices to highlight\n         mIndicesToHighlight = highs;\n \n-        if (highs == null || highs.length <= 0 || highs[0] == null) {\n-            mChartTouchListener.setLastHighlighted(null);\n-        } else {\n-            mChartTouchListener.setLastHighlighted(highs[0]);\n-        }\n+        setLastHighlighted(highs);\n \n         // redraw the chart\n         invalidate();\n@@ -635,6 +645,8 @@ public void highlightValue(Highlight high, boolean callListener) {\n             }\n         }\n \n+        setLastHighlighted(mIndicesToHighlight);\n+\n         if (callListener && mSelectionListener != null) {\n \n             if (!valuesToHighlight())\n@@ -644,6 +656,7 @@ public void highlightValue(Highlight high, boolean callListener) {\n                 mSelectionListener.onValueSelected(e, high);\n             }\n         }\n+\n         // redraw the chart\n         invalidate();\n     }",
    "output": "Fix issue related to highlight callbacks #745"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -665,7 +665,7 @@ protected void drawCircles(Canvas c) {\n \n                 if(circleBitmap == null){\n                     Bitmap.Config conf = Bitmap.Config.ARGB_8888;\n-                    circleBitmap = Bitmap.createBitmap((int)circleRadius * 2, (int)circleRadius * 2, conf);\n+                    circleBitmap = Bitmap.createBitmap((int)(circleRadius * 2.1), (int)(circleRadius * 2.1), conf);\n                     Canvas canvas = new Canvas(circleBitmap);\n                     imageCache.circleBitmaps[colorIndex] = circleBitmap;\n                     imageCache.circleColors[colorIndex] = circleColor;\n@@ -674,25 +674,33 @@ protected void drawCircles(Canvas c) {\n                         // Begin path for circle with hole\n                         mCirclePathBuffer.reset();\n \n-                        mCirclePathBuffer.addCircle(circleRadius, circleRadius,\n+                        mCirclePathBuffer.addCircle(\n+                                circleRadius,\n+                                circleRadius,\n                                 circleRadius,\n                                 Path.Direction.CW);\n \n                         // Cut hole in path\n-                        mCirclePathBuffer.addCircle(circleHoleRadius, circleHoleRadius,\n+                        mCirclePathBuffer.addCircle(\n+                                circleRadius,\n+                                circleRadius,\n                                 circleHoleRadius,\n                                 Path.Direction.CCW);\n \n                         // Fill in-between\n                         canvas.drawPath(mCirclePathBuffer, mRenderPaint);\n                     }else{\n \n-                        canvas.drawCircle(circleRadius, circleRadius,\n+                        canvas.drawCircle(\n+                                circleRadius,\n+                                circleRadius,\n                                 circleRadius,\n                                 mRenderPaint);\n \n                         if (drawCircleHole) {\n-                            canvas.drawCircle(circleRadius, circleRadius,\n+                            canvas.drawCircle(\n+                                    circleRadius,\n+                                    circleRadius,\n                                     circleHoleRadius,\n                                     mCirclePaintInner);\n                         }",
    "output": "Render bug fix - circle bitmap sizes (#1892)\n\nZooming in on the circle bitmaps, they were slightly small.  Allocate a little more space in the circle's bitmap to correct this."
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java\n@@ -171,24 +171,32 @@ public Legend(List<Integer> colors, List<String> labels) {\n                     \"colors array and labels array need to be of same size\");\n         }\n \n-        this.mColors = Utils.convertIntegers(colors);\n-        this.mLabels = Utils.convertStrings(labels);\n+        this.setComputedColors(colors);\n+        this.setComputedLabels(labels);\n     }\n \n     /**\n      * This method sets the automatically computed colors for the legend. Use setCustom(...) to set custom colors.\n      * @param colors\n      */\n     public void setComputedColors(List<Integer> colors) {\n-        mColors = Utils.convertIntegers(colors);\n+        if(mColors != null && colors.size() == mColors.length){\n+            Utils.copyIntegers(colors, mColors);\n+        }else {\n+            mColors = Utils.convertIntegers(colors);\n+        }\n     }\n \n     /**\n      * This method sets the automatically computed labels for the legend. Use setCustom(...) to set custom labels.\n      * @param labels\n      */\n     public void setComputedLabels(List<String> labels) {\n-        mLabels = Utils.convertStrings(labels);\n+        if(mLabels != null && mLabels.length == labels.size()){\n+            Utils.copyStrings(labels, mLabels);\n+        }else {\n+            mLabels = Utils.convertStrings(labels);\n+        }\n     }\n \n     /**\n@@ -291,8 +299,17 @@ public String[] getExtraLabels() {\n      * let the changes take effect)\n      */\n     public void setExtra(List<Integer> colors, List<String> labels) {\n-        this.mExtraColors = Utils.convertIntegers(colors);\n-        this.mExtraLabels = Utils.convertStrings(labels);\n+        if(mExtraColors != null && mExtraColors.length == colors.size()){\n+            Utils.copyIntegers(colors, mExtraColors);\n+        }else {\n+            this.mExtraColors = Utils.convertIntegers(colors);\n+        }\n+\n+        if(mExtraLabels != null && mExtraLabels.length == labels.size()){\n+            Utils.copyStrings(labels, mExtraLabels);\n+        }else {\n+            this.mExtraLabels = Utils.convertStrings(labels);\n+        }\n     }\n \n     /**\n@@ -343,8 +360,8 @@ public void setCustom(List<Integer> colors, List<String> labels) {\n                     \"colors array and labels array need to be of same size\");\n         }\n \n-        mColors = Utils.convertIntegers(colors);\n-        mLabels = Utils.convertStrings(labels);\n+        this.setComputedColors(colors);\n+        this.setComputedLabels(labels);\n         mIsLegendCustom = true;\n     }\n \n@@ -791,6 +808,7 @@ public float getMaxSizePercent() {\n     public void setMaxSizePercent(float maxSize) {\n         mMaxSizePercent = maxSize;\n     }\n+    private boolean isCalculatedLineSizesArrayListResized = true;\n \n     private FSize[] mCalculatedLabelSizes = new FSize[] {};\n     private Boolean[] mCalculatedLabelBreakPoints = new Boolean[] {};\n@@ -805,6 +823,14 @@ public Boolean[] getCalculatedLabelBreakPoints() {\n     }\n \n     public FSize[] getCalculatedLineSizes() {\n+        if(mCalculatedLineSizes == null || isCalculatedLineSizesArrayListResized){\n+\n+            mCalculatedLineSizes = calculatedLineSizesForCalculateDimensions\n+                    .toArray(new FSize[calculatedLineSizesForCalculateDimensions.size()]);\n+\n+            isCalculatedLineSizesArrayListResized = false;\n+\n+        }\n         return mCalculatedLineSizes;\n     }\n \n@@ -998,8 +1024,13 @@ else if (wasStacked) {\n                     stackedStartIndex = mLabels[i] != null ? -1 : stackedStartIndex;\n                 }\n \n-                mCalculatedLineSizes = calculatedLineSizes\n-                        .toArray(new FSize[calculatedLineSizes.size()]);\n+                if(calculatedLineSizes.size() != mCalculatedLineSizes.length) {\n+                    isCalculatedLineSizesArrayListResized = true;\n+                }else{\n+                    for(int i = 0 ; i < mCalculatedLineSizes.length ; i++){\n+                        mCalculatedLineSizes[i] = calculatedLineSizes.get(i);\n+                    }\n+                }\n \n                 mNeededWidth = maxLineWidth;\n                 mNeededHeight = labelLineHeight\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java\n@@ -369,13 +369,18 @@ public static int[] convertIntegers(List<Integer> integers) {\n \n         int[] ret = new int[integers.size()];\n \n-        for (int i = 0; i < ret.length; i++) {\n-            ret[i] = integers.get(i).intValue();\n-        }\n+        copyIntegers(integers, ret);\n \n         return ret;\n     }\n \n+    public static void copyIntegers(List<Integer> from, int[] to){\n+        int count = to.length < from.size() ? to.length : from.size();\n+        for(int i = 0 ; i < count ; i++){\n+            to[i] = from.get(i);\n+        }\n+    }\n+\n     /**\n      * Converts the provided String List to a String array.\n      *\n@@ -393,6 +398,13 @@ public static String[] convertStrings(List<String> strings) {\n         return ret;\n     }\n \n+    public static void copyStrings(List<String> from, String[] to){\n+        int count = to.length < from.size() ? to.length : from.size();\n+        for(int i = 0 ; i < count ; i++){\n+            to[i] = from.get(i);\n+        }\n+    }\n+\n     /**\n      * Replacement for the Math.nextUp(...) method that is only available in\n      * HONEYCOMB and higher. Dat's some seeeeek sheeet.",
    "output": "Eliminate allocs - Copy arrays without new[] (#1892)\n\nMake sure we copy List<> into [] if the size is identical to the length, instead of instantiating a new []."
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java\n@@ -6,7 +6,6 @@\n import android.graphics.Paint;\n import android.graphics.Paint.Align;\n import android.graphics.Path;\n-import android.graphics.PointF;\n \n import com.github.mikephil.charting.components.LimitLine;\n import com.github.mikephil.charting.components.XAxis;\n@@ -98,6 +97,7 @@ protected void computeSize() {\n         mXAxis.mLabelRotatedHeight = Math.round(labelRotatedSize.height);\n \n         FSize.recycleInstance(labelRotatedSize);\n+        FSize.recycleInstance(labelSize);\n     }\n \n     @Override\n@@ -141,6 +141,7 @@ public void renderAxisLabels(Canvas c) {\n             pointF.y = 0.0f;\n             drawLabels(c, mViewPortHandler.contentBottom() + yoffset, pointF);\n         }\n+        MPPointF.recycleInstance(pointF);\n     }\n \n     @Override",
    "output": "Eliminate allocs - MFPoint recycle (#1892)\n\nNoticed a couple of stray un-recycled MFPoint and FSize instances.  These accounted for a bit of the remaining generated garbage."
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/FSize.java b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/FSize.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/FSize.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/FSize.java\n@@ -18,6 +18,7 @@ public final class FSize extends ObjectPool.Poolable{\n \n     static {\n         pool = ObjectPool.create(256, new FSize(0,0));\n+        pool.setReplenishPercentage(0.5f);\n     }\n \n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/MPPointF.java b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/MPPointF.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/MPPointF.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/MPPointF.java\n@@ -16,6 +16,7 @@ public class MPPointF extends ObjectPool.Poolable {\n \n     static {\n         pool = ObjectPool.create(32, new MPPointF(0,0));\n+        pool.setReplenishPercentage(0.5f);\n     }\n \n     private MPPointF(float x, float y){\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/PointD.java b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/PointD.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/PointD.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/PointD.java\n@@ -14,6 +14,7 @@ public class PointD extends ObjectPool.Poolable {\n \n     static {\n         pool = ObjectPool.create(64, new PointD(0,0));\n+        pool.setReplenishPercentage(0.5f);\n     }\n \n     public static PointD getInstance(double x, double y){",
    "output": "Eliminate allocs - Adjust pool replenishing (#1892)\n\nReplenish fewer objects in utils pools when empty, in case the pool size grows large."
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java\n@@ -180,12 +180,12 @@ protected void drawLabels(Canvas c, float pos, MPPointF anchor) {\n         final float labelRotationAngleDegrees = mXAxis.getLabelRotationAngle();\n         boolean centeringEnabled = mXAxis.isCenterAxisLabelsEnabled();\n \n-        if(mDrawLabelsBuffer.length != mAxis.mEntryCount * 2){\n+        if(mDrawLabelsBuffer.length < mAxis.mEntryCount * 2){\n             mDrawLabelsBuffer = new float[mXAxis.mEntryCount * 2];\n         }\n         float[] positions = mDrawLabelsBuffer;\n \n-        for (int i = 0; i < positions.length; i += 2) {\n+        for (int i = 0; i < positions.length && i < mXAxis.mEntries.length / 2 && i < mXAxis.mCenteredEntries.length / 2 ; i += 2) {\n \n             // only fill x values\n             if (centeringEnabled) {\n@@ -199,7 +199,7 @@ protected void drawLabels(Canvas c, float pos, MPPointF anchor) {\n \n         mTrans.pointValuesToPixel(positions);\n \n-        for (int i = 0; i < positions.length; i += 2) {\n+        for (int i = 0; i < positions.length && i < mXAxis.mEntries.length / 2 && i < mXAxis.mCenteredEntries.length / 2 ; i += 2) {\n \n             float x = positions[i];\n ",
    "output": "Eliminate allocs - XAxisRender array (#1892)\n\nFound an array that was instantiated frequently without need.  Placed bounds on its instantiation."
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java\n@@ -808,14 +808,15 @@ public FSize[] getCalculatedLineSizes() {\n         return mCalculatedLineSizes;\n     }\n \n+    protected Paint.FontMetrics fontMetricsForCalculateDimensions = new Paint.FontMetrics();\n+    ArrayList<FSize> calculatedLineSizesForCalculateDimensions = new ArrayList<>();\n     /**\n      * Calculates the dimensions of the Legend. This includes the maximum width\n      * and height of a single entry, as well as the total width and height of\n      * the Legend.\n      * \n      * @param labelpaint\n      */\n-    ArrayList<FSize> calculatedLineSizesForCalculateDimensions = new ArrayList<>();\n     public void calculateDimensions(Paint labelpaint, ViewPortHandler viewPortHandler) {\n \n         mTextWidthMax = getMaximumEntryWidth(labelpaint);\n@@ -825,7 +826,7 @@ public void calculateDimensions(Paint labelpaint, ViewPortHandler viewPortHandle\n             case VERTICAL: {\n \n                 float maxWidth = 0f, maxHeight = 0f, width = 0f;\n-                float labelLineHeight = Utils.getLineHeight(labelpaint);\n+                float labelLineHeight = Utils.getLineHeight(labelpaint, fontMetricsForCalculateDimensions);\n                 final int count = mLabels.length;\n                 boolean wasStacked = false;\n \n@@ -878,8 +879,8 @@ else if (wasStacked) {\n             case HORIZONTAL: {\n \n                 int labelCount = mLabels.length;\n-                float labelLineHeight = Utils.getLineHeight(labelpaint);\n-                float labelLineSpacing = Utils.getLineSpacing(labelpaint) + mYEntrySpace;\n+                float labelLineHeight = Utils.getLineHeight(labelpaint, fontMetricsForCalculateDimensions);\n+                float labelLineSpacing = Utils.getLineSpacing(labelpaint, fontMetricsForCalculateDimensions) + mYEntrySpace;\n                 float contentWidth = viewPortHandler.contentWidth() * mMaxSizePercent;\n \n                 // Prepare arrays for calculated layout\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -177,6 +177,7 @@ public void computeLegend(ChartData<?> data) {\n         mLegend.calculateDimensions(mLegendLabelPaint, mViewPortHandler);\n     }\n \n+    protected Paint.FontMetrics fontMetricsForRenderLegent = new Paint.FontMetrics();\n     public void renderLegend(Canvas c) {\n \n         if (!mLegend.isEnabled())\n@@ -190,8 +191,8 @@ public void renderLegend(Canvas c) {\n         mLegendLabelPaint.setTextSize(mLegend.getTextSize());\n         mLegendLabelPaint.setColor(mLegend.getTextColor());\n \n-        float labelLineHeight = Utils.getLineHeight(mLegendLabelPaint);\n-        float labelLineSpacing = Utils.getLineSpacing(mLegendLabelPaint) + mLegend.getYEntrySpace();\n+        float labelLineHeight = Utils.getLineHeight(mLegendLabelPaint, fontMetricsForRenderLegent);\n+        float labelLineSpacing = Utils.getLineSpacing(mLegendLabelPaint, fontMetricsForRenderLegent) + mLegend.getYEntrySpace();\n         float formYOffset = labelLineHeight - Utils.calcTextHeight(mLegendLabelPaint, \"ABC\") / 2.f;\n \n         String[] labels = mLegend.getLabels();\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java\n@@ -165,13 +165,23 @@ public static int calcTextHeight(Paint paint, String demoText) {\n     }\n \n     public static float getLineHeight(Paint paint) {\n-        Paint.FontMetrics metrics = paint.getFontMetrics();\n-        return metrics.descent - metrics.ascent;\n+        Paint.FontMetrics metrics = new Paint.FontMetrics();\n+        return getLineHeight(paint, metrics);\n+    }\n+\n+    public static float getLineHeight(Paint paint, Paint.FontMetrics fontMetrics){\n+        paint.getFontMetrics(fontMetrics);\n+        return fontMetrics.descent - fontMetrics.ascent;\n     }\n \n     public static float getLineSpacing(Paint paint) {\n-        Paint.FontMetrics metrics = paint.getFontMetrics();\n-        return metrics.ascent - metrics.top + metrics.bottom;\n+        Paint.FontMetrics metrics = new Paint.FontMetrics();\n+        return getLineSpacing(paint, metrics);\n+    }\n+\n+    public static float getLineSpacing(Paint paint, Paint.FontMetrics fontMetrics){\n+        paint.getFontMetrics(fontMetrics);\n+        return fontMetrics.ascent - fontMetrics.top + fontMetrics.bottom;\n     }\n \n     /**",
    "output": "Eliminate allocs - Buffer Paint.FontMetrics (#1892)\n\npaint.getFontMetrics() has a hidden allocation.  paint.getFontMetrics(fontMetrics) is used internally inside of Paint, so caching and holding onto a metrics buffer helps reduce allocations."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java\n@@ -165,15 +165,15 @@ public Data(float xValue, float yValue, String xAxisValue) {\n \n     private class ValueFormatter implements com.github.mikephil.charting.formatter.ValueFormatter {\n \n-        private FormattedStringCache<Integer, Float> mFormattedStringCache;\n+        private FormattedStringCache.PrimIntFloat mFormattedStringCache;\n \n         public ValueFormatter() {\n-            mFormattedStringCache = new FormattedStringCache<>(new DecimalFormat(\"######.0\"));\n+            mFormattedStringCache = new FormattedStringCache.PrimIntFloat(new DecimalFormat(\"######.0\"));\n         }\n \n         @Override\n         public String getFormattedValue(float value, Entry entry, int dataSetIndex, ViewPortHandler viewPortHandler) {\n-            return mFormattedStringCache.getFormattedString(value, dataSetIndex);\n+            return mFormattedStringCache.getFormattedValue(value, dataSetIndex);\n         }\n     }\n }\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/DefaultAxisValueFormatter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/DefaultAxisValueFormatter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/DefaultAxisValueFormatter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/DefaultAxisValueFormatter.java\n@@ -12,7 +12,7 @@ public class DefaultAxisValueFormatter implements AxisValueFormatter {\n     /**\n      * FormattedStringFormat for formatting and caching\n      */\n-    protected FormattedStringCache<Float, Float> mFormattedStringCache;\n+    protected FormattedStringCache.PrimFloat mFormattedStringCache;\n \n     /**\n      * the number of decimal digits this formatter uses\n@@ -35,14 +35,14 @@ public DefaultAxisValueFormatter(int digits) {\n             b.append(\"0\");\n         }\n \n-        mFormattedStringCache = new FormattedStringCache<>(new DecimalFormat(\"###,###,###,##0\" + b.toString()));\n+        mFormattedStringCache = new FormattedStringCache.PrimFloat(new DecimalFormat(\"###,###,###,##0\" + b.toString()));\n     }\n \n     @Override\n     public String getFormattedValue(float value, AxisBase axis) {\n \n         // TODO: There should be a better way to do this.  Floats are not the best keys...\n-        return mFormattedStringCache.getFormattedString(value, value);\n+        return mFormattedStringCache.getFormattedValue(value);\n \n     }\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/FormattedStringCache.java b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/FormattedStringCache.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/FormattedStringCache.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/FormattedStringCache.java\n@@ -1,6 +1,7 @@\n package com.github.mikephil.charting.formatter;\n \n import java.text.Format;\n+import java.util.ArrayList;\n import java.util.HashMap;\n \n /**\n@@ -17,7 +18,7 @@\n  */\n public class FormattedStringCache<K, V> {\n \n-    private Format mFormat;\n+    protected Format mFormat;\n     private HashMap<K, String> mCachedStringsHashMap = new HashMap<>();\n     private HashMap<K, V> mCachedValuesHashMap = new HashMap<>();\n \n@@ -48,4 +49,81 @@ public String getFormattedString(V value, K key){\n         return result;\n     }\n \n+    public static class PrimIntFloat extends FormattedStringCache{\n+\n+        public PrimIntFloat(Format format){\n+            super(format);\n+        }\n+\n+        private ArrayList<Float> cachedValues = new ArrayList<>();\n+        private ArrayList<String> cachedStrings = new ArrayList<>();\n+\n+        public String getFormattedValue(float value, int key) {\n+\n+            boolean hasValueAtdataSetIndex = true;\n+            if(cachedValues.size() <= key){\n+                int p = key;\n+                while(p >= 0){\n+                    if(p == 0){\n+                        cachedValues.add(value);\n+                        cachedStrings.add(\"\");\n+                    }else{\n+                        cachedValues.add(Float.NaN);\n+                        cachedStrings.add(\"\");\n+                    }\n+                    p--;\n+                }\n+                hasValueAtdataSetIndex = false;\n+            }\n+\n+            if(hasValueAtdataSetIndex) {\n+                Float cachedValue = cachedValues.get(key);\n+                hasValueAtdataSetIndex = !(cachedValue == null || cachedValue != value);\n+            }\n+\n+            if(!hasValueAtdataSetIndex){\n+                cachedValues.set(key, value);\n+                cachedStrings.set(key, mFormat.format(value));\n+            }\n+\n+            return cachedStrings.get(key);\n+        }\n+\n+    }\n+\n+    public static class PrimFloat extends FormattedStringCache{\n+\n+        public PrimFloat(Format format){\n+            super(format);\n+        }\n+\n+\n+        private ArrayList<Float> cachedValues = new ArrayList<>();\n+        private ArrayList<String> cachedStrings = new ArrayList<>();\n+\n+        public String getFormattedValue(float value) {\n+\n+            boolean alreadyHasValue = false;\n+            int vCount =  cachedValues.size();\n+            int sIndex = -1;\n+            for(int i = 0 ; i < vCount ; i++){\n+                if(cachedValues.get(i) == value){\n+                    sIndex = i;\n+                    alreadyHasValue = true;\n+                    break;\n+                }\n+            }\n+             if(!alreadyHasValue) {\n+                 cachedValues.add(value);\n+                 cachedStrings.add(mFormat.format(value));\n+                 sIndex = cachedValues.size() - 1;\n+             }\n+\n+            return cachedStrings.get(sIndex);\n+        }\n+\n+    }\n+\n+\n+\n }",
    "output": "Eliminate allocs - String Caches now have Prim subtypes (#1892)\n\nBy creating versions of the FormattedStringCache that don't require auto boxing, allocations are cut tremendously in this commit."
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarLineScatterCandleBubbleRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarLineScatterCandleBubbleRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarLineScatterCandleBubbleRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarLineScatterCandleBubbleRenderer.java\n@@ -58,17 +58,17 @@ protected class XBounds {\n         /**\n          * minimum visible entry index\n          */\n-        public final int min;\n+        public int min;\n \n         /**\n          * maximum visible entry index\n          */\n-        public final int max;\n+        public int max;\n \n         /**\n          * range of visible entry indices\n          */\n-        public final int range;\n+        public int range;\n \n         /**\n          * Calculates the minimum and maximum x values as well as the range between them.\n@@ -77,7 +77,16 @@ protected class XBounds {\n          * @param dataSet\n          */\n         public XBounds(BarLineScatterCandleBubbleDataProvider chart, IBarLineScatterCandleBubbleDataSet dataSet) {\n+            this.set(chart, dataSet);\n+        }\n \n+        /**\n+         * Calculates the minimum and maximum x values as well as the range between them.\n+         *\n+         * @param chart\n+         * @param dataSet\n+         */\n+        public void set(BarLineScatterCandleBubbleDataProvider chart, IBarLineScatterCandleBubbleDataSet dataSet){\n             float phaseX = Math.max(0.f, Math.min(1.f, mAnimator.getPhaseX()));\n \n             float low = chart.getLowestVisibleX();\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -302,6 +302,7 @@ protected void drawCubicFill(Canvas c, ILineDataSet dataSet, Path spline, Transf\n     }\n \n     private float[] mLineBuffer = new float[4];\n+    private XBounds xBoundsBuffer;\n \n     /**\n      * Draws a normal line.\n@@ -331,7 +332,12 @@ protected void drawLinear(Canvas c, ILineDataSet dataSet) {\n             canvas = c;\n         }\n \n-        XBounds bounds = getXBounds(mChart, dataSet);\n+        if(xBoundsBuffer == null){\n+            xBoundsBuffer = getXBounds(mChart, dataSet);\n+        }else{\n+            xBoundsBuffer.set(mChart, dataSet);\n+        }\n+        final XBounds bounds = xBoundsBuffer;\n \n         // more than 1 color\n         if (dataSet.getColors().size() > 1) {",
    "output": "Eliminate allocs - Cache XBounds in Renderer (#1892)\n\ngetXBounds creates a disposable XBounds instance on every call.  Cache it and update the values with a set method.  This means XBounds values are now mutable."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -3,6 +3,7 @@\n \n import android.annotation.SuppressLint;\n import android.graphics.PointF;\n+import android.graphics.Rect;\n import android.graphics.RectF;\n import android.os.Bundle;\n import android.util.Log;\n@@ -257,14 +258,16 @@ private void setData(int count, float range) {\n         }\n     }\n \n+    protected RectF mOnValueSelectedRectF = new RectF();\n     @SuppressLint(\"NewApi\")\n     @Override\n     public void onValueSelected(Entry e, Highlight h) {\n \n         if (e == null)\n             return;\n \n-        RectF bounds = mChart.getBarBounds((BarEntry) e);\n+        RectF bounds = mOnValueSelectedRectF;\n+        mChart.getBarBounds((BarEntry) e, bounds);\n         MPPointF position = mChart.getPosition(e, AxisDependency.LEFT);\n \n         Log.i(\"bounds\", bounds.toString());\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n@@ -3,6 +3,7 @@\n \n import android.annotation.SuppressLint;\n import android.graphics.PointF;\n+import android.graphics.Rect;\n import android.graphics.RectF;\n import android.os.Bundle;\n import android.util.Log;\n@@ -246,14 +247,17 @@ private void setData(int count, float range) {\n         }\n     }\n \n+    protected RectF mOnValueSelectedRectF = new RectF();\n     @SuppressLint(\"NewApi\")\n     @Override\n     public void onValueSelected(Entry e, Highlight h) {\n \n         if (e == null)\n             return;\n \n-        RectF bounds = mChart.getBarBounds((BarEntry) e);\n+        RectF bounds = mOnValueSelectedRectF;\n+        mChart.getBarBounds((BarEntry) e, bounds);\n+\n         MPPointF position = mChart.getPosition(e, mChart.getData().getDataSetByIndex(h.getDataSetIndex())\n                 .getAxisDependency());\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java\n@@ -98,17 +98,37 @@ public Highlight getHighlightByTouchPoint(float x, float y) {\n \n     /**\n      * Returns the bounding box of the specified Entry in the specified DataSet. Returns null if the Entry could not be\n-     * found in the charts data.\n+     * found in the charts data.  Performance-intensive code should use void getBarBounds(BarEntry, RectF) instead.\n      *\n      * @param e\n      * @return\n      */\n     public RectF getBarBounds(BarEntry e) {\n \n+\n+        RectF bounds = new RectF();\n+        getBarBounds(e, bounds);\n+\n+        return bounds;\n+    }\n+\n+    /**\n+     * The passed outputRect will be assigned the values of the bounding box of the specified Entry in the specified DataSet.\n+     * The rect will be assigned Float.MIN_VALUE in all locations if the Entry could not be found in the charts data.\n+     *\n+     * @param e\n+     * @return\n+     */\n+    public void getBarBounds(BarEntry e, RectF outputRect){\n+\n+        RectF bounds = outputRect;\n+\n         IBarDataSet set = mData.getDataSetForEntry(e);\n \n-        if (set == null)\n-            return null;\n+        if (set == null) {\n+            bounds.set(Float.MIN_VALUE, Float.MIN_VALUE, Float.MIN_VALUE, Float.MIN_VALUE);\n+            return;\n+        }\n \n         float y = e.getY();\n         float x = e.getX();\n@@ -120,11 +140,10 @@ public RectF getBarBounds(BarEntry e) {\n         float top = y >= 0 ? y : 0;\n         float bottom = y <= 0 ? y : 0;\n \n-        RectF bounds = new RectF(left, top, right, bottom);\n+        bounds.set(left, top, right, bottom);\n \n-        getTransformer(set.getAxisDependency()).rectValueToPixel(bounds);\n+        getTransformer(set.getAxisDependency()).rectValueToPixel(outputRect);\n \n-        return bounds;\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java\n@@ -141,12 +141,15 @@ protected float[] getMarkerPosition(Highlight high) {\n     }\n \n     @Override\n-    public RectF getBarBounds(BarEntry e) {\n+    public void getBarBounds(BarEntry e, RectF outputRect) {\n \n+        RectF bounds = outputRect;\n         IBarDataSet set = mData.getDataSetForEntry(e);\n \n-        if (set == null)\n-            return null;\n+        if (set == null){\n+            outputRect.set(Float.MIN_VALUE, Float.MIN_VALUE, Float.MIN_VALUE, Float.MIN_VALUE);\n+            return;\n+        }\n \n         float y = e.getY();\n         float x = e.getX();\n@@ -158,11 +161,10 @@ public RectF getBarBounds(BarEntry e) {\n         float left = y >= 0 ? y : 0;\n         float right = y <= 0 ? y : 0;\n \n-        RectF bounds = new RectF(left, top, right, bottom);\n+        bounds.set(left, top, right, bottom);\n \n         getTransformer(set.getAxisDependency()).rectValueToPixel(bounds);\n \n-        return bounds;\n     }\n \n     protected float[] mGetPositionBuffer = new float[2];\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -725,6 +725,7 @@ protected void drawCenterText(Canvas c) {\n         }\n     }\n \n+    protected RectF mDrawHighlightedRectF = new RectF();\n     @Override\n     public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n@@ -743,7 +744,8 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n                 ? radius * (mChart.getHoleRadius() / 100.f)\n                 : 0.f;\n \n-        final RectF highlightedCircleBox = new RectF();\n+        final RectF highlightedCircleBox = mDrawHighlightedRectF;\n+        highlightedCircleBox.set(0,0,0,0);\n \n         for (int i = 0; i < indices.length; i++) {\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java\n@@ -147,6 +147,7 @@ public static int calcTextWidth(Paint paint, String demoText) {\n         return (int) paint.measureText(demoText);\n     }\n \n+    private static Rect mCalcTextHeightRect = new Rect();\n     /**\n      * calculates the approximate height of a text, depending on a demo text\n      * avoid repeated calls (e.g. inside drawing methods)\n@@ -157,7 +158,8 @@ public static int calcTextWidth(Paint paint, String demoText) {\n      */\n     public static int calcTextHeight(Paint paint, String demoText) {\n \n-        Rect r = new Rect();\n+        Rect r = mCalcTextHeightRect;\n+        r.set(0,0,0,0);\n         paint.getTextBounds(demoText, 0, demoText.length(), r);\n         return r.height();\n     }\n@@ -188,6 +190,7 @@ public static FSize calcTextSize(Paint paint, String demoText) {\n         return result;\n     }\n \n+    private static Rect mCalcTextSizeRect = new Rect();\n     /**\n      * calculates the approximate size of a text, depending on a demo text\n      * avoid repeated calls (e.g. inside drawing methods)\n@@ -198,7 +201,8 @@ public static FSize calcTextSize(Paint paint, String demoText) {\n      */\n     public static void calcTextSize(Paint paint, String demoText, FSize outputFSize) {\n \n-        Rect r = new Rect();\n+        Rect r = mCalcTextSizeRect;\n+        r.set(0,0,0,0);\n         paint.getTextBounds(demoText, 0, demoText.length(), r);\n         outputFSize.width = r.width();\n         outputFSize.height = r.height();",
    "output": "Eliminate allocs - Rect and RectF buffers (#1892)\n\nBuffering temporary Rect and RectF instances.  Created methods to modify RectF instances as performance alternatives to methods that create disposable RectF instances."
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java\n@@ -887,7 +887,16 @@ else if (wasStacked) {\n                 //ArrayList<Boolean> calculatedLabelBreakPoints = new ArrayList<Boolean>(labelCount);\n \n                 if(mCalculatedLabelSizes.length != labelCount){\n-                    mCalculatedLabelSizes = new FSize[labelCount];\n+                    FSize[] temp = new FSize[labelCount];\n+                    int count = mCalculatedLabelSizes.length;\n+                    for(int i = 0 ; i < count && i < labelCount ; i++){\n+                        temp[i] = mCalculatedLabelSizes[i];\n+                    }\n+                    while(count > labelCount){\n+                        count--;\n+                        FSize.recycleInstance(mCalculatedLabelSizes[count]);\n+                    }\n+                    mCalculatedLabelSizes = temp;\n                 }\n                 int calculatedLabelSizesIndex = 0;\n ",
    "output": "Eliminate allocs - Legend arrays (#1892)\n\nIn addition to creating a resized label sizes array, copy old FSize instances to the new array to cut down on the need to get instances from pool.  Recycle to pool if the labels shrank."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n@@ -110,6 +110,8 @@ protected void onCreate(Bundle savedInstanceState) {\n         l.setPosition(LegendPosition.BELOW_CHART_LEFT);\n         l.setFormSize(8f);\n         l.setXEntrySpace(4f);\n+\n+        mChart.setVisibleXRange(10, 50);\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n@@ -168,7 +168,7 @@ public abstract class Chart<T extends ChartData<? extends IDataSet<? extends Ent\n     /**\n      * object that manages the bounds and drawing constraints of the chart\n      */\n-    protected ViewPortHandler mViewPortHandler;\n+    protected ViewPortHandler mViewPortHandler = new ViewPortHandler();\n \n     /**\n      * object responsible for animations\n@@ -231,8 +231,6 @@ public void onAnimationUpdate(ValueAnimator animation) {\n         Utils.init(getContext());\n         mMaxHighlightDistance = Utils.convertDpToPixel(100f);\n \n-        mViewPortHandler = new ViewPortHandler();\n-\n         mLegend = new Legend();\n \n         mLegendRenderer = new LegendRenderer(mViewPortHandler, mLegend);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java\n@@ -13,10 +13,10 @@\n import com.github.mikephil.charting.highlight.Highlight;\n import com.github.mikephil.charting.highlight.HorizontalBarHighlighter;\n import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;\n-import com.github.mikephil.charting.jobs.MoveViewJob;\n import com.github.mikephil.charting.renderer.HorizontalBarChartRenderer;\n import com.github.mikephil.charting.renderer.XAxisRendererHorizontalBarChart;\n import com.github.mikephil.charting.renderer.YAxisRendererHorizontalBarChart;\n+import com.github.mikephil.charting.utils.HorizontalViewPortHandler;\n import com.github.mikephil.charting.utils.PointD;\n import com.github.mikephil.charting.utils.TransformerHorizontalBarChart;\n import com.github.mikephil.charting.utils.Utils;\n@@ -43,6 +43,9 @@ public HorizontalBarChart(Context context, AttributeSet attrs, int defStyle) {\n \n     @Override\n     protected void init() {\n+\n+        mViewPortHandler = new HorizontalViewPortHandler();\n+\n         super.init();\n \n         mLeftAxisTransformer = new TransformerHorizontalBarChart(mViewPortHandler);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/HorizontalViewPortHandler.java b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/HorizontalViewPortHandler.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/HorizontalViewPortHandler.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/HorizontalViewPortHandler.java\n@@ -0,0 +1,29 @@\n+\n+package com.github.mikephil.charting.utils;\n+\n+/**\n+ * ViewPortHandler for HorizontalBarChart.\n+ */\n+public class HorizontalViewPortHandler extends ViewPortHandler {\n+\n+\n+//    @Override\n+//    public void setMinimumScaleX(float xScale) {\n+//        setMinimumScaleY(xScale);\n+//    }\n+//\n+//    @Override\n+//    public void setMinimumScaleY(float yScale) {\n+//        setMinimumScaleX(yScale);\n+//    }\n+//\n+//    @Override\n+//    public void setMinMaxScaleX(float minScaleX, float maxScaleX) {\n+//        setMinMaxScaleY(minScaleX, maxScaleX);\n+//    }\n+//\n+//    @Override\n+//    public void setMinMaxScaleY(float minScaleY, float maxScaleY) {\n+//        setMinMaxScaleX(minScaleY, maxScaleY);\n+//    }\n+}",
    "output": "Work on horizontalbarchart"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n@@ -110,9 +110,6 @@ protected void onCreate(Bundle savedInstanceState) {\n         l.setPosition(LegendPosition.BELOW_CHART_LEFT);\n         l.setFormSize(8f);\n         l.setXEntrySpace(4f);\n-\n-//        mChart.setVisibleXRange(50, 10);\n-//        mChart.moveViewToX(20);\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -801,23 +801,6 @@ public void moveViewToX(float xValue) {\n         addViewportJob(job);\n     }\n \n-    /**\n-     * Centers the viewport to the specified y value on the y-axis.\n-     * This also refreshes the chart by calling invalidate().\n-     *\n-     * @param yValue\n-     * @param axis   - which axis should be used as a reference for the y-axis\n-     */\n-    public void moveViewToY(float yValue, AxisDependency axis) {\n-\n-        float valsInView = getDeltaY(axis) / mViewPortHandler.getScaleY();\n-\n-        Runnable job = new MoveViewJob(mViewPortHandler, 0f, yValue + valsInView / 2f,\n-                getTransformer(axis), this);\n-\n-        addViewportJob(job);\n-    }\n-\n     /**\n      * This will move the left side of the current viewport to the specified\n      * x-value on the x-axis, and center the viewport to the specified y value on the y-axis.\n@@ -829,9 +812,9 @@ public void moveViewToY(float yValue, AxisDependency axis) {\n      */\n     public void moveViewTo(float xValue, float yValue, AxisDependency axis) {\n \n-        float valsInView = getDeltaY(axis) / mViewPortHandler.getScaleY();\n+        float yInView = getDeltaY(axis) / mViewPortHandler.getScaleY();\n \n-        Runnable job = new MoveViewJob(mViewPortHandler, xValue, yValue + valsInView / 2f,\n+        Runnable job = new MoveViewJob(mViewPortHandler, xValue, yValue + yInView / 2f,\n                 getTransformer(axis), this);\n \n         addViewportJob(job);\n@@ -854,9 +837,9 @@ public void moveViewToAnimated(float xValue, float yValue, AxisDependency axis,\n \n             PointD bounds = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);\n \n-            float valsInView = getDeltaY(axis) / mViewPortHandler.getScaleY();\n+            float yInView = getDeltaY(axis) / mViewPortHandler.getScaleY();\n \n-            Runnable job = new AnimatedMoveViewJob(mViewPortHandler, xValue, yValue + valsInView / 2f,\n+            Runnable job = new AnimatedMoveViewJob(mViewPortHandler, xValue, yValue + yInView / 2f,\n                     getTransformer(axis), this, (float) bounds.x, (float) bounds.y, duration);\n \n             addViewportJob(job);\n@@ -865,6 +848,23 @@ public void moveViewToAnimated(float xValue, float yValue, AxisDependency axis,\n         }\n     }\n \n+    /**\n+     * Centers the viewport to the specified y value on the y-axis.\n+     * This also refreshes the chart by calling invalidate().\n+     *\n+     * @param yValue\n+     * @param axis   - which axis should be used as a reference for the y-axis\n+     */\n+    public void centerViewToY(float yValue, AxisDependency axis) {\n+\n+        float valsInView = getDeltaY(axis) / mViewPortHandler.getScaleY();\n+\n+        Runnable job = new MoveViewJob(mViewPortHandler, 0f, yValue + valsInView / 2f,\n+                getTransformer(axis), this);\n+\n+        addViewportJob(job);\n+    }\n+\n     /**\n      * This will move the center of the current viewport to the specified\n      * x and y value.\n@@ -876,11 +876,11 @@ public void moveViewToAnimated(float xValue, float yValue, AxisDependency axis,\n      */\n     public void centerViewTo(float xValue, float yValue, AxisDependency axis) {\n \n-        float valsInView = getDeltaY(axis) / mViewPortHandler.getScaleY();\n-        float xsInView = getXAxis().mAxisRange / mViewPortHandler.getScaleX();\n+        float yInView = getDeltaY(axis) / mViewPortHandler.getScaleY();\n+        float xInView = getXAxis().mAxisRange / mViewPortHandler.getScaleX();\n \n         Runnable job = new MoveViewJob(mViewPortHandler,\n-                xValue - xsInView / 2f, yValue + valsInView / 2f,\n+                xValue - xInView / 2f, yValue + yInView / 2f,\n                 getTransformer(axis), this);\n \n         addViewportJob(job);\n@@ -902,11 +902,11 @@ public void centerViewToAnimated(float xValue, float yValue, AxisDependency axis\n \n             PointD bounds = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);\n \n-            float valsInView = getDeltaY(axis) / mViewPortHandler.getScaleY();\n-            float xsInView = getXAxis().mAxisRange / mViewPortHandler.getScaleX();\n+            float yInView = getDeltaY(axis) / mViewPortHandler.getScaleY();\n+            float xInView = getXAxis().mAxisRange / mViewPortHandler.getScaleX();\n \n             Runnable job = new AnimatedMoveViewJob(mViewPortHandler,\n-                    xValue - xsInView / 2f, yValue + valsInView / 2f,\n+                    xValue - xInView / 2f, yValue + yInView / 2f,\n                     getTransformer(axis), this, (float) bounds.x, (float) bounds.y, duration);\n \n             addViewportJob(job);",
    "output": "Cleanup"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HalfPieChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HalfPieChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HalfPieChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HalfPieChartActivity.java\n@@ -124,7 +124,7 @@ private void moveOffScreen() {\n         Display display = getWindowManager().getDefaultDisplay();\n         int height = display.getHeight();  // deprecated\n \n-        int offset = (int)(height * 0.65); /* or whatever */\n+        int offset = (int)(height * 0.65); /* percent to move */\n \n         RelativeLayout.LayoutParams rlParams =\n                 (RelativeLayout.LayoutParams)mChart.getLayoutParams();\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n@@ -90,7 +90,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         // add a selection listener\n         mChart.setOnChartValueSelectedListener(this);\n \n-        setData(3, 100);\n+        setData(4, 100);\n \n         mChart.animateY(1400, Easing.EasingOption.EaseInOutQuad);\n         // mChart.spin(2000, 0, 360);\n@@ -179,7 +179,7 @@ public boolean onOptionsItemSelected(MenuItem item) {\n     @Override\n     public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n \n-        tvX.setText(\"\" + (mSeekBarX.getProgress() + 1));\n+        tvX.setText(\"\" + (mSeekBarX.getProgress()));\n         tvY.setText(\"\" + (mSeekBarY.getProgress()));\n \n         setData(mSeekBarX.getProgress(), mSeekBarY.getProgress());\n@@ -189,16 +189,15 @@ private void setData(int count, float range) {\n \n         float mult = range;\n \n-        ArrayList<PieEntry> values = new ArrayList<PieEntry>();\n+        ArrayList<PieEntry> entries = new ArrayList<PieEntry>();\n \n-        // IMPORTANT: In a PieChart, no values (Entry) should have the same\n-        // xIndex (even if from different DataSets), since no values can be\n-        // drawn above each other.\n-        for (int i = 0; i < count + 1; i++) {\n-            values.add(new PieEntry((float) ((Math.random() * mult) + mult / 5), mParties[i % mParties.length]));\n+        // NOTE: The order of the entries when being added to the entries array determines their position around the center of\n+        // the chart.\n+        for (int i = 0; i < count ; i++) {\n+            entries.add(new PieEntry((float) ((Math.random() * mult) + mult / 5), mParties[i % mParties.length]));\n         }\n \n-        PieDataSet dataSet = new PieDataSet(values, \"Election Results\");\n+        PieDataSet dataSet = new PieDataSet(entries, \"Election Results\");\n         dataSet.setSliceSpace(3f);\n         dataSet.setSelectionShift(5f);\n \n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java\n@@ -96,7 +96,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         // add a selection listener\n         mChart.setOnChartValueSelectedListener(this);\n \n-        setData(3, 100);\n+        setData(4, 100);\n \n         mChart.animateY(1400, Easing.EasingOption.EaseInOutQuad);\n         // mChart.spin(2000, 0, 360);\n@@ -173,7 +173,7 @@ public boolean onOptionsItemSelected(MenuItem item) {\n     @Override\n     public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n \n-        tvX.setText(\"\" + (mSeekBarX.getProgress() + 1));\n+        tvX.setText(\"\" + (mSeekBarX.getProgress()));\n         tvY.setText(\"\" + (mSeekBarY.getProgress()));\n \n         setData(mSeekBarX.getProgress(), mSeekBarY.getProgress());\n@@ -183,16 +183,15 @@ private void setData(int count, float range) {\n \n         float mult = range;\n \n-        ArrayList<PieEntry> yVals1 = new ArrayList<PieEntry>();\n+        ArrayList<PieEntry> entries = new ArrayList<PieEntry>();\n \n-        // IMPORTANT: In a PieChart, no values (Entry) should have the same\n-        // xIndex (even if from different DataSets), since no values can be\n-        // drawn above each other.\n-        for (int i = 0; i < count + 1; i++) {\n-            yVals1.add(new PieEntry((float) (Math.random() * mult) + mult / 5, mParties[i % mParties.length]));\n+        // NOTE: The order of the entries when being added to the entries array determines their position around the center of\n+        // the chart.\n+        for (int i = 0; i < count; i++) {\n+            entries.add(new PieEntry((float) (Math.random() * mult) + mult / 5, mParties[i % mParties.length]));\n         }\n \n-        PieDataSet dataSet = new PieDataSet(yVals1, \"Election Results\");\n+        PieDataSet dataSet = new PieDataSet(entries, \"Election Results\");\n         dataSet.setSliceSpace(3f);\n         dataSet.setSelectionShift(5f);\n \n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java\n@@ -77,6 +77,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         xAxis.setValueFormatter(new AxisValueFormatter() {\n \n             private String[] mActivities = new String[]{\"Burger\", \"Steak\", \"Salad\", \"Pasta\", \"Pizza\"};\n+\n             @Override\n             public String getFormattedValue(float value, AxisBase axis) {\n                 return mActivities[(int) value % mActivities.length];\n@@ -210,23 +211,20 @@ public void setData() {\n         float min = 20;\n         int cnt = 5;\n \n-        ArrayList<RadarEntry> yVals1 = new ArrayList<RadarEntry>();\n-        ArrayList<RadarEntry> yVals2 = new ArrayList<RadarEntry>();\n+        ArrayList<RadarEntry> entries1 = new ArrayList<RadarEntry>();\n+        ArrayList<RadarEntry> entries2 = new ArrayList<RadarEntry>();\n \n-        // IMPORTANT: In a PieChart, no values (Entry) should have the same\n-        // xIndex (even if from different DataSets), since no values can be\n-        // drawn above each other.\n+        // NOTE: The order of the entries when being added to the entries array determines their position around the center of\n+        // the chart.\n         for (int i = 0; i < cnt; i++) {\n-            float val = (float) (Math.random() * mult) + min;\n-            yVals1.add(new RadarEntry(val));\n-        }\n+            float val1 = (float) (Math.random() * mult) + min;\n+            entries1.add(new RadarEntry(val1));\n \n-        for (int i = 0; i < cnt; i++) {\n-            float val = (float) (Math.random() * mult) + min;\n-            yVals2.add(new RadarEntry(val));\n+            float val2 = (float) (Math.random() * mult) + min;\n+            entries2.add(new RadarEntry(val2));\n         }\n \n-        RadarDataSet set1 = new RadarDataSet(yVals1, \"Last Week\");\n+        RadarDataSet set1 = new RadarDataSet(entries1, \"Last Week\");\n         set1.setColor(Color.rgb(103, 110, 129));\n         set1.setFillColor(Color.rgb(103, 110, 129));\n         set1.setDrawFilled(true);\n@@ -235,7 +233,7 @@ public void setData() {\n         set1.setDrawHighlightCircleEnabled(true);\n         set1.setDrawHighlightIndicators(false);\n \n-        RadarDataSet set2 = new RadarDataSet(yVals2, \"This Week\");\n+        RadarDataSet set2 = new RadarDataSet(entries2, \"This Week\");\n         set2.setColor(Color.rgb(121, 162, 175));\n         set2.setFillColor(Color.rgb(121, 162, 175));\n         set2.setDrawFilled(true);",
    "output": "Minor example adjustments"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HalfPieChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HalfPieChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HalfPieChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HalfPieChartActivity.java\n@@ -0,0 +1,134 @@\n+\n+package com.xxmassdeveloper.mpchartexample;\n+\n+import android.graphics.Color;\n+import android.graphics.Point;\n+import android.graphics.Typeface;\n+import android.os.Bundle;\n+import android.text.SpannableString;\n+import android.text.style.ForegroundColorSpan;\n+import android.text.style.RelativeSizeSpan;\n+import android.text.style.StyleSpan;\n+import android.view.Display;\n+import android.view.WindowManager;\n+import android.widget.RelativeLayout;\n+\n+import com.github.mikephil.charting.animation.Easing;\n+import com.github.mikephil.charting.charts.PieChart;\n+import com.github.mikephil.charting.components.Legend;\n+import com.github.mikephil.charting.components.Legend.LegendPosition;\n+import com.github.mikephil.charting.data.PieData;\n+import com.github.mikephil.charting.data.PieDataSet;\n+import com.github.mikephil.charting.data.PieEntry;\n+import com.github.mikephil.charting.formatter.PercentFormatter;\n+import com.github.mikephil.charting.utils.ColorTemplate;\n+import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n+\n+import java.util.ArrayList;\n+\n+public class HalfPieChartActivity extends DemoBase {\n+\n+    private PieChart mChart;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,\n+                WindowManager.LayoutParams.FLAG_FULLSCREEN);\n+        setContentView(R.layout.activity_piechart_half);\n+\n+        mChart = (PieChart) findViewById(R.id.chart1);\n+        mChart.setBackgroundColor(Color.WHITE);\n+\n+        moveOffScreen();\n+\n+        mChart.setUsePercentValues(true);\n+        mChart.setDescription(\"\");\n+\n+        mChart.setCenterTextTypeface(mTfLight);\n+        mChart.setCenterText(generateCenterSpannableText());\n+\n+        mChart.setDrawHoleEnabled(true);\n+        mChart.setHoleColor(Color.WHITE);\n+\n+        mChart.setTransparentCircleColor(Color.WHITE);\n+        mChart.setTransparentCircleAlpha(110);\n+\n+        mChart.setHoleRadius(58f);\n+        mChart.setTransparentCircleRadius(61f);\n+\n+        mChart.setDrawCenterText(true);\n+\n+        mChart.setRotationEnabled(false);\n+        mChart.setHighlightPerTapEnabled(true);\n+\n+        mChart.setMaxAngle(180f); // HALF CHART\n+        mChart.setRotationAngle(180f);\n+        mChart.setCenterTextOffset(0, -20);\n+\n+        setData(4, 100);\n+\n+        mChart.animateY(1400, Easing.EasingOption.EaseInOutQuad);\n+\n+        Legend l = mChart.getLegend();\n+        l.setPosition(LegendPosition.ABOVE_CHART_CENTER);\n+        l.setXEntrySpace(7f);\n+        l.setYEntrySpace(0f);\n+        l.setYOffset(0f);\n+\n+        // entry label styling\n+        mChart.setEntryLabelColor(Color.WHITE);\n+        mChart.setEntryLabelTypeface(mTfRegular);\n+        mChart.setEntryLabelTextSize(12f);\n+    }\n+\n+    private void setData(int count, float range) {\n+\n+        ArrayList<PieEntry> values = new ArrayList<PieEntry>();\n+\n+        for (int i = 0; i < count; i++) {\n+            values.add(new PieEntry((float) ((Math.random() * range) + range / 5), mParties[i % mParties.length]));\n+        }\n+\n+        PieDataSet dataSet = new PieDataSet(values, \"Election Results\");\n+        dataSet.setSliceSpace(3f);\n+        dataSet.setSelectionShift(5f);\n+\n+        dataSet.setColors(ColorTemplate.MATERIAL_COLORS);\n+        //dataSet.setSelectionShift(0f);\n+\n+        PieData data = new PieData(dataSet);\n+        data.setValueFormatter(new PercentFormatter());\n+        data.setValueTextSize(11f);\n+        data.setValueTextColor(Color.WHITE);\n+        data.setValueTypeface(mTfLight);\n+        mChart.setData(data);\n+\n+        mChart.invalidate();\n+    }\n+\n+    private SpannableString generateCenterSpannableText() {\n+\n+        SpannableString s = new SpannableString(\"MPAndroidChart\\ndeveloped by Philipp Jahoda\");\n+        s.setSpan(new RelativeSizeSpan(1.7f), 0, 14, 0);\n+        s.setSpan(new StyleSpan(Typeface.NORMAL), 14, s.length() - 15, 0);\n+        s.setSpan(new ForegroundColorSpan(Color.GRAY), 14, s.length() - 15, 0);\n+        s.setSpan(new RelativeSizeSpan(.8f), 14, s.length() - 15, 0);\n+        s.setSpan(new StyleSpan(Typeface.ITALIC), s.length() - 14, s.length(), 0);\n+        s.setSpan(new ForegroundColorSpan(ColorTemplate.getHoloBlue()), s.length() - 14, s.length(), 0);\n+        return s;\n+    }\n+\n+    private void moveOffScreen() {\n+\n+        Display display = getWindowManager().getDefaultDisplay();\n+        int height = display.getHeight();  // deprecated\n+\n+        int offset = (int)(height * 0.65); /* or whatever */\n+\n+        RelativeLayout.LayoutParams rlParams =\n+                (RelativeLayout.LayoutParams)mChart.getLayoutParams();\n+        rlParams.setMargins(0, 0, 0, -offset);\n+        mChart.setLayoutParams(rlParams);\n+    }\n+}\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n@@ -25,6 +25,7 @@\n import com.xxmassdeveloper.mpchartexample.CubicLineChartActivity;\n import com.xxmassdeveloper.mpchartexample.DynamicalAddingActivity;\n import com.xxmassdeveloper.mpchartexample.FilledLineActivity;\n+import com.xxmassdeveloper.mpchartexample.HalfPieChartActivity;\n import com.xxmassdeveloper.mpchartexample.HorizontalBarChartActivity;\n import com.xxmassdeveloper.mpchartexample.InvertedLineChartActivity;\n import com.xxmassdeveloper.mpchartexample.LineChartActivity1;\n@@ -143,6 +144,9 @@ protected void onCreate(Bundle savedInstanceState) {\n         objects.add(new ContentItem(\n                 \"Filled LineChart\",\n                 \"This demonstrates how to fill an area between two LineDataSets.\"));\n+        objects.add(new ContentItem(\n+                \"Half PieChart\",\n+                \"This demonstrates how to create a 180 degree PieChart.\"));\n \n         MyAdapter adapter = new MyAdapter(this, objects);\n \n@@ -282,6 +286,10 @@ public void onItemClick(AdapterView<?> av, View v, int pos, long arg3) {\n                 i = new Intent(this, FilledLineActivity.class);\n                 startActivity(i);\n                 break;\n+            case 31:\n+                i = new Intent(this, HalfPieChartActivity.class);\n+                startActivity(i);\n+                break;\n \n         }\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieChart.java\n@@ -72,6 +72,8 @@ public class PieChart extends PieRadarChartBase<PieData> {\n      */\n     private CharSequence mCenterText = \"\";\n \n+    private PointF mCenterTextOffset = new PointF(0, 0);\n+\n     /**\n      * indicates the size of the hole in the center of the piechart, default:\n      * radius / 2\n@@ -489,6 +491,25 @@ public void setCenterTextSizePixels(float sizePixels) {\n         ((PieChartRenderer) mRenderer).getPaintCenterText().setTextSize(sizePixels);\n     }\n \n+    /**\n+     * Sets the offset the center text should have from it's original position in dp. Default x = 0, y = 0\n+     *\n+     * @param x\n+     * @param y\n+     */\n+    public void setCenterTextOffset(float x, float y) {\n+        mCenterTextOffset = new PointF(Utils.convertDpToPixel(x), Utils.convertDpToPixel(y));\n+    }\n+\n+    /**\n+     * Returns the offset on the x- and y-axis the center text has in dp.\n+     *\n+     * @return\n+     */\n+    public PointF getCenterTextOffset() {\n+        return mCenterTextOffset;\n+    }\n+\n     /**\n      * Sets the color of the center text of the PieChart.\n      *\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -656,16 +656,20 @@ protected void drawCenterText(Canvas c) {\n         if (mChart.isDrawCenterTextEnabled() && centerText != null) {\n \n             PointF center = mChart.getCenterCircleBox();\n+            PointF offset = mChart.getCenterTextOffset();\n+\n+            float x = center.x + offset.x;\n+            float y = center.y + offset.y;\n \n             float innerRadius = mChart.isDrawHoleEnabled() && !mChart.isDrawSlicesUnderHoleEnabled()\n                     ? mChart.getRadius() * (mChart.getHoleRadius() / 100f)\n                     : mChart.getRadius();\n \n             RectF holeRect = mRectBuffer[0];\n-            holeRect.left = center.x - innerRadius;\n-            holeRect.top = center.y - innerRadius;\n-            holeRect.right = center.x + innerRadius;\n-            holeRect.bottom = center.y + innerRadius;\n+            holeRect.left = x - innerRadius;\n+            holeRect.top = y - innerRadius;\n+            holeRect.right = x + innerRadius;\n+            holeRect.bottom = y + innerRadius;\n             RectF boundingRect = mRectBuffer[1];\n             boundingRect.set(holeRect);\n ",
    "output": "Add example for half-piechart"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarEntry.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarEntry.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarEntry.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarEntry.java\n@@ -234,7 +234,7 @@ protected void calcRanges() {\n             float value = values[i];\n \n             if (value < 0) {\n-                mRanges[i] = new Range(negRemain, negRemain + Math.abs(value));\n+                mRanges[i] = new Range(negRemain, negRemain + value);\n                 negRemain += Math.abs(value);\n             } else {\n                 mRanges[i] = new Range(posRemain, posRemain + value);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -349,12 +349,21 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             final float y1;\n             final float y2;\n \n-            if (isStack && !mChart.isHighlightFullBarEnabled()) {\n+            if (isStack) {\n \n-                Range range = e.getRanges()[high.getStackIndex()];\n+                if(mChart.isHighlightFullBarEnabled()) {\n+\n+                    y1 = e.getPositiveSum();\n+                    y2 = -e.getNegativeSum();\n+\n+                } else {\n+\n+                    Range range = e.getRanges()[high.getStackIndex()];\n+\n+                    y1 = range.from;\n+                    y2 = range.to;\n+                }\n \n-                y1 = range.from;\n-                y2 = range.to;\n             } else {\n                 y1 = e.getY();\n                 y2 = 0.f;",
    "output": "Fixes related to highlight rendering"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n@@ -55,6 +55,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart.setBackgroundColor(Color.WHITE);\n         mChart.setDrawGridBackground(false);\n         mChart.setDrawBarShadow(false);\n+        mChart.setHighlightFullBarEnabled(false);\n \n         // draw bars behind lines\n         mChart.setDrawOrder(new DrawOrder[]{\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n@@ -69,6 +69,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart.setDrawBarShadow(false);\n \n         mChart.setDrawValueAboveBar(false);\n+        mChart.setHighlightFullBarEnabled(false);\n \n         // change the position of the y-labels\n         YAxis leftAxis = mChart.getAxisLeft();\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java\n@@ -56,6 +56,7 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         mChart.setDrawBarShadow(false);\n         mChart.setDrawValueAboveBar(true);\n+        mChart.setHighlightFullBarEnabled(false);\n         \n         mChart.getAxisLeft().setEnabled(false);\n         mChart.getAxisRight().setAxisMaxValue(25f);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java\n@@ -27,6 +27,11 @@ public class BarChart extends BarLineChartBase<BarData> implements BarDataProvid\n      */\n     private boolean mDrawHighlightArrow = false;\n \n+    /**\n+     * flag that indicates whether the highlight should be full-bar oriented, or single-value?\n+     */\n+    protected boolean mHighlightFullBarEnabled = false;\n+\n     /**\n      * if set to true, all values are drawn above their bars, instead of below their top\n      */\n@@ -183,6 +188,25 @@ public boolean isDrawBarShadowEnabled() {\n         return mDrawBarShadow;\n     }\n \n+    /**\n+     * Set this to true to make the highlight operation full-bar oriented,\n+     * false to make it highlight single values (relevant only for stacked).\n+     * Default: false\n+     *\n+     * @param enabled\n+     */\n+    public void setHighlightFullBarEnabled(boolean enabled) {\n+        mHighlightFullBarEnabled = enabled;\n+    }\n+\n+    /**\n+     * @return true the highlight operation is be full-bar oriented, false if single-value\n+     */\n+    @Override\n+    public boolean isHighlightFullBarEnabled() {\n+        return mHighlightFullBarEnabled;\n+    }\n+\n     /**\n      * Highlights the value at the given x-position in the given DataSet. Provide\n      * -1 as the dataSetIndex to undo all highlighting.\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -77,11 +77,6 @@ public abstract class BarLineChartBase<T extends BarLineScatterCandleBubbleData<\n      */\n     protected boolean mHighlightPerDragEnabled = true;\n \n-    /**\n-     * flag that indicates whether the highlight should be full-bar oriented, or single-value?\n-     */\n-    protected boolean mHighlightFullBarEnabled = false;\n-\n     /**\n      * if true, dragging is enabled for the chart\n      */\n@@ -1023,23 +1018,6 @@ public boolean isHighlightPerDragEnabled() {\n         return mHighlightPerDragEnabled;\n     }\n \n-    /**\n-     * Set this to true to make the highlight full-bar oriented,\n-     * false to make it highlight single values\n-     *\n-     * @param enabled\n-     */\n-    public void setHighlightFullBarEnabled(boolean enabled) {\n-        mHighlightFullBarEnabled = enabled;\n-    }\n-\n-    /**\n-     * @return true the highlight is be full-bar oriented, false if single-value\n-     */\n-    public boolean isHighlightFullBarEnabled() {\n-        return mHighlightFullBarEnabled;\n-    }\n-\n     /**\n      * Sets the color for the background of the chart-drawing area (everything\n      * behind the grid lines).\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n@@ -31,7 +31,6 @@\n import com.github.mikephil.charting.components.Legend;\n import com.github.mikephil.charting.components.MarkerView;\n import com.github.mikephil.charting.components.XAxis;\n-import com.github.mikephil.charting.components.YAxis;\n import com.github.mikephil.charting.data.ChartData;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.formatter.DefaultValueFormatter;\n@@ -630,9 +629,6 @@ public void highlightValue(Highlight high, boolean callListener) {\n                 mIndicesToHighlight = null;\n                 high = null;\n             } else {\n-                if (this instanceof BarLineChartBase\n-                        && ((BarLineChartBase) this).isHighlightFullBarEnabled())\n-                    high = new Highlight(high.getX(), -1);\n \n                 // set the indices to highlight\n                 mIndicesToHighlight = new Highlight[]{\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java\n@@ -28,6 +28,12 @@ public class CombinedChart extends BarLineChartBase<CombinedData> implements Com\n      */\n     private boolean mDrawValueAboveBar = true;\n \n+\n+    /**\n+     * flag that indicates whether the highlight should be full-bar oriented, or single-value?\n+     */\n+    protected boolean mHighlightFullBarEnabled = false;\n+\n     /**\n      * if set to true, a grey area is drawn behind each bar that indicates the\n      * maximum value\n@@ -149,6 +155,24 @@ public void setDrawBarShadow(boolean enabled) {\n         mDrawBarShadow = enabled;\n     }\n \n+    /**\n+     * Set this to true to make the highlight operation full-bar oriented,\n+     * false to make it highlight single values (relevant only for stacked).\n+     *\n+     * @param enabled\n+     */\n+    public void setHighlightFullBarEnabled(boolean enabled) {\n+        mHighlightFullBarEnabled = enabled;\n+    }\n+\n+    /**\n+     * @return true the highlight operation is be full-bar oriented, false if single-value\n+     */\n+    @Override\n+    public boolean isHighlightFullBarEnabled() {\n+        return mHighlightFullBarEnabled;\n+    }\n+\n     /**\n      * Returns the currently set draw order.\n      *\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider.java b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider.java\n@@ -7,4 +7,5 @@ public interface BarDataProvider extends BarLineScatterCandleBubbleDataProvider\n     BarData getBarData();\n     boolean isDrawBarShadowEnabled();\n     boolean isDrawValueAboveBarEnabled();\n+    boolean isHighlightFullBarEnabled();\n }\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -349,7 +349,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             final float y1;\n             final float y2;\n \n-            if (isStack) {\n+            if (isStack && !mChart.isHighlightFullBarEnabled()) {\n \n                 Range range = e.getRanges()[high.getStackIndex()];\n ",
    "output": "Changes related to highlight full bar"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n@@ -632,7 +632,7 @@ public void highlightValue(Highlight high, boolean callListener) {\n             } else {\n                 if (this instanceof BarLineChartBase\n                         && ((BarLineChartBase) this).isHighlightFullBarEnabled())\n-                    high = new Highlight(high.getX(), Float.NaN, Float.NaN, Float.NaN, -1, YAxis.AxisDependency.LEFT);\n+                    high = new Highlight(high.getX(), -1);\n \n                 // set the indices to highlight\n                 mIndicesToHighlight = new Highlight[]{\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlight.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlight.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlight.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlight.java\n@@ -70,14 +70,19 @@ public Highlight(float x, int dataSetIndex) {\n         this.mDataSetIndex = dataSetIndex;\n     }\n \n+    public Highlight(float x, int dataSetIndex, int stackIndex) {\n+        this(x, dataSetIndex);\n+        this.mStackIndex = stackIndex;\n+    }\n+\n     /**\n      * constructor\n      *\n      * @param x            the x-value of the highlighted value\n      * @param y            the y-value of the highlighted value\n      * @param dataSetIndex the index of the DataSet the highlighted value belongs to\n      */\n-    public Highlight(float x, float y, float xPx, float yPx, int dataSetIndex, YAxis.AxisDependency axis) {\n+    protected Highlight(float x, float y, float xPx, float yPx, int dataSetIndex, YAxis.AxisDependency axis) {\n         this.mX = x;\n         this.mY = y;\n         this.mXPx = xPx;\n@@ -96,7 +101,7 @@ public Highlight(float x, float y, float xPx, float yPx, int dataSetIndex, YAxis\n      *                     selected\n      * @param range        the range the selected stack-value is in\n      */\n-    public Highlight(float x, float y, float xPx, float yPx, int dataSetIndex, int stackIndex, Range range,\n+    protected Highlight(float x, float y, float xPx, float yPx, int dataSetIndex, int stackIndex, Range range,\n                      YAxis.AxisDependency axis) {\n         this(x, y, xPx, yPx, dataSetIndex, axis);\n         this.mStackIndex = stackIndex;",
    "output": "Minor changes to highlighting"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -719,7 +719,7 @@ public void setScaleMinima(float scaleX, float scaleY) {\n     /**\n      * Sets the size of the area (range on the x-axis) that should be maximum\n      * visible at once (no further zooming out allowed). If this is e.g. set to\n-     * 10, no more than 10 values on the x-axis can be viewed at once without\n+     * 10, no more than a range of 10 on the x-axis can be viewed at once without\n      * scrolling.\n      *\n      * @param maxXRange The maximum visible range of x-values.\n@@ -732,7 +732,7 @@ public void setVisibleXRangeMaximum(float maxXRange) {\n     /**\n      * Sets the size of the area (range on the x-axis) that should be minimum\n      * visible at once (no further zooming in allowed). If this is e.g. set to\n-     * 10, no less than 10 values on the x-axis can be viewed at once without\n+     * 10, no less than a range of 10 on the x-axis can be viewed at once without\n      * scrolling.\n      *\n      * @param minXRange The minimum visible range of x-values.\n@@ -743,9 +743,8 @@ public void setVisibleXRangeMinimum(float minXRange) {\n     }\n \n     /**\n-     * Limits the maximum and minimum value count that can be visible by\n-     * pinching and zooming. e.g. minRange=10, maxRange=100 no less than 10\n-     * values and no more that 100 values can be viewed at once without\n+     * Limits the maximum and minimum x range that can be visible by pinching and zooming. e.g. minRange=10, maxRange=100 the\n+     * smallest range to be displayed at once is 10, and no more than a range of 100 values can be viewed at once without\n      * scrolling\n      *\n      * @param minXRange\n@@ -770,14 +769,14 @@ public void setVisibleYRangeMaximum(float maxYRange, AxisDependency axis) {\n     }\n \n     /**\n-     * Moves the left side of the current viewport to the specified x-index.\n+     * Moves the left side of the current viewport to the specified x-position.\n      * This also refreshes the chart by calling invalidate().\n      *\n-     * @param xIndex\n+     * @param xValue\n      */\n-    public void moveViewToX(float xIndex) {\n+    public void moveViewToX(float xValue) {\n \n-        Runnable job = new MoveViewJob(mViewPortHandler, xIndex, 0f,\n+        Runnable job = new MoveViewJob(mViewPortHandler, xValue, 0f,\n                 getTransformer(AxisDependency.LEFT), this);\n \n         addViewportJob(job);\n@@ -802,7 +801,7 @@ public void moveViewToY(float yValue, AxisDependency axis) {\n \n     /**\n      * This will move the left side of the current viewport to the specified\n-     * x value on the x-axis, and center the viewport to the specified y value on the y-axis.\n+     * x-value on the x-axis, and center the viewport to the specified y value on the y-axis.\n      * This also refreshes the chart by calling invalidate().\n      *\n      * @param xValue\n@@ -820,7 +819,7 @@ public void moveViewTo(float xValue, float yValue, AxisDependency axis) {\n     }\n \n     /**\n-     * This will move the left side of the current viewport to the specified x value\n+     * This will move the left side of the current viewport to the specified x-value\n      * and center the viewport to the y value animated.\n      * This also refreshes the chart by calling invalidate().\n      *\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java\n@@ -7,6 +7,7 @@\n import android.util.Log;\n \n import com.github.mikephil.charting.components.XAxis.XAxisPosition;\n+import com.github.mikephil.charting.components.YAxis;\n import com.github.mikephil.charting.components.YAxis.AxisDependency;\n import com.github.mikephil.charting.data.BarEntry;\n import com.github.mikephil.charting.data.Entry;\n@@ -205,4 +206,23 @@ public float getHighestVisibleX() {\n                 mViewPortHandler.contentTop());\n         return (float) Math.min(mXAxis.mAxisMaximum, pos.y);\n     }\n+\n+    @Override\n+    public void setVisibleXRangeMaximum(float maxXRange) {\n+        float xScale = mXAxis.mAxisRange / (maxXRange);\n+        mViewPortHandler.setMinimumScaleY(xScale);\n+    }\n+\n+    @Override\n+    public void setVisibleYRangeMaximum(float maxYRange, AxisDependency axis) {\n+        float yScale = getDeltaY(axis) / maxYRange;\n+        mViewPortHandler.setMinimumScaleX(yScale);\n+    }\n+\n+    @Override\n+    public void setVisibleXRange(float minXRange, float maxXRange) {\n+        float maxScale = mXAxis.mAxisRange / minXRange;\n+        float minScale = mXAxis.mAxisRange / maxXRange;\n+        mViewPortHandler.setMinMaxScaleY(minScale, maxScale);\n+    }\n }\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ViewPortHandler.java b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ViewPortHandler.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ViewPortHandler.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ViewPortHandler.java\n@@ -509,6 +509,20 @@ public void setMaximumScaleY(float yScale) {\n         limitTransAndScale(mMatrixTouch, mContentRect);\n     }\n \n+    public void setMinMaxScaleY(float minScaleY, float maxScaleY) {\n+\n+        if (minScaleY < 1f)\n+            minScaleY = 1f;\n+\n+        if (maxScaleY == 0.f)\n+            maxScaleY = Float.MAX_VALUE;\n+\n+        mMinScaleX = minScaleY;\n+        mMaxScaleX = maxScaleY;\n+\n+        limitTransAndScale(mMatrixTouch, mContentRect);\n+    }\n+\n     /**\n      * Returns the charts-touch matrix used for translation and scale on touch.\n      *",
    "output": "Work on viewport modifications for horizontal barchart (issue #1842)"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n@@ -125,7 +125,6 @@ private LineData generateLineData() {\n         set.setValueTextColor(Color.rgb(240, 238, 70));\n \n         set.setAxisDependency(YAxis.AxisDependency.LEFT);\n-        this.set1 = set;\n         d.addDataSet(set);\n \n         return d;\n@@ -209,9 +208,6 @@ protected CandleData generateCandleData() {\n         return d;\n     }\n \n-    private LineDataSet set1;\n-    private BubbleDataSet set2;\n-\n     protected BubbleData generateBubbleData() {\n \n         BubbleData bd = new BubbleData();\n@@ -230,7 +226,6 @@ protected BubbleData generateBubbleData() {\n         set.setValueTextColor(Color.WHITE);\n         set.setHighlightCircleWidth(1.5f);\n         set.setDrawValues(true);\n-        this.set2 = set;\n         bd.addDataSet(set);\n \n         return bd;\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -552,7 +552,7 @@ public boolean onDoubleTap(MotionEvent e) {\n         }\n \n         // check if double-tap zooming is enabled\n-        if (mChart.isDoubleTapToZoomEnabled()) {\n+        if (mChart.isDoubleTapToZoomEnabled() && mChart.getData().getEntryCount() > 0) {\n \n             PointF trans = getTrans(e.getX(), e.getY());\n ",
    "output": "Minor fixes related to double tap highlight"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java\n@@ -59,6 +59,10 @@ protected Highlight getHighlightForX(float xVal, float x, float y) {\n \n         List<Highlight> closestValues = getHighlightsAtXPos(xVal, x, y);\n \n+        if(closestValues.isEmpty()) {\n+            return null;\n+        }\n+\n         float leftAxisMinDist = getMinimumDistance(closestValues, y, YAxis.AxisDependency.LEFT);\n         float rightAxisMinDist = getMinimumDistance(closestValues, y, YAxis.AxisDependency.RIGHT);\n \n@@ -128,7 +132,10 @@ protected List<Highlight> getHighlightsAtXPos(float xVal, float x, float y) {\n             if (!dataSet.isHighlightEnabled())\n                 continue;\n \n-            vals.add(buildHighlight(dataSet, i, xVal, DataSet.Rounding.CLOSEST));\n+            Highlight high = buildHighlight(dataSet, i, xVal, DataSet.Rounding.CLOSEST);\n+\n+            if(high != null)\n+                vals.add(high);\n             //vals.add(buildHighlight(dataSet, i, xVal, DataSet.Rounding.DOWN));\n         }\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/ScatterChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n@@ -319,13 +319,15 @@ public void drawValues(Canvas c) {\n                 // apply the text-styling defined by the DataSet\n                 applyValueTextStyle(dataSet);\n \n+                XBounds bounds = getXBounds(mChart, dataSet);\n+\n                 float[] positions = mChart.getTransformer(dataSet.getAxisDependency())\n                         .generateTransformedValuesScatter(dataSet,\n-                                mAnimator.getPhaseY());\n+                                mAnimator.getPhaseX(), mAnimator.getPhaseY(), bounds.min, bounds.max);\n \n                 float shapeSize = Utils.convertDpToPixel(dataSet.getScatterShapeSize());\n \n-                for (int j = 0; j < positions.length * mAnimator.getPhaseX(); j += 2) {\n+                for (int j = 0; j < positions.length; j += 2) {\n \n                     if (!mViewPortHandler.isInBoundsRight(positions[j]))\n                         break;\n@@ -335,10 +337,10 @@ public void drawValues(Canvas c) {\n                             || !mViewPortHandler.isInBoundsY(positions[j + 1])))\n                         continue;\n \n-                    Entry entry = dataSet.getEntryForIndex(j / 2);\n+                    Entry entry = dataSet.getEntryForIndex(j / 2 + bounds.min);\n \n                     drawValue(c, dataSet.getValueFormatter(), entry.getY(), entry, i, positions[j],\n-                            positions[j + 1] - shapeSize, dataSet.getValueTextColor(j / 2));\n+                            positions[j + 1] - shapeSize, dataSet.getValueTextColor(j / 2 + bounds.min));\n                 }\n             }\n         }\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java\n@@ -102,14 +102,16 @@ public void prepareMatrixOffset(boolean inverted) {\n      * @param data\n      * @return\n      */\n-    public float[] generateTransformedValuesScatter(IScatterDataSet data,\n-                                                    float phaseY) {\n+    public float[] generateTransformedValuesScatter(IScatterDataSet data, float phaseX,\n+                                                    float phaseY, int from, int to) {\n \n-        float[] valuePoints = new float[data.getEntryCount() * 2];\n+        final int count = (int) ((to - from) * phaseX + 1) * 2;\n \n-        for (int j = 0; j < valuePoints.length; j += 2) {\n+        float[] valuePoints = new float[count];\n \n-            Entry e = data.getEntryForIndex(j / 2);\n+        for (int j = 0; j < count; j += 2) {\n+\n+            Entry e = data.getEntryForIndex(j / 2 + from);\n \n             if (e != null) {\n                 valuePoints[j] = e.getX();",
    "output": "Improvements to scatter value rendering"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java\n@@ -131,7 +131,7 @@ public float[] generateTransformedValuesScatter(IScatterDataSet data,\n      */\n     public float[] generateTransformedValuesBubble(IBubbleDataSet data, float phaseY, int from, int to) {\n \n-        final int count = (int) Math.ceil(to - from) * 2; // (int) Math.ceil((to - from) * phaseX) * 2;\n+        final int count = (to - from + 1) * 2; // (int) Math.ceil((to - from) * phaseX) * 2;\n \n         float[] valuePoints = new float[count];\n \n@@ -189,7 +189,7 @@ public float[] generateTransformedValuesLine(ILineDataSet data,\n     public float[] generateTransformedValuesCandle(ICandleDataSet data,\n                                                    float phaseX, float phaseY, int from, int to) {\n \n-        final int count = (int) Math.ceil((to - from) * phaseX) * 2;\n+        final int count = (int) ((to - from) * phaseX + 1) * 2;\n \n         float[] valuePoints = new float[count];\n ",
    "output": "Fix issue related to values not being drawn"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n@@ -69,6 +69,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart.setPinchZoom(false);\n \n         mChart.setDrawGridBackground(false);\n+        mChart.setMaxHighlightDistance(300);\n         \n         XAxis x = mChart.getXAxis();\n         x.setEnabled(false);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n@@ -230,7 +230,7 @@ public void onAnimationUpdate(ValueAnimator animation) {\n \n         // initialize the utils\n         Utils.init(getContext());\n-        mMaxHighlightDistance = Utils.convertDpToPixel(70f);\n+        mMaxHighlightDistance = Utils.convertDpToPixel(100f);\n \n         mViewPortHandler = new ViewPortHandler();\n \n@@ -496,7 +496,7 @@ public float getMaxHighlightDistance() {\n \n     /**\n      * Sets the maximum distance in screen dp a touch can be away from an entry to cause it to get highlighted.\n-     * Default: 70dp\n+     * Default: 100dp\n      *\n      * @param distDp\n      */\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java\n@@ -18,14 +18,15 @@ public BarHighlighter(BarDataProvider chart) {\n \n     @Override\n     public Highlight getHighlight(float x, float y) {\n+        Highlight high = super.getHighlight(x, y);\n \n-        BarData barData = mChart.getBarData();\n+        if(high == null) {\n+            return null;\n+        }\n \n         PointD pos = getValsForTouch(x, y);\n \n-        Highlight high = getHighlightForX((float) pos.x, x, y);\n-        if (high == null)\n-            return null;\n+        BarData barData = mChart.getBarData();\n \n         IBarDataSet set = barData.getDataSetByIndex(high.getDataSetIndex());\n         if (set.isStacked()) {\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java\n@@ -128,8 +128,8 @@ protected List<Highlight> getHighlightsAtXPos(float xVal, float x, float y) {\n             if (!dataSet.isHighlightEnabled())\n                 continue;\n \n-            vals.add(buildHighlight(dataSet, i, xVal, DataSet.Rounding.UP));\n-            vals.add(buildHighlight(dataSet, i, xVal, DataSet.Rounding.DOWN));\n+            vals.add(buildHighlight(dataSet, i, xVal, DataSet.Rounding.CLOSEST));\n+            //vals.add(buildHighlight(dataSet, i, xVal, DataSet.Rounding.DOWN));\n         }\n \n         return vals;\n@@ -202,6 +202,7 @@ public Highlight getClosestHighlightByPixel(List<Highlight> closestValues, float\n      * @return\n      */\n     protected float getDistance(float x1, float y1, float x2, float y2) {\n+        //return Math.abs(y1 - y2);\n         //return Math.abs(x1 - x2);\n         return (float) Math.hypot(x1 - x2, y1 - y2);\n     }\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java\n@@ -57,13 +57,13 @@ protected List<Highlight> getHighlightsAtXPos(float xVal, float x, float y) {\n                     if (!dataSet.isHighlightEnabled())\n                         continue;\n \n-                    Highlight s1 = buildHighlight(dataSet, j, xVal, DataSet.Rounding.UP);\n+                    Highlight s1 = buildHighlight(dataSet, j, xVal, DataSet.Rounding.CLOSEST);\n                     s1.setDataIndex(i);\n                     vals.add(s1);\n \n-                    Highlight s2 = buildHighlight(dataSet, j, xVal, DataSet.Rounding.DOWN);\n-                    s2.setDataIndex(i);\n-                    vals.add(s2);\n+//                    Highlight s2 = buildHighlight(dataSet, j, xVal, DataSet.Rounding.DOWN);\n+//                    s2.setDataIndex(i);\n+//                    vals.add(s2);\n                 }\n             }\n         }",
    "output": "Improvements regarding highlighting, issue #1335"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/FilledLineActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/FilledLineActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/FilledLineActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/FilledLineActivity.java\n@@ -0,0 +1,150 @@\n+\n+package com.xxmassdeveloper.mpchartexample;\n+\n+import android.graphics.Color;\n+import android.os.Bundle;\n+import android.view.WindowManager;\n+\n+import com.github.mikephil.charting.charts.LineChart;\n+import com.github.mikephil.charting.components.Legend;\n+import com.github.mikephil.charting.components.XAxis;\n+import com.github.mikephil.charting.components.YAxis;\n+import com.github.mikephil.charting.data.Entry;\n+import com.github.mikephil.charting.data.LineData;\n+import com.github.mikephil.charting.data.LineDataSet;\n+import com.github.mikephil.charting.formatter.FillFormatter;\n+import com.github.mikephil.charting.interfaces.dataprovider.LineDataProvider;\n+import com.github.mikephil.charting.interfaces.datasets.ILineDataSet;\n+import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n+\n+import java.util.ArrayList;\n+\n+public class FilledLineActivity extends DemoBase {\n+\n+    private LineChart mChart;\n+    private int mFillColor = Color.argb(150, 51, 181, 229);\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,\n+                WindowManager.LayoutParams.FLAG_FULLSCREEN);\n+        setContentView(R.layout.activity_linechart_noseekbar);\n+\n+        mChart = (LineChart) findViewById(R.id.chart1);\n+        mChart.setBackgroundColor(Color.WHITE);\n+        mChart.setGridBackgroundColor(mFillColor);\n+        mChart.setDrawGridBackground(true);\n+\n+        mChart.setDrawBorders(true);\n+\n+        // no description text\n+        mChart.setDescription(\"\");\n+\n+        // if disabled, scaling can be done on x- and y-axis separately\n+        mChart.setPinchZoom(false);\n+\n+        Legend l = mChart.getLegend();\n+        l.setEnabled(false);\n+\n+        XAxis xAxis = mChart.getXAxis();\n+        xAxis.setEnabled(false);\n+\n+        YAxis leftAxis = mChart.getAxisLeft();\n+        leftAxis.setAxisMaxValue(900f);\n+        leftAxis.setAxisMinValue(-250f);\n+        leftAxis.setDrawAxisLine(false);\n+        leftAxis.setDrawZeroLine(false);\n+        leftAxis.setDrawGridLines(false);\n+\n+        mChart.getAxisRight().setEnabled(false);\n+\n+        // add data\n+        setData(100, 60);\n+\n+        mChart.invalidate();\n+    }\n+\n+    private void setData(int count, float range) {\n+\n+        ArrayList<Entry> yVals1 = new ArrayList<Entry>();\n+\n+        for (int i = 0; i < count; i++) {\n+            float val = (float) (Math.random() * range) + 50;// + (float)\n+            // ((mult *\n+            // 0.1) / 10);\n+            yVals1.add(new Entry(i, val));\n+        }\n+\n+        ArrayList<Entry> yVals2 = new ArrayList<Entry>();\n+\n+        for (int i = 0; i < count; i++) {\n+            float val = (float) (Math.random() * range) + 450;// + (float)\n+            // ((mult *\n+            // 0.1) / 10);\n+            yVals2.add(new Entry(i, val));\n+        }\n+\n+        LineDataSet set1, set2;\n+\n+        if (mChart.getData() != null &&\n+                mChart.getData().getDataSetCount() > 0) {\n+            set1 = (LineDataSet)mChart.getData().getDataSetByIndex(0);\n+            set2 = (LineDataSet)mChart.getData().getDataSetByIndex(1);\n+            set1.setValues(yVals1);\n+            set2.setValues(yVals2);\n+            mChart.getData().notifyDataChanged();\n+            mChart.notifyDataSetChanged();\n+        } else {\n+            // create a dataset and give it a type\n+            set1 = new LineDataSet(yVals1, \"DataSet 1\");\n+\n+            set1.setAxisDependency(YAxis.AxisDependency.LEFT);\n+            set1.setColor(Color.rgb(255, 241, 46));\n+            set1.setDrawCircles(false);\n+            set1.setLineWidth(2f);\n+            set1.setCircleRadius(3f);\n+            set1.setFillAlpha(255);\n+            set1.setDrawFilled(true);\n+            set1.setFillColor(Color.WHITE);\n+            set1.setHighLightColor(Color.rgb(244, 117, 117));\n+            set1.setDrawCircleHole(false);\n+            set1.setFillFormatter(new FillFormatter() {\n+                @Override\n+                public float getFillLinePosition(ILineDataSet dataSet, LineDataProvider dataProvider) {\n+                    return mChart.getAxisLeft().getAxisMinimum();\n+                }\n+            });\n+\n+            // create a dataset and give it a type\n+            set2 = new LineDataSet(yVals2, \"DataSet 2\");\n+            set2.setAxisDependency(YAxis.AxisDependency.LEFT);\n+            set2.setColor(Color.rgb(255, 241, 46));\n+            set2.setDrawCircles(false);\n+            set2.setLineWidth(2f);\n+            set2.setCircleRadius(3f);\n+            set2.setFillAlpha(255);\n+            set2.setDrawFilled(true);\n+            set2.setFillColor(Color.WHITE);\n+            set2.setDrawCircleHole(false);\n+            set2.setHighLightColor(Color.rgb(244, 117, 117));\n+            set2.setFillFormatter(new FillFormatter() {\n+                @Override\n+                public float getFillLinePosition(ILineDataSet dataSet, LineDataProvider dataProvider) {\n+                    return mChart.getAxisLeft().getAxisMaximum();\n+                }\n+            });\n+\n+            ArrayList<ILineDataSet> dataSets = new ArrayList<ILineDataSet>();\n+            dataSets.add(set1); // add the datasets\n+            dataSets.add(set2);\n+\n+            // create a data object with the datasets\n+            LineData data = new LineData(dataSets);\n+            data.setDrawValues(false);\n+\n+            // set data\n+            mChart.setData(data);\n+        }\n+    }\n+}\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n@@ -24,6 +24,7 @@\n import com.xxmassdeveloper.mpchartexample.CombinedChartActivity;\n import com.xxmassdeveloper.mpchartexample.CubicLineChartActivity;\n import com.xxmassdeveloper.mpchartexample.DynamicalAddingActivity;\n+import com.xxmassdeveloper.mpchartexample.FilledLineActivity;\n import com.xxmassdeveloper.mpchartexample.HorizontalBarChartActivity;\n import com.xxmassdeveloper.mpchartexample.InvertedLineChartActivity;\n import com.xxmassdeveloper.mpchartexample.LineChartActivity1;\n@@ -139,6 +140,9 @@ protected void onCreate(Bundle savedInstanceState) {\n                 \"Simple demonstration of a time-chart. This chart draws one line entry per hour originating from the current time in milliseconds.\");\n         time.isNew = true;\n         objects.add(time);\n+        objects.add(new ContentItem(\n+                \"Filled LineChart\",\n+                \"This demonstrates how to fill an area between two LineDataSets.\"));\n \n         MyAdapter adapter = new MyAdapter(this, objects);\n \n@@ -274,6 +278,10 @@ public void onItemClick(AdapterView<?> av, View v, int pos, long arg3) {\n                 i = new Intent(this, LineChartTime.class);\n                 startActivity(i);\n                 break;\n+            case 30:\n+                i = new Intent(this, FilledLineActivity.class);\n+                startActivity(i);\n+                break;\n \n         }\n ",
    "output": "Provide example for #1865"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java\n@@ -32,10 +32,6 @@ public String getFormattedValue(float value, AxisBase axis) {\n         String monthName = mMonths[month % mMonths.length];\n         String yearName = String.valueOf(year);\n \n-        if (year == 2017) {\n-            System.out.println(\"\");\n-        }\n-\n         if (chart.getVisibleXRange() > 30 * axis.getLabelCount()) {\n \n             return monthName + \" \" + yearName;",
    "output": "Cleanup"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/ScatterDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ScatterDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/ScatterDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ScatterDataSet.java\n@@ -53,13 +53,16 @@ public DataSet<Entry> copy() {\n         }\n \n         ScatterDataSet copied = new ScatterDataSet(yVals, getLabel());\n+        copied.mDrawValues = mDrawValues;\n+        copied.mValueColors = mValueColors;\n         copied.mColors = mColors;\n         copied.mShapeSize = mShapeSize;\n         copied.mScatterShape = mScatterShape;\n         copied.mScatterShapeHoleRadius = mScatterShapeHoleRadius;\n         copied.mScatterShapeHoleColor = mScatterShapeHoleColor;\n-        //copied.mCustomScatterPath = mCustomScatterPath;\n+        copied.mHighlightLineWidth = mHighlightLineWidth;\n         copied.mHighLightColor = mHighLightColor;\n+        copied.mHighlightDashPathEffect = mHighlightDashPathEffect;\n \n         return copied;\n     }",
    "output": "Work on scatterdataset copy"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n@@ -300,16 +300,13 @@ public void onAnimationUpdate(ValueAnimator animation) {\n      */\n     public void setData(T data) {\n \n+        mData = data;\n+        mOffsetsCalculated = false;\n+\n         if (data == null) {\n-            Log.e(LOG_TAG,\n-                    \"Cannot set data for chart. Provided data object is null.\");\n             return;\n         }\n \n-        // LET THE CHART KNOW THERE IS DATA\n-        mOffsetsCalculated = false;\n-        mData = data;\n-\n         // calculate how many digits are needed\n         calculateFormatter(data.getYMin(), data.getYMax());\n \n@@ -331,13 +328,14 @@ public void setData(T data) {\n      */\n     public void clear() {\n         mData = null;\n+        mOffsetsCalculated = false;\n         mIndicesToHighlight = null;\n         invalidate();\n     }\n \n     /**\n-     * Removes all DataSets (and thereby Entries) from the chart. Does not\n-     * remove the x-values. Also refreshes the chart by calling invalidate().\n+     * Removes all DataSets (and thereby Entries) from the chart. Does not set the data object to null. Also refreshes the\n+     * chart by calling invalidate().\n      */\n     public void clearValues() {\n         mData.clearValues();",
    "output": "Fixes related to no data text #1749"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -296,8 +296,7 @@ private void performDrag(MotionEvent event) {\n         float dX, dY;\n \n         // check if axis is inverted\n-        if (mChart.isAnyAxisInverted() && mClosestDataSetToTouch != null\n-                && mChart.getAxis(mClosestDataSetToTouch.getAxisDependency()).isInverted()) {\n+        if (inverted()) {\n \n             // if there is an inverted horizontalbarchart\n             if (mChart instanceof HorizontalBarChart) {\n@@ -498,8 +497,7 @@ public PointF getTrans(float x, float y) {\n         float yTrans = 0f;\n \n         // check if axis is inverted\n-        if (mChart.isAnyAxisInverted() && mClosestDataSetToTouch != null\n-                && mChart.isInverted(mClosestDataSetToTouch.getAxisDependency())) {\n+        if (inverted()) {\n             yTrans = -(y - vph.offsetTop());\n         } else {\n             yTrans = -(mChart.getMeasuredHeight() - y - vph.offsetBottom());\n@@ -508,6 +506,16 @@ public PointF getTrans(float x, float y) {\n         return new PointF(xTrans, yTrans);\n     }\n \n+    /**\n+     * Returns true if the current touch situation should be interpreted as inverted, false if not.\n+     *\n+     * @return\n+     */\n+    private boolean inverted() {\n+        return (mClosestDataSetToTouch == null && mChart.isAnyAxisInverted()) || (mClosestDataSetToTouch != null\n+                && mChart.isInverted(mClosestDataSetToTouch.getAxisDependency()));\n+    }\n+\n     /**\n      * ################ ################ ################ ################\n      */",
    "output": "Fix bug related to inverted axis & scrolling #1829"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -169,7 +169,7 @@ protected void init() {\n \n         setHighlighter(new ChartHighlighter(this));\n \n-        mChartTouchListener = new BarLineChartTouchListener(this, mViewPortHandler.getMatrixTouch());\n+        mChartTouchListener = new BarLineChartTouchListener(this, mViewPortHandler.getMatrixTouch(), 3f);\n \n         mGridBackgroundPaint = new Paint();\n         mGridBackgroundPaint.setStyle(Style.FILL);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n@@ -684,6 +684,15 @@ public void setOnTouchListener(ChartTouchListener l) {\n         this.mChartTouchListener = l;\n     }\n \n+    /**\n+     * Returns an instance of the currently active touch listener.\n+     *\n+     * @return\n+     */\n+    public ChartTouchListener getOnTouchListener() {\n+        return mChartTouchListener;\n+    }\n+\n     /**\n      * ################ ################ ################ ################\n      */\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -1,4 +1,3 @@\n-\n package com.github.mikephil.charting.listener;\n \n import android.annotation.SuppressLint;\n@@ -26,7 +25,8 @@\n  *\n  * @author Philipp Jahoda\n  */\n-public class BarLineChartTouchListener extends ChartTouchListener<BarLineChartBase<? extends BarLineScatterCandleBubbleData<? extends IBarLineScatterCandleBubbleDataSet<? extends Entry>>>> {\n+public class BarLineChartTouchListener extends ChartTouchListener<BarLineChartBase<? extends BarLineScatterCandleBubbleData<?\n+        extends IBarLineScatterCandleBubbleDataSet<? extends Entry>>>> {\n \n     /**\n      * the original touch-matrix from the chart\n@@ -73,12 +73,20 @@ public class BarLineChartTouchListener extends ChartTouchListener<BarLineChartBa\n      */\n     private float mMinScalePointerDistance;\n \n-    public BarLineChartTouchListener(BarLineChartBase<? extends BarLineScatterCandleBubbleData<? extends IBarLineScatterCandleBubbleDataSet<? extends Entry>>> chart, Matrix touchMatrix) {\n+    /**\n+     * Constructor with initialization parameters.\n+     *\n+     * @param chart               instance of the chart\n+     * @param touchMatrix         the touch-matrix of the chart\n+     * @param dragTriggerDistance the minimum movement distance that will be interpreted as a \"drag\" gesture in dp (3dp equals\n+     *                            to about 9 pixels on a 5.5\" FHD screen)\n+     */\n+    public BarLineChartTouchListener(BarLineChartBase<? extends BarLineScatterCandleBubbleData<? extends\n+            IBarLineScatterCandleBubbleDataSet<? extends Entry>>> chart, Matrix touchMatrix, float dragTriggerDistance) {\n         super(chart);\n         this.mMatrix = touchMatrix;\n \n-        // this equals to about 9 pixels on a 5.5\" FHD screen\n-        this.mDragTriggerDist = Utils.convertDpToPixel(3f);\n+        this.mDragTriggerDist = Utils.convertDpToPixel(dragTriggerDistance);\n \n         this.mMinScalePointerDistance = Utils.convertDpToPixel(3.5f);\n     }\n@@ -207,7 +215,8 @@ public boolean onTouch(View v, MotionEvent event) {\n                         mDecelerationCurrentPoint = new PointF(event.getX(), event.getY());\n                         mDecelerationVelocity = new PointF(velocityX, velocityY);\n \n-                        Utils.postInvalidateOnAnimation(mChart); // This causes computeScroll to fire, recommended for this by Google\n+                        Utils.postInvalidateOnAnimation(mChart); // This causes computeScroll to fire, recommended for this by\n+                        // Google\n                     }\n                 }\n \n@@ -513,6 +522,16 @@ public Matrix getMatrix() {\n         return mMatrix;\n     }\n \n+    /**\n+     * Sets the minimum distance that will be interpreted as a \"drag\" by the chart in dp.\n+     * Default: 3dp\n+     *\n+     * @param dragTriggerDistance\n+     */\n+    public void setDragTriggerDist(float dragTriggerDistance) {\n+        this.mDragTriggerDist = Utils.convertDpToPixel(dragTriggerDistance);\n+    }\n+\n     @Override\n     public boolean onDoubleTap(MotionEvent e) {\n \n@@ -573,21 +592,6 @@ public boolean onSingleTapUp(MotionEvent e) {\n         return super.onSingleTapUp(e);\n     }\n \n-//    @Override\n-//    public boolean onSingleTapConfirmed(MotionEvent e) {\n-//\n-//        mLastGesture = ChartGesture.SINGLE_TAP;\n-//\n-//        OnChartGestureListener l = mChart.getOnChartGestureListener();\n-//\n-//        if (l != null) {\n-//            l.onChartSingleTapped(e);\n-//            l.onChartGestureEnd(e, mLastGesture);\n-//        }\n-//\n-//        return super.onSingleTapConfirmed(e);\n-//    }\n-\n     @Override\n     public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {\n \n@@ -624,7 +628,8 @@ public void computeScroll() {\n         mDecelerationCurrentPoint.x += distanceX;\n         mDecelerationCurrentPoint.y += distanceY;\n \n-        MotionEvent event = MotionEvent.obtain(currentTime, currentTime, MotionEvent.ACTION_MOVE, mDecelerationCurrentPoint.x, mDecelerationCurrentPoint.y, 0);\n+        MotionEvent event = MotionEvent.obtain(currentTime, currentTime, MotionEvent.ACTION_MOVE, mDecelerationCurrentPoint.x,\n+                mDecelerationCurrentPoint.y, 0);\n         performDrag(event);\n         event.recycle();\n         mMatrix = mChart.getViewPortHandler().refresh(mMatrix, mChart, false);",
    "output": "Add feature allowing customization of dragTriggerDistance #1721"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/components/ComponentBase.java b/MPChartLib/src/com/github/mikephil/charting/components/ComponentBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/ComponentBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/ComponentBase.java\n@@ -43,10 +43,6 @@ public abstract class ComponentBase {\n      */\n     protected int mTextColor = Color.BLACK;\n \n-    /**\n-     * the text style boldness {Default = false}\n-     */\n-    protected boolean mTextBold = false;\n \n     public ComponentBase() {\n \n@@ -135,23 +131,6 @@ public float getTextSize() {\n         return mTextSize;\n     }\n \n-    /**\n-     * set the text to be bold\n-     *\n-     * @param bold\n-     */\n-    public void setTextBold(boolean bold) {\n-        mTextBold = bold;\n-    }\n-\n-    /**\n-     * returns the text boldness\n-     *\n-     * @return\n-     */\n-    public boolean getTextBold() {\n-        return mTextBold;\n-    }\n \n     /**\n      * Sets the text color to use for the labels. Make sure to use\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -167,7 +167,6 @@ public void computeLegend(ChartData<?> data) {\n             mLegendLabelPaint.setTypeface(tf);\n \n         mLegendLabelPaint.setTextSize(mLegend.getTextSize());\n-        mLegendLabelPaint.setFakeBoldText(mLegend.getTextBold());\n         mLegendLabelPaint.setColor(mLegend.getTextColor());\n \n         // calculate all dimensions of the mLegend\n@@ -185,7 +184,6 @@ public void renderLegend(Canvas c) {\n             mLegendLabelPaint.setTypeface(tf);\n \n         mLegendLabelPaint.setTextSize(mLegend.getTextSize());\n-        mLegendLabelPaint.setFakeBoldText(mLegend.getTextBold());\n         mLegendLabelPaint.setColor(mLegend.getTextColor());\n \n         float labelLineHeight = Utils.getLineHeight(mLegendLabelPaint);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n@@ -36,7 +36,6 @@ public void computeAxis(float xValMaximumLength, List<String> xValues) {\n \n         mAxisLabelPaint.setTypeface(mXAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mXAxis.getTextSize());\n-        mAxisLabelPaint.setFakeBoldText(mXAxis.getTextBold());\n \n         StringBuilder widthText = new StringBuilder();\n \n@@ -83,7 +82,6 @@ public void renderAxisLabels(Canvas c) {\n \n         mAxisLabelPaint.setTypeface(mXAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mXAxis.getTextSize());\n-        mAxisLabelPaint.setFakeBoldText(mXAxis.getTextBold());\n         mAxisLabelPaint.setColor(mXAxis.getTextColor());\n \n         if (mXAxis.getPosition() == XAxisPosition.TOP) {\n@@ -295,7 +293,6 @@ public void renderLimitLineLabel(Canvas c, LimitLine limitLine, float[] position\n             mLimitLinePaint.setColor(limitLine.getTextColor());\n             mLimitLinePaint.setStrokeWidth(0.5f);\n             mLimitLinePaint.setTextSize(limitLine.getTextSize());\n-            mLimitLinePaint.setFakeBoldText(limitLine.getTextBold());\n \n \n             float xOffset = limitLine.getLineWidth() + limitLine.getXOffset();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java\n@@ -31,7 +31,6 @@ public void computeAxis(float xValAverageLength, List<String> xValues) {\n         \n         mAxisLabelPaint.setTypeface(mXAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mXAxis.getTextSize());\n-        mAxisLabelPaint.setFakeBoldText(mXAxis.getTextBold());\n         mXAxis.setValues(xValues);\n \n         String longest = mXAxis.getLongestLabel();\n@@ -62,7 +61,6 @@ public void renderAxisLabels(Canvas c) {\n \n         mAxisLabelPaint.setTypeface(mXAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mXAxis.getTextSize());\n-        mAxisLabelPaint.setFakeBoldText(mXAxis.getTextBold());\n         mAxisLabelPaint.setColor(mXAxis.getTextColor());\n \n         if (mXAxis.getPosition() == XAxisPosition.TOP) {\n@@ -239,7 +237,6 @@ public void renderLimitLines(Canvas c) {\n \t\t\t\tmLimitLinePaint.setColor(l.getTextColor());\n \t\t\t\tmLimitLinePaint.setStrokeWidth(0.5f);\n \t\t\t\tmLimitLinePaint.setTextSize(l.getTextSize());\n-                mLimitLinePaint.setFakeBoldText(l.getTextBold());\n \n                 final float labelLineHeight = Utils.calcTextHeight(mLimitLinePaint, label);\n                 float xOffset = Utils.convertDpToPixel(4f) + l.getXOffset();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererRadarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererRadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererRadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererRadarChart.java\n@@ -30,7 +30,6 @@ public void renderAxisLabels(Canvas c) {\n \n         mAxisLabelPaint.setTypeface(mXAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mXAxis.getTextSize());\n-        mAxisLabelPaint.setFakeBoldText(mXAxis.getTextBold());\n         mAxisLabelPaint.setColor(mXAxis.getTextColor());\n \n         float sliceangle = mChart.getSliceAngle();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -193,7 +193,6 @@ public void renderAxisLabels(Canvas c) {\n \n         mAxisLabelPaint.setTypeface(mYAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mYAxis.getTextSize());\n-        mAxisLabelPaint.setFakeBoldText(mYAxis.getTextBold());\n         mAxisLabelPaint.setColor(mYAxis.getTextColor());\n \n         float xoffset = mYAxis.getXOffset();\n@@ -382,7 +381,6 @@ public void renderLimitLines(Canvas c) {\n                 mLimitLinePaint.setTypeface(l.getTypeface());\n                 mLimitLinePaint.setStrokeWidth(0.5f);\n                 mLimitLinePaint.setTextSize(l.getTextSize());\n-                mLimitLinePaint.setFakeBoldText(l.getTextBold());\n \n                 final float labelLineHeight = Utils.calcTextHeight(mLimitLinePaint, label);\n                 float xOffset = Utils.convertDpToPixel(4f) + l.getXOffset();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n@@ -77,7 +77,6 @@ public void renderAxisLabels(Canvas c) {\n \n         mAxisLabelPaint.setTypeface(mYAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mYAxis.getTextSize());\n-        mAxisLabelPaint.setFakeBoldText(mYAxis.getTextBold());\n         mAxisLabelPaint.setColor(mYAxis.getTextColor());\n         mAxisLabelPaint.setTextAlign(Align.CENTER);\n \n@@ -140,7 +139,6 @@ protected void drawYLabels(Canvas c, float fixedPosition, float[] positions, flo\n \n         mAxisLabelPaint.setTypeface(mYAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mYAxis.getTextSize());\n-        mAxisLabelPaint.setFakeBoldText(mYAxis.getTextBold());\n         mAxisLabelPaint.setColor(mYAxis.getTextColor());\n \n         for (int i = 0; i < mYAxis.mEntryCount; i++) {\n@@ -244,7 +242,6 @@ public void renderLimitLines(Canvas c) {\n                 mLimitLinePaint.setTypeface(l.getTypeface());\n                 mLimitLinePaint.setStrokeWidth(0.5f);\n                 mLimitLinePaint.setTextSize(l.getTextSize());\n-                mLimitLinePaint.setFakeBoldText(l.getTextBold());\n \n                 float xOffset = l.getLineWidth() + l.getXOffset();\n                 float yOffset = Utils.convertDpToPixel(2f) + l.getYOffset();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n@@ -137,7 +137,6 @@ public void renderAxisLabels(Canvas c) {\n \n         mAxisLabelPaint.setTypeface(mYAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mYAxis.getTextSize());\n-        mAxisLabelPaint.setFakeBoldText(mYAxis.getTextBold());\n         mAxisLabelPaint.setColor(mYAxis.getTextColor());\n \n         PointF center = mChart.getCenterOffsets();",
    "output": "remove Boldness"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n@@ -208,7 +208,7 @@ public boolean isGranularityEnabled() {\n      * @param enabled\n      */\n     public void setGranularityEnabled(boolean enabled) {\n-        mGranularityEnabled = true;\n+        mGranularityEnabled = enabled;\n     }\n \n     /**",
    "output": "Fix #1862"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n@@ -1217,6 +1217,15 @@ public void setNoDataText(String text) {\n         mNoDataText = text;\n     }\n \n+    /**\n+     * Sets the color of the no data text.\n+     *\n+     * @param color\n+     */\n+    public void setNoDataTextColor(int color) {\n+        mInfoPaint.setColor(color);\n+    }\n+\n     /**\n      * Sets descriptive text to explain to the user why there is no chart\n      * available Defaults to empty if not set",
    "output": "Merge master"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1207,6 +1207,15 @@ public void setNoDataText(String text) {\n         mNoDataText = text;\n     }\n \n+    /**\n+     * Sets the color of the no data text.\n+     *\n+     * @param color\n+     */\n+    public void setNoDataTextColor(int color) {\n+        mInfoPaint.setColor(color);\n+    }\n+\n     /**\n      * Sets descriptive text to explain to the user why there is no chart\n      * available Defaults to empty if not set",
    "output": "Merge pull request #1553 from CoryCharlton/master\n\nAdded Chart.setNoDataTextColor(int color)"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java\n@@ -188,10 +188,10 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n \n         // create a dataset and give it a type\n         ScatterDataSet set1 = new ScatterDataSet(yVals1, \"DS 1\");\n-        set1.setScatterShape(ScatterShape.getScatterShapeNames().get(ScatterShape.SQUARE));\n+        set1.setScatterShape(ScatterChart.ScatterShape.SQUARE);\n         set1.setColor(ColorTemplate.COLORFUL_COLORS[0]);\n         ScatterDataSet set2 = new ScatterDataSet(yVals2, \"DS 2\");\n-        set2.setScatterShape(ScatterShape.getScatterShapeNames().get(ScatterShape.CIRCLE));\n+        set2.setScatterShape(ScatterChart.ScatterShape.CIRCLE);\n         set2.setScatterShapeHoleColor(ColorTemplate.COLORFUL_COLORS[3]);\n         set2.setScatterShapeHoleRadius(4f);\n         set2.setColor(ColorTemplate.COLORFUL_COLORS[1]);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java\n@@ -11,7 +11,6 @@\n import com.github.mikephil.charting.renderer.ShapeRenders.ChevronUpShapeRenderer;\n import com.github.mikephil.charting.renderer.ShapeRenders.CircleShapeRenderer;\n import com.github.mikephil.charting.renderer.ShapeRenders.CrossShapeRenderer;\n-import com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape;\n import com.github.mikephil.charting.renderer.ShapeRenders.ShapeRenderer;\n import com.github.mikephil.charting.renderer.ShapeRenders.SquareShapeRenderer;\n import com.github.mikephil.charting.renderer.ShapeRenders.TriangleShapeRenderer;\n@@ -38,7 +37,7 @@ public class ScatterChart extends BarLineChartBase<ScatterData> implements Scatt\n \n     public static void registerShapeRenderer(String scatterShapeName, ShapeRenderer shapeRenderer) {\n         if (shapeRendererList == null) {\n-            shapeRendererList = new HashMap<>();\n+           initShapeRenderer();\n         }\n         shapeRendererList.put(scatterShapeName, shapeRenderer);\n     }\n@@ -54,16 +53,42 @@ public static ShapeRenderer getShapeRenderer(String scatterShapeName) {\n      * Init ShapeRendererList\n      */\n     private static void initShapeRenderer() {\n-        registerShapeRenderer(ScatterShape.getScatterShapeNames().get(ScatterShape.SQUARE), new SquareShapeRenderer());\n-        registerShapeRenderer(ScatterShape.getScatterShapeNames().get(ScatterShape.CIRCLE), new CircleShapeRenderer());\n-        registerShapeRenderer(ScatterShape.getScatterShapeNames().get(ScatterShape.TRIANGLE), new TriangleShapeRenderer());\n-        registerShapeRenderer(ScatterShape.getScatterShapeNames().get(ScatterShape.CROSS), new CrossShapeRenderer());\n-        registerShapeRenderer(ScatterShape.getScatterShapeNames().get(ScatterShape.X), new XShapeRenderer());\n-        registerShapeRenderer(ScatterShape.getScatterShapeNames().get(ScatterShape.CHEVRON_UP), new ChevronUpShapeRenderer());\n-        registerShapeRenderer(ScatterShape.getScatterShapeNames().get(ScatterShape.CHEVRON_DOWN), new ChevronDownShapeRenderer());\n+        shapeRendererList = new HashMap<>();\n+        shapeRendererList.put(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n+                .get(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.SQUARE), new SquareShapeRenderer());\n+        shapeRendererList.put(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n+                .get(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.CIRCLE), new CircleShapeRenderer());\n+        shapeRendererList.put(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n+                .get(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.TRIANGLE), new TriangleShapeRenderer());\n+        shapeRendererList.put(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n+                .get(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.CROSS), new CrossShapeRenderer());\n+        shapeRendererList.put(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n+                .get(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.X), new XShapeRenderer());\n+        shapeRendererList.put(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n+                .get(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.CHEVRON_UP), new ChevronUpShapeRenderer());\n+        shapeRendererList.put(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n+                .get(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.CHEVRON_DOWN), new ChevronDownShapeRenderer());\n     }\n \n \n+    /**\n+     * enum that defines the shape that is drawn where the values are\n+     */\n+    public enum ScatterShape {\n+        SQUARE, CIRCLE, TRIANGLE, CROSS, X,\n+    }\n+\n+    /**\n+     * Returns all possible predefined ScatterShapes.\n+     *\n+     * @return ScatterShape to array\n+     */\n+    public static ScatterShape[] getAllPossibleShapes() {\n+        return new ScatterShape[] {\n+                ScatterShape.SQUARE, ScatterShape.CIRCLE, ScatterShape.TRIANGLE, ScatterShape.CROSS\n+        };\n+    }\n+\n     public ScatterChart(Context context) {\n         super(context);\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/ScatterDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/ScatterDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ScatterDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ScatterDataSet.java\n@@ -1,6 +1,7 @@\n \n package com.github.mikephil.charting.data;\n \n+import com.github.mikephil.charting.charts.ScatterChart;\n import com.github.mikephil.charting.interfaces.datasets.IScatterDataSet;\n import com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape;\n import com.github.mikephil.charting.utils.ColorTemplate;\n@@ -79,6 +80,17 @@ public float getScatterShapeSize() {\n         return mShapeSize;\n     }\n \n+\n+    /**\n+     * Sets the shape that is drawn on the position where the values are at.\n+     *\n+     * @param shape\n+     */\n+    public void setScatterShape(ScatterChart.ScatterShape shape) {\n+        mScatterShape = shape.toString();\n+    }\n+\n+\n     /**\n      * Sets the shape that is drawn on the position where the values are at.\n      *\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterDataSet.java\n@@ -1,5 +1,6 @@\n package com.github.mikephil.charting.data.realm.implementation;\n \n+import com.github.mikephil.charting.charts.ScatterChart;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.realm.base.RealmLineScatterCandleRadarDataSet;\n import com.github.mikephil.charting.interfaces.datasets.IScatterDataSet;\n@@ -80,6 +81,17 @@ public float getScatterShapeSize() {\n         return mShapeSize;\n     }\n \n+\n+    /**\n+     * Sets the shape that is drawn on the position where the values are at.\n+     *\n+     * @param shape\n+     */\n+    public void setScatterShape(ScatterChart.ScatterShape shape) {\n+        mScatterShape = shape.toString();\n+    }\n+\n+\n     /**\n      * Sets the shape that is drawn on the position where the values are at. If\n      * \"CUSTOM\" is chosen, you need to call setCustomScatterShape(...) and",
    "output": "Merge pull request #3 from wajdichamakhi/Custom-Shape-Renderer\n\nCustom shape renderer - Optimisation"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java\n@@ -37,7 +37,7 @@ public class ScatterChart extends BarLineChartBase<ScatterData> implements Scatt\n \n     public static void registerShapeRenderer(String scatterShapeName, ShapeRenderer shapeRenderer) {\n         if (shapeRendererList == null) {\n-            shapeRendererList = new HashMap<>();\n+           initShapeRenderer();\n         }\n         shapeRendererList.put(scatterShapeName, shapeRenderer);\n     }\n@@ -53,19 +53,20 @@ public static ShapeRenderer getShapeRenderer(String scatterShapeName) {\n      * Init ShapeRendererList\n      */\n     private static void initShapeRenderer() {\n-        registerShapeRenderer(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n+        shapeRendererList = new HashMap<>();\n+        shapeRendererList.put(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n                 .get(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.SQUARE), new SquareShapeRenderer());\n-        registerShapeRenderer(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n+        shapeRendererList.put(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n                 .get(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.CIRCLE), new CircleShapeRenderer());\n-        registerShapeRenderer(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n+        shapeRendererList.put(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n                 .get(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.TRIANGLE), new TriangleShapeRenderer());\n-        registerShapeRenderer(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n+        shapeRendererList.put(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n                 .get(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.CROSS), new CrossShapeRenderer());\n-        registerShapeRenderer(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n+        shapeRendererList.put(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n                 .get(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.X), new XShapeRenderer());\n-        registerShapeRenderer(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n+        shapeRendererList.put(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n                 .get(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.CHEVRON_UP), new ChevronUpShapeRenderer());\n-        registerShapeRenderer(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n+        shapeRendererList.put(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n                 .get(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.CHEVRON_DOWN), new ChevronDownShapeRenderer());\n     }\n ",
    "output": "Init shapeRendererList optimisation"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java\n@@ -188,10 +188,10 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n \n         // create a dataset and give it a type\n         ScatterDataSet set1 = new ScatterDataSet(yVals1, \"DS 1\");\n-        set1.setScatterShape(ScatterShape.getScatterShapeNames().get(ScatterShape.SQUARE));\n+        set1.setScatterShape(ScatterChart.ScatterShape.SQUARE);\n         set1.setColor(ColorTemplate.COLORFUL_COLORS[0]);\n         ScatterDataSet set2 = new ScatterDataSet(yVals2, \"DS 2\");\n-        set2.setScatterShape(ScatterShape.getScatterShapeNames().get(ScatterShape.CIRCLE));\n+        set2.setScatterShape(ScatterChart.ScatterShape.CIRCLE);\n         set2.setScatterShapeHoleColor(ColorTemplate.COLORFUL_COLORS[3]);\n         set2.setScatterShapeHoleRadius(4f);\n         set2.setColor(ColorTemplate.COLORFUL_COLORS[1]);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java\n@@ -11,7 +11,6 @@\n import com.github.mikephil.charting.renderer.ShapeRenders.ChevronUpShapeRenderer;\n import com.github.mikephil.charting.renderer.ShapeRenders.CircleShapeRenderer;\n import com.github.mikephil.charting.renderer.ShapeRenders.CrossShapeRenderer;\n-import com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape;\n import com.github.mikephil.charting.renderer.ShapeRenders.ShapeRenderer;\n import com.github.mikephil.charting.renderer.ShapeRenders.SquareShapeRenderer;\n import com.github.mikephil.charting.renderer.ShapeRenders.TriangleShapeRenderer;\n@@ -54,16 +53,41 @@ public static ShapeRenderer getShapeRenderer(String scatterShapeName) {\n      * Init ShapeRendererList\n      */\n     private static void initShapeRenderer() {\n-        registerShapeRenderer(ScatterShape.getScatterShapeNames().get(ScatterShape.SQUARE), new SquareShapeRenderer());\n-        registerShapeRenderer(ScatterShape.getScatterShapeNames().get(ScatterShape.CIRCLE), new CircleShapeRenderer());\n-        registerShapeRenderer(ScatterShape.getScatterShapeNames().get(ScatterShape.TRIANGLE), new TriangleShapeRenderer());\n-        registerShapeRenderer(ScatterShape.getScatterShapeNames().get(ScatterShape.CROSS), new CrossShapeRenderer());\n-        registerShapeRenderer(ScatterShape.getScatterShapeNames().get(ScatterShape.X), new XShapeRenderer());\n-        registerShapeRenderer(ScatterShape.getScatterShapeNames().get(ScatterShape.CHEVRON_UP), new ChevronUpShapeRenderer());\n-        registerShapeRenderer(ScatterShape.getScatterShapeNames().get(ScatterShape.CHEVRON_DOWN), new ChevronDownShapeRenderer());\n+        registerShapeRenderer(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n+                .get(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.SQUARE), new SquareShapeRenderer());\n+        registerShapeRenderer(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n+                .get(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.CIRCLE), new CircleShapeRenderer());\n+        registerShapeRenderer(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n+                .get(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.TRIANGLE), new TriangleShapeRenderer());\n+        registerShapeRenderer(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n+                .get(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.CROSS), new CrossShapeRenderer());\n+        registerShapeRenderer(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n+                .get(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.X), new XShapeRenderer());\n+        registerShapeRenderer(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n+                .get(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.CHEVRON_UP), new ChevronUpShapeRenderer());\n+        registerShapeRenderer(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.getScatterShapeNames()\n+                .get(com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape.CHEVRON_DOWN), new ChevronDownShapeRenderer());\n     }\n \n \n+    /**\n+     * enum that defines the shape that is drawn where the values are\n+     */\n+    public enum ScatterShape {\n+        SQUARE, CIRCLE, TRIANGLE, CROSS, X,\n+    }\n+\n+    /**\n+     * Returns all possible predefined ScatterShapes.\n+     *\n+     * @return ScatterShape to array\n+     */\n+    public static ScatterShape[] getAllPossibleShapes() {\n+        return new ScatterShape[] {\n+                ScatterShape.SQUARE, ScatterShape.CIRCLE, ScatterShape.TRIANGLE, ScatterShape.CROSS\n+        };\n+    }\n+\n     public ScatterChart(Context context) {\n         super(context);\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/ScatterDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/ScatterDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ScatterDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ScatterDataSet.java\n@@ -1,6 +1,7 @@\n \n package com.github.mikephil.charting.data;\n \n+import com.github.mikephil.charting.charts.ScatterChart;\n import com.github.mikephil.charting.interfaces.datasets.IScatterDataSet;\n import com.github.mikephil.charting.renderer.ShapeRenders.ScatterShape;\n import com.github.mikephil.charting.utils.ColorTemplate;\n@@ -79,6 +80,17 @@ public float getScatterShapeSize() {\n         return mShapeSize;\n     }\n \n+\n+    /**\n+     * Sets the shape that is drawn on the position where the values are at.\n+     *\n+     * @param shape\n+     */\n+    public void setScatterShape(ScatterChart.ScatterShape shape) {\n+        mScatterShape = shape.toString();\n+    }\n+\n+\n     /**\n      * Sets the shape that is drawn on the position where the values are at.\n      *\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterDataSet.java\n@@ -1,5 +1,6 @@\n package com.github.mikephil.charting.data.realm.implementation;\n \n+import com.github.mikephil.charting.charts.ScatterChart;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.realm.base.RealmLineScatterCandleRadarDataSet;\n import com.github.mikephil.charting.interfaces.datasets.IScatterDataSet;\n@@ -80,6 +81,17 @@ public float getScatterShapeSize() {\n         return mShapeSize;\n     }\n \n+\n+    /**\n+     * Sets the shape that is drawn on the position where the values are at.\n+     *\n+     * @param shape\n+     */\n+    public void setScatterShape(ScatterChart.ScatterShape shape) {\n+        mScatterShape = shape.toString();\n+    }\n+\n+\n     /**\n      * Sets the shape that is drawn on the position where the values are at. If\n      * \"CUSTOM\" is chosen, you need to call setCustomScatterShape(...) and",
    "output": "Adding The Enum Patern Back"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java\n@@ -347,7 +347,7 @@ public boolean isGranularityEnabled() {\n      * @param enabled\n      */\n     public void setGranularityEnabled(boolean enabled) {\n-        mGranularityEnabled = true;\n+        mGranularityEnabled = enabled;\n     }\n \n     /**",
    "output": "Fix issue #1862"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/components/ComponentBase.java b/MPChartLib/src/com/github/mikephil/charting/components/ComponentBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/ComponentBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/ComponentBase.java\n@@ -43,6 +43,11 @@ public abstract class ComponentBase {\n      */\n     protected int mTextColor = Color.BLACK;\n \n+    /**\n+     * the text style boldness {Default = false}\n+     */\n+    protected boolean mTextBold = false;\n+\n     public ComponentBase() {\n \n     }\n@@ -130,6 +135,24 @@ public float getTextSize() {\n         return mTextSize;\n     }\n \n+    /**\n+     * set the text to be bold\n+     *\n+     * @param bold\n+     */\n+    public void setTextBold(boolean bold) {\n+        mTextBold = bold;\n+    }\n+\n+    /**\n+     * returns the text boldness\n+     *\n+     * @return\n+     */\n+    public boolean getTextBold() {\n+        return mTextBold;\n+    }\n+\n     /**\n      * Sets the text color to use for the labels. Make sure to use\n      * getResources().getColor(...) when using a color from the resources.\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -167,6 +167,7 @@ public void computeLegend(ChartData<?> data) {\n             mLegendLabelPaint.setTypeface(tf);\n \n         mLegendLabelPaint.setTextSize(mLegend.getTextSize());\n+        mLegendLabelPaint.setFakeBoldText(mLegend.getTextBold());\n         mLegendLabelPaint.setColor(mLegend.getTextColor());\n \n         // calculate all dimensions of the mLegend\n@@ -184,6 +185,7 @@ public void renderLegend(Canvas c) {\n             mLegendLabelPaint.setTypeface(tf);\n \n         mLegendLabelPaint.setTextSize(mLegend.getTextSize());\n+        mLegendLabelPaint.setFakeBoldText(mLegend.getTextBold());\n         mLegendLabelPaint.setColor(mLegend.getTextColor());\n \n         float labelLineHeight = Utils.getLineHeight(mLegendLabelPaint);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n@@ -36,6 +36,7 @@ public void computeAxis(float xValMaximumLength, List<String> xValues) {\n \n         mAxisLabelPaint.setTypeface(mXAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mXAxis.getTextSize());\n+        mAxisLabelPaint.setFakeBoldText(mXAxis.getTextBold());\n \n         StringBuilder widthText = new StringBuilder();\n \n@@ -82,6 +83,7 @@ public void renderAxisLabels(Canvas c) {\n \n         mAxisLabelPaint.setTypeface(mXAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mXAxis.getTextSize());\n+        mAxisLabelPaint.setFakeBoldText(mXAxis.getTextBold());\n         mAxisLabelPaint.setColor(mXAxis.getTextColor());\n \n         if (mXAxis.getPosition() == XAxisPosition.TOP) {\n@@ -293,6 +295,8 @@ public void renderLimitLineLabel(Canvas c, LimitLine limitLine, float[] position\n             mLimitLinePaint.setColor(limitLine.getTextColor());\n             mLimitLinePaint.setStrokeWidth(0.5f);\n             mLimitLinePaint.setTextSize(limitLine.getTextSize());\n+            mLimitLinePaint.setFakeBoldText(limitLine.getTextBold());\n+\n \n             float xOffset = limitLine.getLineWidth() + limitLine.getXOffset();\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java\n@@ -31,6 +31,7 @@ public void computeAxis(float xValAverageLength, List<String> xValues) {\n         \n         mAxisLabelPaint.setTypeface(mXAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mXAxis.getTextSize());\n+        mAxisLabelPaint.setFakeBoldText(mXAxis.getTextBold());\n         mXAxis.setValues(xValues);\n \n         String longest = mXAxis.getLongestLabel();\n@@ -61,6 +62,7 @@ public void renderAxisLabels(Canvas c) {\n \n         mAxisLabelPaint.setTypeface(mXAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mXAxis.getTextSize());\n+        mAxisLabelPaint.setFakeBoldText(mXAxis.getTextBold());\n         mAxisLabelPaint.setColor(mXAxis.getTextColor());\n \n         if (mXAxis.getPosition() == XAxisPosition.TOP) {\n@@ -237,6 +239,7 @@ public void renderLimitLines(Canvas c) {\n \t\t\t\tmLimitLinePaint.setColor(l.getTextColor());\n \t\t\t\tmLimitLinePaint.setStrokeWidth(0.5f);\n \t\t\t\tmLimitLinePaint.setTextSize(l.getTextSize());\n+                mLimitLinePaint.setFakeBoldText(l.getTextBold());\n \n                 final float labelLineHeight = Utils.calcTextHeight(mLimitLinePaint, label);\n                 float xOffset = Utils.convertDpToPixel(4f) + l.getXOffset();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererRadarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererRadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererRadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererRadarChart.java\n@@ -30,6 +30,7 @@ public void renderAxisLabels(Canvas c) {\n \n         mAxisLabelPaint.setTypeface(mXAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mXAxis.getTextSize());\n+        mAxisLabelPaint.setFakeBoldText(mXAxis.getTextBold());\n         mAxisLabelPaint.setColor(mXAxis.getTextColor());\n \n         float sliceangle = mChart.getSliceAngle();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -193,6 +193,7 @@ public void renderAxisLabels(Canvas c) {\n \n         mAxisLabelPaint.setTypeface(mYAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mYAxis.getTextSize());\n+        mAxisLabelPaint.setFakeBoldText(mYAxis.getTextBold());\n         mAxisLabelPaint.setColor(mYAxis.getTextColor());\n \n         float xoffset = mYAxis.getXOffset();\n@@ -381,6 +382,7 @@ public void renderLimitLines(Canvas c) {\n                 mLimitLinePaint.setTypeface(l.getTypeface());\n                 mLimitLinePaint.setStrokeWidth(0.5f);\n                 mLimitLinePaint.setTextSize(l.getTextSize());\n+                mLimitLinePaint.setFakeBoldText(l.getTextBold());\n \n                 final float labelLineHeight = Utils.calcTextHeight(mLimitLinePaint, label);\n                 float xOffset = Utils.convertDpToPixel(4f) + l.getXOffset();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n@@ -7,7 +7,6 @@\n import android.graphics.Path;\n \n import com.github.mikephil.charting.components.LimitLine;\n-import com.github.mikephil.charting.components.LimitLine.LimitLabelPosition;\n import com.github.mikephil.charting.components.YAxis;\n import com.github.mikephil.charting.components.YAxis.AxisDependency;\n import com.github.mikephil.charting.components.YAxis.YAxisLabelPosition;\n@@ -78,6 +77,7 @@ public void renderAxisLabels(Canvas c) {\n \n         mAxisLabelPaint.setTypeface(mYAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mYAxis.getTextSize());\n+        mAxisLabelPaint.setFakeBoldText(mYAxis.getTextBold());\n         mAxisLabelPaint.setColor(mYAxis.getTextColor());\n         mAxisLabelPaint.setTextAlign(Align.CENTER);\n \n@@ -140,6 +140,7 @@ protected void drawYLabels(Canvas c, float fixedPosition, float[] positions, flo\n \n         mAxisLabelPaint.setTypeface(mYAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mYAxis.getTextSize());\n+        mAxisLabelPaint.setFakeBoldText(mYAxis.getTextBold());\n         mAxisLabelPaint.setColor(mYAxis.getTextColor());\n \n         for (int i = 0; i < mYAxis.mEntryCount; i++) {\n@@ -243,6 +244,7 @@ public void renderLimitLines(Canvas c) {\n                 mLimitLinePaint.setTypeface(l.getTypeface());\n                 mLimitLinePaint.setStrokeWidth(0.5f);\n                 mLimitLinePaint.setTextSize(l.getTextSize());\n+                mLimitLinePaint.setFakeBoldText(l.getTextBold());\n \n                 float xOffset = l.getLineWidth() + l.getXOffset();\n                 float yOffset = Utils.convertDpToPixel(2f) + l.getYOffset();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n@@ -137,6 +137,7 @@ public void renderAxisLabels(Canvas c) {\n \n         mAxisLabelPaint.setTypeface(mYAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mYAxis.getTextSize());\n+        mAxisLabelPaint.setFakeBoldText(mYAxis.getTextBold());\n         mAxisLabelPaint.setColor(mYAxis.getTextColor());\n \n         PointF center = mChart.getCenterOffsets();",
    "output": "Merge pull request #1 from wajdichamakhi/Labels_and_legend_bold\n\nAdding control on text Boldness in XAxis, YAxis, Limit Legends"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java\n@@ -295,17 +295,6 @@ public int getEntryIndex(float xPos, Rounding rounding) {\n         return high;\n     }\n \n-    @Override\n-    public float getYValueForXValue(float xVal) {\n-\n-        Entry e = getEntryForXPos(xVal);\n-\n-        if (e != null && e.getX() == xVal)\n-            return e.getY();\n-        else\n-            return Float.NaN;\n-    }\n-\n     /**\n      * Returns all Entry objects at the given xIndex. INFORMATION: This method\n      * does calculations at runtime. Do not over-use in performance critical\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n@@ -252,18 +252,6 @@ public int getEntryIndex(S e) {\n         return mValues.indexOf(e);\n     }\n \n-    @Override\n-    public float getYValueForXValue(float xVal) {\n-        //return new DynamicRealmObject(results.where().greaterThanOrEqualTo(mXValuesField, xIndex).findFirst())\n-        // .getFloat(mYValuesField);\n-        Entry e = getEntryForXPos(xVal);\n-\n-        if (e != null && e.getX() == xVal)\n-            return e.getY();\n-        else\n-            return Float.NaN;\n-    }\n-\n     @Override\n     public boolean addEntry(S e) {\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IDataSet.java\n@@ -123,17 +123,6 @@ public interface IDataSet<T extends Entry> {\n      */\n     int getEntryIndex(T e);\n \n-    /**\n-     * Returns the value of the Entry object at the given xPos. Returns\n-     * Float.NaN if no value is at the given xPos. INFORMATION: This method\n-     * does calculations at runtime. Do not over-use in performance critical\n-     * situations.\n-     *\n-     * @param xPos\n-     * @return\n-     */\n-    float getYValueForXValue(float xPos);\n-\n \n     /**\n      * This method returns the actual\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java\n@@ -19,10 +19,8 @@\n import android.view.View;\n import android.view.ViewConfiguration;\n \n-import com.github.mikephil.charting.components.YAxis.AxisDependency;\n import com.github.mikephil.charting.formatter.DefaultValueFormatter;\n import com.github.mikephil.charting.formatter.ValueFormatter;\n-import com.github.mikephil.charting.highlight.Highlight;\n \n import java.util.List;\n \n@@ -382,56 +380,6 @@ public static double nextUp(double d) {\n         }\n     }\n \n-    /**\n-     * Returns the index of the DataSet that contains the closest value on the\n-     * y-axis. This is needed for highlighting. This will return -Integer.MAX_VALUE if failure.\n-     *\n-     * @param valsAtIndex all the values at a specific index\n-     * @return\n-     */\n-    public static int getClosestDataSetIndexByValue(List<Highlight> valsAtIndex, float value,\n-                                                    AxisDependency axis) {\n-\n-        Highlight sel = getClosestSelectionDetailByValue(valsAtIndex, value, axis);\n-\n-        if (sel == null)\n-            return -Integer.MAX_VALUE;\n-\n-        return sel.getDataSetIndex();\n-    }\n-\n-    /**\n-     * Returns the SelectionDetail of the DataSet that contains the closest value on the\n-     * y-axis.\n-     *\n-     * @param valsAtIndex all the values at a specific index\n-     * @return\n-     */\n-    public static Highlight getClosestSelectionDetailByValue(\n-            List<Highlight> valsAtIndex,\n-            float value,\n-            AxisDependency axis) {\n-\n-        Highlight closest = null;\n-        float distance = Float.MAX_VALUE;\n-\n-        for (int i = 0; i < valsAtIndex.size(); i++) {\n-\n-            Highlight sel = valsAtIndex.get(i);\n-\n-            if (axis == null || sel.getAxis() == axis) {\n-\n-                float cdistance = Math.abs(sel.getY() - value);\n-                if (cdistance < distance) {\n-                    closest = sel;\n-                    distance = cdistance;\n-                }\n-            }\n-        }\n-\n-        return closest;\n-    }\n-\n     /**\n      * If this component has no ValueFormatter or is only equipped with the\n      * default one (no custom set), return true.",
    "output": "Unused method cleanup"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieData.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieData.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieData.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieData.java\n@@ -1,6 +1,7 @@\n \n package com.github.mikephil.charting.data;\n \n+import com.github.mikephil.charting.highlight.Highlight;\n import com.github.mikephil.charting.interfaces.datasets.IPieDataSet;\n \n import java.util.ArrayList;\n@@ -62,6 +63,11 @@ public IPieDataSet getDataSetByLabel(String label, boolean ignorecase) {\n                 : null : label.equals(mDataSets.get(0).getLabel()) ? mDataSets.get(0) : null;\n     }\n \n+    @Override\n+    public Entry getEntryForHighlight(Highlight highlight) {\n+        return getDataSet().getEntryForIndex((int) highlight.getX());\n+    }\n+\n     /**\n      * Returns the sum of all values in this PieData object.\n      *",
    "output": "Fix issue in selection callback"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n@@ -633,7 +633,7 @@ public void highlightValue(Highlight high, boolean callListener) {\n             } else {\n                 if (this instanceof BarLineChartBase\n                         && ((BarLineChartBase) this).isHighlightFullBarEnabled())\n-                    high = new Highlight(high.getX(), Float.NaN, -1, -1, -1);\n+                    high = new Highlight(high.getX(), Float.NaN, -1, -1);\n \n                 // set the indices to highlight\n                 mIndicesToHighlight = new Highlight[]{\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java\n@@ -2,6 +2,7 @@\n \n import com.github.mikephil.charting.data.BarData;\n import com.github.mikephil.charting.data.BarEntry;\n+import com.github.mikephil.charting.data.BarLineScatterCandleBubbleData;\n import com.github.mikephil.charting.interfaces.dataprovider.BarDataProvider;\n import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;\n import com.github.mikephil.charting.utils.PointD;\n@@ -40,8 +41,7 @@ public Highlight getHighlight(float x, float y) {\n                 selectionDetail.xValue,\n                 selectionDetail.yValue,\n                 selectionDetail.dataIndex,\n-                selectionDetail.dataSetIndex,\n-                -1);\n+                selectionDetail.dataSetIndex);\n     }\n \n     /**\n@@ -152,4 +152,9 @@ protected Range[] getRanges(BarEntry entry) {\n     protected float getDistance(float x1, float y1, float x2, float y2) {\n         return Math.abs(x1 - x2);\n     }\n+\n+    @Override\n+    protected BarLineScatterCandleBubbleData getData() {\n+        return mChart.getBarData();\n+    }\n }\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java\n@@ -4,6 +4,8 @@\n import java.util.List;\n \n import com.github.mikephil.charting.components.YAxis;\n+import com.github.mikephil.charting.data.BarLineScatterCandleBubbleData;\n+import com.github.mikephil.charting.data.ChartData;\n import com.github.mikephil.charting.data.DataSet;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.interfaces.datasets.IDataSet;\n@@ -69,8 +71,7 @@ protected SelectionDetail getSelectionDetail(float xVal, float x, float y) {\n \n         YAxis.AxisDependency axis = leftAxisMinDist < rightAxisMinDist ? YAxis.AxisDependency.LEFT : YAxis.AxisDependency.RIGHT;\n \n-        SelectionDetail detail = getClosestSelectionDetailByPixel(closestValues, x, y, axis, mChart\n-                .getMaxHighlightDistance());\n+        SelectionDetail detail = getClosestSelectionDetailByPixel(closestValues, x, y, axis, mChart.getMaxHighlightDistance());\n \n         return detail;\n     }\n@@ -119,11 +120,14 @@ protected List<SelectionDetail> getSelectionDetailsAtXPos(float xVal) {\n \n         List<SelectionDetail> vals = new ArrayList<SelectionDetail>();\n \n-        if (mChart.getData() == null) return vals;\n+        BarLineScatterCandleBubbleData data = getData();\n \n-        for (int i = 0, dataSetCount = mChart.getData().getDataSetCount(); i < dataSetCount; i++) {\n+        if (data == null)\n+            return vals;\n \n-            IDataSet dataSet = mChart.getData().getDataSetByIndex(i);\n+        for (int i = 0, dataSetCount = data.getDataSetCount(); i < dataSetCount; i++) {\n+\n+            IDataSet dataSet = data.getDataSetByIndex(i);\n \n             // dont include datasets that cannot be highlighted\n             if (!dataSet.isHighlightEnabled())\n@@ -204,4 +208,8 @@ public SelectionDetail getClosestSelectionDetailByPixel(List<SelectionDetail> cl\n     protected float getDistance(float x1, float y1, float x2, float y2) {\n         return (float) Math.hypot(x1 - x2, y1 - y2);\n     }\n+\n+    protected BarLineScatterCandleBubbleData getData() {\n+        return mChart.getData();\n+    }\n }\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java\n@@ -29,7 +29,11 @@ public Highlight getHighlight(float x, float y) {\n         Highlight h1 = super.getHighlight(x, y);\n         Highlight h2 = barHighlighter.getHighlight(x, y);\n \n-        return h1;\n+        return getClosest(x, y, h1, h2);\n+    }\n+\n+    protected Highlight getClosest(float x, float y, Highlight... highs) {\n+        return null;\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlight.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlight.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlight.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlight.java\n@@ -14,6 +14,12 @@ public class Highlight {\n     /** the y-value of the highlighted value */\n     private float mY = Float.NaN;\n \n+    /** the x-pixel of the highlight */\n+    private float mXPx;\n+\n+    /** the y-pixel of the highlight */\n+    private float mYPx;\n+\n     /** the index of the data object - in case it refers to more than one */\n     private int mDataIndex;\n \n@@ -40,20 +46,6 @@ public Highlight(float x, float y, int dataIndex, int dataSetIndex) {\n         this.mDataIndex = dataIndex;\n         this.mDataSetIndex = dataSetIndex;\n     }\n-    /**\n-     * Constructor, only used for stacked-barchart.\n-     * \n-     * @param x the x-value of the highlighted value on the x-axis\n-     * @param y the y-value of the highlighted value\n-     * @param dataIndex the index of the Data the highlighted value belongs to\n-     * @param dataSetIndex the index of the DataSet the highlighted value belongs to\n-     * @param stackIndex references which value of a stacked-bar entry has been\n-     *            selected\n-     */\n-    public Highlight(float x, float y, int dataIndex, int dataSetIndex, int stackIndex) {\n-        this(x, y, dataIndex, dataSetIndex);\n-        mStackIndex = stackIndex;\n-    }\n \n     /**\n      * Constructor, only used for stacked-barchart.\n@@ -67,7 +59,8 @@ public Highlight(float x, float y, int dataIndex, int dataSetIndex, int stackInd\n      * @param range the range the selected stack-value is in\n      */\n     public Highlight(float x, float y, int dataIndex, int dataSetIndex, int stackIndex, Range range) {\n-        this(x, y, dataIndex, dataSetIndex, stackIndex);\n+        this(x, y, dataIndex, dataSetIndex);\n+        this.mStackIndex = stackIndex;\n         this.mRange = range;\n     }\n \n@@ -78,7 +71,7 @@ public Highlight(float x, float y, int dataIndex, int dataSetIndex, int stackInd\n      * @param dataSetIndex the index of the DataSet the highlighted value belongs to\n      */\n     public Highlight(float x, int dataSetIndex) {\n-        this(x, Float.NaN, 0, dataSetIndex, -1);\n+        this(x, Float.NaN, 0, dataSetIndex);\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/HorizontalBarHighlighter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/HorizontalBarHighlighter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/HorizontalBarHighlighter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/HorizontalBarHighlighter.java\n@@ -46,8 +46,7 @@ public Highlight getHighlight(float x, float y) {\n \t\t\t\tselectionDetail.xValue,\n \t\t\t\tselectionDetail.yValue,\n \t\t\t\tselectionDetail.dataIndex,\n-\t\t\t\tselectionDetail.dataSetIndex,\n-\t\t\t\t-1);\n+\t\t\t\tselectionDetail.dataSetIndex);\n \t}\n \n \t@Override",
    "output": "Work on highlight"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n@@ -36,6 +36,7 @@\n import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n \n import java.util.ArrayList;\n+import java.util.Arrays;\n \n public class CombinedChartActivity extends DemoBase {\n \n@@ -137,7 +138,9 @@ private BarData generateBarData() {\n \n         for (int index = 0; index < itemcount; index++) {\n             entries1.add(new BarEntry(0, getRandom(25, 25)));\n-            entries2.add(new BarEntry(0, getRandom(25, 25)));\n+\n+            // stacked\n+            entries2.add(new BarEntry(0, new float[]{getRandom(13, 12), getRandom(13, 12)}));\n         }\n \n         BarDataSet set1 = new BarDataSet(entries1, \"Bar 1\");\n@@ -147,7 +150,7 @@ private BarData generateBarData() {\n         set1.setAxisDependency(YAxis.AxisDependency.LEFT);\n \n         BarDataSet set2 = new BarDataSet(entries2, \"Bar 2\");\n-        set2.setColor(Color.rgb(61, 165, 255));\n+        set2.setColors(new int[]{Color.rgb(61, 165, 255), Color.rgb(23, 197, 255)});\n         set2.setValueTextColor(Color.rgb(61, 165, 255));\n         set2.setValueTextSize(10f);\n         set2.setAxisDependency(YAxis.AxisDependency.LEFT);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java\n@@ -187,7 +187,6 @@ public BarData getBarData() {\n         return mData;\n     }\n \n-\n     /**\n      * Adds half of the bar width to each side of the x-axis range in order to allow the bars of the barchart to be\n      * fully displayed.\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n@@ -37,6 +37,7 @@\n import com.github.mikephil.charting.formatter.ValueFormatter;\n import com.github.mikephil.charting.highlight.ChartHighlighter;\n import com.github.mikephil.charting.highlight.Highlight;\n+import com.github.mikephil.charting.highlight.Highlighter;\n import com.github.mikephil.charting.interfaces.dataprovider.ChartInterface;\n import com.github.mikephil.charting.interfaces.datasets.IDataSet;\n import com.github.mikephil.charting.listener.ChartTouchListener;\n@@ -162,7 +163,7 @@ public abstract class Chart<T extends ChartData<? extends IDataSet<? extends Ent\n      */\n     protected DataRenderer mRenderer;\n \n-    protected ChartHighlighter mHighlighter;\n+    protected Highlighter mHighlighter;\n \n     /**\n      * object that manages the bounds and drawing constraints of the chart\n@@ -1446,7 +1447,7 @@ public void setRenderer(DataRenderer renderer) {\n             mRenderer = renderer;\n     }\n \n-    public ChartHighlighter getHighlighter() {\n+    public Highlighter getHighlighter() {\n         return mHighlighter;\n     }\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java\n@@ -73,7 +73,7 @@ public CombinedChart(Context context, AttributeSet attrs, int defStyle) {\n     protected void init() {\n         super.init();\n \n-        setHighlighter(new CombinedHighlighter(this));\n+        setHighlighter(new CombinedHighlighter(this, this));\n \n         // Old default behaviour\n         setHighlightFullBarEnabled(true);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java\n@@ -14,7 +14,7 @@\n /**\n  * Created by Philipp Jahoda on 21/07/15.\n  */\n-public class ChartHighlighter<T extends BarLineScatterCandleBubbleDataProvider> {\n+public class ChartHighlighter<T extends BarLineScatterCandleBubbleDataProvider> implements Highlighter {\n \n     /**\n      * instance of the data-provider\n@@ -25,13 +25,7 @@ public ChartHighlighter(T chart) {\n         this.mChart = chart;\n     }\n \n-    /**\n-     * Returns a Highlight object corresponding to the given x- and y- touch positions in pixels.\n-     *\n-     * @param x\n-     * @param y\n-     * @return\n-     */\n+    @Override\n     public Highlight getHighlight(float x, float y) {\n \n         float xVal = (float) getValsForTouch(x, y).x;\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java\n@@ -3,6 +3,7 @@\n import com.github.mikephil.charting.data.ChartData;\n import com.github.mikephil.charting.data.CombinedData;\n import com.github.mikephil.charting.data.DataSet;\n+import com.github.mikephil.charting.interfaces.dataprovider.BarDataProvider;\n import com.github.mikephil.charting.interfaces.datasets.IDataSet;\n import com.github.mikephil.charting.interfaces.dataprovider.BarLineScatterCandleBubbleDataProvider;\n import com.github.mikephil.charting.utils.SelectionDetail;\n@@ -13,10 +14,22 @@\n /**\n  * Created by Philipp Jahoda on 12/09/15.\n  */\n-public class CombinedHighlighter extends ChartHighlighter<BarLineScatterCandleBubbleDataProvider> {\n+public class CombinedHighlighter extends ChartHighlighter<BarLineScatterCandleBubbleDataProvider> implements Highlighter {\n \n-    public CombinedHighlighter(BarLineScatterCandleBubbleDataProvider chart) {\n+    protected BarHighlighter barHighlighter;\n+\n+    public CombinedHighlighter(BarLineScatterCandleBubbleDataProvider chart, BarDataProvider barChart) {\n         super(chart);\n+        barHighlighter = new BarHighlighter(barChart);\n+    }\n+\n+    @Override\n+    public Highlight getHighlight(float x, float y) {\n+\n+        Highlight h1 = super.getHighlight(x, y);\n+        Highlight h2 = barHighlighter.getHighlight(x, y);\n+\n+        return h1;\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlighter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlighter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlighter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlighter.java\n@@ -0,0 +1,16 @@\n+package com.github.mikephil.charting.highlight;\n+\n+/**\n+ * Created by philipp on 10/06/16.\n+ */\n+public interface Highlighter {\n+\n+    /**\n+     * Returns a Highlight object corresponding to the given x- and y- touch positions in pixels.\n+     *\n+     * @param x\n+     * @param y\n+     * @return\n+     */\n+    Highlight getHighlight(float x, float y);\n+}",
    "output": "Work on highlighting"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/CandleDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/CandleDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/CandleDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/CandleDataSet.java\n@@ -55,23 +55,23 @@ public class CandleDataSet extends LineScatterCandleRadarDataSet<CandleEntry> im\n     /**\n      * color for open == close\n      */\n-    protected int mNeutralColor = ColorTemplate.COLOR_NONE;\n+    protected int mNeutralColor = ColorTemplate.COLOR_SKIP;\n \n     /**\n      * color for open < close\n      */\n-    protected int mIncreasingColor = ColorTemplate.COLOR_NONE;\n+    protected int mIncreasingColor = ColorTemplate.COLOR_SKIP;\n \n     /**\n      * color for open > close\n      */\n-    protected int mDecreasingColor = ColorTemplate.COLOR_NONE;\n+    protected int mDecreasingColor = ColorTemplate.COLOR_SKIP;\n \n     /**\n      * shadow line color, set -1 for backward compatibility and uses default\n      * color\n      */\n-    protected int mShadowColor = ColorTemplate.COLOR_NONE;\n+    protected int mShadowColor = ColorTemplate.COLOR_SKIP;\n \n     public CandleDataSet(List<CandleEntry> yVals, String label) {\n         super(yVals, label);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -2,6 +2,7 @@\n package com.github.mikephil.charting.renderer;\n \n import android.graphics.Canvas;\n+import android.graphics.Color;\n import android.graphics.Paint;\n import android.graphics.Paint.Align;\n import android.graphics.Typeface;\n@@ -124,10 +125,15 @@ public void computeLegend(ChartData<?> data) {\n                         labels.add(pds.getLabel());\n                     }\n \n-                } else if(dataSet instanceof ICandleDataSet && ((ICandleDataSet) dataSet).getDecreasingColor() != ColorTemplate.COLOR_NONE) {\n+                } else if (dataSet instanceof ICandleDataSet && ((ICandleDataSet) dataSet).getDecreasingColor() !=\n+                        ColorTemplate.COLOR_NONE) {\n+\n+                    int decreasingColor = ((ICandleDataSet) dataSet).getDecreasingColor();\n+                    colors.add(decreasingColor);\n+\n+                    int increasingColor = ((ICandleDataSet) dataSet).getIncreasingColor();\n+                    colors.add(increasingColor);\n \n-                    colors.add(((ICandleDataSet) dataSet).getDecreasingColor());\n-                    colors.add(((ICandleDataSet) dataSet).getIncreasingColor());\n                     labels.add(null);\n                     labels.add(dataSet.getLabel());\n \n@@ -252,7 +258,7 @@ public void renderLegend(Canvas c) {\n                             : mLegend.mNeededWidth / 2.0 - xoffset);\n                 }\n \n-            break;\n+                break;\n         }\n \n         switch (orientation) {\n@@ -288,8 +294,8 @@ public void renderLegend(Canvas c) {\n                     }\n \n                     if (posX == originPosX &&\n-                        horizontalAlignment == Legend.LegendHorizontalAlignment.CENTER &&\n-                        lineIndex < calculatedLineSizes.length) {\n+                            horizontalAlignment == Legend.LegendHorizontalAlignment.CENTER &&\n+                            lineIndex < calculatedLineSizes.length) {\n                         posX += (direction == Legend.LegendDirection.RIGHT_TO_LEFT\n                                 ? calculatedLineSizes[lineIndex].width\n                                 : -calculatedLineSizes[lineIndex].width) / 2.f;\n@@ -311,7 +317,8 @@ public void renderLegend(Canvas c) {\n \n                     if (!isStacked) {\n                         if (drawingForm)\n-                            posX += direction == Legend.LegendDirection.RIGHT_TO_LEFT ? -formToTextSpace : formToTextSpace;\n+                            posX += direction == Legend.LegendDirection.RIGHT_TO_LEFT ? -formToTextSpace :\n+                                    formToTextSpace;\n \n                         if (direction == Legend.LegendDirection.RIGHT_TO_LEFT)\n                             posX -= calculatedLabelSizes[i].width;",
    "output": "Fix issue in LegendRenderer"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n@@ -163,7 +163,8 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 break;\n             }\n             case R.id.actionToggleSpin: {\n-                mChart.spin(1000, mChart.getRotationAngle(), mChart.getRotationAngle() + 360, Easing.EasingOption.EaseInCubic);\n+                mChart.spin(1000, mChart.getRotationAngle(), mChart.getRotationAngle() + 360, Easing.EasingOption\n+                        .EaseInCubic);\n                 break;\n             }\n         }\n@@ -183,16 +184,16 @@ private void setData(int count, float range) {\n \n         float mult = range;\n \n-        ArrayList<PieEntry> yVals1 = new ArrayList<PieEntry>();\n+        ArrayList<PieEntry> values = new ArrayList<PieEntry>();\n \n         // IMPORTANT: In a PieChart, no values (Entry) should have the same\n         // xIndex (even if from different DataSets), since no values can be\n         // drawn above each other.\n         for (int i = 0; i < count + 1; i++) {\n-            yVals1.add(new PieEntry((float) ((Math.random() * mult) + mult / 5), mParties[i % mParties.length]));\n+            values.add(new PieEntry((float) ((Math.random() * mult) + mult / 5), mParties[i % mParties.length]));\n         }\n \n-        PieDataSet dataSet = new PieDataSet(yVals1, \"Election Results\");\n+        PieDataSet dataSet = new PieDataSet(values, \"Election Results\");\n         dataSet.setSliceSpace(3f);\n         dataSet.setSelectionShift(5f);\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -235,8 +235,7 @@ public void drawValues(Canvas c) {\n \n                         drawValue(c, dataSet.getValueFormatter(), val, entry, i, x,\n                                 val >= 0 ? (buffer.buffer[j + 1] + posOffset) : (buffer.buffer[j + 3] + negOffset),\n-                                dataSet.getValueTextColor\n-                                        (j / 4));\n+                                dataSet.getValueTextColor(j / 4));\n                     }\n \n                     // if we have stacks\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -178,6 +178,22 @@ protected float calculateMinimumRadiusForSpacedSlice(\n         return spacedRadius;\n     }\n \n+    /**\n+     * Calculates the sliceSpace to use based on visible values and their size compared to the set sliceSpace.\n+     *\n+     * @param dataSet\n+     * @return\n+     */\n+    protected float getSliceSpace(IPieDataSet dataSet) {\n+\n+        float spaceSizeRatio = dataSet.getSliceSpace() / mViewPortHandler.getSmallestContentExtension();\n+        float minValueRatio = dataSet.getYMin() / mChart.getData().getYValueSum() * 2;\n+\n+        float sliceSpace = spaceSizeRatio > minValueRatio ? 0f : dataSet.getSliceSpace();\n+\n+        return sliceSpace;\n+    }\n+\n     protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n \n         float angle = 0;\n@@ -205,7 +221,7 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n             }\n         }\n \n-        final float sliceSpace = visibleAngleCount <= 1 ? 0.f : dataSet.getSliceSpace();\n+        final float sliceSpace = visibleAngleCount <= 1 ? 0.f : getSliceSpace(dataSet);\n \n         for (int j = 0; j < entryCount; j++) {\n \n@@ -411,6 +427,8 @@ public void drawValues(Canvas c) {\n \n             float offset = Utils.convertDpToPixel(5.f);\n \n+            final float sliceSpace = getSliceSpace(dataSet);\n+\n             for (int j = 0; j < entryCount; j++) {\n \n                 PieEntry entry = dataSet.getEntryForIndex(j);\n@@ -421,7 +439,6 @@ public void drawValues(Canvas c) {\n                     angle = absoluteAngles[xIndex - 1] * phaseX;\n \n                 final float sliceAngle = drawAngles[xIndex];\n-                final float sliceSpace = dataSet.getSliceSpace();\n                 final float sliceSpaceMiddleAngle = sliceSpace / (Utils.FDEG2RAD * labelRadius);\n \n                 // offset needed to center the drawn text in the slice\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ViewPortHandler.java b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ViewPortHandler.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ViewPortHandler.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ViewPortHandler.java\n@@ -8,7 +8,8 @@\n import android.view.View;\n \n /**\n- * Class that contains information about the charts current viewport settings, including offsets, scale & translation levels, ...\n+ * Class that contains information about the charts current viewport settings, including offsets, scale & translation\n+ * levels, ...\n  *\n  * @author Philipp Jahoda\n  */\n@@ -173,6 +174,15 @@ public float getChartWidth() {\n         return mChartWidth;\n     }\n \n+    /**\n+     * Returns the smallest extension of the content rect (width or height).\n+     *\n+     * @return\n+     */\n+    public float getSmallestContentExtension() {\n+        return Math.min(mContentRect.width(), mContentRect.height());\n+    }\n+\n     /**\n      * ################ ################ ################ ################\n      */",
    "output": "Fixes related to slice space #1857, #1856, #1807, #1699, #1665, #1660, ..."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -224,7 +224,7 @@ public void onStopTrackingTouch(SeekBar seekBar) {\n \n     private void setData(int count, float range) {\n \n-        float start = 1f;\n+        float start = 0f;\n \n         mChart.getXAxis().setAxisMinValue(start);\n         mChart.getXAxis().setAxisMaxValue(start + count + 2);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScrollViewActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScrollViewActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScrollViewActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScrollViewActivity.java\n@@ -45,6 +45,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart.getLegend().setEnabled(false);\n \n         setData(10);\n+        mChart.setFitBars(true);\n     }\n     \n     private void setData(int count) {\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n@@ -210,6 +210,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n             mChart.setData(data);\n         }\n \n+        mChart.setFitBars(true);\n         mChart.invalidate();\n     }\n \n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java\n@@ -26,9 +26,6 @@ public String getFormattedValue(float value, AxisBase axis) {\n \n         int days = (int) value;\n \n-        if (days == 0)\n-            return \"\";\n-\n         int year = determineYear(days);\n \n         int month = determineMonth(days);\n@@ -72,7 +69,7 @@ public String getFormattedValue(float value, AxisBase axis) {\n                     break;\n             }\n \n-            return dayOfMonth + appendix + \" \" + monthName;\n+            return dayOfMonth == 0 ? \"\" : dayOfMonth + appendix + \" \" + monthName;\n         }\n     }\n \n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/ComplexityFragment.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/ComplexityFragment.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/ComplexityFragment.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/ComplexityFragment.java\n@@ -41,7 +41,6 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa\n         \n         YAxis leftAxis = mChart.getAxisLeft();\n         leftAxis.setTypeface(tf);\n-        leftAxis.setAxisMinValue(0f); // this replaces setStartAtZero(true)\n         \n         mChart.getAxisRight().setEnabled(false);\n         \n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SimpleFragment.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SimpleFragment.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SimpleFragment.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SimpleFragment.java\n@@ -54,7 +54,7 @@ protected BarData generateBarData(int dataSets, float range, int count) {\n //            entries = FileUtils.loadEntriesFromAssets(getActivity().getAssets(), \"stacked_bars.txt\");\n             \n             for(int j = 0; j < count; j++) {        \n-                entries.add(new BarEntry((float) (Math.random() * range) + range / 4, j));\n+                entries.add(new BarEntry(j, (float) (Math.random() * range) + range / 4));\n             }\n             \n             BarDataSet ds = new BarDataSet(entries, getLabel(i));\n@@ -78,7 +78,7 @@ protected ScatterData generateScatterData(int dataSets, float range, int count)\n             ArrayList<Entry> entries = new ArrayList<Entry>();\n             \n             for(int j = 0; j < count; j++) {        \n-                entries.add(new Entry((float) (Math.random() * range) + range / 4, j));\n+                entries.add(new Entry(j, (float) (Math.random() * range) + range / 4));\n             }\n             \n             ScatterDataSet ds = new ScatterDataSet(entries, getLabel(i));\n@@ -122,11 +122,6 @@ protected PieData generatePieData() {\n     \n     protected LineData generateLineData() {\n         \n-//        DataSet ds1 = new DataSet(n, \"O(n)\");  \n-//        DataSet ds2 = new DataSet(nlogn, \"O(nlogn)\"); \n-//        DataSet ds3 = new DataSet(nsquare, \"O(n\\u00B2)\");\n-//        DataSet ds4 = new DataSet(nthree, \"O(n\\u00B3)\");\n-        \n         ArrayList<ILineDataSet> sets = new ArrayList<ILineDataSet>();\n         \n         LineDataSet ds1 = new LineDataSet(FileUtils.loadEntriesFromAssets(getActivity().getAssets(), \"sine.txt\"), \"Sine function\");\n@@ -145,13 +140,6 @@ protected LineData generateLineData() {\n         sets.add(ds1);\n         sets.add(ds2);\n         \n-//        sets.add(FileUtils.dataSetFromAssets(getActivity().getAssets(), \"n.txt\"));\n-//        sets.add(FileUtils.dataSetFromAssets(getActivity().getAssets(), \"nlogn.txt\"));\n-//        sets.add(FileUtils.dataSetFromAssets(getActivity().getAssets(), \"square.txt\"));\n-//        sets.add(FileUtils.dataSetFromAssets(getActivity().getAssets(), \"three.txt\"));\n-        \n-        int max = Math.max(sets.get(0).getEntryCount(), sets.get(1).getEntryCount());\n-        \n         LineData d = new LineData(sets);\n         d.setValueTypeface(tf);\n         return d;\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/FileUtils.java b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/FileUtils.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/FileUtils.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/FileUtils.java\n@@ -122,7 +122,7 @@ public static List<Entry> loadEntriesFromAssets(AssetManager am, String path) {\n                 String[] split = line.split(\"#\");\n \n                 if (split.length <= 2) {\n-                    entries.add(new Entry(Float.parseFloat(split[0]), Integer.parseInt(split[1])));\n+                    entries.add(new Entry(Float.parseFloat(split[1]), Float.parseFloat(split[0])));\n                 } else {\n \n                     float[] vals = new float[split.length - 1];",
    "output": "Improvements to example"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/components/ComponentBase.java b/MPChartLib/src/com/github/mikephil/charting/components/ComponentBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/ComponentBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/ComponentBase.java\n@@ -43,6 +43,11 @@ public abstract class ComponentBase {\n      */\n     protected int mTextColor = Color.BLACK;\n \n+    /**\n+     * the text style boldness {Default = false}\n+     */\n+    protected boolean mTextBold = false;\n+\n     public ComponentBase() {\n \n     }\n@@ -130,6 +135,24 @@ public float getTextSize() {\n         return mTextSize;\n     }\n \n+    /**\n+     * set the text to be bold\n+     *\n+     * @param bold\n+     */\n+    public void setTextBold(boolean bold) {\n+        mTextBold = bold;\n+    }\n+\n+    /**\n+     * returns the text boldness\n+     *\n+     * @return\n+     */\n+    public boolean getTextBold() {\n+        return mTextBold;\n+    }\n+\n     /**\n      * Sets the text color to use for the labels. Make sure to use\n      * getResources().getColor(...) when using a color from the resources.\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -167,6 +167,7 @@ public void computeLegend(ChartData<?> data) {\n             mLegendLabelPaint.setTypeface(tf);\n \n         mLegendLabelPaint.setTextSize(mLegend.getTextSize());\n+        mLegendLabelPaint.setFakeBoldText(mLegend.getTextBold());\n         mLegendLabelPaint.setColor(mLegend.getTextColor());\n \n         // calculate all dimensions of the mLegend\n@@ -184,6 +185,7 @@ public void renderLegend(Canvas c) {\n             mLegendLabelPaint.setTypeface(tf);\n \n         mLegendLabelPaint.setTextSize(mLegend.getTextSize());\n+        mLegendLabelPaint.setFakeBoldText(mLegend.getTextBold());\n         mLegendLabelPaint.setColor(mLegend.getTextColor());\n \n         float labelLineHeight = Utils.getLineHeight(mLegendLabelPaint);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n@@ -36,6 +36,7 @@ public void computeAxis(float xValMaximumLength, List<String> xValues) {\n \n         mAxisLabelPaint.setTypeface(mXAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mXAxis.getTextSize());\n+        mAxisLabelPaint.setFakeBoldText(mXAxis.getTextBold());\n \n         StringBuilder widthText = new StringBuilder();\n \n@@ -82,6 +83,7 @@ public void renderAxisLabels(Canvas c) {\n \n         mAxisLabelPaint.setTypeface(mXAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mXAxis.getTextSize());\n+        mAxisLabelPaint.setFakeBoldText(mXAxis.getTextBold());\n         mAxisLabelPaint.setColor(mXAxis.getTextColor());\n \n         if (mXAxis.getPosition() == XAxisPosition.TOP) {\n@@ -293,6 +295,8 @@ public void renderLimitLineLabel(Canvas c, LimitLine limitLine, float[] position\n             mLimitLinePaint.setColor(limitLine.getTextColor());\n             mLimitLinePaint.setStrokeWidth(0.5f);\n             mLimitLinePaint.setTextSize(limitLine.getTextSize());\n+            mLimitLinePaint.setFakeBoldText(limitLine.getTextBold());\n+\n \n             float xOffset = limitLine.getLineWidth() + limitLine.getXOffset();\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java\n@@ -31,6 +31,7 @@ public void computeAxis(float xValAverageLength, List<String> xValues) {\n         \n         mAxisLabelPaint.setTypeface(mXAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mXAxis.getTextSize());\n+        mAxisLabelPaint.setFakeBoldText(mXAxis.getTextBold());\n         mXAxis.setValues(xValues);\n \n         String longest = mXAxis.getLongestLabel();\n@@ -61,6 +62,7 @@ public void renderAxisLabels(Canvas c) {\n \n         mAxisLabelPaint.setTypeface(mXAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mXAxis.getTextSize());\n+        mAxisLabelPaint.setFakeBoldText(mXAxis.getTextBold());\n         mAxisLabelPaint.setColor(mXAxis.getTextColor());\n \n         if (mXAxis.getPosition() == XAxisPosition.TOP) {\n@@ -237,6 +239,7 @@ public void renderLimitLines(Canvas c) {\n \t\t\t\tmLimitLinePaint.setColor(l.getTextColor());\n \t\t\t\tmLimitLinePaint.setStrokeWidth(0.5f);\n \t\t\t\tmLimitLinePaint.setTextSize(l.getTextSize());\n+                mLimitLinePaint.setFakeBoldText(l.getTextBold());\n \n                 final float labelLineHeight = Utils.calcTextHeight(mLimitLinePaint, label);\n                 float xOffset = Utils.convertDpToPixel(4f) + l.getXOffset();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererRadarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererRadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererRadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererRadarChart.java\n@@ -30,6 +30,7 @@ public void renderAxisLabels(Canvas c) {\n \n         mAxisLabelPaint.setTypeface(mXAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mXAxis.getTextSize());\n+        mAxisLabelPaint.setFakeBoldText(mXAxis.getTextBold());\n         mAxisLabelPaint.setColor(mXAxis.getTextColor());\n \n         float sliceangle = mChart.getSliceAngle();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -193,6 +193,7 @@ public void renderAxisLabels(Canvas c) {\n \n         mAxisLabelPaint.setTypeface(mYAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mYAxis.getTextSize());\n+        mAxisLabelPaint.setFakeBoldText(mYAxis.getTextBold());\n         mAxisLabelPaint.setColor(mYAxis.getTextColor());\n \n         float xoffset = mYAxis.getXOffset();\n@@ -381,6 +382,7 @@ public void renderLimitLines(Canvas c) {\n                 mLimitLinePaint.setTypeface(l.getTypeface());\n                 mLimitLinePaint.setStrokeWidth(0.5f);\n                 mLimitLinePaint.setTextSize(l.getTextSize());\n+                mLimitLinePaint.setFakeBoldText(l.getTextBold());\n \n                 final float labelLineHeight = Utils.calcTextHeight(mLimitLinePaint, label);\n                 float xOffset = Utils.convertDpToPixel(4f) + l.getXOffset();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n@@ -7,7 +7,6 @@\n import android.graphics.Path;\n \n import com.github.mikephil.charting.components.LimitLine;\n-import com.github.mikephil.charting.components.LimitLine.LimitLabelPosition;\n import com.github.mikephil.charting.components.YAxis;\n import com.github.mikephil.charting.components.YAxis.AxisDependency;\n import com.github.mikephil.charting.components.YAxis.YAxisLabelPosition;\n@@ -78,6 +77,7 @@ public void renderAxisLabels(Canvas c) {\n \n         mAxisLabelPaint.setTypeface(mYAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mYAxis.getTextSize());\n+        mAxisLabelPaint.setFakeBoldText(mYAxis.getTextBold());\n         mAxisLabelPaint.setColor(mYAxis.getTextColor());\n         mAxisLabelPaint.setTextAlign(Align.CENTER);\n \n@@ -140,6 +140,7 @@ protected void drawYLabels(Canvas c, float fixedPosition, float[] positions, flo\n \n         mAxisLabelPaint.setTypeface(mYAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mYAxis.getTextSize());\n+        mAxisLabelPaint.setFakeBoldText(mYAxis.getTextBold());\n         mAxisLabelPaint.setColor(mYAxis.getTextColor());\n \n         for (int i = 0; i < mYAxis.mEntryCount; i++) {\n@@ -243,6 +244,7 @@ public void renderLimitLines(Canvas c) {\n                 mLimitLinePaint.setTypeface(l.getTypeface());\n                 mLimitLinePaint.setStrokeWidth(0.5f);\n                 mLimitLinePaint.setTextSize(l.getTextSize());\n+                mLimitLinePaint.setFakeBoldText(l.getTextBold());\n \n                 float xOffset = l.getLineWidth() + l.getXOffset();\n                 float yOffset = Utils.convertDpToPixel(2f) + l.getYOffset();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n@@ -137,6 +137,7 @@ public void renderAxisLabels(Canvas c) {\n \n         mAxisLabelPaint.setTypeface(mYAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mYAxis.getTextSize());\n+        mAxisLabelPaint.setFakeBoldText(mYAxis.getTextBold());\n         mAxisLabelPaint.setColor(mYAxis.getTextColor());\n \n         PointF center = mChart.getCenterOffsets();",
    "output": "Adding control on text Boldness in XAxis, YAxis, Limit Legends"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n@@ -28,24 +28,24 @@ public abstract class RealmBaseDataSet<T extends RealmObject, S extends Entry> e\n     protected List<S> mValues;\n \n     /**\n-     * maximum y-value in the y-value array\n+     * maximum y-value in the value array\n      */\n-    protected float mYMax = 0.0f;\n+    protected float mYMax = -Float.MAX_VALUE;\n \n     /**\n-     * the minimum y-value in the y-value array\n+     * minimum y-value in the value array\n      */\n-    protected float mYMin = 0.0f;\n+    protected float mYMin = Float.MAX_VALUE;\n \n     /**\n      * maximum x-value in the value array\n      */\n-    protected float mXMax = 0.0f;\n+    protected float mXMax = -Float.MAX_VALUE;\n \n     /**\n      * minimum x-value in the value array\n      */\n-    protected float mXMin = 0.0f;\n+    protected float mXMin = Float.MAX_VALUE;\n \n     /**\n      * fieldname of the column that contains the y-values of this dataset\n@@ -130,33 +130,16 @@ public int getEntryCount() {\n     @Override\n     public void calcMinMax() {\n \n-        if (mValues == null)\n-            return;\n-\n-        if (mValues.size() == 0)\n+        if (mValues == null || mValues.isEmpty())\n             return;\n \n-        mYMin = Float.MAX_VALUE;\n         mYMax = -Float.MAX_VALUE;\n-\n-        mXMin = Float.MAX_VALUE;\n+        mYMin = Float.MAX_VALUE;\n         mXMax = -Float.MAX_VALUE;\n+        mXMin = Float.MAX_VALUE;\n \n         for (S e : mValues) {\n-\n-            if (e != null && !Float.isNaN(e.getY())) {\n-                calcMinMax(e);\n-            }\n-        }\n-\n-        if (mYMin == Float.MAX_VALUE) {\n-            mYMin = 0.f;\n-            mYMax = 0.f;\n-        }\n-\n-        if (mXMin == Float.MAX_VALUE) {\n-            mXMin = 0.f;\n-            mXMax = 0.f;\n+            calcMinMax(e);\n         }\n     }\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java\n@@ -107,17 +107,13 @@ public BarEntry buildEntryFromResultObject(T realmObject, float x) {\n     @Override\n     public void calcMinMax() {\n \n-        if (mValues == null)\n+        if (mValues == null || mValues.isEmpty())\n             return;\n \n-        if (mValues.size() == 0)\n-            return;\n-\n-        mYMin = Float.MAX_VALUE;\n         mYMax = -Float.MAX_VALUE;\n-\n-        mXMin = Float.MAX_VALUE;\n+        mYMin = Float.MAX_VALUE;\n         mXMax = -Float.MAX_VALUE;\n+        mXMin = Float.MAX_VALUE;\n \n         for (BarEntry e : mValues) {\n \n@@ -146,16 +142,6 @@ public void calcMinMax() {\n                     mXMax = e.getX();\n             }\n         }\n-\n-        if (mYMin == Float.MAX_VALUE) {\n-            mYMin = 0.f;\n-            mYMax = 0.f;\n-        }\n-\n-        if (mXMin == Float.MAX_VALUE) {\n-            mXMin = 0.f;\n-            mXMax = 0.f;\n-        }\n     }\n \n     private void calcStackSize() {\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java\n@@ -65,60 +65,24 @@ public BubbleEntry buildEntryFromResultObject(T realmObject, float x) {\n     @Override\n     public void calcMinMax() {\n \n-        if (mValues == null)\n+        if (mValues == null || mValues.isEmpty())\n             return;\n \n-        if (mValues.size() == 0)\n-            return;\n-\n-        mYMin = Float.MAX_VALUE;\n         mYMax = -Float.MAX_VALUE;\n-\n-        mXMin = Float.MAX_VALUE;\n+        mYMin = Float.MAX_VALUE;\n         mXMax = -Float.MAX_VALUE;\n+        mXMin = Float.MAX_VALUE;\n \n-        // need chart width to guess this properly\n-\n-        for (BubbleEntry entry : mValues) {\n-\n-            float ymin = entry.getY();\n-            float ymax = entry.getY();\n-\n-            if (ymin < mYMin) {\n-                mYMin = ymin;\n-            }\n-\n-            if (ymax > mYMax) {\n-                mYMax = ymax;\n-            }\n-\n-            final float xmin = entry.getX();\n-            final float xmax = entry.getX();\n-\n-            if (xmin < mXMin) {\n-                mXMin = xmin;\n-            }\n+        for (BubbleEntry e : mValues) {\n \n-            if (xmax > mXMax) {\n-                mXMax = xmax;\n-            }\n+            calcMinMax(e);\n \n-            final float size = entry.getSize();\n+            final float size = e.getSize();\n \n             if (size > mMaxSize) {\n                 mMaxSize = size;\n             }\n         }\n-\n-        if (mYMin == Float.MAX_VALUE) {\n-            mYMin = 0.f;\n-            mYMax = 0.f;\n-        }\n-\n-        if(mXMin == Float.MAX_VALUE) {\n-            mXMin = 0.f;\n-            mXMax = 0.f;\n-        }\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n@@ -137,17 +137,13 @@ public CandleEntry buildEntryFromResultObject(T realmObject, float x) {\n     @Override\n     public void calcMinMax() {\n \n-        if (mValues == null)\n+        if (mValues == null || mValues.isEmpty())\n             return;\n \n-        if (mValues.size() == 0)\n-            return;\n-\n-        mYMin = Float.MAX_VALUE;\n         mYMax = -Float.MAX_VALUE;\n-\n-        mXMin = Float.MAX_VALUE;\n+        mYMin = Float.MAX_VALUE;\n         mXMax = -Float.MAX_VALUE;\n+        mXMin = Float.MAX_VALUE;\n \n         for (CandleEntry e : mValues) {\n \n@@ -163,16 +159,6 @@ public void calcMinMax() {\n             if (e.getX() > mXMax)\n                 mXMax = e.getX();\n         }\n-\n-        if (mYMin == Float.MAX_VALUE) {\n-            mYMin = 0.f;\n-            mYMax = 0.f;\n-        }\n-\n-        if (mXMin == Float.MAX_VALUE) {\n-            mXMin = 0.f;\n-            mXMax = 0.f;\n-        }\n     }\n \n     /**",
    "output": "Fix minmax calculations for realm implementation"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -98,7 +98,6 @@ protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n         buffer.setDataSet(index);\n         buffer.setInverted(mChart.isInverted(dataSet.getAxisDependency()));\n         buffer.setBarWidth(mChart.getBarData().getBarWidth());\n-        //buffer.setInterval(mChart.getXRange() / dataSet.getEntryCount());\n \n         buffer.feed(dataSet);\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n@@ -7,8 +7,6 @@\n import com.github.mikephil.charting.animation.ChartAnimator;\n import com.github.mikephil.charting.data.CandleData;\n import com.github.mikephil.charting.data.CandleEntry;\n-import com.github.mikephil.charting.data.DataSet;\n-import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.highlight.Highlight;\n import com.github.mikephil.charting.interfaces.dataprovider.CandleDataProvider;\n import com.github.mikephil.charting.interfaces.datasets.ICandleDataSet;\n@@ -58,29 +56,21 @@ protected void drawDataSet(Canvas c, ICandleDataSet dataSet) {\n \n         Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n \n-        float phaseX = Math.max(0.f, Math.min(1.f, mAnimator.getPhaseX()));\n         float phaseY = mAnimator.getPhaseY();\n         float barSpace = dataSet.getBarSpace();\n         boolean showCandleBar = dataSet.getShowCandleBar();\n \n-        float lowX = mChart.getLowestVisibleX();\n-        float highX = mChart.getHighestVisibleX();\n-\n-        CandleEntry entryFrom = dataSet.getEntryForXPos(lowX, DataSet.Rounding.DOWN);\n-        CandleEntry entryTo = dataSet.getEntryForXPos(highX, DataSet.Rounding.UP);\n-\n-        int minx = dataSet.getEntryIndex(entryFrom);\n-        int maxx = dataSet.getEntryIndex(entryTo);\n+        XBounds bounds = getXBounds(mChart, dataSet);\n \n         mRenderPaint.setStrokeWidth(dataSet.getShadowWidth());\n \n         // draw the body\n-        for (int j = minx; j <= maxx * phaseX; j++) {\n+        for (int j = bounds.min; j <= bounds.range + bounds.min; j++) {\n \n             // get the entry\n             CandleEntry e = dataSet.getEntryForIndex(j);\n \n-            if(e == null)\n+            if (e == null)\n                 continue;\n \n             final float xPos = e.getX();\n@@ -256,7 +246,6 @@ else if (open < close)\n                         mCloseBuffers[0], mCloseBuffers[1],\n                         mCloseBuffers[2], mCloseBuffers[3],\n                         mRenderPaint);\n-\n             }\n         }\n     }\n@@ -281,17 +270,10 @@ public void drawValues(Canvas c) {\n \n                 Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n \n-                float low = mChart.getLowestVisibleX();\n-                float high = mChart.getHighestVisibleX();\n-\n-                CandleEntry entryFrom = dataSet.getEntryForXPos(low, DataSet.Rounding.DOWN);\n-                CandleEntry entryTo = dataSet.getEntryForXPos(high, DataSet.Rounding.UP);\n-\n-                int minx = dataSet.getEntryIndex(entryFrom);\n-                int maxx = dataSet.getEntryIndex(entryTo);\n+                XBounds bounds = getXBounds(mChart, dataSet);\n \n                 float[] positions = trans.generateTransformedValuesCandle(\n-                        dataSet, mAnimator.getPhaseX(), mAnimator.getPhaseY(), minx, maxx);\n+                        dataSet, mAnimator.getPhaseX(), mAnimator.getPhaseY(), bounds.min, bounds.max);\n \n                 float yOffset = Utils.convertDpToPixel(5f);\n \n@@ -306,7 +288,7 @@ public void drawValues(Canvas c) {\n                     if (!mViewPortHandler.isInBoundsLeft(x) || !mViewPortHandler.isInBoundsY(y))\n                         continue;\n \n-                    CandleEntry entry = dataSet.getEntryForIndex(j / 2 + minx);\n+                    CandleEntry entry = dataSet.getEntryForIndex(j / 2 + bounds.min);\n \n                     drawValue(c, dataSet.getValueFormatter(), entry.getHigh(), entry, i, x, y - yOffset, dataSet\n                             .getValueTextColor(j / 2));\n@@ -348,7 +330,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n                 CandleEntry e = set.getEntryForXPos(x);\n \n-                if (e == null || e.getX() != x)\n+                if (e == null)\n                     continue;\n \n                 float lowValue = e.getLow() * mAnimator.getPhaseY();\n@@ -362,5 +344,4 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             }\n         }\n     }\n-\n }\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CombinedChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CombinedChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CombinedChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CombinedChartRenderer.java\n@@ -124,8 +124,7 @@ else if (renderer instanceof ScatterChartRenderer)\n             else if (renderer instanceof BubbleChartRenderer)\n                 data = ((BubbleChartRenderer)renderer).mChart.getBubbleData();\n \n-            int dataIndex = data == null\n-                    ? -1\n+            int dataIndex = data == null ? -1\n                     : ((CombinedData)chart.getData()).getAllData().indexOf(data);\n \n             ArrayList<Highlight> dataIndices = new ArrayList<>();",
    "output": "Further improve rendering x-bounds calculation"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarLineScatterCandleBubbleRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarLineScatterCandleBubbleRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarLineScatterCandleBubbleRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarLineScatterCandleBubbleRenderer.java\n@@ -0,0 +1,61 @@\n+package com.github.mikephil.charting.renderer;\n+\n+import com.github.mikephil.charting.animation.ChartAnimator;\n+import com.github.mikephil.charting.data.DataSet;\n+import com.github.mikephil.charting.data.Entry;\n+import com.github.mikephil.charting.interfaces.dataprovider.BarLineScatterCandleBubbleDataProvider;\n+import com.github.mikephil.charting.interfaces.datasets.IBarLineScatterCandleBubbleDataSet;\n+import com.github.mikephil.charting.utils.ViewPortHandler;\n+\n+/**\n+ * Created by Philipp Jahoda on 09/06/16.\n+ */\n+public abstract class BarLineScatterCandleBubbleRenderer extends DataRenderer {\n+\n+\n+    public BarLineScatterCandleBubbleRenderer(ChartAnimator animator, ViewPortHandler viewPortHandler) {\n+        super(animator, viewPortHandler);\n+    }\n+\n+    /**\n+     * Calculates and returns the x-bounds for the given DataSet in terms of index in their values array. This\n+     * includes minimum and maximum visible x, as well as range.\n+     *\n+     * @param dataSet\n+     * @return\n+     */\n+    protected XBounds getXBounds(BarLineScatterCandleBubbleDataProvider chart, IBarLineScatterCandleBubbleDataSet\n+            dataSet) {\n+        return new XBounds(chart, dataSet);\n+    }\n+\n+    /**\n+     * Class representing the bounds of the current viewport in terms of indices in the values array of a DataSet.\n+     */\n+    protected class XBounds {\n+\n+        /** minimum visible entry index */\n+        public final int min;\n+\n+        /** maximum visible entry index */\n+        public final int max;\n+\n+        /** range of visible entry indices */\n+        public final int range;\n+\n+        public XBounds(BarLineScatterCandleBubbleDataProvider chart, IBarLineScatterCandleBubbleDataSet dataSet) {\n+\n+            float phaseX = Math.max(0.f, Math.min(1.f, mAnimator.getPhaseX()));\n+\n+            float low = chart.getLowestVisibleX();\n+            float high = chart.getHighestVisibleX();\n+\n+            Entry entryFrom = dataSet.getEntryForXPos(low, DataSet.Rounding.DOWN);\n+            Entry entryTo = dataSet.getEntryForXPos(high, DataSet.Rounding.UP);\n+\n+            min = dataSet.getEntryIndex(entryFrom);\n+            max = dataSet.getEntryIndex(entryTo);\n+            range = (int) ((max - min) * phaseX);\n+        }\n+    }\n+}\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -127,18 +127,13 @@ protected void drawDataSet(Canvas c, ILineDataSet dataSet) {\n         mRenderPaint.setPathEffect(null);\n     }\n \n-    /**\n-     * Draws a cubic line.\n-     *\n-     * @param dataSet\n-     */\n     protected void drawHorizontalBezier(ILineDataSet dataSet) {\n \n         float phaseY = mAnimator.getPhaseY();\n \n         Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n \n-        XBounds bounds = getXBounds(dataSet);\n+        XBounds bounds = getXBounds(mChart, dataSet);\n \n         cubicPath.reset();\n \n@@ -192,7 +187,7 @@ protected void drawCubicBezier(ILineDataSet dataSet) {\n \n         Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n \n-        XBounds bounds = getXBounds(dataSet);\n+        XBounds bounds = getXBounds(mChart, dataSet);\n \n         float intensity = dataSet.getCubicIntensity();\n \n@@ -302,7 +297,7 @@ protected void drawLinear(Canvas c, ILineDataSet dataSet) {\n             canvas = c;\n         }\n \n-        XBounds bounds = getXBounds(dataSet);\n+        XBounds bounds = getXBounds(mChart, dataSet);\n \n         // more than 1 color\n         if (dataSet.getColors().size() > 1) {\n@@ -414,6 +409,14 @@ protected void drawLinear(Canvas c, ILineDataSet dataSet) {\n         }\n     }\n \n+    /**\n+     * Draws a filled linear path on the canvas.\n+     *\n+     * @param c\n+     * @param dataSet\n+     * @param trans\n+     * @param bounds\n+     */\n     protected void drawLinearFill(Canvas c, ILineDataSet dataSet, Transformer trans, XBounds bounds) {\n \n         Path filled = generateFilledPath(dataSet, bounds);\n@@ -495,7 +498,7 @@ public void drawValues(Canvas c) {\n                 if (!dataSet.isDrawCirclesEnabled())\n                     valOffset = valOffset / 2;\n \n-                XBounds bounds = getXBounds(dataSet);\n+                XBounds bounds = getXBounds(mChart, dataSet);\n \n                 float[] positions = trans.generateTransformedValuesLine(dataSet, mAnimator.getPhaseX(), mAnimator\n                         .getPhaseY(), bounds.min, bounds.max);\n@@ -549,7 +552,7 @@ protected void drawCircles(Canvas c) {\n \n             Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n \n-            XBounds bounds = getXBounds(dataSet);\n+            XBounds bounds = getXBounds(mChart, dataSet);\n \n             float circleRadius = dataSet.getCircleRadius();\n             float circleHoleRadius = dataSet.getCircleHoleRadius();\n@@ -687,31 +690,4 @@ public void releaseBitmap() {\n             mDrawBitmap = null;\n         }\n     }\n-\n-    private XBounds getXBounds(IBarLineScatterCandleBubbleDataSet dataSet) {\n-        return new XBounds(dataSet);\n-    }\n-\n-    private class XBounds {\n-\n-        public final int min;\n-        public final int max;\n-\n-        public final int range;\n-\n-        public XBounds(IBarLineScatterCandleBubbleDataSet dataSet) {\n-\n-            float phaseX = Math.max(0.f, Math.min(1.f, mAnimator.getPhaseX()));\n-\n-            float low = mChart.getLowestVisibleX();\n-            float high = mChart.getHighestVisibleX();\n-\n-            Entry entryFrom = dataSet.getEntryForXPos(low, DataSet.Rounding.DOWN);\n-            Entry entryTo = dataSet.getEntryForXPos(high, DataSet.Rounding.UP);\n-\n-            min = dataSet.getEntryIndex(entryFrom);\n-            max = dataSet.getEntryIndex(entryTo);\n-            range = (int) ((max - min) * phaseX);\n-        }\n-    }\n }\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineScatterCandleRadarRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineScatterCandleRadarRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineScatterCandleRadarRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineScatterCandleRadarRenderer.java\n@@ -10,7 +10,7 @@\n /**\n  * Created by Philipp Jahoda on 11/07/15.\n  */\n-public abstract class LineScatterCandleRadarRenderer extends DataRenderer {\n+public abstract class LineScatterCandleRadarRenderer extends BarLineScatterCandleBubbleRenderer {\n \n     /**\n      * path that is used for drawing highlight-lines (drawLines(...) cannot be used because of dashes)",
    "output": "Further abstraction of XBounds calculation"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java\n@@ -55,7 +55,6 @@ protected void onCreate(Bundle savedInstanceState) {\n         mSeekBarX.setOnSeekBarChangeListener(this);\n \n         mChart = (LineChart) findViewById(R.id.chart1);\n-        mChart.setHardwareAccelerationEnabled(true);\n \n         // no description text\n         mChart.setDescription(\"\");",
    "output": "Merge"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n@@ -2,13 +2,16 @@\n package com.xxmassdeveloper.mpchartexample;\n \n import android.graphics.Color;\n+import android.graphics.Paint;\n import android.os.Bundle;\n import android.view.Menu;\n import android.view.MenuItem;\n import android.view.WindowManager;\n \n import com.github.mikephil.charting.charts.CombinedChart;\n import com.github.mikephil.charting.charts.CombinedChart.DrawOrder;\n+import com.github.mikephil.charting.components.AxisBase;\n+import com.github.mikephil.charting.components.Legend;\n import com.github.mikephil.charting.components.XAxis;\n import com.github.mikephil.charting.components.XAxis.XAxisPosition;\n import com.github.mikephil.charting.components.YAxis;\n@@ -27,6 +30,7 @@\n import com.github.mikephil.charting.data.LineDataSet;\n import com.github.mikephil.charting.data.ScatterData;\n import com.github.mikephil.charting.data.ScatterDataSet;\n+import com.github.mikephil.charting.formatter.AxisValueFormatter;\n import com.github.mikephil.charting.interfaces.datasets.IDataSet;\n import com.github.mikephil.charting.utils.ColorTemplate;\n import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n@@ -50,12 +54,16 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart.setBackgroundColor(Color.WHITE);\n         mChart.setDrawGridBackground(false);\n         mChart.setDrawBarShadow(false);\n-        \n+\n         // draw bars behind lines\n         mChart.setDrawOrder(new DrawOrder[]{\n                 DrawOrder.BAR, DrawOrder.BUBBLE, DrawOrder.CANDLE, DrawOrder.LINE, DrawOrder.SCATTER\n         });\n \n+        Legend l = mChart.getLegend();\n+        l.setWordWrapEnabled(true);\n+        l.setPosition(Legend.LegendPosition.BELOW_CHART_CENTER);\n+\n         YAxis rightAxis = mChart.getAxisRight();\n         rightAxis.setDrawGridLines(false);\n         rightAxis.setAxisMinValue(0f); // this replaces setStartAtZero(true)\n@@ -66,14 +74,29 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         XAxis xAxis = mChart.getXAxis();\n         xAxis.setPosition(XAxisPosition.BOTH_SIDED);\n+        xAxis.setAxisMinValue(0f);\n+        xAxis.setGranularity(1f);\n+        xAxis.setValueFormatter(new AxisValueFormatter() {\n+            @Override\n+            public String getFormattedValue(float value, AxisBase axis) {\n+                return mMonths[(int) value % mMonths.length];\n+            }\n+\n+            @Override\n+            public int getDecimalDigits() {\n+                return 0;\n+            }\n+        });\n \n         CombinedData data = new CombinedData();\n \n         data.setData(generateLineData());\n         data.setData(generateBarData());\n-//        data.setData(generateBubbleData());\n-//         data.setData(generateScatterData());\n-//         data.setData(generateCandleData());\n+        data.setData(generateBubbleData());\n+        data.setData(generateScatterData());\n+        data.setData(generateCandleData());\n+\n+        xAxis.setAxisMaxValue(data.getXMax() + 0.25f);\n \n         mChart.setData(data);\n         mChart.invalidate();\n@@ -86,7 +109,7 @@ private LineData generateLineData() {\n         ArrayList<Entry> entries = new ArrayList<Entry>();\n \n         for (int index = 0; index < itemcount; index++)\n-            entries.add(new Entry(index, getRandom(15, 10)));\n+            entries.add(new Entry(index + 0.5f, getRandom(15, 5)));\n \n         LineDataSet set = new LineDataSet(entries, \"Line DataSet\");\n         set.setColor(Color.rgb(240, 238, 70));\n@@ -114,7 +137,7 @@ private BarData generateBarData() {\n         ArrayList<BarEntry> entries = new ArrayList<BarEntry>();\n \n         for (int index = 0; index < itemcount; index++)\n-            entries.add(new BarEntry(index, getRandom(15, 30)));\n+            entries.add(new BarEntry(index + 0.5f, getRandom(25, 25)));\n \n         BarDataSet set = new BarDataSet(entries, \"Bar DataSet\");\n         set.setColor(Color.rgb(60, 220, 78));\n@@ -133,11 +156,11 @@ protected ScatterData generateScatterData() {\n \n         ArrayList<Entry> entries = new ArrayList<Entry>();\n \n-        for (int index = 0; index < itemcount; index++)\n-            entries.add(new Entry(index, getRandom(20, 15)));\n+        for (float index = 0; index < itemcount; index += 0.5f)\n+            entries.add(new Entry(index + 0.25f, getRandom(10, 55)));\n \n         ScatterDataSet set = new ScatterDataSet(entries, \"Scatter DataSet\");\n-        set.setColor(Color.GREEN);\n+        set.setColors(ColorTemplate.MATERIAL_COLORS);\n         set.setScatterShapeSize(7.5f);\n         set.setDrawValues(false);\n         set.setValueTextSize(10f);\n@@ -152,28 +175,30 @@ protected CandleData generateCandleData() {\n \n         ArrayList<CandleEntry> entries = new ArrayList<CandleEntry>();\n \n-        for (int index = 0; index < itemcount; index++)\n-            entries.add(new CandleEntry(index, 20f, 10f, 13f, 17f));\n+        for (int index = 0; index < itemcount; index += 2)\n+            entries.add(new CandleEntry(index + 1f, 90, 70, 85, 75f));\n \n         CandleDataSet set = new CandleDataSet(entries, \"Candle DataSet\");\n-        set.setColor(Color.rgb(80, 80, 80));\n+        set.setDecreasingColor(Color.rgb(142, 150, 175));\n+        set.setShadowColor(Color.DKGRAY);\n         set.setBarSpace(0.3f);\n         set.setValueTextSize(10f);\n         set.setDrawValues(false);\n         d.addDataSet(set);\n \n         return d;\n     }\n-    \n+\n     protected BubbleData generateBubbleData() {\n \n         BubbleData bd = new BubbleData();\n \n         ArrayList<BubbleEntry> entries = new ArrayList<BubbleEntry>();\n \n         for (int index = 0; index < itemcount; index++) {\n-            float rnd = getRandom(20, 30);\n-            entries.add(new BubbleEntry(index, rnd, rnd));\n+            float y = getRandom(10, 105);\n+            float size = getRandom(50, 105);\n+            entries.add(new BubbleEntry(index + 0.5f, y, size));\n         }\n \n         BubbleDataSet set = new BubbleDataSet(entries, \"Bubble DataSet\");\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n@@ -56,8 +56,6 @@ public void drawData(Canvas c) {\n     @SuppressWarnings(\"ResourceAsColor\")\n     protected void drawDataSet(Canvas c, ICandleDataSet dataSet) {\n \n-        int entryCount = dataSet.getEntryCount();\n-\n         Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n \n         float phaseX = Math.max(0.f, Math.min(1.f, mAnimator.getPhaseX()));\n@@ -71,26 +69,22 @@ protected void drawDataSet(Canvas c, ICandleDataSet dataSet) {\n         CandleEntry entryFrom = dataSet.getEntryForXPos(lowX, DataSet.Rounding.DOWN);\n         CandleEntry entryTo = dataSet.getEntryForXPos(highX, DataSet.Rounding.UP);\n \n-        int diff = (entryFrom == entryTo) ? 1 : 0;\n-        int minx = Math.max(dataSet.getEntryIndex(entryFrom) - diff, 0);\n-        int maxx = Math.min(Math.max(minx + 2, dataSet.getEntryIndex(entryTo) + 1), entryCount);\n+        int minx = dataSet.getEntryIndex(entryFrom);\n+        int maxx = dataSet.getEntryIndex(entryTo);\n \n         mRenderPaint.setStrokeWidth(dataSet.getShadowWidth());\n \n         // draw the body\n-        for (int j = minx,\n-             count = (int) Math.ceil((maxx - minx) * phaseX + (float)minx);\n-             j < count;\n-             j++) {\n+        for (int j = minx; j <= maxx * phaseX; j++) {\n \n             // get the entry\n             CandleEntry e = dataSet.getEntryForIndex(j);\n \n-            final float xPos = e.getX();\n-\n-            if (xPos < minx || xPos >= maxx)\n+            if(e == null)\n                 continue;\n \n+            final float xPos = e.getX();\n+\n             final float open = e.getOpen();\n             final float close = e.getClose();\n             final float high = e.getHigh();\n@@ -287,8 +281,14 @@ public void drawValues(Canvas c) {\n \n                 Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n \n-                int minx = Math.max((int) mChart.getLowestVisibleX(), 0);\n-                int maxx = Math.min((int) mChart.getHighestVisibleX() + 1, dataSet.getEntryCount());\n+                float low = mChart.getLowestVisibleX();\n+                float high = mChart.getHighestVisibleX();\n+\n+                CandleEntry entryFrom = dataSet.getEntryForXPos(low, DataSet.Rounding.DOWN);\n+                CandleEntry entryTo = dataSet.getEntryForXPos(high, DataSet.Rounding.UP);\n+\n+                int minx = dataSet.getEntryIndex(entryFrom);\n+                int maxx = dataSet.getEntryIndex(entryTo);\n \n                 float[] positions = trans.generateTransformedValuesCandle(\n                         dataSet, mAnimator.getPhaseX(), mAnimator.getPhaseY(), minx, maxx);\n@@ -308,7 +308,8 @@ public void drawValues(Canvas c) {\n \n                     CandleEntry entry = dataSet.getEntryForIndex(j / 2 + minx);\n \n-                    drawValue(c, dataSet.getValueFormatter(), entry.getHigh(), entry, i, x, y - yOffset, dataSet.getValueTextColor(j / 2));\n+                    drawValue(c, dataSet.getValueFormatter(), entry.getHigh(), entry, i, x, y - yOffset, dataSet\n+                            .getValueTextColor(j / 2));\n                 }\n             }\n         }",
    "output": "Fixes related to combined chart and refinement of combined chart example"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BubbleChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BubbleChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BubbleChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BubbleChart.java\n@@ -38,33 +38,6 @@ protected void init() {\n         mRenderer = new BubbleChartRenderer(this, mAnimator, mViewPortHandler);\n     }\n \n-//    @Override\n-//    protected void calcMinMax() {\n-//        super.calcMinMax();\n-//\n-//        if (mXAxis.mAxisRange == 0 && mData.getYValCount() > 0)\n-//            mXAxis.mAxisRange = 1;\n-//\n-//        mXAxis.mAxisMinimum = -0.5f;\n-//        mXAxis.mAxisMaximum = (float) mData.getXValCount() - 0.5f;\n-//\n-//        if (mRenderer != null) {\n-//            for (IBubbleDataSet set : mData.getDataSets()) {\n-//\n-//                final float xmin = set.getXMin();\n-//                final float xmax = set.getXMax();\n-//\n-//                if (xmin < mXAxis.mAxisMinimum)\n-//                    mXAxis.mAxisMinimum = xmin;\n-//\n-//                if (xmax > mXAxis.mAxisMaximum)\n-//                    mXAxis.mAxisMaximum = xmax;\n-//            }\n-//        }\n-//\n-//        mXAxis.mAxisRange = Math.abs(mXAxis.mAxisMaximum - mXAxis.mAxisMinimum);\n-//    }\n-\n     public BubbleData getBubbleData() {\n         return mData;\n     }\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CandleStickChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CandleStickChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CandleStickChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CandleStickChart.java\n@@ -35,14 +35,6 @@ protected void init() {\n         mXAxis.mAxisMinimum = -0.5f;\n     }\n \n-//    @Override\n-//    protected void calcMinMax() {\n-//        super.calcMinMax();\n-//\n-//        mXAxis.mAxisMaximum += 0.5f;\n-//        mXAxis.mAxisRange = Math.abs(mXAxis.mAxisMaximum - mXAxis.mAxisMinimum);\n-//    }\n-\n     @Override\n     public CandleData getCandleData() {\n         return mData;\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java\n@@ -82,37 +82,6 @@ protected void init() {\n         // mViewPortHandler);\n     }\n \n-//    @Override\n-//    protected void calcMinMax() {\n-//        super.calcMinMax();\n-//\n-//        if (getBarData() != null || getCandleData() != null || getBubbleData() != null) {\n-//            mXAxis.mAxisMinimum = -0.5f;\n-//            mXAxis.mAxisMaximum = mData.getXVals().size() - 0.5f;\n-//\n-//            if (getBubbleData() != null) {\n-//\n-//                for (IBubbleDataSet set : getBubbleData().getDataSets()) {\n-//\n-//                    final float xmin = set.getXMin();\n-//                    final float xmax = set.getXMax();\n-//\n-//                    if (xmin < mXAxis.mAxisMinimum)\n-//                        mXAxis.mAxisMinimum = xmin;\n-//\n-//                    if (xmax > mXAxis.mAxisMaximum)\n-//                        mXAxis.mAxisMaximum = xmax;\n-//                }\n-//            }\n-//        }\n-//\n-//        mXAxis.mAxisRange = Math.abs(mXAxis.mAxisMaximum - mXAxis.mAxisMinimum);\n-//\n-//        if (mXAxis.mAxisRange == 0.f && getLineData() != null && getLineData().getYValCount() > 0) {\n-//            mXAxis.mAxisRange = 1.f;\n-//        }\n-//    }\n-\n     @Override\n     public void setData(CombinedData data) {\n         mData = null;\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java\n@@ -201,38 +201,4 @@ public float getHighestVisibleX() {\n \t\t\t\tmViewPortHandler.contentTop());\n         return (float) Math.min(mXAxis.mAxisMaximum, pos.y);\n     }\n-\n-//\t/**\n-//\t * Returns the lowest x-index (value on the x-axis) that is still visible on the chart.\n-//\t *\n-//\t * @return\n-//\t */\n-//\t@Override\n-//\tpublic float getLowestVisibleX() {\n-//\n-//\t\tfloat step = mData.getDataSetCount();\n-//\t\tfloat div = (step <= 1) ? 1 : step + mData.getGroupSpace();\n-//\n-//\t\tfloat[] pts = new float[] { mViewPortHandler.contentLeft(), mViewPortHandler.contentBottom() };\n-//\n-//\t\tgetTransformer(AxisDependency.LEFT).pixelsToValue(pts);\n-//\t\treturn (((pts[1] <= 0) ? 0 : ((pts[1])) / div) + 1);\n-//\t}\n-//\n-//\t/**\n-//\t * Returns the highest x-index (value on the x-axis) that is still visible on the chart.\n-//\t *\n-//\t * @return\n-//\t */\n-//\t@Override\n-//\tpublic float getHighestVisibleX() {\n-//\n-//\t\tfloat step = mData.getDataSetCount();\n-//\t\tfloat div = (step <= 1) ? 1 : step + mData.getGroupSpace();\n-//\n-//\t\tfloat[] pts = new float[] { mViewPortHandler.contentLeft(), mViewPortHandler.contentTop() };\n-//\n-//\t\tgetTransformer(AxisDependency.LEFT).pixelsToValue(pts);\n-//\t\treturn ((pts[1] >= getXChartMax()) ? getXChartMax() / div : (pts[1] / div));\n-//\t}\n }\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/LineChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/LineChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/LineChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/LineChart.java\n@@ -33,14 +33,6 @@ protected void init() {\n \n         mRenderer = new LineChartRenderer(this, mAnimator, mViewPortHandler);\n     }\n-\n-//    @Override\n-//    protected void calcMinMax() {\n-//        super.calcMinMax();\n-//\n-//        if (mXAxis.mAxisRange == 0 && mData.getYValCount() > 0)\n-//            mXAxis.mAxisRange = 1;\n-//    }\n     \n     @Override\n     public LineData getLineData() {\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/ScatterChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/ScatterChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/ScatterChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/ScatterChart.java\n@@ -12,7 +12,7 @@\n  * The ScatterChart. Draws dots, triangles, squares and custom shapes into the\n  * Chart-View. CIRCLE and SCQUARE offer the best performance, TRIANGLE has the\n  * worst performance.\n- * \n+ *\n  * @author Philipp Jahoda\n  */\n public class ScatterChart extends BarLineChartBase<ScatterData> implements ScatterDataProvider {\n@@ -41,32 +41,20 @@ protected void init() {\n         super.init();\n \n         mRenderer = new ScatterChartRenderer(this, mAnimator, mViewPortHandler);\n-//        mXAxis.mAxisMinimum = -0.5f;\n     }\n \n-//    @Override\n-//    protected void calcMinMax() {\n-//        super.calcMinMax();\n-//\n-//        if (mXAxis.mAxisRange == 0 && mData.getEntryCount() > 0)\n-//            mXAxis.mAxisRange = 1;\n-//\n-//        mXAxis.mAxisMaximum += 0.5f;\n-//        mXAxis.mAxisRange = Math.abs(mXAxis.mAxisMaximum - mXAxis.mAxisMinimum);\n-//    }\n-\n     /**\n      * Returns all possible predefined ScatterShapes.\n-     * \n+     *\n      * @return\n      */\n     public static ScatterShape[] getAllPossibleShapes() {\n-        return new ScatterShape[] {\n+        return new ScatterShape[]{\n                 ScatterShape.SQUARE, ScatterShape.CIRCLE, ScatterShape.TRIANGLE, ScatterShape.CROSS\n         };\n     }\n \n     public ScatterData getScatterData() {\n         return mData;\n-    };\n+    }\n }\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/filter/Approximator.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/filter/Approximator.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/filter/Approximator.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/filter/Approximator.java\n@@ -91,7 +91,7 @@ public Line(float x1, float y1, float x2, float y2) {\n             points = new float[]{x1, y1, x2, y2};\n         }\n \n-        float distance(float x, float y) {\n+        public float distance(float x, float y) {\n             return Math.abs(dy * x - dx * y + sxey - exsy) / length;\n         }\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/Renderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/Renderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/Renderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/Renderer.java\n@@ -1,7 +1,6 @@\n \n package com.github.mikephil.charting.renderer;\n \n-import com.github.mikephil.charting.interfaces.dataprovider.BarLineScatterCandleBubbleDataProvider;\n import com.github.mikephil.charting.utils.ViewPortHandler;\n \n /**\n@@ -19,21 +18,4 @@ public abstract class Renderer {\n     public Renderer(ViewPortHandler viewPortHandler) {\n         this.mViewPortHandler = viewPortHandler;\n     }\n-\n-    /**\n-     * Returns true if the specified value fits in between the provided min\n-     * and max bounds, false if not.\n-     * \n-     * @param val\n-     * @param min\n-     * @param max\n-     * @return\n-     */\n-    protected boolean fitsBounds(float val, float min, float max) {\n-\n-        if (val < min || val > max)\n-            return false;\n-        else\n-            return true;\n-    }\n }",
    "output": "Comment cleanup"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MultiLineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MultiLineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MultiLineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MultiLineChartActivity.java\n@@ -196,7 +196,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n \n             for (int i = 0; i < mSeekBarX.getProgress(); i++) {\n                 double val = (Math.random() * mSeekBarY.getProgress()) + 3;\n-                values.add(new Entry((float) val, i));\n+                values.add(new Entry(i, (float) val));\n             }\n \n             LineDataSet d = new LineDataSet(values, \"DataSet \" + (z + 1));",
    "output": "Minor fix in example"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java\n@@ -110,7 +110,9 @@ public List<Integer> getColors() {\n         return mColors;\n     }\n \n-    public List<Integer> getValueColors() { return mValueColors; }\n+    public List<Integer> getValueColors() {\n+        return mValueColors;\n+    }\n \n     @Override\n     public int getColor() {\n@@ -225,7 +227,9 @@ public void resetColors() {\n         mColors = new ArrayList<Integer>();\n     }\n \n-    /** ###### ###### OTHER STYLING RELATED METHODS ##### ###### */\n+    /**\n+     * ###### ###### OTHER STYLING RELATED METHODS ##### ######\n+     */\n \n     @Override\n     public void setLabel(String label) {\n@@ -335,7 +339,9 @@ public void setAxisDependency(YAxis.AxisDependency dependency) {\n     }\n \n \n-    /** ###### ###### DATA RELATED METHODS ###### ###### */\n+    /**\n+     * ###### ###### DATA RELATED METHODS ###### ######\n+     */\n \n     @Override\n     public int getIndexInEntries(int xIndex) {\n@@ -351,15 +357,23 @@ public int getIndexInEntries(int xIndex) {\n     @Override\n     public boolean removeFirst() {\n \n-        T entry = getEntryForIndex(0);\n-        return removeEntry(entry);\n+        if (getEntryCount() > 0) {\n+\n+            T entry = getEntryForIndex(0);\n+            return removeEntry(entry);\n+        } else\n+            return false;\n     }\n \n     @Override\n     public boolean removeLast() {\n \n-        T entry = getEntryForIndex(getEntryCount() - 1);\n-        return removeEntry(entry);\n+        if (getEntryCount() > 0) {\n+\n+            T e = getEntryForIndex(getEntryCount() - 1);\n+            return removeEntry(e);\n+        } else\n+            return false;\n     }\n \n     @Override\n@@ -379,8 +393,8 @@ public boolean removeEntry(int index) {\n     @Override\n     public boolean contains(T e) {\n \n-        for(int i = 0; i < getEntryCount(); i++) {\n-            if(getEntryForIndex(i).equals(e))\n+        for (int i = 0; i < getEntryCount(); i++) {\n+            if (getEntryForIndex(i).equals(e))\n                 return true;\n         }\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java\n@@ -200,10 +200,9 @@ public void addEntryOrdered(T e) {\n         if (mValues.size() > 0 && mValues.get(mValues.size() - 1).getX() > e.getX()) {\n             int closestIndex = getEntryIndex(e.getX(), Rounding.UP);\n             mValues.add(closestIndex, e);\n-            return;\n+        } else {\n+            mValues.add(e);\n         }\n-\n-        mValues.add(e);\n     }\n \n     @Override\n@@ -322,20 +321,6 @@ public float getYValueForXValue(float xVal) {\n             return Float.NaN;\n     }\n \n-    @Override\n-    public float[] getYValuesForXPos(float xVal) {\n-\n-        List<T> entries = getEntriesForXPos(xVal);\n-\n-        float[] yVals = new float[entries.size()];\n-        int i = 0;\n-\n-        for (T e : entries)\n-            yVals[i++] = e.getY();\n-\n-        return yVals;\n-    }\n-\n     /**\n      * Returns all Entry objects at the given xIndex. INFORMATION: This method\n      * does calculations at runtime. Do not over-use in performance critical\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n@@ -281,20 +281,6 @@ public float getYValueForXValue(float xVal) {\n             return Float.NaN;\n     }\n \n-    @Override\n-    public float[] getYValuesForXPos(float xVal) {\n-\n-        List<S> entries = getEntriesForXPos(xVal);\n-\n-        float[] yVals = new float[entries.size()];\n-        int i = 0;\n-\n-        for (S e : entries)\n-            yVals[i++] = e.getY();\n-\n-        return yVals;\n-    }\n-\n     @Override\n     public boolean addEntry(S e) {\n \n\ndiff --git a/MPChartLib/src/test/java/com/github/mikephil/charting/test/DataSetTest.java b/MPChartLib/src/test/java/com/github/mikephil/charting/test/DataSetTest.java\n--- a/MPChartLib/src/test/java/com/github/mikephil/charting/test/DataSetTest.java\n+++ b/MPChartLib/src/test/java/com/github/mikephil/charting/test/DataSetTest.java\n@@ -10,6 +10,8 @@\n import java.util.List;\n \n import static junit.framework.Assert.assertEquals;\n+import static junit.framework.Assert.assertFalse;\n+import static junit.framework.Assert.assertTrue;\n \n /**\n  * Created by philipp on 31/05/16.\n@@ -77,6 +79,57 @@ public void testAddRemoveEntry() {\n         assertEquals(20, set.getEntryForIndex(3).getX(), 0.01f);\n         assertEquals(50, set.getEntryForIndex(3).getY(), 0.01f);\n \n+        assertTrue(set.removeEntry(3));\n+\n+        assertEquals(4, set.getEntryCount());\n+\n+        assertEquals(21, set.getEntryForIndex(3).getX(), 0.01f);\n+        assertEquals(5, set.getEntryForIndex(3).getY(), 0.01f);\n+\n+        assertEquals(5, set.getEntryForIndex(0).getX(), 0.01f);\n+        assertEquals(1, set.getEntryForIndex(0).getY(), 0.01f);\n+\n+        assertTrue(set.removeFirst());\n+\n+        assertEquals(3, set.getEntryCount());\n+\n+        assertEquals(10, set.getEntryForIndex(0).getX(), 0.01f);\n+        assertEquals(10, set.getEntryForIndex(0).getY(), 0.01f);\n+\n+        set.addEntryOrdered(new Entry(15, 3));\n+\n+        assertEquals(4, set.getEntryCount());\n+\n+        assertEquals(15, set.getEntryForIndex(1).getX(), 0.01f);\n+        assertEquals(3, set.getEntryForIndex(1).getY(), 0.01f);\n+\n+        assertEquals(21, set.getEntryForIndex(3).getX(), 0.01f);\n+        assertEquals(5, set.getEntryForIndex(3).getY(), 0.01f);\n+\n+        assertTrue(set.removeLast());\n+\n+        assertEquals(3, set.getEntryCount());\n+\n+        assertEquals(15, set.getEntryForIndex(2).getX(), 0.01f);\n+        assertEquals(2, set.getEntryForIndex(2).getY(), 0.01f);\n+\n+        assertTrue(set.removeLast());\n+\n+        assertEquals(2, set.getEntryCount());\n+\n+        assertTrue(set.removeLast());\n+\n+        assertEquals(1, set.getEntryCount());\n+\n+        assertEquals(10, set.getEntryForIndex(0).getX(), 0.01f);\n+        assertEquals(10, set.getEntryForIndex(0).getY(), 0.01f);\n+\n+        assertTrue(set.removeLast());\n+\n+        assertEquals(0, set.getEntryCount());\n+\n+        assertFalse(set.removeLast());\n+        assertFalse(set.removeFirst());\n     }\n \n     @Test",
    "output": "Test adding and removing entries"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IDataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IDataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IDataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IDataSet.java\n@@ -124,26 +124,16 @@ public interface IDataSet<T extends Entry> {\n     int getEntryIndex(T e);\n \n     /**\n-     * Returns the value of the Entry object at the given xVal. Returns\n-     * Float.NaN if no value is at the given xVal. INFORMATION: This method\n-     * does calculations at runtime. Do not over-use in performance critical\n-     * situations.\n-     *\n-     * @param xVal\n-     * @return\n-     */\n-    float getYValueForXValue(float xVal);\n-\n-    /**\n-     * Returns all of the y values of the Entry objects at the given xPos. Returns\n+     * Returns the value of the Entry object at the given xPos. Returns\n      * Float.NaN if no value is at the given xPos. INFORMATION: This method\n      * does calculations at runtime. Do not over-use in performance critical\n      * situations.\n      *\n      * @param xPos\n      * @return\n      */\n-    float[] getYValuesForXPos(float xPos);\n+    float getYValueForXValue(float xPos);\n+\n \n     /**\n      * This method returns the actual\n@@ -204,7 +194,7 @@ public interface IDataSet<T extends Entry> {\n     boolean removeEntry(T e);\n \n     /**\n-     * Removes the Entry object that has the given xPos from the DataSet.\n+     * Removes the Entry object closest to the given xPos from the DataSet.\n      * Returns true if an Entry was removed, false if no Entry could be removed.\n      *\n      * @param xPos",
    "output": "IDataSet interface cleanup"
  },
  {
    "input": "diff --git a/MPChartLib/src/test/java/com/github/mikephil/charting/test/BarDataTest.java b/MPChartLib/src/test/java/com/github/mikephil/charting/test/BarDataTest.java\n--- a/MPChartLib/src/test/java/com/github/mikephil/charting/test/BarDataTest.java\n+++ b/MPChartLib/src/test/java/com/github/mikephil/charting/test/BarDataTest.java\n@@ -0,0 +1,72 @@\n+package com.github.mikephil.charting.test;\n+\n+import com.github.mikephil.charting.data.BarData;\n+import com.github.mikephil.charting.data.BarDataSet;\n+import com.github.mikephil.charting.data.BarEntry;\n+\n+import org.junit.Test;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static junit.framework.Assert.assertEquals;\n+\n+/**\n+ * Created by philipp on 06/06/16.\n+ */\n+public class BarDataTest {\n+\n+    @Test\n+    public void testGroupBars() {\n+\n+        float groupSpace = 5f;\n+        float barSpace = 1f;\n+\n+        List<BarEntry> values1 = new ArrayList<>();\n+        List<BarEntry> values2 = new ArrayList<>();\n+\n+        for(int i = 0; i < 5; i++) {\n+            values1.add(new BarEntry(i, 50));\n+            values2.add(new BarEntry(i, 60));\n+        }\n+\n+        BarDataSet barDataSet1 = new BarDataSet(values1, \"Set1\");\n+        BarDataSet barDataSet2 = new BarDataSet(values2, \"Set2\");\n+\n+        BarData data = new BarData(barDataSet1, barDataSet2);\n+        data.setBarWidth(10f);\n+\n+        float groupWidth = data.getGroupWidth(groupSpace, barSpace);\n+        assertEquals(27f, groupWidth, 0.01f);\n+\n+        assertEquals(0f, values1.get(0).getX(), 0.01f);\n+        assertEquals(1f, values1.get(1).getX(), 0.01f);\n+\n+        data.groupBars(1000, groupSpace, barSpace);\n+\n+        // 1000 + 2.5 + 0.5 + 5\n+        assertEquals(1008f, values1.get(0).getX(), 0.01f);\n+        assertEquals(1019f, values2.get(0).getX(), 0.01f);\n+        assertEquals(1035f, values1.get(1).getX(), 0.01f);\n+        assertEquals(1046f, values2.get(1).getX(), 0.01f);\n+\n+        data.groupBars(-1000, groupSpace, barSpace);\n+\n+        assertEquals(-992f, values1.get(0).getX(), 0.01f);\n+        assertEquals(-981f, values2.get(0).getX(), 0.01f);\n+        assertEquals(-965f, values1.get(1).getX(), 0.01f);\n+        assertEquals(-954f, values2.get(1).getX(), 0.01f);\n+\n+        data.setBarWidth(20f);\n+        groupWidth = data.getGroupWidth(groupSpace, barSpace);\n+        assertEquals(47f, groupWidth, 0.01f);\n+\n+        data.setBarWidth(10f);\n+        data.groupBars(-20, groupSpace, barSpace);\n+\n+        assertEquals(-12f, values1.get(0).getX(), 0.01f);\n+        assertEquals(-1f, values2.get(0).getX(), 0.01f);\n+        assertEquals(15f, values1.get(1).getX(), 0.01f);\n+        assertEquals(26f, values2.get(1).getX(), 0.01f);\n+    }\n+}",
    "output": "Write unit tests for groupBars"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n@@ -247,6 +247,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n         mChart.getBarData().groupBars(startYear, groupSpace, barSpace);\n         mChart.getXAxis().setAxisMinValue(startYear);\n         mChart.getXAxis().setAxisMaxValue(mChart.getBarData().getIntervalWidth(groupSpace, barSpace) * mSeekBarX.getProgress() + startYear);\n+        mChart.notifyDataSetChanged();\n         mChart.invalidate();\n     }\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/LargeValueFormatter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/LargeValueFormatter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/LargeValueFormatter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/LargeValueFormatter.java\n@@ -22,12 +22,12 @@ public class LargeValueFormatter implements ValueFormatter, AxisValueFormatter {\n     private static String[] SUFFIX = new String[]{\n             \"\", \"k\", \"m\", \"b\", \"t\"\n     };\n-    private static final int MAX_LENGTH = 4;\n+    private static final int MAX_LENGTH = 5;\n     private DecimalFormat mFormat;\n     private String mText = \"\";\n \n     public LargeValueFormatter() {\n-        mFormat = new DecimalFormat(\"###E0\");\n+        mFormat = new DecimalFormat(\"###E00\");\n     }\n \n     /**\n@@ -68,9 +68,7 @@ public void setAppendix(String appendix) {\n      * @param suff new suffix\n      */\n     public void setSuffix(String[] suff) {\n-        if (suff.length == 5) {\n-            SUFFIX = suff;\n-        }\n+        SUFFIX = suff;\n     }\n \n     /**\n@@ -81,7 +79,11 @@ private String makePretty(double number) {\n \n         String r = mFormat.format(number);\n \n-        r = r.replaceAll(\"E[0-9]\", SUFFIX[Character.getNumericValue(r.charAt(r.length() - 1)) / 3]);\n+        int numericValue1 = Character.getNumericValue(r.charAt(r.length() - 1));\n+        int numericValue2 = Character.getNumericValue(r.charAt(r.length() - 2));\n+        int combined = Integer.valueOf(numericValue2 + \"\" + numericValue1);\n+\n+        r = r.replaceAll(\"E[0-9][0-9]\", SUFFIX[combined / 3]);\n \n         while (r.length() > MAX_LENGTH || r.matches(\"[0-9]+\\\\.[a-z]\")) {\n             r = r.substring(0, r.length() - 2) + r.substring(r.length() - 1);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ViewPortHandler.java b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ViewPortHandler.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ViewPortHandler.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ViewPortHandler.java\n@@ -102,7 +102,6 @@ public void setChartDimens(float width, float height) {\n         mChartWidth = width;\n \n         restrainViewPort(offsetLeft, offsetTop, offsetRight, offsetBottom);\n-\n     }\n \n     public boolean hasChartDimens() {\n\ndiff --git a/MPChartLib/src/test/java/com/github/mikephil/charting/test/AxisRendererTest.java b/MPChartLib/src/test/java/com/github/mikephil/charting/test/AxisRendererTest.java\n--- a/MPChartLib/src/test/java/com/github/mikephil/charting/test/AxisRendererTest.java\n+++ b/MPChartLib/src/test/java/com/github/mikephil/charting/test/AxisRendererTest.java\n@@ -1,17 +1,11 @@\n package com.github.mikephil.charting.test;\n \n import com.github.mikephil.charting.components.YAxis;\n-import com.github.mikephil.charting.data.DataSet;\n-import com.github.mikephil.charting.data.Entry;\n-import com.github.mikephil.charting.data.ScatterDataSet;\n import com.github.mikephil.charting.renderer.AxisRenderer;\n import com.github.mikephil.charting.renderer.YAxisRenderer;\n \n import org.junit.Test;\n \n-import java.util.ArrayList;\n-import java.util.List;\n-\n import static junit.framework.Assert.assertEquals;\n \n /**\n\ndiff --git a/MPChartLib/src/test/java/com/github/mikephil/charting/test/DataSetTest.java b/MPChartLib/src/test/java/com/github/mikephil/charting/test/DataSetTest.java\n--- a/MPChartLib/src/test/java/com/github/mikephil/charting/test/DataSetTest.java\n+++ b/MPChartLib/src/test/java/com/github/mikephil/charting/test/DataSetTest.java\n@@ -3,14 +3,13 @@\n import com.github.mikephil.charting.data.DataSet;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.ScatterDataSet;\n-import com.github.mikephil.charting.interfaces.datasets.IDataSet;\n \n import org.junit.Test;\n \n import java.util.ArrayList;\n import java.util.List;\n \n-import static junit.framework.Assert.*;\n+import static junit.framework.Assert.assertEquals;\n \n /**\n  * Created by philipp on 31/05/16.\n\ndiff --git a/MPChartLib/src/test/java/com/github/mikephil/charting/test/LargeValueFormatterTest.java b/MPChartLib/src/test/java/com/github/mikephil/charting/test/LargeValueFormatterTest.java\n--- a/MPChartLib/src/test/java/com/github/mikephil/charting/test/LargeValueFormatterTest.java\n+++ b/MPChartLib/src/test/java/com/github/mikephil/charting/test/LargeValueFormatterTest.java\n@@ -0,0 +1,95 @@\n+package com.github.mikephil.charting.test;\n+\n+import com.github.mikephil.charting.formatter.LargeValueFormatter;\n+\n+import org.junit.Test;\n+\n+import static junit.framework.Assert.assertEquals;\n+\n+/**\n+ * Created by philipp on 06/06/16.\n+ */\n+public class LargeValueFormatterTest {\n+\n+    @Test\n+    public void test() {\n+\n+        LargeValueFormatter formatter = new LargeValueFormatter();\n+\n+        String result = formatter.getFormattedValue(5f, null);\n+        assertEquals(\"5\", result);\n+\n+        result = formatter.getFormattedValue(5.5f, null);\n+        assertEquals(\"5.5\", result);\n+\n+        result = formatter.getFormattedValue(50f, null);\n+        assertEquals(\"50\", result);\n+\n+        result = formatter.getFormattedValue(50.5f, null);\n+        assertEquals(\"50.5\", result);\n+\n+        result = formatter.getFormattedValue(500f, null);\n+        assertEquals(\"500\", result);\n+\n+        result = formatter.getFormattedValue(1100f, null);\n+        assertEquals(\"1.1k\", result);\n+\n+        result = formatter.getFormattedValue(10000f, null);\n+        assertEquals(\"10k\", result);\n+\n+        result = formatter.getFormattedValue(10500f, null);\n+        assertEquals(\"10.5k\", result);\n+\n+        result = formatter.getFormattedValue(100000f, null);\n+        assertEquals(\"100k\", result);\n+\n+        result = formatter.getFormattedValue(1000000f, null);\n+        assertEquals(\"1m\", result);\n+\n+        result = formatter.getFormattedValue(1500000f, null);\n+        assertEquals(\"1.5m\", result);\n+\n+        result = formatter.getFormattedValue(9500000f, null);\n+        assertEquals(\"9.5m\", result);\n+\n+        result = formatter.getFormattedValue(22200000f, null);\n+        assertEquals(\"22.2m\", result);\n+\n+        result = formatter.getFormattedValue(222000000f, null);\n+        assertEquals(\"222m\", result);\n+\n+        result = formatter.getFormattedValue(1000000000f, null);\n+        assertEquals(\"1b\", result);\n+\n+        result = formatter.getFormattedValue(9900000000f, null);\n+        assertEquals(\"9.9b\", result);\n+\n+        result = formatter.getFormattedValue(99000000000f, null);\n+        assertEquals(\"99b\", result);\n+\n+        result = formatter.getFormattedValue(99500000000f, null);\n+        assertEquals(\"99.5b\", result);\n+\n+        result = formatter.getFormattedValue(999000000000f, null);\n+        assertEquals(\"999b\", result);\n+\n+        result = formatter.getFormattedValue(1000000000000f, null);\n+        assertEquals(\"1t\", result);\n+\n+        formatter.setSuffix(new String[]{\"\", \"k\", \"m\", \"b\", \"t\", \"q\"}); // quadrillion support\n+        result = formatter.getFormattedValue(1000000000000000f, null);\n+        assertEquals(\"1q\", result);\n+\n+        result = formatter.getFormattedValue(1100000000000000f, null);\n+        assertEquals(\"1.1q\", result);\n+\n+        result = formatter.getFormattedValue(10000000000000000f, null);\n+        assertEquals(\"10q\", result);\n+\n+        result = formatter.getFormattedValue(13300000000000000f, null);\n+        assertEquals(\"13.3q\", result);\n+\n+        result = formatter.getFormattedValue(100000000000000000f, null);\n+        assertEquals(\"100q\", result);\n+    }\n+}",
    "output": "Improve & test LargeValueFormatter"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java\n@@ -146,7 +146,7 @@ private void addEntry() {\n             // mChart.setVisibleYRange(30, AxisDependency.LEFT);\n \n             // move to the latest entry\n-            mChart.moveViewToX(data.getEntryCount() - 121);\n+            mChart.moveViewToX(data.getEntryCount());\n \n             // this automatically refreshes the chart (calls invalidate())\n             // mChart.moveViewTo(data.getXValCount()-7, 55f,\n@@ -175,14 +175,14 @@ private LineDataSet createSet() {\n \n     private void feedMultiple() {\n \n-        if(thread != null)\n+        if (thread != null)\n             thread.interrupt();\n \n-       thread = new Thread(new Runnable() {\n+        thread = new Thread(new Runnable() {\n \n             @Override\n             public void run() {\n-                for(int i = 0; i < 1000; i++) {\n+                for (int i = 0; i < 1000; i++) {\n \n                     runOnUiThread(new Runnable() {\n \n@@ -219,7 +219,7 @@ public void onNothingSelected() {\n     protected void onPause() {\n         super.onPause();\n \n-        if(thread != null) {\n+        if (thread != null) {\n             thread.interrupt();\n         }\n     }\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -357,10 +357,6 @@ protected void calcMinMax() {\n         if (mAutoScaleMinMaxEnabled)\n             mData.calcMinMax();\n \n-//        // calculate / set x-axis range\n-//        mXAxis.mAxisMaximum = mData.getXVals().size() - 1;\n-//        mXAxis.mAxisRange = Math.abs(mXAxis.mAxisMaximum - mXAxis.mAxisMinimum);\n-\n         mXAxis.calculate(mData.getXMin(), mData.getXMax());\n \n         // calculate axis range (min / max) according to provided data\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java\n@@ -168,8 +168,6 @@ public SelectionDetail getClosestSelectionDetailByPixel(\n         SelectionDetail closest = null;\n         float distance = minSelectionDistance;\n \n-        System.out.println(distance);\n-\n         for (int i = 0; i < valsAtIndex.size(); i++) {\n \n             SelectionDetail sel = valsAtIndex.get(i);",
    "output": "Cleanup"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java\n@@ -57,8 +57,6 @@ protected void init() {\n         mRenderer = new BarChartRenderer(this, mAnimator, mViewPortHandler);\n \n         setHighlighter(new BarHighlighter(this));\n-\n-        //mXAxis.mAxisMinimum = -0.5f;\n     }\n \n     @Override\n@@ -200,39 +198,4 @@ public BarData getBarData() {\n     public void setFitBars(boolean enabled) {\n         mFitBars = enabled;\n     }\n-\n-\n-//\t/**\n-//\t * Returns the lowest x-index (value on the x-axis) that is still visible on the chart.\n-//\t *\n-//\t * @return\n-//\t */\n-//\t@Override\n-//\tpublic float getLowestVisibleX() {\n-//\n-//\t\tfloat step = mData.getDataSetCount();\n-//\t\tfloat div = (step <= 1) ? 1 : step + mData.getGroupSpace();\n-//\n-//\t\tfloat[] pts = new float[] { mViewPortHandler.contentLeft(), mViewPortHandler.contentBottom() };\n-//\n-//\t\tgetTransformer(AxisDependency.LEFT).pixelsToValue(pts);\n-//\t\treturn ((pts[0] <= getXChartMin()) ? 0 : (pts[0] / div) + 1);\n-//\t}\n-//\n-//\t/**\n-//\t * Returns the highest x-index (value on the x-axis) that is still visible on the chart.\n-//\t *\n-//\t * @return\n-//\t */\n-//\t@Override\n-//\tpublic float getHighestVisibleX() {\n-//\n-//\t\tfloat step = mData.getDataSetCount();\n-//\t\tfloat div = (step <= 1) ? 1 : step + mData.getGroupSpace();\n-//\n-//\t\tfloat[] pts = new float[] { mViewPortHandler.contentRight(), mViewPortHandler.contentBottom() };\n-//\n-//\t\tgetTransformer(AxisDependency.LEFT).pixelsToValue(pts);\n-//\t\treturn ((pts[0] >= getXChartMax()) ? getXChartMax() / div : (pts[0] / div));\n-//\t}\n }\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -527,7 +527,7 @@ protected float[] getMarkerPosition(Entry e, Highlight highlight) {\n \n         int dataSetIndex = highlight.getDataSetIndex();\n         float xPos = e.getX();\n-        float yPos = e.getY();\n+        float yPos = e.getY() * mAnimator.getPhaseY();\n \n         // position of the marker depends on selected value index and value\n         float[] pts = new float[]{\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n@@ -700,10 +700,13 @@ protected void drawMarkers(Canvas canvas) {\n \n             Highlight highlight = mIndicesToHighlight[i];\n \n+            IDataSet set = mData.getDataSetByIndex(highlight.getDataSetIndex());\n+\n             Entry e = mData.getEntryForHighlight(mIndicesToHighlight[i]);\n+            int entryIndex = set.getEntryIndex(e);\n \n             // make sure entry not null\n-            if (e == null || e.getX() != mIndicesToHighlight[i].getX())\n+            if (e == null || entryIndex > set.getEntryCount() * mAnimator.getPhaseX())\n                 continue;\n \n             float[] pos = getMarkerPosition(e, highlight);\n@@ -715,13 +718,6 @@ protected void drawMarkers(Canvas canvas) {\n             // callbacks to update the content\n             mMarkerView.refreshContent(e, highlight);\n \n-            // mMarkerView.measure(MeasureSpec.makeMeasureSpec(0,\n-            // MeasureSpec.UNSPECIFIED),\n-            // MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED));\n-            // mMarkerView.layout(0, 0, mMarkerView.getMeasuredWidth(),\n-            // mMarkerView.getMeasuredHeight());\n-            // mMarkerView.draw(mDrawCanvas, pos[0], pos[1]);\n-\n             mMarkerView.measure(MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED),\n                     MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED));\n             mMarkerView.layout(0, 0, mMarkerView.getMeasuredWidth(),",
    "output": "Fixes related to markerview drawing in animation"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/RadarChart.java\n@@ -99,19 +99,15 @@ protected void init() {\n     protected void calcMinMax() {\n         super.calcMinMax();\n \n-        // calculate / set x-axis range\n-//        mXAxis.mAxisMaximum = mData.getXVals().size() - 1;\n-//        mXAxis.mAxisRange = Math.abs(mXAxis.mAxisMaximum - mXAxis.mAxisMinimum);\n-\n         mYAxis.calculate(mData.getYMin(AxisDependency.LEFT), mData.getYMax(AxisDependency.LEFT));\n         mXAxis.calculate(0, mData.getMaxEntryCountSet().getEntryCount());\n     }\n \n     @Override\n     protected float[] getMarkerPosition(Entry e, Highlight highlight) {\n \n-        float angle = getSliceAngle() * e.getX() + getRotationAngle();\n-        float val = e.getY() * getFactor();\n+        float angle = getSliceAngle() * e.getX() * mAnimator.getPhaseX() + getRotationAngle();\n+        float val = e.getY() * getFactor() * mAnimator.getPhaseY();\n         PointF c = getCenterOffsets();\n \n         PointF p = new PointF((float) (c.x + val * Math.cos(Math.toRadians(angle))),\n@@ -129,10 +125,6 @@ public void notifyDataSetChanged() {\n \n         calcMinMax();\n \n-//        if (mYAxis.needsDefaultFormatter()) {\n-//            mYAxis.setValueFormatter(mDefaultFormatter);\n-//        }\n-\n         mYAxisRenderer.computeAxis(mYAxis.mAxisMinimum, mYAxis.mAxisMaximum, mYAxis.isInverted());\n         mXAxisRenderer.computeAxis(mXAxis.mAxisMinimum, mXAxis.mAxisMaximum, false);\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n@@ -51,7 +51,7 @@ public AxisRenderer(ViewPortHandler viewPortHandler, Transformer trans, AxisBase\n         this.mTrans = trans;\n         this.mAxis = axis;\n \n-        if(mTrans != null) {\n+        if(mViewPortHandler != null) {\n \n             mAxisLabelPaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -28,7 +28,7 @@ public YAxisRenderer(ViewPortHandler viewPortHandler, YAxis yAxis, Transformer t\n \n         this.mYAxis = yAxis;\n \n-        if(mTrans != null) {\n+        if(mViewPortHandler != null) {\n \n             mAxisLabelPaint.setColor(Color.BLACK);\n             mAxisLabelPaint.setTextSize(Utils.convertDpToPixel(10f));",
    "output": "More fixes for RadarChart"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -178,7 +178,7 @@ protected void prepareBarHighlight(float x, float y1, float y2, float barWidthHa\n \n         mBarRect.set(left, top, right, bottom);\n \n-        trans.rectValueToPixel(mBarRect, mAnimator.getPhaseY());\n+        trans.rectToPixelPhase(mBarRect, mAnimator.getPhaseY());\n     }\n \n     @Override\n@@ -358,8 +358,9 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n                 float x = high.getX();\n \n                 BarEntry e = set.getEntryForXPos(x);\n+                float entryIndex = set.getEntryIndex(e);\n \n-                if (e == null)\n+                if (e == null || entryIndex > set.getEntryCount() * mAnimator.getPhaseX())\n                     continue;\n \n                 boolean isStack = high.getStackIndex() < 0 ? false : true;\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n@@ -288,7 +288,7 @@ protected void prepareBarHighlight(float x, float y1, float y2, float barWidthHa\n \n         mBarRect.set(left, top, right, bottom);\n \n-        trans.rectValueToPixel(mBarRect, mAnimator.getPhaseY());\n+        trans.rectToPixelPhaseHorizontal(mBarRect, mAnimator.getPhaseY());\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java\n@@ -300,7 +300,7 @@ public void rectValueToPixel(RectF r) {\n      * @param r\n      * @param phaseY\n      */\n-    public void rectValueToPixel(RectF r, float phaseY) {\n+    public void rectToPixelPhase(RectF r, float phaseY) {\n \n         // multiply the height of the rect with the phase\n         r.top *= phaseY;\n@@ -311,6 +311,17 @@ public void rectValueToPixel(RectF r, float phaseY) {\n         mMatrixOffset.mapRect(r);\n     }\n \n+    public void rectToPixelPhaseHorizontal(RectF r, float phaseY) {\n+\n+        // multiply the height of the rect with the phase\n+        r.left *= phaseY;\n+        r.right *= phaseY;\n+\n+        mMatrixValueToPx.mapRect(r);\n+        mViewPortHandler.getMatrixTouch().mapRect(r);\n+        mMatrixOffset.mapRect(r);\n+    }\n+\n     /**\n      * Transform a rectangle with all matrices with potential animation phases.\n      *",
    "output": "Fix issue in highlight animation for barchart"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/components/XAxis.java b/MPChartLib/src/main/java/com/github/mikephil/charting/components/XAxis.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/components/XAxis.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/XAxis.java\n@@ -115,40 +115,4 @@ public void setAvoidFirstLastClipping(boolean enabled) {\n     public boolean isAvoidFirstLastClippingEnabled() {\n         return mAvoidFirstLastClipping;\n     }\n-\n-//    /**\n-//     * Sets the labels for this axis.\n-//     *\n-//     * @param values\n-//     */\n-//    public void setValues(List<XAxisValue> values) {\n-//        mValues = values;\n-//    }\n-//\n-//    /**\n-//     * Returns the labels for this axis.\n-//     *\n-//     * @return\n-//     */\n-//    public List<XAxisValue> getValues() {\n-//        return mValues;\n-//    }\n-//\n-//    /**\n-//     * Adds a new xPx-yValue to the chart data.\n-//     *\n-//     * @param xVal\n-//     */\n-//    public void addXValue(XAxisValue xVal) {\n-//        mValues.add(xVal);\n-//    }\n-//\n-//    /**\n-//     * Removes the xPx-yValue at the specified index.\n-//     *\n-//     * @param index\n-//     */\n-//    public void removeXValue(int index) {\n-//        mValues.remove(index);\n-//    }\n }\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java\n@@ -51,21 +51,24 @@ public AxisRenderer(ViewPortHandler viewPortHandler, Transformer trans, AxisBase\n         this.mTrans = trans;\n         this.mAxis = axis;\n \n-        mAxisLabelPaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n+        if(mTrans != null) {\n \n-        mGridPaint = new Paint();\n-        mGridPaint.setColor(Color.GRAY);\n-        mGridPaint.setStrokeWidth(1f);\n-        mGridPaint.setStyle(Style.STROKE);\n-        mGridPaint.setAlpha(90);\n+            mAxisLabelPaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n \n-        mAxisLinePaint = new Paint();\n-        mAxisLinePaint.setColor(Color.BLACK);\n-        mAxisLinePaint.setStrokeWidth(1f);\n-        mAxisLinePaint.setStyle(Style.STROKE);\n+            mGridPaint = new Paint();\n+            mGridPaint.setColor(Color.GRAY);\n+            mGridPaint.setStrokeWidth(1f);\n+            mGridPaint.setStyle(Style.STROKE);\n+            mGridPaint.setAlpha(90);\n \n-        mLimitLinePaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n-        mLimitLinePaint.setStyle(Paint.Style.STROKE);\n+            mAxisLinePaint = new Paint();\n+            mAxisLinePaint.setColor(Color.BLACK);\n+            mAxisLinePaint.setStrokeWidth(1f);\n+            mAxisLinePaint.setStyle(Style.STROKE);\n+\n+            mLimitLinePaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n+            mLimitLinePaint.setStyle(Paint.Style.STROKE);\n+        }\n     }\n \n     /**\n@@ -116,7 +119,7 @@ public void computeAxis(float min, float max, boolean inverted) {\n \n         // calculate the starting and entry point of the yPx-labels (depending on\n         // zoom / contentrect bounds)\n-        if (mViewPortHandler.contentWidth() > 10 && !mViewPortHandler.isFullyZoomedOutY()) {\n+        if (mViewPortHandler != null && mViewPortHandler.contentWidth() > 10 && !mViewPortHandler.isFullyZoomedOutY()) {\n \n             PointD p1 = mTrans.getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop());\n             PointD p2 = mTrans.getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentBottom());\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -28,13 +28,16 @@ public YAxisRenderer(ViewPortHandler viewPortHandler, YAxis yAxis, Transformer t\n \n         this.mYAxis = yAxis;\n \n-        mAxisLabelPaint.setColor(Color.BLACK);\n-        mAxisLabelPaint.setTextSize(Utils.convertDpToPixel(10f));\n+        if(mTrans != null) {\n \n-        mZeroLinePaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n-        mZeroLinePaint.setColor(Color.GRAY);\n-        mZeroLinePaint.setStrokeWidth(1f);\n-        mZeroLinePaint.setStyle(Paint.Style.STROKE);\n+            mAxisLabelPaint.setColor(Color.BLACK);\n+            mAxisLabelPaint.setTextSize(Utils.convertDpToPixel(10f));\n+\n+            mZeroLinePaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n+            mZeroLinePaint.setColor(Color.GRAY);\n+            mZeroLinePaint.setStrokeWidth(1f);\n+            mZeroLinePaint.setStyle(Paint.Style.STROKE);\n+        }\n     }\n \n //    @Override\n\ndiff --git a/MPChartLib/src/test/java/com/github/mikephil/charting/test/AxisRendererTest.java b/MPChartLib/src/test/java/com/github/mikephil/charting/test/AxisRendererTest.java\n--- a/MPChartLib/src/test/java/com/github/mikephil/charting/test/AxisRendererTest.java\n+++ b/MPChartLib/src/test/java/com/github/mikephil/charting/test/AxisRendererTest.java\n@@ -0,0 +1,111 @@\n+package com.github.mikephil.charting.test;\n+\n+import com.github.mikephil.charting.components.YAxis;\n+import com.github.mikephil.charting.data.DataSet;\n+import com.github.mikephil.charting.data.Entry;\n+import com.github.mikephil.charting.data.ScatterDataSet;\n+import com.github.mikephil.charting.renderer.AxisRenderer;\n+import com.github.mikephil.charting.renderer.YAxisRenderer;\n+\n+import org.junit.Test;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static junit.framework.Assert.assertEquals;\n+\n+/**\n+ * Created by philipp on 31/05/16.\n+ */\n+public class AxisRendererTest {\n+\n+\n+    @Test\n+    public void testComputeAxisValues() {\n+\n+        YAxis yAxis = new YAxis();\n+        yAxis.setLabelCount(6);\n+        AxisRenderer renderer = new YAxisRenderer(null, yAxis, null);\n+\n+        renderer.computeAxis(0, 100, false);\n+        float[] entries = yAxis.mEntries;\n+\n+        assertEquals(6, entries.length);\n+        assertEquals(20, entries[1] - entries[0], 0.01); // interval 20\n+        assertEquals(0, entries[0], 0.01);\n+        assertEquals(100, entries[entries.length - 1], 0.01);\n+\n+        yAxis = new YAxis();\n+        yAxis.setLabelCount(6);\n+        yAxis.setGranularity(50f);\n+        renderer = new YAxisRenderer(null, yAxis, null);\n+\n+        renderer.computeAxis(0, 100, false);\n+        entries = yAxis.mEntries;\n+\n+        assertEquals(3, entries.length);\n+        assertEquals(50, entries[1] - entries[0], 0.01); // interval 50\n+        assertEquals(0, entries[0], 0.01);\n+        assertEquals(100, entries[entries.length - 1], 0.01);\n+\n+        yAxis = new YAxis();\n+        yAxis.setLabelCount(5, true);\n+        renderer = new YAxisRenderer(null, yAxis, null);\n+\n+        renderer.computeAxis(0, 100, false);\n+        entries = yAxis.mEntries;\n+\n+        assertEquals(5, entries.length);\n+        assertEquals(25, entries[1] - entries[0], 0.01); // interval 25\n+        assertEquals(0, entries[0], 0.01);\n+        assertEquals(100, entries[entries.length - 1], 0.01);\n+\n+        yAxis = new YAxis();\n+        yAxis.setLabelCount(5, true);\n+        renderer = new YAxisRenderer(null, yAxis, null);\n+\n+        renderer.computeAxis(0, 0.01f, false);\n+        entries = yAxis.mEntries;\n+\n+        assertEquals(5, entries.length);\n+        assertEquals(0.0025, entries[1] - entries[0], 0.0001);\n+        assertEquals(0, entries[0], 0.0001);\n+        assertEquals(0.01, entries[entries.length - 1], 0.0001);\n+\n+        yAxis = new YAxis();\n+        yAxis.setLabelCount(5, false);\n+        renderer = new YAxisRenderer(null, yAxis, null);\n+\n+        renderer.computeAxis(0, 0.01f, false);\n+        entries = yAxis.mEntries;\n+\n+        assertEquals(5, entries.length);\n+        assertEquals(0.0020, entries[1] - entries[0], 0.0001);\n+        assertEquals(0, entries[0], 0.0001);\n+        assertEquals(0.0080, entries[entries.length - 1], 0.0001);\n+\n+        yAxis = new YAxis();\n+        yAxis.setLabelCount(6);\n+        renderer = new YAxisRenderer(null, yAxis, null);\n+\n+        renderer.computeAxis(-50, 50, false);\n+        entries = yAxis.mEntries;\n+\n+        assertEquals(5, entries.length);\n+        assertEquals(-40, entries[0], 0.0001);\n+        assertEquals(0, entries[2], 0.0001);\n+        assertEquals(40, entries[entries.length - 1], 0.0001);\n+\n+        yAxis = new YAxis();\n+        yAxis.setLabelCount(6);\n+        renderer = new YAxisRenderer(null, yAxis, null);\n+\n+        renderer.computeAxis(-50, 100, false);\n+        entries = yAxis.mEntries;\n+\n+        assertEquals(5, entries.length);\n+        assertEquals(-30, entries[0], 0.0001);\n+        assertEquals(30, entries[2], 0.0001);\n+        assertEquals(90, entries[entries.length - 1], 0.0001);\n+    }\n+}",
    "output": "Test axis renderer"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n@@ -83,7 +83,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         xl.setPosition(XAxisPosition.BOTTOM);\n         xl.setTypeface(tf);\n         xl.setDrawAxisLine(true);\n-        xl.setDrawGridLines(true);\n+        xl.setDrawGridLines(false);\n         xl.setGridLineWidth(0.3f);\n         xl.setGranularity(10f);\n \n@@ -103,6 +103,7 @@ protected void onCreate(Bundle savedInstanceState) {\n //        yr.setInverted(true);\n \n         setData(12, 50);\n+        mChart.setFitBars(true);\n         mChart.animateY(2500);\n \n         // setting data\n@@ -212,6 +213,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n         tvY.setText(\"\" + (mSeekBarY.getProgress()));\n \n         setData(mSeekBarX.getProgress() + 1, mSeekBarY.getProgress());\n+        mChart.setFitBars(true);\n         mChart.invalidate();\n     }\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java\n@@ -152,73 +152,33 @@ protected void drawLabels(Canvas c, float pos, PointF anchor) {\n         }\n     }\n \n-//    /**\n-//     * draws the xPx-labels on the specified yPx-position\n-//     *\n-//     * @param pos\n-//     */\n-//    @Override\n-//    protected void drawLabels(Canvas c, float pos, PointF anchor) {\n-//\n-//        final float labelRotationAngleDegrees = mXAxis.getLabelRotationAngle();\n-//\n-//        // pre allocate to save performance (dont allocate in loop)\n-//        float[] position = new float[] {\n-//                0f, 0f\n-//        };\n-//\n-//        BarData bd = mChart.getData();\n-//        int step = bd.getDataSetCount();\n-//\n-//        for (int i = mMinX; i <= mMaxX; i += mXAxis.mAxisLabelModulus) {\n-//\n-//            position[1] = i * step + i * bd.getGroupSpace()\n-//                    + bd.getGroupSpace() / 2f;\n-//\n-//            // consider groups (center label for each group)\n-//            if (step > 1) {\n-//                position[1] += ((float) step - 1f) / 2f;\n-//            }\n-//\n-//            mTrans.pointValuesToPixel(position);\n-//\n-//            if (mViewPortHandler.isInBoundsY(position[1])) {\n-//\n-//                String label = mXAxis.getValues().get(i).getLabel();\n-//                drawLabel(c, label, i, pos, position[1], anchor, labelRotationAngleDegrees);\n-//            }\n-//        }\n-//    }\n-\n     @Override\n     public void renderGridLines(Canvas c) {\n \n         if (!mXAxis.isDrawGridLinesEnabled() || !mXAxis.isEnabled())\n             return;\n-\n-        float[] position = new float[] {\n-                0f, 0f\n-        };\n         \n         mGridPaint.setColor(mXAxis.getGridColor());\n         mGridPaint.setStrokeWidth(mXAxis.getGridLineWidth());\n \n-        BarData bd = mChart.getData();\n-        // take into consideration that multiple DataSets increase mDeltaX\n-        int step = bd.getDataSetCount();\n-\n-//        for (int i = mMinX; i <= mMaxX; i += mXAxis.mAxisLabelModulus) {\n-//\n-//            position[1] = i * step + i * bd.getGroupSpace() - 0.5f;\n-//\n-//            mTrans.pointValuesToPixel(position);\n-//\n-//            if (mViewPortHandler.isInBoundsY(position[1])) {\n-//\n-//                c.drawLine(mViewPortHandler.contentLeft(), position[1],\n-//                        mViewPortHandler.contentRight(), position[1], mGridPaint);\n-//            }\n-//        }\n+        float[] positions = new float[mXAxis.mEntryCount * 2];\n+\n+        for (int i = 0; i < positions.length; i += 2) {\n+            positions[i + 1] = mXAxis.mEntries[i / 2];\n+        }\n+\n+        mTrans.pointValuesToPixel(positions);\n+\n+        for (int i = 0; i < positions.length; i += 2) {\n+\n+            float y = positions[i + 1];\n+\n+            if (mViewPortHandler.isInBoundsY(y)) {\n+\n+                c.drawLine(mViewPortHandler.contentLeft(), y,\n+                        mViewPortHandler.contentRight(), y, mGridPaint);\n+            }\n+        }\n     }\n \n     @Override",
    "output": "Fix drawing of horizontal x-axis grid lines"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java\n@@ -15,6 +15,7 @@\n import com.github.mikephil.charting.components.AxisBase;\n import com.github.mikephil.charting.components.Legend;\n import com.github.mikephil.charting.components.Legend.LegendPosition;\n+import com.github.mikephil.charting.components.MarkerView;\n import com.github.mikephil.charting.components.XAxis;\n import com.github.mikephil.charting.components.YAxis;\n import com.github.mikephil.charting.data.Entry;\n@@ -25,6 +26,7 @@\n import com.github.mikephil.charting.interfaces.datasets.IRadarDataSet;\n import com.github.mikephil.charting.utils.ColorTemplate;\n import com.xxmassdeveloper.mpchartexample.custom.MyMarkerView;\n+import com.xxmassdeveloper.mpchartexample.custom.RadarMarkerView;\n import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n \n import java.util.ArrayList;\n@@ -41,7 +43,7 @@ protected void onCreate(Bundle savedInstanceState) {\n                 WindowManager.LayoutParams.FLAG_FULLSCREEN);\n         setContentView(R.layout.activity_radarchart_noseekbar);\n \n-        tf = Typeface.createFromAsset(getAssets(), \"OpenSans-Regular.ttf\");\n+        tf = Typeface.createFromAsset(getAssets(), \"OpenSans-Light.ttf\");\n \n         TextView tv = (TextView) findViewById(R.id.textView);\n         tv.setTypeface(tf);\n@@ -56,11 +58,12 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart.setWebLineWidth(1f);\n         mChart.setWebColor(Color.LTGRAY);\n         mChart.setWebLineWidthInner(1f);\n+        mChart.setWebColorInner(Color.LTGRAY);\n         mChart.setWebAlpha(100);\n \n         // create a custom MarkerView (extend MarkerView) and specify the layout\n         // to use for it\n-        MyMarkerView mv = new MyMarkerView(this, R.layout.custom_marker_view);\n+        MarkerView mv = new RadarMarkerView(this, R.layout.radar_markerview);\n \n         // set the marker to the chart\n         mChart.setMarkerView(mv);\n@@ -97,6 +100,7 @@ public int getDecimalDigits() {\n         yAxis.setLabelCount(5, false);\n         yAxis.setTextSize(9f);\n         yAxis.setAxisMinValue(0f);\n+        yAxis.setAxisMaxValue(80f);\n         yAxis.setDrawLabels(false);\n \n         Legend l = mChart.getLegend();\n@@ -234,13 +238,17 @@ public void setData() {\n         set1.setDrawFilled(true);\n         set1.setFillAlpha(180);\n         set1.setLineWidth(2f);\n+        set1.setDrawHighlightCircleEnabled(true);\n+        set1.setDrawHighlightIndicators(false);\n \n         RadarDataSet set2 = new RadarDataSet(yVals2, \"This Week\");\n         set2.setColor(Color.rgb(121, 162, 175));\n         set2.setFillColor(Color.rgb(121, 162, 175));\n         set2.setDrawFilled(true);\n         set2.setFillAlpha(180);\n         set2.setLineWidth(2f);\n+        set2.setDrawHighlightCircleEnabled(true);\n+        set2.setDrawHighlightIndicators(false);\n \n         ArrayList<IRadarDataSet> sets = new ArrayList<IRadarDataSet>();\n         sets.add(set1);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RadarMarkerView.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RadarMarkerView.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RadarMarkerView.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RadarMarkerView.java\n@@ -0,0 +1,52 @@\n+\n+package com.xxmassdeveloper.mpchartexample.custom;\n+\n+import android.content.Context;\n+import android.graphics.Typeface;\n+import android.widget.TextView;\n+\n+import com.github.mikephil.charting.components.MarkerView;\n+import com.github.mikephil.charting.data.CandleEntry;\n+import com.github.mikephil.charting.data.Entry;\n+import com.github.mikephil.charting.highlight.Highlight;\n+import com.github.mikephil.charting.utils.Utils;\n+import com.xxmassdeveloper.mpchartexample.R;\n+\n+import java.text.DecimalFormat;\n+\n+/**\n+ * Custom implementation of the MarkerView.\n+ * \n+ * @author Philipp Jahoda\n+ */\n+public class RadarMarkerView extends MarkerView {\n+\n+    private TextView tvContent;\n+    private DecimalFormat format = new DecimalFormat(\"##0\");\n+\n+    public RadarMarkerView(Context context, int layoutResource) {\n+        super(context, layoutResource);\n+\n+        tvContent = (TextView) findViewById(R.id.tvContent);\n+        tvContent.setTypeface(Typeface.createFromAsset(context.getAssets(), \"OpenSans-Light.ttf\"));\n+    }\n+\n+    // callbacks everytime the MarkerView is redrawn, can be used to update the\n+    // content (user-interface)\n+    @Override\n+    public void refreshContent(Entry e, Highlight highlight) {\n+        tvContent.setText(format.format(e.getY()) + \" %\");\n+    }\n+\n+    @Override\n+    public int getXOffset(float xpos) {\n+        // this will center the marker-view horizontally\n+        return -(getWidth() / 2);\n+    }\n+\n+    @Override\n+    public int getYOffset(float ypos) {\n+        // this will cause the marker-view to be above the selected yValue\n+        return -getHeight()-10;\n+    }\n+}",
    "output": "Brush up radarchart example"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java\n@@ -1,11 +1,13 @@\n \n package com.xxmassdeveloper.mpchartexample;\n \n+import android.graphics.Color;\n import android.graphics.Typeface;\n import android.os.Bundle;\n import android.view.Menu;\n import android.view.MenuItem;\n import android.view.WindowManager;\n+import android.widget.TextView;\n import android.widget.Toast;\n \n import com.github.mikephil.charting.animation.Easing;\n@@ -37,16 +39,23 @@ protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,\n                 WindowManager.LayoutParams.FLAG_FULLSCREEN);\n-        setContentView(R.layout.activity_radarchart);\n-\n-        mChart = (RadarChart) findViewById(R.id.chart1);\n+        setContentView(R.layout.activity_radarchart_noseekbar);\n \n         tf = Typeface.createFromAsset(getAssets(), \"OpenSans-Regular.ttf\");\n \n+        TextView tv = (TextView) findViewById(R.id.textView);\n+        tv.setTypeface(tf);\n+        tv.setTextColor(Color.WHITE);\n+        tv.setBackgroundColor(Color.rgb(60, 65, 82));\n+\n+        mChart = (RadarChart) findViewById(R.id.chart1);\n+        mChart.setBackgroundColor(Color.rgb(60, 65, 82));\n+\n         mChart.setDescription(\"\");\n \n-        mChart.setWebLineWidth(1.5f);\n-        mChart.setWebLineWidthInner(0.75f);\n+        mChart.setWebLineWidth(1f);\n+        mChart.setWebColor(Color.LTGRAY);\n+        mChart.setWebLineWidthInner(1f);\n         mChart.setWebAlpha(100);\n \n         // create a custom MarkerView (extend MarkerView) and specify the layout\n@@ -66,29 +75,36 @@ protected void onCreate(Bundle savedInstanceState) {\n         XAxis xAxis = mChart.getXAxis();\n         xAxis.setTypeface(tf);\n         xAxis.setTextSize(9f);\n+        xAxis.setYOffset(0f);\n+        xAxis.setXOffset(0f);\n         xAxis.setValueFormatter(new AxisValueFormatter() {\n+\n+            private String[] mActivities = new String[]{\"Burger\", \"Steak\", \"Salad\", \"Pasta\", \"Pizza\"};\n             @Override\n             public String getFormattedValue(float value, AxisBase axis) {\n-                return mMonths[(int) value % mMonths.length];\n+                return mActivities[(int) value % mActivities.length];\n             }\n \n             @Override\n             public int getDecimalDigits() {\n                 return 0;\n             }\n         });\n+        xAxis.setTextColor(Color.WHITE);\n \n         YAxis yAxis = mChart.getYAxis();\n         yAxis.setTypeface(tf);\n         yAxis.setLabelCount(5, false);\n         yAxis.setTextSize(9f);\n         yAxis.setAxisMinValue(0f);\n+        yAxis.setDrawLabels(false);\n \n         Legend l = mChart.getLegend();\n-        l.setPosition(LegendPosition.RIGHT_OF_CHART);\n+        l.setPosition(LegendPosition.ABOVE_CHART_CENTER);\n         l.setTypeface(tf);\n         l.setXEntrySpace(7f);\n         l.setYEntrySpace(5f);\n+        l.setTextColor(Color.WHITE);\n     }\n \n     @Override\n@@ -190,15 +206,11 @@ public boolean onOptionsItemSelected(MenuItem item) {\n         return true;\n     }\n \n-    private String[] mParties = new String[]{\n-            \"Party A\", \"Party B\", \"Party C\", \"Party D\", \"Party E\", \"Party F\", \"Party G\", \"Party H\",\n-            \"Party I\"\n-    };\n-\n     public void setData() {\n \n-        float mult = 150;\n-        int cnt = 9;\n+        float mult = 80;\n+        float min = 20;\n+        int cnt = 5;\n \n         ArrayList<Entry> yVals1 = new ArrayList<Entry>();\n         ArrayList<Entry> yVals2 = new ArrayList<Entry>();\n@@ -207,25 +219,27 @@ public void setData() {\n         // xIndex (even if from different DataSets), since no values can be\n         // drawn above each other.\n         for (int i = 0; i < cnt; i++) {\n-            float val = (float) (Math.random() * mult) + mult / 2;\n+            float val = (float) (Math.random() * mult) + min;\n             yVals1.add(new Entry(i, val));\n         }\n \n         for (int i = 0; i < cnt; i++) {\n-            float val = (float) (Math.random() * mult) + mult / 2;\n+            float val = (float) (Math.random() * mult) + min;\n             yVals2.add(new Entry(i, val));\n         }\n \n-        RadarDataSet set1 = new RadarDataSet(yVals1, \"Set 1\");\n-        set1.setColor(ColorTemplate.VORDIPLOM_COLORS[0]);\n-        set1.setFillColor(ColorTemplate.VORDIPLOM_COLORS[0]);\n+        RadarDataSet set1 = new RadarDataSet(yVals1, \"Last Week\");\n+        set1.setColor(Color.rgb(103, 110, 129));\n+        set1.setFillColor(Color.rgb(103, 110, 129));\n         set1.setDrawFilled(true);\n+        set1.setFillAlpha(180);\n         set1.setLineWidth(2f);\n \n-        RadarDataSet set2 = new RadarDataSet(yVals2, \"Set 2\");\n-        set2.setColor(ColorTemplate.VORDIPLOM_COLORS[4]);\n-        set2.setFillColor(ColorTemplate.VORDIPLOM_COLORS[4]);\n+        RadarDataSet set2 = new RadarDataSet(yVals2, \"This Week\");\n+        set2.setColor(Color.rgb(121, 162, 175));\n+        set2.setFillColor(Color.rgb(121, 162, 175));\n         set2.setDrawFilled(true);\n+        set2.setFillAlpha(180);\n         set2.setLineWidth(2f);\n \n         ArrayList<IRadarDataSet> sets = new ArrayList<IRadarDataSet>();\n@@ -236,6 +250,7 @@ public void setData() {\n         data.setValueTypeface(tf);\n         data.setValueTextSize(8f);\n         data.setDrawValues(false);\n+        data.setValueTextColor(Color.WHITE);\n \n         mChart.setData(data);\n         mChart.invalidate();\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java\n@@ -62,8 +62,8 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart.setOnChartValueSelectedListener(this);\n \n         mChart.setDrawGridBackground(false);\n-\n         mChart.setTouchEnabled(true);\n+        mChart.setMaxHighlightDistance(50f);\n \n         // enable scaling and dragging\n         mChart.setDragEnabled(true);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -217,7 +217,7 @@ public void calculateOffsets() {\n             XAxis x = this.getXAxis();\n \n             if (x.isEnabled() && x.isDrawLabelsEnabled()) {\n-                minOffset = Math.max(minOffset, x.mLabelRotatedWidth * 2f);\n+                minOffset = Math.max(minOffset, x.mLabelRotatedWidth);\n             }\n         }\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/RadarChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n@@ -228,7 +228,7 @@ protected void drawWeb(Canvas c) {\n         mWebPaint.setColor(mChart.getWebColorInner());\n         mWebPaint.setAlpha(mChart.getWebAlpha());\n \n-        int labelCount = mChart.getYAxis().mEntries.length;\n+        int labelCount = mChart.getYAxis().mEntryCount;\n \n         for (int j = 0; j < labelCount; j++) {\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRendererRadarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRendererRadarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRendererRadarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRendererRadarChart.java\n@@ -47,7 +47,7 @@ public void renderAxisLabels(Canvas c) {\n             float angle = (sliceangle * i + mChart.getRotationAngle()) % 360f;\n \n             PointF p = Utils.getPosition(center, mChart.getYRange() * factor\n-                    + mXAxis.mLabelRotatedWidth, angle);\n+                    + mXAxis.mLabelRotatedWidth / 2f, angle);\n \n             drawLabel(c, label, p.x, p.y - mXAxis.mLabelRotatedHeight / 2.f,\n                     drawLabelAnchor, labelRotationAngleDegrees);",
    "output": "Work on radarchart"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -234,7 +234,7 @@ public void onStopTrackingTouch(SeekBar seekBar) {\n \n     private void setData(int count, float range) {\n \n-        float start = 0f;\n+        float start = 1f;\n \n         mChart.getXAxis().setAxisMinValue(start);\n         mChart.getXAxis().setAxisMaxValue(start + count + 2);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java\n@@ -699,48 +699,39 @@ protected void drawMarkers(Canvas canvas) {\n         for (int i = 0; i < mIndicesToHighlight.length; i++) {\n \n             Highlight highlight = mIndicesToHighlight[i];\n-            float xVal = highlight.getX();\n-            int dataSetIndex = highlight.getDataSetIndex();\n \n-            float deltaX = mXAxis != null\n-                    ? mXAxis.mAxisRange\n-                    : 1f;\n+            Entry e = mData.getEntryForHighlight(mIndicesToHighlight[i]);\n \n-            if (xVal <= deltaX && xVal <= deltaX * mAnimator.getPhaseX()) {\n+            // make sure entry not null\n+            if (e == null || e.getX() != mIndicesToHighlight[i].getX())\n+                continue;\n \n-                Entry e = mData.getEntryForHighlight(mIndicesToHighlight[i]);\n+            float[] pos = getMarkerPosition(e, highlight);\n \n-                // make sure entry not null\n-                if (e == null || e.getX() != mIndicesToHighlight[i].getX())\n-                    continue;\n+            // check bounds\n+            if (!mViewPortHandler.isInBounds(pos[0], pos[1]))\n+                continue;\n \n-                float[] pos = getMarkerPosition(e, highlight);\n+            // callbacks to update the content\n+            mMarkerView.refreshContent(e, highlight);\n \n-                // check bounds\n-                if (!mViewPortHandler.isInBounds(pos[0], pos[1]))\n-                    continue;\n+            // mMarkerView.measure(MeasureSpec.makeMeasureSpec(0,\n+            // MeasureSpec.UNSPECIFIED),\n+            // MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED));\n+            // mMarkerView.layout(0, 0, mMarkerView.getMeasuredWidth(),\n+            // mMarkerView.getMeasuredHeight());\n+            // mMarkerView.draw(mDrawCanvas, pos[0], pos[1]);\n \n-                // callbacks to update the content\n-                mMarkerView.refreshContent(e, highlight);\n+            mMarkerView.measure(MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED),\n+                    MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED));\n+            mMarkerView.layout(0, 0, mMarkerView.getMeasuredWidth(),\n+                    mMarkerView.getMeasuredHeight());\n \n-                // mMarkerView.measure(MeasureSpec.makeMeasureSpec(0,\n-                // MeasureSpec.UNSPECIFIED),\n-                // MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED));\n-                // mMarkerView.layout(0, 0, mMarkerView.getMeasuredWidth(),\n-                // mMarkerView.getMeasuredHeight());\n-                // mMarkerView.draw(mDrawCanvas, pos[0], pos[1]);\n-\n-                mMarkerView.measure(MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED),\n-                        MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED));\n-                mMarkerView.layout(0, 0, mMarkerView.getMeasuredWidth(),\n-                        mMarkerView.getMeasuredHeight());\n-\n-                if (pos[1] - mMarkerView.getHeight() <= 0) {\n-                    float y = mMarkerView.getHeight() - pos[1];\n-                    mMarkerView.draw(canvas, pos[0], pos[1] + y);\n-                } else {\n-                    mMarkerView.draw(canvas, pos[0], pos[1]);\n-                }\n+            if (pos[1] - mMarkerView.getHeight() <= 0) {\n+                float y = mMarkerView.getHeight() - pos[1];\n+                mMarkerView.draw(canvas, pos[0], pos[1] + y);\n+            } else {\n+                mMarkerView.draw(canvas, pos[0], pos[1]);\n             }\n         }\n     }",
    "output": "Fixes regarding drawing of markerview"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java\n@@ -108,7 +108,7 @@ protected List<SelectionDetail> getSelectionDetailsAtIndex(float xVal) {\n         return vals;\n     }\n \n-    private SelectionDetail getDetails(IDataSet set, int dataSetIndex, float xVal, DataSet.Rounding rounding) {\n+    protected SelectionDetail getDetails(IDataSet set, int dataSetIndex, float xVal, DataSet.Rounding rounding) {\n \n         final Entry e = set.getEntryForXPos(xVal, rounding);\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java\n@@ -2,6 +2,7 @@\n \n import com.github.mikephil.charting.data.ChartData;\n import com.github.mikephil.charting.data.CombinedData;\n+import com.github.mikephil.charting.data.DataSet;\n import com.github.mikephil.charting.interfaces.datasets.IDataSet;\n import com.github.mikephil.charting.interfaces.dataprovider.BarLineScatterCandleBubbleDataProvider;\n import com.github.mikephil.charting.utils.SelectionDetail;\n@@ -19,7 +20,7 @@ public CombinedHighlighter(BarLineScatterCandleBubbleDataProvider chart) {\n     }\n \n     /**\n-     * Returns a list of SelectionDetail object corresponding to the given xIndex.\n+     * Returns a list of SelectionDetail object corresponding to the given xValue.\n      *\n      * @param xVal\n      * @return\n@@ -28,7 +29,6 @@ public CombinedHighlighter(BarLineScatterCandleBubbleDataProvider chart) {\n     protected List<SelectionDetail> getSelectionDetailsAtIndex(float xVal) {\n \n         List<SelectionDetail> vals = new ArrayList<SelectionDetail>();\n-        float[] pts = new float[2];\n \n         CombinedData data = (CombinedData) mChart.getData();\n \n@@ -37,25 +37,21 @@ protected List<SelectionDetail> getSelectionDetailsAtIndex(float xVal) {\n \n         for (int i = 0; i < dataObjects.size(); i++) {\n \n-            for(int j = 0; j < dataObjects.get(i).getDataSetCount(); j++) {\n+            for (int j = 0, dataSetCount = dataObjects.get(i).getDataSetCount(); j < dataSetCount; j++) {\n \n                 IDataSet dataSet = dataObjects.get(i).getDataSetByIndex(j);\n \n-                // dont include datasets that cannot be highlighted\n+                // don't include datasets that cannot be highlighted\n                 if (!dataSet.isHighlightEnabled())\n                     continue;\n \n-                // extract all yPx-values from all DataSets at the given xPx-index\n-                final float yVals[] = dataSet.getYValuesForXPos(xVal);\n-                for (float yVal : yVals) {\n-                    pts[1] = yVal;\n+                SelectionDetail s1 = getDetails(dataSet, j, xVal, DataSet.Rounding.UP);\n+                s1.dataIndex = i;\n+                vals.add(s1);\n \n-                    mChart.getTransformer(dataSet.getAxisDependency()).pointValuesToPixel(pts);\n-\n-                    if (!Float.isNaN(pts[1])) {\n-                        vals.add(new SelectionDetail(0f, pts[1], yVal, i, j, dataSet));\n-                    }\n-                }\n+                SelectionDetail s2 = getDetails(dataSet, j, xVal, DataSet.Rounding.DOWN);\n+                s2.dataIndex = i;\n+                vals.add(s2);\n             }\n         }\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlight.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlight.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlight.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlight.java\n@@ -148,7 +148,7 @@ public boolean equalTo(Highlight h) {\n             return false;\n         else {\n             if (this.mDataSetIndex == h.mDataSetIndex && this.mX == h.mX\n-                    && this.mStackIndex == h.mStackIndex)\n+                    && this.mStackIndex == h.mStackIndex && this.mDataIndex == h.mDataIndex)\n                 return true;\n             else\n                 return false;\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CombinedChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CombinedChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CombinedChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CombinedChartRenderer.java\n@@ -10,6 +10,7 @@\n import com.github.mikephil.charting.data.CombinedData;\n import com.github.mikephil.charting.highlight.Highlight;\n import com.github.mikephil.charting.interfaces.dataprovider.BarLineScatterCandleBubbleDataProvider;\n+import com.github.mikephil.charting.interfaces.datasets.IDataSet;\n import com.github.mikephil.charting.utils.ViewPortHandler;\n \n import java.lang.ref.WeakReference;",
    "output": "Work on combined highlighting"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java\n@@ -68,7 +68,6 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         YAxis left = mChart.getAxisLeft();\n         left.setDrawLabels(false);\n-        left.setStartAtZero(false);\n         left.setSpaceTop(25f);\n         left.setSpaceBottom(25f);\n         left.setDrawAxisLine(false);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/RadarChart.java\n@@ -179,8 +179,7 @@ protected void onDraw(Canvas canvas) {\n      */\n     public float getFactor() {\n         RectF content = mViewPortHandler.getContentRect();\n-        return (float) Math.min(content.width() / 2f, content.height() / 2f)\n-                / mYAxis.mAxisRange;\n+        return Math.min(content.width() / 2f, content.height() / 2f) / mYAxis.mAxisRange;\n     }\n \n     /**\n@@ -189,7 +188,7 @@ public float getFactor() {\n      * @return\n      */\n     public float getSliceAngle() {\n-        return 360f / (float) mData.getEntryCount();\n+        return 360f / (float) mData.getMaxEntryCountSet().getEntryCount();\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/RadarChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n@@ -59,13 +59,7 @@ public void drawData(Canvas c) {\n \n         RadarData radarData = mChart.getData();\n \n-        int mostEntries = 0;\n-\n-        for (IRadarDataSet set : radarData.getDataSets()) {\n-            if (set.getEntryCount() > mostEntries) {\n-                mostEntries = set.getEntryCount();\n-            }\n-        }\n+        int mostEntries = radarData.getMaxEntryCountSet().getEntryCount();\n \n         for (IRadarDataSet set : radarData.getDataSets()) {\n \n@@ -217,8 +211,9 @@ protected void drawWeb(Canvas c) {\n         mWebPaint.setAlpha(mChart.getWebAlpha());\n \n         final int xIncrements = 1 + mChart.getSkipWebLineCount();\n+        int maxEntryCount = mChart.getData().getMaxEntryCountSet().getEntryCount();\n \n-        for (int i = 0; i < mChart.getData().getEntryCount(); i += xIncrements) {\n+        for (int i = 0; i < maxEntryCount; i += xIncrements) {\n \n             PointF p = Utils.getPosition(\n                     center,",
    "output": "Work on radarchart rendering"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java\n@@ -7,13 +7,15 @@\n import android.view.WindowManager;\n \n import com.github.mikephil.charting.charts.BarChart;\n+import com.github.mikephil.charting.components.AxisBase;\n import com.github.mikephil.charting.components.XAxis;\n import com.github.mikephil.charting.components.XAxis.XAxisPosition;\n import com.github.mikephil.charting.components.YAxis;\n import com.github.mikephil.charting.data.BarData;\n import com.github.mikephil.charting.data.BarDataSet;\n import com.github.mikephil.charting.data.BarEntry;\n import com.github.mikephil.charting.data.Entry;\n+import com.github.mikephil.charting.formatter.AxisValueFormatter;\n import com.github.mikephil.charting.utils.ViewPortHandler;\n import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n \n@@ -58,6 +60,11 @@ protected void onCreate(Bundle savedInstanceState) {\n         xAxis.setDrawAxisLine(false);\n         xAxis.setTextColor(Color.LTGRAY);\n         xAxis.setTextSize(13f);\n+        xAxis.setAxisMinValue(0f);\n+        xAxis.setAxisMaxValue(5f);\n+        xAxis.setLabelCount(5);\n+        xAxis.setCenterAxisLabels(true);\n+        xAxis.setGranularity(1f);\n \n         YAxis left = mChart.getAxisLeft();\n         left.setDrawLabels(false);\n@@ -73,12 +80,24 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart.getLegend().setEnabled(false);\n \n         // THIS IS THE ORIGINAL DATA YOU WANT TO PLOT\n-        List<Data> data = new ArrayList<>();\n-        data.add(new Data(0, -224.1f, \"12-29\"));\n-        data.add(new Data(1, 238.5f, \"12-30\"));\n-        data.add(new Data(2, 1280.1f, \"12-31\"));\n-        data.add(new Data(3, -442.3f, \"01-01\"));\n-        data.add(new Data(4, -2280.1f, \"01-02\"));\n+        final List<Data> data = new ArrayList<>();\n+        data.add(new Data(0.5f, -224.1f, \"12-29\"));\n+        data.add(new Data(1.5f, 238.5f, \"12-30\"));\n+        data.add(new Data(2.5f, 1280.1f, \"12-31\"));\n+        data.add(new Data(3.5f, -442.3f, \"01-01\"));\n+        data.add(new Data(4.5f, -2280.1f, \"01-02\"));\n+\n+        xAxis.setValueFormatter(new AxisValueFormatter() {\n+            @Override\n+            public String getFormattedValue(float value, AxisBase axis) {\n+                return data.get(Math.min(Math.max((int) value, 0), data.size()-1)).xAxisValue;\n+            }\n+\n+            @Override\n+            public int getDecimalDigits() {\n+                return 0;\n+            }\n+        });\n \n         setData(data);\n     }\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -236,7 +236,7 @@ public void drawValues(Canvas c) {\n                         float val = entry.getY();\n \n                         drawValue(c, dataSet.getValueFormatter(), val, entry, i, x,\n-                                buffer.buffer[j + 1] + (val >= 0 ? posOffset : negOffset), dataSet.getValueTextColor\n+                                val >= 0 ? (buffer.buffer[j + 1] +  posOffset) : (buffer.buffer[j + 3] + negOffset), dataSet.getValueTextColor\n                                         (j / 4));\n                     }\n \n@@ -327,7 +327,6 @@ public void drawValues(Canvas c) {\n     public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n         BarData barData = mChart.getBarData();\n-        int setCount = barData.getDataSetCount();\n \n         for (Highlight high : indices) {\n ",
    "output": "Fix issue related to barchart value labels"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java\n@@ -36,7 +36,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart.setOnChartValueSelectedListener(this);\n         mChart.setDrawGridBackground(false);\n         mChart.setDescription(\"\");\n-        \n+\n         // add an empty data object\n         mChart.setData(new LineData());\n //        mChart.getXAxis().setDrawLabels(false);\n@@ -50,42 +50,39 @@ protected void onCreate(Bundle savedInstanceState) {\n     private void addEntry() {\n \n         LineData data = mChart.getData();\n-        \n-        if(data != null) {\n \n-            ILineDataSet set = data.getDataSetByIndex(0);\n-            // set.addEntry(...); // can be called as well\n+        ILineDataSet set = data.getDataSetByIndex(0);\n+        // set.addEntry(...); // can be called as well\n \n-            if (set == null) {\n-                set = createSet();\n-                data.addDataSet(set);\n-            }\n+        if (set == null) {\n+            set = createSet();\n+            data.addDataSet(set);\n+        }\n \n-            // add a new xPx-yValue first\n-            //data.addXValue(new XAxisValue(set.getEntryCount(), set.getEntryCount() + \"\"));\n-            \n-            // choose a random dataSet\n-            int randomDataSetIndex = (int) (Math.random() * data.getDataSetCount());\n-            \n-            data.addEntry(new Entry((float) (Math.random() * 10) + 50f, set.getEntryCount()), randomDataSetIndex);\n+        // choose a random dataSet\n+        int randomDataSetIndex = (int) (Math.random() * data.getDataSetCount());\n+        float yValue = (float) (Math.random() * 10) + 50f;\n \n-            // let the chart know it's data has changed\n-            mChart.notifyDataSetChanged();\n-            \n-            mChart.setVisibleXRangeMaximum(6);\n-            mChart.setVisibleYRangeMaximum(15, AxisDependency.LEFT);\n+        data.addEntry(new Entry(data.getDataSetByIndex(randomDataSetIndex).getEntryCount(), yValue), randomDataSetIndex);\n+        data.notifyDataChanged();\n+\n+        // let the chart know it's data has changed\n+        mChart.notifyDataSetChanged();\n+\n+        mChart.setVisibleXRangeMaximum(6);\n+        //mChart.setVisibleYRangeMaximum(15, AxisDependency.LEFT);\n //            \n //            // this automatically refreshes the chart (calls invalidate())\n-            mChart.moveViewTo(data.getEntryCount()-7, 50f, AxisDependency.LEFT);\n-        }\n+        mChart.moveViewTo(data.getEntryCount() - 7, 50f, AxisDependency.LEFT);\n+\n     }\n \n     private void removeLastEntry() {\n \n         LineData data = mChart.getData();\n-        \n-        if(data != null) {\n-         \n+\n+        if (data != null) {\n+\n             ILineDataSet set = data.getDataSetByIndex(0);\n \n             if (set != null) {\n@@ -95,7 +92,7 @@ private void removeLastEntry() {\n                 data.removeEntry(e, 0);\n                 // or remove by index\n                 // mData.removeEntry(xIndex, dataSetIndex);\n-\n+                data.notifyDataChanged();\n                 mChart.notifyDataSetChanged();\n                 mChart.invalidate();\n             }\n@@ -105,23 +102,15 @@ private void removeLastEntry() {\n     private void addDataSet() {\n \n         LineData data = mChart.getData();\n-        \n-        if(data != null) {\n+\n+        if (data != null) {\n \n             int count = (data.getDataSetCount() + 1);\n \n-            // create 10 yPx-vals\n             ArrayList<Entry> yVals = new ArrayList<Entry>();\n-            \n-            if(data.getEntryCount() == 0) {\n-                // add 10 xPx-entries\n-                for (int i = 0; i < 10; i++) {\n-                    //data.addXValue(new XAxisValue(i, i + \"\"));\n-                }\n-            }\n \n             for (int i = 0; i < data.getEntryCount(); i++) {\n-                yVals.add(new Entry((float) (Math.random() * 50f) + 50f * count, i));\n+                yVals.add(new Entry(i, (float) (Math.random() * 50f) + 50f * count));\n             }\n \n             LineDataSet set = new LineDataSet(yVals, \"DataSet \" + count);\n@@ -137,21 +126,22 @@ private void addDataSet() {\n             set.setValueTextColor(color);\n \n             data.addDataSet(set);\n+            data.notifyDataChanged();\n             mChart.notifyDataSetChanged();\n-            mChart.invalidate();   \n+            mChart.invalidate();\n         }\n     }\n \n     private void removeDataSet() {\n \n         LineData data = mChart.getData();\n-        \n-        if(data != null) {\n+\n+        if (data != null) {\n \n             data.removeDataSet(data.getDataSetByIndex(data.getDataSetCount() - 1));\n \n             mChart.notifyDataSetChanged();\n-            mChart.invalidate();   \n+            mChart.invalidate();\n         }\n     }\n \n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java\n@@ -104,7 +104,7 @@ private LineData getData(int count, float range) {\n \n         for (int i = 0; i < count; i++) {\n             float val = (float) (Math.random() * range) + 3;\n-            yVals.add(new Entry(val, i));\n+            yVals.add(new Entry(i, val));\n         }\n \n         // create a dataset and give it a type\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java\n@@ -121,8 +121,6 @@ public boolean onOptionsItemSelected(MenuItem item) {\n         return true;\n     }\n \n-    private int year = 2015;\n-\n     private void addEntry() {\n \n         LineData data = mChart.getData();\n@@ -137,11 +135,8 @@ private void addEntry() {\n                 data.addDataSet(set);\n             }\n \n-            // add a new xPx-yValue first\n-//            data.addXValue(new XAxisValue(data.getXValCount() ,mMonths[data.getXValCount() % 12] + \" \"\n-//                    + (year + data.getXValCount() / 12)));\n-            data.addEntry(new Entry((float) (Math.random() * 40) + 30f, set.getEntryCount()), 0);\n-\n+            data.addEntry(new Entry(set.getEntryCount(), (float) (Math.random() * 40) + 30f), 0);\n+            data.notifyDataChanged();\n \n             // let the chart know it's data has changed\n             mChart.notifyDataSetChanged();\n@@ -176,13 +171,18 @@ private LineDataSet createSet() {\n         return set;\n     }\n \n+    private Thread thread;\n+\n     private void feedMultiple() {\n \n-        new Thread(new Runnable() {\n+        if(thread != null)\n+            thread.interrupt();\n+\n+       thread = new Thread(new Runnable() {\n \n             @Override\n             public void run() {\n-                for(int i = 0; i < 500; i++) {\n+                for(int i = 0; i < 1000; i++) {\n \n                     runOnUiThread(new Runnable() {\n \n@@ -193,14 +193,16 @@ public void run() {\n                     });\n \n                     try {\n-                        Thread.sleep(35);\n+                        Thread.sleep(25);\n                     } catch (InterruptedException e) {\n                         // TODO Auto-generated catch block\n                         e.printStackTrace();\n                     }\n                 }\n             }\n-        }).start();\n+        });\n+\n+        thread.start();\n     }\n \n     @Override\n@@ -212,4 +214,13 @@ public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {\n     public void onNothingSelected() {\n         Log.i(\"Nothing selected\", \"Nothing selected.\");\n     }\n+\n+    @Override\n+    protected void onPause() {\n+        super.onPause();\n+\n+        if(thread != null) {\n+            thread.interrupt();\n+        }\n+    }\n }",
    "output": "Work on dynamic adding examples"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n@@ -7,6 +7,8 @@\n import com.github.mikephil.charting.animation.ChartAnimator;\n import com.github.mikephil.charting.data.CandleData;\n import com.github.mikephil.charting.data.CandleEntry;\n+import com.github.mikephil.charting.data.DataSet;\n+import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.highlight.Highlight;\n import com.github.mikephil.charting.interfaces.dataprovider.CandleDataProvider;\n import com.github.mikephil.charting.interfaces.datasets.ICandleDataSet;\n@@ -54,15 +56,24 @@ public void drawData(Canvas c) {\n     @SuppressWarnings(\"ResourceAsColor\")\n     protected void drawDataSet(Canvas c, ICandleDataSet dataSet) {\n \n+        int entryCount = dataSet.getEntryCount();\n+\n         Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n \n         float phaseX = Math.max(0.f, Math.min(1.f, mAnimator.getPhaseX()));\n         float phaseY = mAnimator.getPhaseY();\n         float barSpace = dataSet.getBarSpace();\n         boolean showCandleBar = dataSet.getShowCandleBar();\n \n-        int minx = Math.max((int) mChart.getLowestVisibleX(), 0);\n-        int maxx = Math.min((int) mChart.getHighestVisibleX(), dataSet.getEntryCount());\n+        float lowX = mChart.getLowestVisibleX();\n+        float highX = mChart.getHighestVisibleX();\n+\n+        CandleEntry entryFrom = dataSet.getEntryForXPos(lowX, DataSet.Rounding.DOWN);\n+        CandleEntry entryTo = dataSet.getEntryForXPos(highX, DataSet.Rounding.UP);\n+\n+        int diff = (entryFrom == entryTo) ? 1 : 0;\n+        int minx = Math.max(dataSet.getEntryIndex(entryFrom) - diff, 0);\n+        int maxx = Math.min(Math.max(minx + 2, dataSet.getEntryIndex(entryTo) + 1), entryCount);\n \n         mRenderPaint.setStrokeWidth(dataSet.getShadowWidth());\n ",
    "output": "Work on candlestick chart rendering"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -36,6 +36,7 @@\n import com.github.mikephil.charting.listener.OnChartValueSelectedListener;\n import com.github.mikephil.charting.utils.ColorTemplate;\n import com.github.mikephil.charting.utils.ViewPortHandler;\n+import com.xxmassdeveloper.mpchartexample.custom.DayAxisValueFormatter;\n import com.xxmassdeveloper.mpchartexample.custom.MyAxisValueFormatter;\n import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n \n@@ -89,7 +90,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         xAxis.setDrawGridLines(false);\n         xAxis.setGranularity(1f); // only intervals of 1 day\n         xAxis.setLabelCount(7);\n-        xAxis.setValueFormatter(new DayAxisFormatter());\n+        xAxis.setValueFormatter(new DayAxisValueFormatter(mChart));\n \n         AxisValueFormatter custom = new MyAxisValueFormatter();\n \n@@ -214,35 +215,33 @@ public boolean onOptionsItemSelected(MenuItem item) {\n     @Override\n     public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n \n-        tvX.setText(\"\" + (mSeekBarX.getProgress() + 1));\n+        tvX.setText(\"\" + (mSeekBarX.getProgress() + 2));\n         tvY.setText(\"\" + (mSeekBarY.getProgress()));\n \n-        setData(mSeekBarX.getProgress() + 1, mSeekBarY.getProgress());\n+        setData(mSeekBarX.getProgress() + 1 , mSeekBarY.getProgress());\n         mChart.invalidate();\n     }\n \n     @Override\n     public void onStartTrackingTouch(SeekBar seekBar) {\n         // TODO Auto-generated method stub\n-\n     }\n \n     @Override\n     public void onStopTrackingTouch(SeekBar seekBar) {\n         // TODO Auto-generated method stub\n-\n     }\n \n     private void setData(int count, float range) {\n \n         float start = 0f;\n \n         mChart.getXAxis().setAxisMinValue(start);\n-        mChart.getXAxis().setAxisMaxValue(start + count);\n+        mChart.getXAxis().setAxisMaxValue(start + count + 2);\n \n         ArrayList<BarEntry> yVals1 = new ArrayList<BarEntry>();\n \n-        for (int i = (int) start; i < start + count; i++) {\n+        for (int i = (int) start; i < start + count + 1; i++) {\n             float mult = (range + 1);\n             float val = (float) (Math.random() * mult);\n             yVals1.add(new BarEntry(i + 1f, val));\n@@ -290,101 +289,6 @@ public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {\n                         + mChart.getHighestVisibleX());\n     }\n \n-    public void onNothingSelected() {\n-    }\n-\n-    private class DayAxisFormatter implements AxisValueFormatter {\n-\n-        protected String[] mMonths = new String[]{\n-                \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dec\"\n-        };\n-\n-        @Override\n-        public String getFormattedValue(float value, AxisBase axis) {\n-\n-            int dayOfYear = (int) value;\n-\n-            int month = determineMonth(dayOfYear);\n-            String monthName = mMonths[month % mMonths.length];\n-\n-            if (mChart.getVisibleXRange() > 30 * axis.getLabelCount()) {\n-\n-                return monthName;\n-            } else {\n-\n-                int dayOfMonth = determineDayOfMonth(dayOfYear, month);\n-\n-                String appendix = \"th\";\n-\n-                switch (dayOfMonth) {\n-                    case 1:\n-                        appendix = \"st\";\n-                        break;\n-                    case 2:\n-                        appendix = \"nd\";\n-                        break;\n-                    case 3:\n-                        appendix = \"rd\";\n-                        break;\n-                    case 21:\n-                        appendix = \"st\";\n-                        break;\n-                    case 22:\n-                        appendix = \"nd\";\n-                        break;\n-                    case 23:\n-                        appendix = \"rd\";\n-                        break;\n-                    case 31:\n-                        appendix = \"st\";\n-                        break;\n-                }\n-\n-                return dayOfMonth + appendix + \" \" + monthName;\n-            }\n-        }\n-\n-        private int getDaysForMonth(int month) {\n-\n-            if (month == 1) {\n-                return 28;\n-            }\n-\n-            if (month == 3 || month == 5 || month == 8 || month == 10)\n-                return 30;\n-            else\n-                return 31;\n-        }\n-\n-        private int determineMonth(int dayOfYear) {\n-\n-            int month = -1;\n-            int days = 0;\n-\n-            while (days < dayOfYear) {\n-                month++;\n-                days += getDaysForMonth(month);\n-            }\n-\n-            return Math.max(month, 0);\n-        }\n-\n-        private int determineDayOfMonth(int dayOfYear, int month) {\n-\n-            int count = 0;\n-            int days = 0;\n-\n-            while (count < month) {\n-                days += getDaysForMonth(count);\n-                count++;\n-            }\n-\n-            return dayOfYear - days;\n-        }\n-\n-        @Override\n-        public int getDecimalDigits() {\n-            return 0;\n-        }\n-    }\n+    @Override\n+    public void onNothingSelected() { }\n }\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java\n@@ -0,0 +1,147 @@\n+package com.xxmassdeveloper.mpchartexample.custom;\n+\n+import com.github.mikephil.charting.charts.BarLineChartBase;\n+import com.github.mikephil.charting.charts.Chart;\n+import com.github.mikephil.charting.components.AxisBase;\n+import com.github.mikephil.charting.formatter.AxisValueFormatter;\n+import com.github.mikephil.charting.formatter.DefaultAxisValueFormatter;\n+\n+/**\n+ * Created by philipp on 02/06/16.\n+ */\n+public class DayAxisValueFormatter implements AxisValueFormatter {\n+\n+    protected String[] mMonths = new String[]{\n+            \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dec\"\n+    };\n+\n+    private BarLineChartBase<?> chart;\n+\n+    public DayAxisValueFormatter(BarLineChartBase<?> chart) {\n+        this.chart = chart;\n+    }\n+\n+    @Override\n+    public String getFormattedValue(float value, AxisBase axis) {\n+\n+        int days = (int) value;\n+\n+        if (days == 0)\n+            return \"\";\n+\n+        int year = determineYear(days);\n+\n+        int month = determineMonth(days);\n+        String monthName = mMonths[month % mMonths.length];\n+        String yearName = String.valueOf(year);\n+\n+        if (year == 2017) {\n+            System.out.println(\"\");\n+        }\n+\n+        if (chart.getVisibleXRange() > 30 * axis.getLabelCount()) {\n+\n+            return monthName + \" \" + yearName;\n+        } else {\n+\n+            int dayOfMonth = determineDayOfMonth(days, month + 12 * (year - 2016));\n+\n+            String appendix = \"th\";\n+\n+            switch (dayOfMonth) {\n+                case 1:\n+                    appendix = \"st\";\n+                    break;\n+                case 2:\n+                    appendix = \"nd\";\n+                    break;\n+                case 3:\n+                    appendix = \"rd\";\n+                    break;\n+                case 21:\n+                    appendix = \"st\";\n+                    break;\n+                case 22:\n+                    appendix = \"nd\";\n+                    break;\n+                case 23:\n+                    appendix = \"rd\";\n+                    break;\n+                case 31:\n+                    appendix = \"st\";\n+                    break;\n+            }\n+\n+            return dayOfMonth + appendix + \" \" + monthName;\n+        }\n+    }\n+\n+    private int getDaysForMonth(int month, int year) {\n+\n+        if (month == 1) {\n+\n+            if (year == 2016 || year == 2020)\n+                return 29;\n+            else\n+                return 28;\n+        }\n+\n+        if (month == 3 || month == 5 || month == 8 || month == 10)\n+            return 30;\n+        else\n+            return 31;\n+    }\n+\n+    private int determineMonth(int dayOfYear) {\n+\n+        int month = -1;\n+        int days = 0;\n+\n+        while (days < dayOfYear) {\n+            month = month + 1;\n+\n+            if (month >= 12)\n+                month = 0;\n+\n+            int year = determineYear(days);\n+            days += getDaysForMonth(month, year);\n+        }\n+\n+        return Math.max(month, 0);\n+    }\n+\n+    private int determineDayOfMonth(int dayOfYear, int month) {\n+\n+        int count = 0;\n+        int days = 0;\n+\n+        while (count < month) {\n+\n+            int year = determineYear(days);\n+            days += getDaysForMonth(count % 12, year);\n+            count++;\n+        }\n+\n+        return dayOfYear - days;\n+    }\n+\n+    private int determineYear(int days) {\n+\n+        if (days <= 366)\n+            return 2016;\n+        else if (days <= 730)\n+            return 2017;\n+        else if (days <= 1094)\n+            return 2018;\n+        else if (days <= 1458)\n+            return 2019;\n+        else\n+            return 2020;\n+\n+    }\n+\n+    @Override\n+    public int getDecimalDigits() {\n+        return 0;\n+    }\n+}",
    "output": "Write example of day axis formatter"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -35,6 +35,7 @@\n import com.github.mikephil.charting.interfaces.datasets.IDataSet;\n import com.github.mikephil.charting.listener.OnChartValueSelectedListener;\n import com.github.mikephil.charting.utils.ColorTemplate;\n+import com.github.mikephil.charting.utils.ViewPortHandler;\n import com.xxmassdeveloper.mpchartexample.custom.MyAxisValueFormatter;\n import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n \n@@ -87,6 +88,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         xAxis.setTypeface(mTf);\n         xAxis.setDrawGridLines(false);\n         xAxis.setGranularity(1f); // only intervals of 1 day\n+        xAxis.setLabelCount(7);\n         xAxis.setValueFormatter(new DayAxisFormatter());\n \n         AxisValueFormatter custom = new MyAxisValueFormatter();\n@@ -233,7 +235,7 @@ public void onStopTrackingTouch(SeekBar seekBar) {\n \n     private void setData(int count, float range) {\n \n-        float start = 0.5f;\n+        float start = 0f;\n \n         mChart.getXAxis().setAxisMinValue(start);\n         mChart.getXAxis().setAxisMaxValue(start + count);\n@@ -299,39 +301,47 @@ private class DayAxisFormatter implements AxisValueFormatter {\n \n         @Override\n         public String getFormattedValue(float value, AxisBase axis) {\n-            \n+\n             int dayOfYear = (int) value;\n \n             int month = determineMonth(dayOfYear);\n-            int dayOfMonth = determineDayOfMonth(dayOfYear, month);\n-\n-            String appendix = \"th\";\n-\n-            switch (dayOfMonth) {\n-                case 1:\n-                    appendix = \"st\";\n-                    break;\n-                case 2:\n-                    appendix = \"nd\";\n-                    break;\n-                case 3:\n-                    appendix = \"rd\";\n-                    break;\n-                case 21:\n-                    appendix = \"st\";\n-                    break;\n-                case 22:\n-                    appendix = \"nd\";\n-                    break;\n-                case 23:\n-                    appendix = \"rd\";\n-                    break;\n-                case 31:\n-                    appendix = \"st\";\n-                    break;\n-            }\n+            String monthName = mMonths[month % mMonths.length];\n+\n+            if (mChart.getVisibleXRange() > 30 * axis.getLabelCount()) {\n+\n+                return monthName;\n+            } else {\n+\n+                int dayOfMonth = determineDayOfMonth(dayOfYear, month);\n+\n+                String appendix = \"th\";\n+\n+                switch (dayOfMonth) {\n+                    case 1:\n+                        appendix = \"st\";\n+                        break;\n+                    case 2:\n+                        appendix = \"nd\";\n+                        break;\n+                    case 3:\n+                        appendix = \"rd\";\n+                        break;\n+                    case 21:\n+                        appendix = \"st\";\n+                        break;\n+                    case 22:\n+                        appendix = \"nd\";\n+                        break;\n+                    case 23:\n+                        appendix = \"rd\";\n+                        break;\n+                    case 31:\n+                        appendix = \"st\";\n+                        break;\n+                }\n \n-            return dayOfMonth + appendix + \" \" + mMonths[month % mMonths.length];\n+                return dayOfMonth + appendix + \" \" + monthName;\n+            }\n         }\n \n         private int getDaysForMonth(int month) {\n@@ -356,7 +366,7 @@ private int determineMonth(int dayOfYear) {\n                 days += getDaysForMonth(month);\n             }\n \n-            return month;\n+            return Math.max(month, 0);\n         }\n \n         private int determineDayOfMonth(int dayOfYear, int month) {\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -717,7 +717,8 @@ public void zoomAndCenterAnimated(float scaleX, float scaleY, float xValue, floa\n \n             PointD origin = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);\n \n-            Runnable job = new AnimatedZoomJob(mViewPortHandler, this, getTransformer(axis), getAxis(axis), mXAxis.mAxisRange, scaleX, scaleY, mViewPortHandler.getScaleX(), mViewPortHandler.getScaleY(),\n+            Runnable job = new AnimatedZoomJob(mViewPortHandler, this, getTransformer(axis), getAxis(axis), mXAxis\n+                    .mAxisRange, scaleX, scaleY, mViewPortHandler.getScaleX(), mViewPortHandler.getScaleY(),\n                     xValue, yValue, (float) origin.x, (float) origin.y, duration);\n             addViewportJob(job);\n \n@@ -1328,6 +1329,15 @@ public float getHighestVisibleX() {\n         return (float) Math.min(mXAxis.mAxisMaximum, pos.x);\n     }\n \n+    /**\n+     * Returns the range visible on the x-axis.\n+     *\n+     * @return\n+     */\n+    public float getVisibleXRange() {\n+        return Math.abs(getHighestVisibleX() - getLowestVisibleX());\n+    }\n+\n     /**\n      * returns the current xPx-scale factor\n      */",
    "output": "Fine tuning of days example"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -16,6 +16,7 @@\n import android.widget.Toast;\n \n import com.github.mikephil.charting.charts.BarChart;\n+import com.github.mikephil.charting.components.AxisBase;\n import com.github.mikephil.charting.components.Legend;\n import com.github.mikephil.charting.components.Legend.LegendForm;\n import com.github.mikephil.charting.components.Legend.LegendPosition;\n@@ -85,6 +86,8 @@ protected void onCreate(Bundle savedInstanceState) {\n         xAxis.setPosition(XAxisPosition.BOTTOM);\n         xAxis.setTypeface(mTf);\n         xAxis.setDrawGridLines(false);\n+        xAxis.setGranularity(1f); // only intervals of 1 day\n+        xAxis.setValueFormatter(new DayAxisFormatter());\n \n         AxisValueFormatter custom = new MyAxisValueFormatter();\n \n@@ -145,7 +148,7 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 break;\n             }\n             case R.id.actionToggleHighlight: {\n-                if(mChart.getData() != null) {\n+                if (mChart.getData() != null) {\n                     mChart.getData().setHighlightEnabled(!mChart.getData().isHighlightEnabled());\n                     mChart.invalidate();\n                 }\n@@ -167,7 +170,7 @@ public boolean onOptionsItemSelected(MenuItem item) {\n             }\n             case R.id.actionToggleBarBorders: {\n                 for (IBarDataSet set : mChart.getData().getDataSets())\n-                    ((BarDataSet)set).setBarBorderWidth(set.getBarBorderWidth() == 1.f ? 0.f : 1.f);\n+                    ((BarDataSet) set).setBarBorderWidth(set.getBarBorderWidth() == 1.f ? 0.f : 1.f);\n \n                 mChart.invalidate();\n                 break;\n@@ -230,12 +233,14 @@ public void onStopTrackingTouch(SeekBar seekBar) {\n \n     private void setData(int count, float range) {\n \n-        mChart.getXAxis().setAxisMinValue(0f);\n-        mChart.getXAxis().setAxisMaxValue(count+1f);\n+        float start = 0.5f;\n+\n+        mChart.getXAxis().setAxisMinValue(start);\n+        mChart.getXAxis().setAxisMaxValue(start + count);\n \n         ArrayList<BarEntry> yVals1 = new ArrayList<BarEntry>();\n \n-        for (int i = 0; i < count; i++) {\n+        for (int i = (int) start; i < start + count; i++) {\n             float mult = (range + 1);\n             float val = (float) (Math.random() * mult);\n             yVals1.add(new BarEntry(i + 1f, val));\n@@ -245,12 +250,12 @@ private void setData(int count, float range) {\n \n         if (mChart.getData() != null &&\n                 mChart.getData().getDataSetCount() > 0) {\n-            set1 = (BarDataSet)mChart.getData().getDataSetByIndex(0);\n+            set1 = (BarDataSet) mChart.getData().getDataSetByIndex(0);\n             set1.setYVals(yVals1);\n             mChart.getData().notifyDataChanged();\n             mChart.notifyDataSetChanged();\n         } else {\n-            set1 = new BarDataSet(yVals1, \"DataSet\");\n+            set1 = new BarDataSet(yVals1, \"The year 2017\");\n             set1.setColors(ColorTemplate.MATERIAL_COLORS);\n \n             ArrayList<IBarDataSet> dataSets = new ArrayList<IBarDataSet>();\n@@ -284,5 +289,92 @@ public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {\n     }\n \n     public void onNothingSelected() {\n-    };\n+    }\n+\n+    private class DayAxisFormatter implements AxisValueFormatter {\n+\n+        protected String[] mMonths = new String[]{\n+                \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dec\"\n+        };\n+\n+        @Override\n+        public String getFormattedValue(float value, AxisBase axis) {\n+            \n+            int dayOfYear = (int) value;\n+\n+            int month = determineMonth(dayOfYear);\n+            int dayOfMonth = determineDayOfMonth(dayOfYear, month);\n+\n+            String appendix = \"th\";\n+\n+            switch (dayOfMonth) {\n+                case 1:\n+                    appendix = \"st\";\n+                    break;\n+                case 2:\n+                    appendix = \"nd\";\n+                    break;\n+                case 3:\n+                    appendix = \"rd\";\n+                    break;\n+                case 21:\n+                    appendix = \"st\";\n+                    break;\n+                case 22:\n+                    appendix = \"nd\";\n+                    break;\n+                case 23:\n+                    appendix = \"rd\";\n+                    break;\n+                case 31:\n+                    appendix = \"st\";\n+                    break;\n+            }\n+\n+            return dayOfMonth + appendix + \" \" + mMonths[month % mMonths.length];\n+        }\n+\n+        private int getDaysForMonth(int month) {\n+\n+            if (month == 1) {\n+                return 28;\n+            }\n+\n+            if (month == 3 || month == 5 || month == 8 || month == 10)\n+                return 30;\n+            else\n+                return 31;\n+        }\n+\n+        private int determineMonth(int dayOfYear) {\n+\n+            int month = -1;\n+            int days = 0;\n+\n+            while (days < dayOfYear) {\n+                month++;\n+                days += getDaysForMonth(month);\n+            }\n+\n+            return month;\n+        }\n+\n+        private int determineDayOfMonth(int dayOfYear, int month) {\n+\n+            int count = 0;\n+            int days = 0;\n+\n+            while (count < month) {\n+                days += getDaysForMonth(count);\n+                count++;\n+            }\n+\n+            return dayOfYear - days;\n+        }\n+\n+        @Override\n+        public int getDecimalDigits() {\n+            return 0;\n+        }\n+    }\n }\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java\n@@ -24,7 +24,6 @@\n import com.github.mikephil.charting.interfaces.datasets.IScatterDataSet;\n import com.github.mikephil.charting.listener.OnChartValueSelectedListener;\n import com.github.mikephil.charting.utils.ColorTemplate;\n-import com.xxmassdeveloper.mpchartexample.custom.MonthXAxisFormatter;\n import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n \n import java.util.ArrayList;\n@@ -89,7 +88,6 @@ protected void onCreate(Bundle savedInstanceState) {\n         XAxis xl = mChart.getXAxis();\n         xl.setTypeface(tf);\n         xl.setDrawGridLines(false);\n-        xl.setValueFormatter(new MonthXAxisFormatter());\n     }\n \n     @Override\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MonthXAxisFormatter.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MonthXAxisFormatter.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MonthXAxisFormatter.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MonthXAxisFormatter.java\n@@ -1,31 +0,0 @@\n-package com.xxmassdeveloper.mpchartexample.custom;\n-\n-import com.github.mikephil.charting.components.AxisBase;\n-import com.github.mikephil.charting.formatter.AxisValueFormatter;\n-\n-/**\n- * Created by Philipp Jahoda on 14/09/15.\n- */\n-public class MonthXAxisFormatter implements AxisValueFormatter {\n-\n-    protected String[] mMonths = new String[]{\n-            \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dec\"\n-    };\n-\n-    public MonthXAxisFormatter() {\n-        // maybe do something here or provide parameters in constructor\n-\n-    }\n-\n-    @Override\n-    public String getFormattedValue(float value, AxisBase axis) {\n-\n-        float percent = value / axis.mAxisRange;\n-        return mMonths[(int) (mMonths.length * percent)];\n-    }\n-\n-    @Override\n-    public int getDecimalDigits() {\n-        return 0;\n-    }\n-}",
    "output": "Improve examples"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -1312,7 +1312,7 @@ public IBarLineScatterCandleBubbleDataSet getDataSetByTouchPoint(float x, float\n     public float getLowestVisibleX() {\n         PointD pos = getTransformer(AxisDependency.LEFT).getValuesByTouchPoint(mViewPortHandler.contentLeft(),\n                 mViewPortHandler.contentBottom());\n-        return (float) Math.min(mXAxis.mAxisMinimum, pos.x);\n+        return (float) Math.max(mXAxis.mAxisMinimum, pos.x);\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java\n@@ -205,7 +205,7 @@ public Highlight getHighlightByTouchPoint(float x, float y) {\n     public float getLowestVisibleX() {\n         PointD pos = getTransformer(AxisDependency.LEFT).getValuesByTouchPoint(mViewPortHandler.contentLeft(),\n \t\t\t\tmViewPortHandler.contentBottom());\n-        return (float) Math.min(mXAxis.mAxisMinimum, pos.y);\n+        return (float) Math.max(mXAxis.mAxisMinimum, pos.y);\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/FileUtils.java b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/FileUtils.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/utils/FileUtils.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/FileUtils.java\n@@ -242,7 +242,7 @@ public static List<BarEntry> loadBarEntriesFromAssets(AssetManager am, String pa\n                 // process line\n                 String[] split = line.split(\"#\");\n \n-                entries.add(new BarEntry(Float.parseFloat(split[1]), Integer.parseInt(split[0])));\n+                entries.add(new BarEntry(Float.parseFloat(split[1]), Float.parseFloat(split[0])));\n \n                 line = reader.readLine();\n             }",
    "output": "Fix performance issue in linechart"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -199,9 +199,6 @@ protected void onDraw(Canvas canvas) {\n         long starttime = System.currentTimeMillis();\n         calcModulus();\n \n-        mXAxisRenderer.calcXBounds(this, mXAxis.mAxisLabelModulus);\n-        mRenderer.calcXBounds(this, mXAxis.mAxisLabelModulus);\n-\n         // execute all drawing commands\n         drawGridBackground(canvas);\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CombinedChartRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CombinedChartRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CombinedChartRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CombinedChartRenderer.java\n@@ -134,16 +134,9 @@ else if (renderer instanceof BubbleChartRenderer)\n             }\n \n             renderer.drawHighlighted(c, dataIndices.toArray(new Highlight[dataIndices.size()]));\n-\n         }\n     }\n \n-    @Override\n-    public void calcXBounds(BarLineScatterCandleBubbleDataProvider chart, int xAxisModulus) {\n-        for (DataRenderer renderer : mRenderers)\n-            renderer.calcXBounds(chart, xAxisModulus);\n-    }\n-\n     /**\n      * Returns the sub-renderer object at the specified index.\n      *\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/Renderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/Renderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/Renderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/Renderer.java\n@@ -16,12 +16,6 @@ public abstract class Renderer {\n      */\n     protected ViewPortHandler mViewPortHandler;\n \n-    /** the minimum yValue on the xPx-axis that should be plotted */\n-    protected float mMinX = 0;\n-\n-    /** the maximum yValue on the xPx-axis that should be plotted */\n-    protected float mMaxX = 0;\n-\n     public Renderer(ViewPortHandler viewPortHandler) {\n         this.mViewPortHandler = viewPortHandler;\n     }\n@@ -42,22 +36,4 @@ protected boolean fitsBounds(float val, float min, float max) {\n         else\n             return true;\n     }\n-\n-    /**\n-     * Calculates the minimum and maximum xPx-yValue the chart can currently\n-     * display (with the given zoom level). -> mMinX, mMaxX\n-     * \n-     * @param dataProvider\n-     * @param xAxisModulus\n-     */\n-    public void calcXBounds(BarLineScatterCandleBubbleDataProvider dataProvider, int xAxisModulus) {\n-        \n-        float low = dataProvider.getLowestVisibleX();\n-        float high = dataProvider.getHighestVisibleX();\n-        \n-        int subLow = (low % xAxisModulus == 0) ? xAxisModulus : 0;\n-        \n-        mMinX = Math.max((low / xAxisModulus) * (xAxisModulus) - subLow, 0);\n-        mMaxX = Math.min((high / xAxisModulus) * (xAxisModulus) + xAxisModulus, dataProvider.getXChartMax());\n-    }\n }",
    "output": "Remove xmin and xmax from renderer"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n@@ -102,7 +102,7 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         XAxis xAxis = mChart.getXAxis();\n         xAxis.setTypeface(tf);\n-        xAxis.setTextSize(12f);\n+        xAxis.setTextSize(11f);\n         xAxis.setTextColor(Color.WHITE);\n         xAxis.setDrawGridLines(false);\n         xAxis.setDrawAxisLine(false);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -347,8 +347,7 @@ public void notifyDataSetChanged() {\n \n         mAxisRendererLeft.computeAxis(mAxisLeft.mAxisMinimum, mAxisLeft.mAxisMaximum, mAxisLeft.isInverted());\n         mAxisRendererRight.computeAxis(mAxisRight.mAxisMinimum, mAxisRight.mAxisMaximum, mAxisRight.isInverted());\n-\n-        //mXAxisRenderer.computeSize(mData.getXValMaximumLength(), mData.getXVals());\n+        mXAxisRenderer.computeAxis(mXAxis.mAxisMinimum, mXAxis.mAxisMaximum, false);\n \n         if (mLegend != null)\n             mLegendRenderer.computeLegend(mData);\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java\n@@ -133,7 +133,7 @@ public void renderAxisLabels(Canvas c) {\n         if (mXAxis.getPosition() == XAxisPosition.TOP) {\n \n             drawLabels(c, mViewPortHandler.contentTop() - yoffset,\n-                    new PointF(0.5f, 1.0f));\n+                    new PointF(0.5f, 0.9f));\n \n         } else if (mXAxis.getPosition() == XAxisPosition.TOP_INSIDE) {\n ",
    "output": "Fix offset related issues"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java\n@@ -47,30 +47,6 @@ public Highlight getHighlight(float x, float y) {\n                 -1);\n     }\n \n-//    @Override\n-//    protected float getXForTouch(float x) {\n-//\n-//        if (!mChart.getBarData().isGrouped()) {\n-//            return super.getXForTouch(x);\n-//        } else {\n-//            return getBase(x);\n-//\n-//            float baseNoSpace = getBase(x);\n-//\n-//            int setCount = mChart.getBarData().getDataSetCount();\n-//            int xIndex = (int) baseNoSpace / setCount;\n-//\n-//            int valCount = mChart.getData().getXValCount();\n-//\n-//            if (xIndex < 0)\n-//                xIndex = 0;\n-//            else if (xIndex >= valCount)\n-//                xIndex = valCount - 1;\n-//\n-//            return xIndex;\n-//        }\n-//    }\n-\n     @Override\n     protected SelectionDetail getSelectionDetail(float xVal, float x, float y) {\n \n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/HorizontalBarHighlighter.java b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/HorizontalBarHighlighter.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/HorizontalBarHighlighter.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/HorizontalBarHighlighter.java\n@@ -20,7 +20,7 @@ public Highlight getHighlight(float x, float y) {\n \n \t\tBarData barData = mChart.getBarData();\n \n-\t\tPointD pos = getValsForTouch(x, y);\n+\t\tPointD pos = getValsForTouch(y, x);\n \n \t\tSelectionDetail selectionDetail = getSelectionDetail((float) pos.y, x, y);\n \t\tif (selectionDetail == null)",
    "output": "Work on horizontal highlighting"
  },
  {
    "input": "diff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java b/MPChartLib/src/main/java/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java\n@@ -29,8 +29,8 @@ public void feed(IBarDataSet data) {\n \n             if (!mContainsStacks || vals == null) {\n \n-                float top = x - barWidthHalf;\n-                float bottom = x + barWidthHalf;\n+                float bottom = x - barWidthHalf;\n+                float top = x + barWidthHalf;\n                 float left, right;\n                 if (mInverted) {\n                     left = y >= 0 ? y : 0;\n@@ -69,8 +69,8 @@ public void feed(IBarDataSet data) {\n                         negY += Math.abs(value);\n                     }\n \n-                    float top = x - barWidthHalf;\n-                    float bottom = x + barWidthHalf;\n+                    float bottom = x - barWidthHalf;\n+                    float top = x + barWidthHalf;\n                     float left, right;\n                     if (mInverted) {\n                         left = y >= yStart ? y : yStart;",
    "output": "Fix in horizontal buffer"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/test/DataSetTest.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/test/DataSetTest.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/test/DataSetTest.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/test/DataSetTest.java\n@@ -1,33 +0,0 @@\n-package com.xxmassdeveloper.mpchartexample.test;\n-\n-import com.github.mikephil.charting.data.Entry;\n-import com.github.mikephil.charting.data.ScatterDataSet;\n-\n-//import org.junit.Test;\n-//\n-//import java.util.ArrayList;\n-//import java.util.List;\n-//import static org.junit.Assert.*;\n-//\n-///**\n-// * Created by philipp on 30/05/16.\n-// */\n-//public class DataSetTest {\n-//\n-//\n-//    @Test\n-//    public void testGetEntryForXPos() {\n-//\n-//        List<Entry> vals = new ArrayList<>();\n-//        vals.add(new Entry(10, 10));\n-//        vals.add(new Entry(15, 5));\n-//        vals.add(new Entry(17, 10));\n-//\n-//        ScatterDataSet set = new ScatterDataSet(vals, \"\");\n-//\n-//        Entry e1 = set.getEntryForXPos(13);\n-//        assertEquals(15, e1.getX(), 0.01f);\n-//        assertEquals(5, e1.getY(), 0.01f);\n-//    }\n-//}\n-\n\ndiff --git a/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java\n@@ -96,7 +96,7 @@ public void calcMinMax() {\n             mYMax = 0.f;\n         }\n \n-        if(mXMin == Float.MAX_VALUE) {\n+        if (mXMin == Float.MAX_VALUE) {\n             mXMin = 0.f;\n             mXMax = 0.f;\n         }\n@@ -287,42 +287,39 @@ public T getEntryForIndex(int index) {\n     @Override\n     public int getEntryIndex(float xPos, Rounding rounding) {\n \n+        if (mValues == null || mValues.isEmpty())\n+            return -1;\n+\n         int low = 0;\n         int high = mValues.size() - 1;\n-        int closest = -1;\n \n-        while (low <= high) {\n-            int m = (high + low) / 2;\n+        while (low < high) {\n+            int m = (low + high) / 2;\n \n-            if (xPos == mValues.get(m).getX()) {\n-                while (m > 0 && mValues.get(m - 1).getX() == xPos)\n-                    m--;\n+            float d1 = Math.abs(mValues.get(m).getX() - xPos);\n+            float d2 = Math.abs(mValues.get(m + 1).getX() - xPos);\n \n-                return m;\n-            }\n-\n-            if (xPos > mValues.get(m).getX())\n+            if (d2 <= d1) {\n                 low = m + 1;\n-            else\n-                high = m - 1;\n-\n-            closest = m;\n+            } else {\n+                high = m;\n+            }\n         }\n \n-        if (closest != -1) {\n-            float closestXPos = mValues.get(closest).getX();\n+        if (high != -1) {\n+            float closestXPos = mValues.get(high).getX();\n             if (rounding == Rounding.UP) {\n-                if (closestXPos < xPos && closest < mValues.size() - 1) {\n-                    ++closest;\n+                if (closestXPos < xPos && high < mValues.size() - 1) {\n+                    ++high;\n                 }\n             } else if (rounding == Rounding.DOWN) {\n-                if (closestXPos > xPos && closest > 0) {\n-                    --closest;\n+                if (closestXPos > xPos && high > 0) {\n+                    --high;\n                 }\n             }\n         }\n \n-        return closest;\n+        return high;\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/test/java/com/github/mikephil/charting/test/DataSetTest.java b/MPChartLib/src/test/java/com/github/mikephil/charting/test/DataSetTest.java\n--- a/MPChartLib/src/test/java/com/github/mikephil/charting/test/DataSetTest.java\n+++ b/MPChartLib/src/test/java/com/github/mikephil/charting/test/DataSetTest.java\n@@ -0,0 +1,59 @@\n+package com.github.mikephil.charting.test;\n+\n+import com.github.mikephil.charting.data.DataSet;\n+import com.github.mikephil.charting.data.Entry;\n+import com.github.mikephil.charting.data.ScatterDataSet;\n+import com.github.mikephil.charting.interfaces.datasets.IDataSet;\n+\n+import org.junit.Test;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static junit.framework.Assert.*;\n+\n+/**\n+ * Created by philipp on 31/05/16.\n+ */\n+public class DataSetTest {\n+\n+\n+    @Test\n+    public void testGetEntryForXPos() {\n+\n+        List<Entry> entries = new ArrayList<Entry>();\n+        entries.add(new Entry(10, 10));\n+        entries.add(new Entry(15, 5));\n+        entries.add(new Entry(21, 5));\n+\n+        ScatterDataSet set = new ScatterDataSet(entries, \"\");\n+\n+        Entry closest = set.getEntryForXPos(17, DataSet.Rounding.CLOSEST);\n+        assertEquals(15, closest.getX(), 0.01f);\n+        assertEquals(5, closest.getY(), 0.01f);\n+\n+        closest = set.getEntryForXPos(17, DataSet.Rounding.DOWN);\n+        assertEquals(15, closest.getX(), 0.01f);\n+        assertEquals(5, closest.getY(), 0.01f);\n+\n+        closest = set.getEntryForXPos(15, DataSet.Rounding.DOWN);\n+        assertEquals(15, closest.getX(), 0.01f);\n+        assertEquals(5, closest.getY(), 0.01f);\n+\n+        closest = set.getEntryForXPos(14, DataSet.Rounding.DOWN);\n+        assertEquals(10, closest.getX(), 0.01f);\n+        assertEquals(10, closest.getY(), 0.01f);\n+\n+        closest = set.getEntryForXPos(17, DataSet.Rounding.UP);\n+        assertEquals(21, closest.getX(), 0.01f);\n+        assertEquals(5, closest.getY(), 0.01f);\n+\n+        closest = set.getEntryForXPos(21, DataSet.Rounding.UP);\n+        assertEquals(21, closest.getX(), 0.01f);\n+        assertEquals(5, closest.getY(), 0.01f);\n+\n+        closest = set.getEntryForXPos(21, DataSet.Rounding.CLOSEST);\n+        assertEquals(21, closest.getX(), 0.01f);\n+        assertEquals(5, closest.getY(), 0.01f);\n+    }\n+}",
    "output": "Restructure project from eclipse to android studio file structure"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n@@ -165,6 +165,10 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 mChart.animateXY(1400, 1400);\n                 break;\n             }\n+            case R.id.actionToggleSpin: {\n+                mChart.spin(1000, mChart.getRotationAngle(), mChart.getRotationAngle() + 360, Easing.EasingOption.EaseInCubic);\n+                break;\n+            }\n         }\n         return true;\n     }",
    "output": "Add spin animation to pie example"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java\n@@ -71,7 +71,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart.setCenterTextTypeface(Typeface.createFromAsset(getAssets(), \"OpenSans-Light.ttf\"));\n         mChart.setCenterText(generateCenterSpannableText());\n \n-        mChart.setExtraOffsets(5.f, 5.f, 5.f, 5.f);\n+        mChart.setExtraOffsets(20.f, 0.f, 20.f, 0.f);\n \n         mChart.setDrawHoleEnabled(true);\n         mChart.setHoleColor(Color.WHITE);\n@@ -226,7 +226,7 @@ private void setData(int count, float range) {\n \n \n         dataSet.setValueLinePart1OffsetPercentage(80.f);\n-        dataSet.setValueLinePart1Length(0.3f);\n+        dataSet.setValueLinePart1Length(0.2f);\n         dataSet.setValueLinePart2Length(0.4f);\n         // dataSet.setXValuePosition(PieDataSet.ValuePosition.OUTSIDE_SLICE);\n         dataSet.setYValuePosition(PieDataSet.ValuePosition.OUTSIDE_SLICE);\n@@ -247,10 +247,10 @@ private void setData(int count, float range) {\n     private SpannableString generateCenterSpannableText() {\n \n         SpannableString s = new SpannableString(\"MPAndroidChart\\ndeveloped by Philipp Jahoda\");\n-        s.setSpan(new RelativeSizeSpan(1.7f), 0, 14, 0);\n+        s.setSpan(new RelativeSizeSpan(1.5f), 0, 14, 0);\n         s.setSpan(new StyleSpan(Typeface.NORMAL), 14, s.length() - 15, 0);\n         s.setSpan(new ForegroundColorSpan(Color.GRAY), 14, s.length() - 15, 0);\n-        s.setSpan(new RelativeSizeSpan(.8f), 14, s.length() - 15, 0);\n+        s.setSpan(new RelativeSizeSpan(.65f), 14, s.length() - 15, 0);\n         s.setSpan(new StyleSpan(Typeface.ITALIC), s.length() - 14, s.length(), 0);\n         s.setSpan(new ForegroundColorSpan(ColorTemplate.getHoloBlue()), s.length() - 14, s.length(), 0);\n         return s;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -143,8 +143,7 @@ protected float calculateMinimumRadiusForSpacedSlice(\n             float arcStartPointX,\n             float arcStartPointY,\n             float startAngle,\n-            float sweepAngle)\n-    {\n+            float sweepAngle) {\n         final float angleMiddle = startAngle + sweepAngle / 2.f;\n \n         // Other point of the arc\n@@ -163,7 +162,7 @@ protected float calculateMinimumRadiusForSpacedSlice(\n         // After reducing space from both sides of the \"slice\",\n         //   the angle of the contained triangle should stay the same.\n         // So let's find out the height of that triangle.\n-        float containedTriangleHeight = (float)(basePointsDistance / 2.0 *\n+        float containedTriangleHeight = (float) (basePointsDistance / 2.0 *\n                 Math.tan((180.0 - angle) / 2.0 * Utils.DEG2RAD));\n \n         // Now we subtract that from the radius\n@@ -228,8 +227,7 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n                             sliceSpace / (Utils.FDEG2RAD * radius);\n                     final float startAngleOuter = rotationAngle + (angle + sliceSpaceAngleOuter / 2.f) * phaseY;\n                     float sweepAngleOuter = (sliceAngle - sliceSpaceAngleOuter) * phaseY;\n-                    if (sweepAngleOuter < 0.f)\n-                    {\n+                    if (sweepAngleOuter < 0.f) {\n                         sweepAngleOuter = 0.f;\n                     }\n \n@@ -284,8 +282,7 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n                                 sliceSpace / (Utils.FDEG2RAD * innerRadius);\n                         final float startAngleInner = rotationAngle + (angle + sliceSpaceAngleInner / 2.f) * phaseY;\n                         float sweepAngleInner = (sliceAngle - sliceSpaceAngleInner) * phaseY;\n-                        if (sweepAngleInner < 0.f)\n-                        {\n+                        if (sweepAngleInner < 0.f) {\n                             sweepAngleInner = 0.f;\n                         }\n                         final float endAngleInner = startAngleInner + sweepAngleInner;\n@@ -305,8 +302,7 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n                                     -sweepAngleInner\n                             );\n                         }\n-                    }\n-                    else {\n+                    } else {\n \n                         if (sweepAngleOuter % 360f != 0.f) {\n                             if (accountForSliceSpacing) {\n@@ -411,6 +407,8 @@ public void drawValues(Canvas c) {\n             mValueLinePaint.setColor(dataSet.getValueLineColor());\n             mValueLinePaint.setStrokeWidth(Utils.convertDpToPixel(dataSet.getValueLineWidth()));\n \n+            float offset = Utils.convertDpToPixel(5.f);\n+\n             for (int j = 0; j < entryCount; j++) {\n \n                 Entry entry = dataSet.getEntryForIndex(j);\n@@ -434,8 +432,8 @@ public void drawValues(Canvas c) {\n                 float value = mChart.isUsePercentValuesEnabled() ? entry.getVal()\n                         / yValueSum * 100f : entry.getVal();\n \n-                final float sliceXBase = (float)Math.cos(transformedAngle * Utils.FDEG2RAD);\n-                final float sliceYBase = (float)Math.sin(transformedAngle * Utils.FDEG2RAD);\n+                final float sliceXBase = (float) Math.cos(transformedAngle * Utils.FDEG2RAD);\n+                final float sliceYBase = (float) Math.sin(transformedAngle * Utils.FDEG2RAD);\n \n                 final boolean drawXOutside = drawXVals &&\n                         xValuePosition == PieDataSet.ValuePosition.OUTSIDE_SLICE;\n@@ -465,9 +463,9 @@ public void drawValues(Canvas c) {\n                         line1Radius = radius * valueLinePart1OffsetPercentage;\n \n                     final float polyline2Width = dataSet.isValueLineVariableLength()\n-                        ? labelRadius * valueLineLength2 * (float)Math.abs(Math.sin(\n+                            ? labelRadius * valueLineLength2 * (float) Math.abs(Math.sin(\n                             transformedAngle * Utils.FDEG2RAD))\n-                        : labelRadius * valueLineLength2;\n+                            : labelRadius * valueLineLength2;\n \n                     final float pt0x = line1Radius * sliceXBase + center.x;\n                     final float pt0y = line1Radius * sliceYBase + center.y;\n@@ -479,13 +477,13 @@ public void drawValues(Canvas c) {\n                         pt2x = pt1x - polyline2Width;\n                         pt2y = pt1y;\n                         mValuePaint.setTextAlign(Align.RIGHT);\n-                        labelPtx = pt2x - Utils.convertDpToPixel(5.f);\n+                        labelPtx = pt2x - offset;\n                         labelPty = pt2y;\n                     } else {\n                         pt2x = pt1x + polyline2Width;\n                         pt2y = pt1y;\n                         mValuePaint.setTextAlign(Align.LEFT);\n-                        labelPtx = pt2x + Utils.convertDpToPixel(5.f);\n+                        labelPtx = pt2x + offset;\n                         labelPty = pt2y;\n                     }\n \n@@ -518,7 +516,8 @@ public void drawValues(Canvas c) {\n                         }\n                     } else if (drawYOutside) {\n \n-                        drawValue(c, formatter, value, entry, 0, labelPtx, labelPty + lineHeight / 2.f, dataSet.getValueTextColor(j));\n+                        drawValue(c, formatter, value, entry, 0, labelPtx, labelPty + lineHeight / 2.f, dataSet\n+                                .getValueTextColor(j));\n                     }\n                 }\n \n@@ -743,20 +742,18 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n             final float startAngleOuter = rotationAngle + (angle + sliceSpaceAngleOuter / 2.f) * phaseY;\n             float sweepAngleOuter = (sliceAngle - sliceSpaceAngleOuter) * phaseY;\n-            if (sweepAngleOuter < 0.f)\n-            {\n+            if (sweepAngleOuter < 0.f) {\n                 sweepAngleOuter = 0.f;\n             }\n \n             final float startAngleShifted = rotationAngle + (angle + sliceSpaceAngleShifted / 2.f) * phaseY;\n             float sweepAngleShifted = (sliceAngle - sliceSpaceAngleShifted) * phaseY;\n-            if (sweepAngleShifted < 0.f)\n-            {\n+            if (sweepAngleShifted < 0.f) {\n                 sweepAngleShifted = 0.f;\n             }\n \n             mPathBuffer.reset();\n-            \n+\n             if (sweepAngleOuter % 360f == 0.f) {\n                 // Android is doing \"mod 360\"\n                 mPathBuffer.addCircle(center.x, center.y, highlightedRadius, Path.Direction.CW);\n@@ -809,8 +806,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n                         sliceSpace / (Utils.FDEG2RAD * innerRadius);\n                 final float startAngleInner = rotationAngle + (angle + sliceSpaceAngleInner / 2.f) * phaseY;\n                 float sweepAngleInner = (sliceAngle - sliceSpaceAngleInner) * phaseY;\n-                if (sweepAngleInner < 0.f)\n-                {\n+                if (sweepAngleInner < 0.f) {\n                     sweepAngleInner = 0.f;\n                 }\n                 final float endAngleInner = startAngleInner + sweepAngleInner;\n@@ -830,8 +826,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n                             -sweepAngleInner\n                     );\n                 }\n-            }\n-            else {\n+            } else {\n \n                 if (sweepAngleOuter % 360f != 0.f) {\n ",
    "output": "Minor fixes related to polyline example"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java\n@@ -206,8 +206,9 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n             BarData data = new BarData(xVals, dataSets);\n \n             mChart.setData(data);\n-            mChart.invalidate();\n         }\n+\n+        mChart.invalidate();\n     }\n \n     @Override\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n@@ -290,6 +290,7 @@ private void setData(int count, float range) {\n             set1 = (LineDataSet)mChart.getData().getDataSetByIndex(0);\n             set1.setYVals(yVals);\n             mChart.getData().setXVals(xVals);\n+            mChart.getData().notifyDataChanged();\n             mChart.notifyDataSetChanged();\n         } else {\n             // create a dataset and give it a type\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -349,7 +349,7 @@ private void setData(int count, float range) {\n             float mult = (range + 1);\n             float val = (float) (Math.random() * mult) + 3;// + (float)\n             // ((mult *\n-            // 0.1) / 10);\n+            // 0.1) / 10);x\n             yVals.add(new Entry(val, i));\n         }\n \n@@ -360,6 +360,7 @@ private void setData(int count, float range) {\n             set1 = (LineDataSet)mChart.getData().getDataSetByIndex(0);\n             set1.setYVals(yVals);\n             mChart.getData().setXVals(xVals);\n+            mChart.getData().notifyDataChanged();\n             mChart.notifyDataSetChanged();\n         } else {\n             // create a dataset and give it a type\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n@@ -319,6 +319,7 @@ private void setData(int count, float range) {\n             set1.setYVals(yVals1);\n             set2.setYVals(yVals2);\n             mChart.getData().setXVals(xVals);\n+            mChart.getData().notifyDataChanged();\n             mChart.notifyDataSetChanged();\n         } else {\n             // create a dataset and give it a type\n@@ -352,8 +353,8 @@ private void setData(int count, float range) {\n             //set2.setFillFormatter(new MyFillFormatter(900f));\n \n             ArrayList<ILineDataSet> dataSets = new ArrayList<ILineDataSet>();\n-            dataSets.add(set2);\n             dataSets.add(set1); // add the datasets\n+            dataSets.add(set2);\n \n             // create a data object with the datasets\n             LineData data = new LineData(xVals, dataSets);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java\n@@ -112,7 +112,7 @@ public View getView(int position, View convertView, ViewGroup parent) {\n             \n             // do not forget to refresh the chart\n //            holder.chart.invalidate();\n-            holder.chart.animateY(700, Easing.EasingOption.EaseInCubic);\n+            holder.chart.animateY(700);\n \n             return convertView;\n         }\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MultiLineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MultiLineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MultiLineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MultiLineChartActivity.java\n@@ -57,8 +57,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart.setDescription(\"\");\n         mChart.setDrawBorders(false);\n \n-        mChart.getAxisLeft().setDrawAxisLine(false);\n-        mChart.getAxisLeft().setDrawGridLines(false);\n+        mChart.getAxisLeft().setEnabled(false);\n         mChart.getAxisRight().setDrawAxisLine(false);\n         mChart.getAxisRight().setDrawGridLines(false);\n         mChart.getXAxis().setDrawAxisLine(false);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java\n@@ -195,8 +195,8 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n         set1.setColor(ColorTemplate.COLORFUL_COLORS[0]);\n         ScatterDataSet set2 = new ScatterDataSet(yVals2, \"DS 2\");\n         set2.setScatterShape(ScatterShape.CIRCLE);\n-        set2.setScatterShapeHoleColor(Color.WHITE);\n-        set2.setScatterShapeHoleRadius(5f);\n+        set2.setScatterShapeHoleColor(ColorTemplate.COLORFUL_COLORS[3]);\n+        set2.setScatterShapeHoleRadius(4f);\n         set2.setColor(ColorTemplate.COLORFUL_COLORS[1]);\n         ScatterDataSet set3 = new ScatterDataSet(yVals3, \"DS 3\");\n         set3.setScatterShape(ScatterShape.CROSS);",
    "output": "Minor fixes in example"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -13,6 +13,7 @@\n import com.github.mikephil.charting.data.DataSet;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.LineData;\n+import com.github.mikephil.charting.data.LineDataSet;\n import com.github.mikephil.charting.highlight.Highlight;\n import com.github.mikephil.charting.interfaces.dataprovider.LineDataProvider;\n import com.github.mikephil.charting.interfaces.datasets.ILineDataSet;\n@@ -205,7 +206,7 @@ protected void drawCubicBezier(Canvas c, ILineDataSet dataSet) {\n         Entry entryTo = dataSet.getEntryForXIndex(mMaxX, DataSet.Rounding.UP);\n \n         int diff = (entryFrom == entryTo) ? 1 : 0;\n-        int minx = Math.max(dataSet.getEntryIndex(entryFrom) - diff, 0);\n+        int minx = Math.max(dataSet.getEntryIndex(entryFrom) - diff - 1, 0);\n         int maxx = Math.min(Math.max(minx + 2, dataSet.getEntryIndex(entryTo) + 1), entryCount);\n \n         float phaseX = Math.max(0.f, Math.min(1.f, mAnimator.getPhaseX()));\n@@ -563,6 +564,9 @@ public void drawValues(Canvas c) {\n                 Entry entryTo = dataSet.getEntryForXIndex(mMaxX, DataSet.Rounding.UP);\n \n                 int diff = (entryFrom == entryTo) ? 1 : 0;\n+                if (dataSet.getMode() == LineDataSet.Mode.CUBIC_BEZIER)\n+                    diff += 1;\n+\n                 int minx = Math.max(dataSet.getEntryIndex(entryFrom) - diff, 0);\n                 int maxx = Math.min(Math.max(minx + 2, dataSet.getEntryIndex(entryTo) + 1), entryCount);\n \n@@ -626,6 +630,9 @@ protected void drawCircles(Canvas c) {\n             Entry entryTo = dataSet.getEntryForXIndex(mMaxX, DataSet.Rounding.UP);\n \n             int diff = (entryFrom == entryTo) ? 1 : 0;\n+            if (dataSet.getMode() == LineDataSet.Mode.CUBIC_BEZIER)\n+                diff += 1;\n+\n             int minx = Math.max(dataSet.getEntryIndex(entryFrom) - diff, 0);\n             int maxx = Math.min(Math.max(minx + 2, dataSet.getEntryIndex(entryTo) + 1), entryCount);\n ",
    "output": "Add extra control point when rendering cubic bezier out of range"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java\n@@ -12,6 +12,7 @@\n import com.github.mikephil.charting.data.LineData;\n import com.github.mikephil.charting.data.LineDataSet;\n import com.github.mikephil.charting.interfaces.datasets.ILineDataSet;\n+import com.github.mikephil.charting.utils.ColorTemplate;\n import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n \n import java.util.ArrayList;\n@@ -54,7 +55,7 @@ protected void onCreate(Bundle savedInstanceState) {\n \n     private void setupChart(LineChart chart, LineData data, int color) {\n \n-        ((LineDataSet) data.getDataSetByIndex(0)).setCircleColor(color);\n+        ((LineDataSet) data.getDataSetByIndex(0)).setCircleColorHole(color);\n \n         // no description text\n         chart.setDescription(\"\");\n@@ -122,7 +123,7 @@ private LineData getData(int count, float range) {\n         set1.setCircleRadius(5f);\n         set1.setCircleHoleRadius(2.5f);\n         set1.setColor(Color.WHITE);\n-        set1.setCircleColorHole(Color.WHITE);\n+        set1.setCircleColor(Color.WHITE);\n         set1.setHighLightColor(Color.WHITE);\n         set1.setDrawValues(false);\n ",
    "output": "Updated coloured line circle colors for correct transparent hole"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -16,6 +16,7 @@\n import com.github.mikephil.charting.highlight.Highlight;\n import com.github.mikephil.charting.interfaces.dataprovider.LineDataProvider;\n import com.github.mikephil.charting.interfaces.datasets.ILineDataSet;\n+import com.github.mikephil.charting.utils.ColorTemplate;\n import com.github.mikephil.charting.utils.Transformer;\n import com.github.mikephil.charting.utils.ViewPortHandler;\n \n@@ -593,6 +594,8 @@ public void drawExtras(Canvas c) {\n         drawCircles(c);\n     }\n \n+    private Path mCirclePathBuffer = new Path();\n+\n     protected void drawCircles(Canvas c) {\n \n         mRenderPaint.setStyle(Paint.Style.FILL);\n@@ -628,7 +631,11 @@ protected void drawCircles(Canvas c) {\n \n             float circleRadius = dataSet.getCircleRadius();\n             float circleHoleRadius = dataSet.getCircleHoleRadius();\n-            boolean isDrawCircleHoleEnabled = dataSet.isDrawCircleHoleEnabled();\n+            boolean drawCircleHole = dataSet.isDrawCircleHoleEnabled() &&\n+                    circleHoleRadius < circleRadius &&\n+                    circleHoleRadius > 0.f;\n+            boolean drawTransparentCircleHole = drawCircleHole &&\n+                    dataSet.getCircleHoleColor() == ColorTemplate.COLOR_NONE;\n \n             for (int j = minx,\n                  count = (int) Math.ceil((maxx - minx) * phaseX + minx);\n@@ -653,19 +660,37 @@ protected void drawCircles(Canvas c) {\n                         !mViewPortHandler.isInBoundsY(circlesBuffer[1]))\n                     continue;\n \n-                int circleColor = dataSet.getCircleColor(j);\n+                mRenderPaint.setColor(dataSet.getCircleColor(j));\n \n-                mRenderPaint.setColor(circleColor);\n+                if (drawTransparentCircleHole) {\n \n-                c.drawCircle(circlesBuffer[0], circlesBuffer[1], dataSet.getCircleRadius(),\n-                        mRenderPaint);\n+                    // Begin path for circle with hole\n+                    mCirclePathBuffer.reset();\n \n-                if (isDrawCircleHoleEnabled &&\n-                        circleHoleRadius < circleRadius &&\n-                        circleHoleRadius > 0.f)\n-                    c.drawCircle(circlesBuffer[0], circlesBuffer[1],\n+                    mCirclePathBuffer.addCircle(circlesBuffer[0], circlesBuffer[1],\n+                            circleRadius,\n+                            Path.Direction.CW);\n+\n+                    // Cut hole in path\n+                    mCirclePathBuffer.addCircle(circlesBuffer[0], circlesBuffer[1],\n                             circleHoleRadius,\n-                            mCirclePaintInner);\n+                            Path.Direction.CCW);\n+\n+                    // Fill in-between\n+                    c.drawPath(mCirclePathBuffer, mRenderPaint);\n+\n+                } else {\n+\n+                    c.drawCircle(circlesBuffer[0], circlesBuffer[1],\n+                            circleRadius,\n+                            mRenderPaint);\n+\n+                    if (drawCircleHole) {\n+                        c.drawCircle(circlesBuffer[0], circlesBuffer[1],\n+                                circleHoleRadius,\n+                                mCirclePaintInner);\n+                    }\n+                }\n             }\n         }\n     }",
    "output": "Allow transparent circle hole color"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java\n@@ -120,6 +120,7 @@ private LineData getData(int count, float range) {\n \n         set1.setLineWidth(1.75f);\n         set1.setCircleRadius(5f);\n+        set1.setCircleHoleRadius(2.5f);\n         set1.setColor(Color.WHITE);\n         set1.setCircleColorHole(Color.WHITE);\n         set1.setHighLightColor(Color.WHITE);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java\n@@ -29,6 +29,9 @@ public class LineDataSet extends LineRadarDataSet<Entry> implements ILineDataSet\n     /** the radius of the circle-shaped value indicators */\n     private float mCircleRadius = 8f;\n \n+    /** the hole radius of the circle-shaped value indicators */\n+    private float mCircleHoleRadius = 4f;\n+\n     /** sets the intensity of the cubic lines */\n     private float mCubicIntensity = 0.2f;\n \n@@ -71,6 +74,7 @@ public DataSet<Entry> copy() {\n         copied.mMode = mMode;\n         copied.mColors = mColors;\n         copied.mCircleRadius = mCircleRadius;\n+        copied.mCircleHoleRadius = mCircleHoleRadius;\n         copied.mCircleColors = mCircleColors;\n         copied.mDashPathEffect = mDashPathEffect;\n         copied.mDrawCircles = mDrawCircles;\n@@ -136,6 +140,21 @@ public float getCircleRadius() {\n         return mCircleRadius;\n     }\n \n+    /**\n+     * sets the hole radius of the drawn circles.\n+     * Default radius = 2f\n+     *\n+     * @param holeRadius\n+     */\n+    public void setCircleHoleRadius(float holeRadius) {\n+        mCircleHoleRadius = Utils.convertDpToPixel(holeRadius);\n+    }\n+\n+    @Override\n+    public float getCircleHoleRadius() {\n+        return mCircleHoleRadius;\n+    }\n+\n     /**\n      * sets the size (radius) of the circle shpaed value indicators,\n      * default size = 4f\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmLineDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmLineDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmLineDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmLineDataSet.java\n@@ -3,7 +3,6 @@\n import android.content.Context;\n import android.graphics.Color;\n import android.graphics.DashPathEffect;\n-import android.graphics.drawable.Drawable;\n \n import com.github.mikephil.charting.data.LineDataSet;\n import com.github.mikephil.charting.data.realm.base.RealmLineRadarDataSet;\n@@ -40,7 +39,10 @@ public class RealmLineDataSet<T extends RealmObject> extends RealmLineRadarDataS\n     /**\n      * the radius of the circle-shaped value indicators\n      */\n-    private float mCircleSize = 8f;\n+    private float mCircleRadius = 8f;\n+\n+    /** the hole radius of the circle-shaped value indicators */\n+    private float mCircleHoleRadius = 4f;\n \n     /**\n      * sets the intensity of the cubic lines\n@@ -146,12 +148,27 @@ public float getCubicIntensity() {\n      * @param size\n      */\n     public void setCircleSize(float size) {\n-        mCircleSize = Utils.convertDpToPixel(size);\n+        mCircleRadius = Utils.convertDpToPixel(size);\n     }\n \n     @Override\n     public float getCircleRadius() {\n-        return mCircleSize;\n+        return mCircleRadius;\n+    }\n+\n+    /**\n+     * sets the hole radius of the drawn circles.\n+     * Default radius = 2f\n+     *\n+     * @param holeRadius\n+     */\n+    public void setCircleHoleRadius(float holeRadius) {\n+        mCircleHoleRadius = Utils.convertDpToPixel(holeRadius);\n+    }\n+\n+    @Override\n+    public float getCircleHoleRadius() {\n+        return mCircleHoleRadius;\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/ILineDataSet.java b/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/ILineDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/ILineDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/ILineDataSet.java\n@@ -38,6 +38,11 @@ public interface ILineDataSet extends ILineRadarDataSet<Entry> {\n      */\n     float getCircleRadius();\n \n+    /**\n+     * Returns the hole radius of the drawn circles.\n+     */\n+    float getCircleHoleRadius();\n+\n     /**\n      * Returns the color at the given index of the DataSet's circle-color array.\n      * Performs a IndexOutOfBounds check by modulus.\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -626,7 +626,9 @@ protected void drawCircles(Canvas c) {\n             int minx = Math.max(dataSet.getEntryIndex(entryFrom) - diff, 0);\n             int maxx = Math.min(Math.max(minx + 2, dataSet.getEntryIndex(entryTo) + 1), entryCount);\n \n-            float halfsize = dataSet.getCircleRadius() / 2f;\n+            float circleRadius = dataSet.getCircleRadius();\n+            float circleHoleRadius = dataSet.getCircleHoleRadius();\n+            boolean isDrawCircleHoleEnabled = dataSet.isDrawCircleHoleEnabled();\n \n             for (int j = minx,\n                  count = (int) Math.ceil((maxx - minx) * phaseX + minx);\n@@ -658,10 +660,11 @@ protected void drawCircles(Canvas c) {\n                 c.drawCircle(circlesBuffer[0], circlesBuffer[1], dataSet.getCircleRadius(),\n                         mRenderPaint);\n \n-                if (dataSet.isDrawCircleHoleEnabled()\n-                        && circleColor != mCirclePaintInner.getColor())\n+                if (isDrawCircleHoleEnabled &&\n+                        circleHoleRadius < circleRadius &&\n+                        circleHoleRadius > 0.f)\n                     c.drawCircle(circlesBuffer[0], circlesBuffer[1],\n-                            halfsize,\n+                            circleHoleRadius,\n                             mCirclePaintInner);\n             }\n         }",
    "output": "Allow more control over circle hole radius"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -261,6 +261,9 @@ protected void onDraw(Canvas canvas) {\n \n         mRenderer.drawExtras(canvas);\n \n+        clipRestoreCount = canvas.save();\n+        canvas.clipRect(mViewPortHandler.getContentRect());\n+        \n         if (!mXAxis.isDrawLimitLinesBehindDataEnabled())\n             mXAxisRenderer.renderLimitLines(canvas);\n \n@@ -270,6 +273,8 @@ protected void onDraw(Canvas canvas) {\n         if (!mAxisRight.isDrawLimitLinesBehindDataEnabled())\n             mAxisRendererRight.renderLimitLines(canvas);\n \n+        canvas.restoreToCount(clipRestoreCount);\n+\n         mXAxisRenderer.renderAxisLabels(canvas);\n         mAxisRendererLeft.renderAxisLabels(canvas);\n         mAxisRendererRight.renderAxisLabels(canvas);",
    "output": "Clip drawing area of limit lines when !isDrawLimitLinesBehindDataEnabled"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n@@ -611,17 +611,16 @@ public static void drawXAxisValue(Canvas c, String text, float x, float y,\n         float drawOffsetX = 0.f;\n         float drawOffsetY = 0.f;\n \n+        final float lineHeight = paint.getFontMetrics(mFontMetricsBuffer);\n         paint.getTextBounds(text, 0, text.length(), mDrawTextRectBuffer);\n \n-        final float lineHeight = mDrawTextRectBuffer.height();\n-\n         // Android sometimes has pre-padding\n         drawOffsetX -= mDrawTextRectBuffer.left;\n \n         // Android does not snap the bounds to line boundaries,\n         //  and draws from bottom to top.\n         // And we want to normalize it.\n-        drawOffsetY += lineHeight;\n+        drawOffsetY += -mFontMetricsBuffer.ascent;\n \n         // To have a consistent point of reference, we always draw left-aligned\n         Paint.Align originalTextAlign = paint.getTextAlign();",
    "output": "I hope this will position x-labels correctly vertically\n\nAnd without any weird hack.\nBut by just finally figuring out how to\ncorrectly offset the drawing from the font glyph size"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -86,7 +86,7 @@ protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n \n         mShadowPaint.setColor(dataSet.getBarShadowColor());\n         mBarBorderPaint.setColor(dataSet.getBarBorderColor());\n-        mBarBorderPaint.setStrokeWidth(Util.convertDpToPixel(dataSet.getBarBorderWidth()));\n+        mBarBorderPaint.setStrokeWidth(Utils.convertDpToPixel(dataSet.getBarBorderWidth()));\n \n         final boolean drawBorder = dataSet.getBarBorderWidth() > 0.f;\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n@@ -53,7 +53,7 @@ protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n \n         mShadowPaint.setColor(dataSet.getBarShadowColor());\n         mBarBorderPaint.setColor(dataSet.getBarBorderColor());\n-        mBarBorderPaint.setStrokeWidth(Util.convertDpToPixel(dataSet.getBarBorderWidth()));\n+        mBarBorderPaint.setStrokeWidth(Utils.convertDpToPixel(dataSet.getBarBorderWidth()));\n \n         final boolean drawBorder = dataSet.getBarBorderWidth() > 0.f;\n ",
    "output": "Fixed typo in Util/Utils"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -86,7 +86,7 @@ protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n \n         mShadowPaint.setColor(dataSet.getBarShadowColor());\n         mBarBorderPaint.setColor(dataSet.getBarBorderColor());\n-        mBarBorderPaint.setStrokeWidth(dataSet.getBarBorderWidth());\n+        mBarBorderPaint.setStrokeWidth(Util.convertDpToPixel(dataSet.getBarBorderWidth()));\n \n         final boolean drawBorder = dataSet.getBarBorderWidth() > 0.f;\n ",
    "output": "These DPs must be converted to pixels"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n@@ -53,7 +53,7 @@ protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n \n         mShadowPaint.setColor(dataSet.getBarShadowColor());\n         mBarBorderPaint.setColor(dataSet.getBarBorderColor());\n-        mBarBorderPaint.setStrokeWidth(dataSet.getBarBorderWidth());\n+        mBarBorderPaint.setStrokeWidth(Util.convertDpToPixel(dataSet.getBarBorderWidth()));\n \n         final boolean drawBorder = dataSet.getBarBorderWidth() > 0.f;\n ",
    "output": "These DPs must be converted to pixels"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n@@ -50,6 +50,7 @@ public void drawData(Canvas c) {\n         }\n     }\n \n+    @SuppressWarnings(\"ResourceAsColor\")\n     protected void drawDataSet(Canvas c, ICandleDataSet dataSet) {\n \n         Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());",
    "output": "Supress false-positive inspection warning"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n@@ -223,8 +223,9 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n \t\t\tdata.setValueFormatter(new MyValueFormatter());\n \n \t\t\tmChart.setData(data);\n-\t\t\tmChart.invalidate();\n \t\t}\n+\n+\t\tmChart.invalidate();\n \t}\n \n \t@Override",
    "output": "Minor fix"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n@@ -7,7 +7,6 @@\n import android.graphics.Paint.Align;\n import android.graphics.Path;\n import android.graphics.PointF;\n-import android.util.Size;\n \n import com.github.mikephil.charting.components.LimitLine;\n import com.github.mikephil.charting.components.XAxis;\n@@ -189,7 +188,7 @@ protected void drawLabels(Canvas c, float pos, PointF anchor) {\n \n     protected void drawLabel(Canvas c, String label, int xIndex, float x, float y, PointF anchor, float angleDegrees) {\n         String formattedLabel = mXAxis.getValueFormatter().getXValue(label, xIndex, mViewPortHandler);\n-        Utils.drawText(c, formattedLabel, x, y, mAxisLabelPaint, anchor, angleDegrees);\n+        Utils.drawXAxisValue(c, formattedLabel, x, y, mAxisLabelPaint, anchor, angleDegrees);\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n@@ -532,22 +532,17 @@ public static float getNormalizedAngle(float angle) {\n \n     private static Rect mDrawTextRectBuffer = new Rect();\n     private static Paint.FontMetrics mFontMetricsBuffer = new Paint.FontMetrics();\n-    private static float mLineHeight = 9999.0f;\n \n-    public static void drawText(Canvas c, String text, float x, float y,\n-                                Paint paint,\n-                                PointF anchor, float angleDegrees) {\n+    public static void drawXAxisValue(Canvas c, String text, float x, float y,\n+                                      Paint paint,\n+                                      PointF anchor, float angleDegrees) {\n \n         float drawOffsetX = 0.f;\n         float drawOffsetY = 0.f;\n \n         paint.getTextBounds(text, 0, text.length(), mDrawTextRectBuffer);\n \n-        if(mDrawTextRectBuffer.height() < mLineHeight){\n-            mLineHeight = mDrawTextRectBuffer.height();\n-        }\n-\n-        final float lineHeight = mLineHeight;\n+        final float lineHeight = mDrawTextRectBuffer.height();\n \n         // Android sometimes has pre-padding\n         drawOffsetX -= mDrawTextRectBuffer.left;",
    "output": "Revert #1684"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java\n@@ -193,6 +193,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n             set1 = (BarDataSet)mChart.getData().getDataSetByIndex(0);\n             set1.setYVals(yVals1);\n             mChart.getData().setXVals(xVals);\n+            mChart.getData().notifyDataChanged();\n             mChart.notifyDataSetChanged();\n         } else {\n             set1 = new BarDataSet(yVals1, \"Data Set\");\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -253,6 +253,7 @@ private void setData(int count, float range) {\n             set1 = (BarDataSet)mChart.getData().getDataSetByIndex(0);\n             set1.setYVals(yVals1);\n             mChart.getData().setXVals(xVals);\n+            mChart.getData().notifyDataChanged();\n             mChart.notifyDataSetChanged();\n         } else {\n             set1 = new BarDataSet(yVals1, \"DataSet\");\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n@@ -222,6 +222,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n             set2.setYVals(yVals2);\n             set3.setYVals(yVals3);\n             mChart.getData().setXVals(xVals);\n+            mChart.getData().notifyDataChanged();\n             mChart.notifyDataSetChanged();\n         } else {\n             // create 3 datasets with different types\n@@ -247,8 +248,9 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n             data.setValueTypeface(tf);\n \n             mChart.setData(data);\n-            mChart.invalidate();\n         }\n+\n+        mChart.invalidate();\n     }\n \n     @Override\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java\n@@ -231,6 +231,7 @@ private void setData(int count) {\n             set = (BarDataSet)mChart.getData().getDataSetByIndex(0);\n             set.setYVals(entries);\n             mChart.getData().setXVals(xVals);\n+            mChart.getData().notifyDataChanged();\n             mChart.notifyDataSetChanged();\n         } else {\n             set = new BarDataSet(entries, \"Sinus Function\");\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java\n@@ -114,6 +114,7 @@ private void setData(List<Data> dataList) {\n                 mChart.getData().getDataSetCount() > 0) {\n             set = (BarDataSet)mChart.getData().getDataSetByIndex(0);\n             set.setYVals(values);\n+            mChart.getData().notifyDataChanged();\n             mChart.notifyDataSetChanged();\n         } else {\n             set = new BarDataSet(values, \"Values\");\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n@@ -249,6 +249,7 @@ private void setData(int count, float range) {\n             set1 = (BarDataSet)mChart.getData().getDataSetByIndex(0);\n             set1.setYVals(yVals1);\n             mChart.getData().setXVals(xVals);\n+            mChart.getData().notifyDataChanged();\n             mChart.notifyDataSetChanged();\n         } else {\n             set1 = new BarDataSet(yVals1, \"DataSet 1\");\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java\n@@ -71,7 +71,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart.setCenterTextTypeface(Typeface.createFromAsset(getAssets(), \"OpenSans-Light.ttf\"));\n         mChart.setCenterText(generateCenterSpannableText());\n \n-        mChart.setExtraOffsets(0.f, 50.f, 0.f, 50.f);\n+        mChart.setExtraOffsets(5.f, 5.f, 5.f, 5.f);\n \n         mChart.setDrawHoleEnabled(true);\n         mChart.setHoleColor(Color.WHITE);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n@@ -209,6 +209,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n \t\t\tset1 = (BarDataSet)mChart.getData().getDataSetByIndex(0);\n \t\t\tset1.setYVals(yVals1);\n \t\t\tmChart.getData().setXVals(xVals);\n+\t\t\tmChart.getData().notifyDataChanged();\n \t\t\tmChart.notifyDataSetChanged();\n \t\t} else {\n \t\t\tset1 = new BarDataSet(yVals1, \"Statistics Vienna 2014\");\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n@@ -546,6 +546,7 @@ public static void drawText(Canvas c, String text, float x, float y,\n         if(mDrawTextRectBuffer.height() < mLineHeight){\n             mLineHeight = mDrawTextRectBuffer.height();\n         }\n+\n         final float lineHeight = mLineHeight;\n \n         // Android sometimes has pre-padding",
    "output": "Fixes related to example"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n@@ -532,6 +532,7 @@ public static float getNormalizedAngle(float angle) {\n \n     private static Rect mDrawTextRectBuffer = new Rect();\n     private static Paint.FontMetrics mFontMetricsBuffer = new Paint.FontMetrics();\n+    private static float mLineHeight = 9999.0f;\n \n     public static void drawText(Canvas c, String text, float x, float y,\n                                 Paint paint,\n@@ -542,7 +543,10 @@ public static void drawText(Canvas c, String text, float x, float y,\n \n         paint.getTextBounds(text, 0, text.length(), mDrawTextRectBuffer);\n \n-        final float lineHeight = mDrawTextRectBuffer.height();\n+        if(mDrawTextRectBuffer.height() < mLineHeight){\n+            mLineHeight = mDrawTextRectBuffer.height();\n+        }\n+        final float lineHeight = mLineHeight;\n \n         // Android sometimes has pre-padding\n         drawOffsetX -= mDrawTextRectBuffer.left;",
    "output": "Merge pull request #1684 from thadeubatista/master\n\n[Resolved] X Axis Labels being cut off horizontally #1657"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n@@ -532,6 +532,7 @@ public static float getNormalizedAngle(float angle) {\n \n     private static Rect mDrawTextRectBuffer = new Rect();\n     private static Paint.FontMetrics mFontMetricsBuffer = new Paint.FontMetrics();\n+    private static float mLineHeight = 9999.0f;\n \n     public static void drawText(Canvas c, String text, float x, float y,\n                                 Paint paint,\n@@ -542,7 +543,10 @@ public static void drawText(Canvas c, String text, float x, float y,\n \n         paint.getTextBounds(text, 0, text.length(), mDrawTextRectBuffer);\n \n-        final float lineHeight = mDrawTextRectBuffer.height();\n+        if(mDrawTextRectBuffer.height() < mLineHeight){\n+            mLineHeight = mDrawTextRectBuffer.height();\n+        }\n+        final float lineHeight = mLineHeight;\n \n         // Android sometimes has pre-padding\n         drawOffsetX -= mDrawTextRectBuffer.left;",
    "output": "ajuste alinhamento de labels da parte inferior do gráfico LineChart"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java\n@@ -30,7 +30,6 @@ public class AnotherBarActivity extends DemoBase implements OnSeekBarChangeListe\n     private BarChart mChart;\n     private SeekBar mSeekBarX, mSeekBarY;\n     private TextView tvX, tvY;\n-    private TextView teste;\n \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {",
    "output": "projeto pronto para ajustes"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java\n@@ -30,6 +30,7 @@ public class AnotherBarActivity extends DemoBase implements OnSeekBarChangeListe\n     private BarChart mChart;\n     private SeekBar mSeekBarX, mSeekBarY;\n     private TextView tvX, tvY;\n+    private TextView teste;\n \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {",
    "output": "teste primeiro commit"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -727,6 +727,10 @@ public Bitmap.Config getBitmapConfig() {\n      * Releases the drawing bitmap. This should be called when {@link LineChart#onDetachedFromWindow()}.\n      */\n     public void releaseBitmap() {\n+        if (mBitmapCanvas != null) {\n+            mBitmapCanvas.setBitmap(null);\n+            mBitmapCanvas = null;\n+        }\n         if (mDrawBitmap != null) {\n             mDrawBitmap.get().recycle();\n             mDrawBitmap.clear();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -919,6 +919,10 @@ protected void drawRoundedSlices(Canvas c) {\n      * Releases the drawing bitmap. This should be called when {@link LineChart#onDetachedFromWindow()}.\n      */\n     public void releaseBitmap() {\n+        if (mBitmapCanvas != null) {\n+            mBitmapCanvas.setBitmap(null);\n+            mBitmapCanvas = null;\n+        }\n         if (mDrawBitmap != null) {\n             mDrawBitmap.get().recycle();\n             mDrawBitmap.clear();",
    "output": "Merge pull request #1682 from brcinho/potential_solution_for_out_of_memory_problems\n\npotential solution to rare out of memory problems"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -736,6 +736,5 @@ public void releaseBitmap() {\n             mDrawBitmap.clear();\n             mDrawBitmap = null;\n         }\n-        System.gc();\n     }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -928,6 +928,5 @@ public void releaseBitmap() {\n             mDrawBitmap.clear();\n             mDrawBitmap = null;\n         }\n-        System.gc();\n     }\n }",
    "output": "Seems that System.gc() call is not necessary"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -727,10 +727,15 @@ public Bitmap.Config getBitmapConfig() {\n      * Releases the drawing bitmap. This should be called when {@link LineChart#onDetachedFromWindow()}.\n      */\n     public void releaseBitmap() {\n+        if (mBitmapCanvas != null) {\n+            mBitmapCanvas.setBitmap(null);\n+            mBitmapCanvas = null;\n+        }\n         if (mDrawBitmap != null) {\n             mDrawBitmap.get().recycle();\n             mDrawBitmap.clear();\n             mDrawBitmap = null;\n         }\n+        System.gc();\n     }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -919,10 +919,15 @@ protected void drawRoundedSlices(Canvas c) {\n      * Releases the drawing bitmap. This should be called when {@link LineChart#onDetachedFromWindow()}.\n      */\n     public void releaseBitmap() {\n+        if (mBitmapCanvas != null) {\n+            mBitmapCanvas.setBitmap(null);\n+            mBitmapCanvas = null;\n+        }\n         if (mDrawBitmap != null) {\n             mDrawBitmap.get().recycle();\n             mDrawBitmap.clear();\n             mDrawBitmap = null;\n         }\n+        System.gc();\n     }\n }",
    "output": "potential solution to rare out of memory problems"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -145,8 +145,6 @@ protected void drawHorizontalBezier(Canvas c, ILineDataSet dataSet) {\n         float phaseX = Math.max(0.f, Math.min(1.f, mAnimator.getPhaseX()));\n         float phaseY = mAnimator.getPhaseY();\n \n-        float intensity = dataSet.getCubicIntensity();\n-\n         cubicPath.reset();\n \n         int size = (int) Math.ceil((maxx - minx) * phaseX + minx);\n@@ -420,7 +418,8 @@ protected void drawLinear(Canvas c, ILineDataSet dataSet) {\n \n             if (e1 != null) {\n \n-                for (int x = count > 1 ? minx + 1 : minx, j = 0; x < count; x++) {\n+                int j = 0;\n+                for (int x = count > 1 ? minx + 1 : minx; x < count; x++) {\n \n                     e1 = dataSet.getEntryForIndex(x == 0 ? 0 : (x - 1));\n                     e2 = dataSet.getEntryForIndex(x);\n@@ -441,14 +440,18 @@ protected void drawLinear(Canvas c, ILineDataSet dataSet) {\n                     mLineBuffer[j++] = e2.getVal() * phaseY;\n                 }\n \n-                trans.pointValuesToPixel(mLineBuffer);\n+                if (j > 0) {\n+                    trans.pointValuesToPixel(mLineBuffer);\n \n-                final int size = Math.max((count - minx - 1) * pointsPerEntryPair, pointsPerEntryPair) * 2;\n+                    final int size =\n+                            Math.max((count - minx - 1) * pointsPerEntryPair, pointsPerEntryPair) *\n+                                    2;\n \n-                mRenderPaint.setColor(dataSet.getColor());\n+                    mRenderPaint.setColor(dataSet.getColor());\n \n-                canvas.drawLines(mLineBuffer, 0, size,\n-                        mRenderPaint);\n+                    canvas.drawLines(mLineBuffer, 0, size,\n+                            mRenderPaint);\n+                }\n             }\n         }\n ",
    "output": "Minor improvements for line rendering"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java\n@@ -192,6 +192,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n                 mChart.getData().getDataSetCount() > 0) {\n             set1 = (BarDataSet)mChart.getData().getDataSetByIndex(0);\n             set1.setYVals(yVals1);\n+            mChart.getData().setXVals(xVals);\n             mChart.notifyDataSetChanged();\n         } else {\n             set1 = new BarDataSet(yVals1, \"Data Set\");\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -252,6 +252,7 @@ private void setData(int count, float range) {\n                 mChart.getData().getDataSetCount() > 0) {\n             set1 = (BarDataSet)mChart.getData().getDataSetByIndex(0);\n             set1.setYVals(yVals1);\n+            mChart.getData().setXVals(xVals);\n             mChart.notifyDataSetChanged();\n         } else {\n             set1 = new BarDataSet(yVals1, \"DataSet\");\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n@@ -221,6 +221,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n             set1.setYVals(yVals1);\n             set2.setYVals(yVals2);\n             set3.setYVals(yVals3);\n+            mChart.getData().setXVals(xVals);\n             mChart.notifyDataSetChanged();\n         } else {\n             // create 3 datasets with different types\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java\n@@ -230,6 +230,7 @@ private void setData(int count) {\n                 mChart.getData().getDataSetCount() > 0) {\n             set = (BarDataSet)mChart.getData().getDataSetByIndex(0);\n             set.setYVals(entries);\n+            mChart.getData().setXVals(xVals);\n             mChart.notifyDataSetChanged();\n         } else {\n             set = new BarDataSet(entries, \"Sinus Function\");\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n@@ -289,6 +289,7 @@ private void setData(int count, float range) {\n                 mChart.getData().getDataSetCount() > 0) {\n             set1 = (LineDataSet)mChart.getData().getDataSetByIndex(0);\n             set1.setYVals(yVals);\n+            mChart.getData().setXVals(xVals);\n             mChart.notifyDataSetChanged();\n         } else {\n             // create a dataset and give it a type\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n@@ -248,6 +248,7 @@ private void setData(int count, float range) {\n                 mChart.getData().getDataSetCount() > 0) {\n             set1 = (BarDataSet)mChart.getData().getDataSetByIndex(0);\n             set1.setYVals(yVals1);\n+            mChart.getData().setXVals(xVals);\n             mChart.notifyDataSetChanged();\n         } else {\n             set1 = new BarDataSet(yVals1, \"DataSet 1\");\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -359,6 +359,7 @@ private void setData(int count, float range) {\n                 mChart.getData().getDataSetCount() > 0) {\n             set1 = (LineDataSet)mChart.getData().getDataSetByIndex(0);\n             set1.setYVals(yVals);\n+            mChart.getData().setXVals(xVals);\n             mChart.notifyDataSetChanged();\n         } else {\n             // create a dataset and give it a type\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n@@ -318,6 +318,7 @@ private void setData(int count, float range) {\n             set2 = (LineDataSet)mChart.getData().getDataSetByIndex(1);\n             set1.setYVals(yVals1);\n             set2.setYVals(yVals2);\n+            mChart.getData().setXVals(xVals);\n             mChart.notifyDataSetChanged();\n         } else {\n             // create a dataset and give it a type\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n@@ -208,6 +208,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n \t\t\t\tmChart.getData().getDataSetCount() > 0) {\n \t\t\tset1 = (BarDataSet)mChart.getData().getDataSetByIndex(0);\n \t\t\tset1.setYVals(yVals1);\n+\t\t\tmChart.getData().setXVals(xVals);\n \t\t\tmChart.notifyDataSetChanged();\n \t\t} else {\n \t\t\tset1 = new BarDataSet(yVals1, \"Statistics Vienna 2014\");",
    "output": "Fixed dataset updates in demos"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -376,6 +376,14 @@ public List<String> getXVals() {\n         return mXVals;\n     }\n \n+    /**\n+     * sets the x-values the chart represents\n+     *\n+     */\n+    public void setXVals(List<String> xVals) {\n+        mXVals = xVals;\n+    }\n+\n     /**\n      * Adds a new x-value to the chart data.\n      *",
    "output": "Allow setting xVals on Data"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n@@ -71,7 +71,7 @@ protected void drawDataSet(Canvas c, IBubbleDataSet dataSet) {\n \n         Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n \n-        float phaseX = mAnimator.getPhaseX();\n+        float phaseX = Math.max(0.f, Math.min(1.f, mAnimator.getPhaseX()));\n         float phaseY = mAnimator.getPhaseY();\n \n         BubbleEntry entryFrom = dataSet.getEntryForXIndex(mMinX);\n@@ -145,7 +145,7 @@ public void drawValues(Canvas c) {\n                 // apply the text-styling defined by the DataSet\n                 applyValueTextStyle(dataSet);\n \n-                final float phaseX = mAnimator.getPhaseX();\n+                final float phaseX = Math.max(0.f, Math.min(1.f, mAnimator.getPhaseX()));\n                 final float phaseY = mAnimator.getPhaseY();\n \n                 BubbleEntry entryFrom = dataSet.getEntryForXIndex(mMinX);\n@@ -194,7 +194,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n         BubbleData bubbleData = mChart.getBubbleData();\n \n-        float phaseX = mAnimator.getPhaseX();\n+        float phaseX = Math.max(0.f, Math.min(1.f, mAnimator.getPhaseX()));\n         float phaseY = mAnimator.getPhaseY();\n \n         for (Highlight indice : indices) {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n@@ -54,7 +54,7 @@ protected void drawDataSet(Canvas c, ICandleDataSet dataSet) {\n \n         Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n \n-        float phaseX = mAnimator.getPhaseX();\n+        float phaseX = Math.max(0.f, Math.min(1.f, mAnimator.getPhaseX()));\n         float phaseY = mAnimator.getPhaseY();\n         float barSpace = dataSet.getBarSpace();\n         boolean showCandleBar = dataSet.getShowCandleBar();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -142,7 +142,7 @@ protected void drawHorizontalBezier(Canvas c, ILineDataSet dataSet) {\n         int minx = Math.max(dataSet.getEntryIndex(entryFrom) - diff, 0);\n         int maxx = Math.min(Math.max(minx + 2, dataSet.getEntryIndex(entryTo) + 1), entryCount);\n \n-        float phaseX = mAnimator.getPhaseX();\n+        float phaseX = Math.max(0.f, Math.min(1.f, mAnimator.getPhaseX()));\n         float phaseY = mAnimator.getPhaseY();\n \n         float intensity = dataSet.getCubicIntensity();\n@@ -208,7 +208,7 @@ protected void drawCubicBezier(Canvas c, ILineDataSet dataSet) {\n         int minx = Math.max(dataSet.getEntryIndex(entryFrom) - diff, 0);\n         int maxx = Math.min(Math.max(minx + 2, dataSet.getEntryIndex(entryTo) + 1), entryCount);\n \n-        float phaseX = mAnimator.getPhaseX();\n+        float phaseX = Math.max(0.f, Math.min(1.f, mAnimator.getPhaseX()));\n         float phaseY = mAnimator.getPhaseY();\n \n         float intensity = dataSet.getCubicIntensity();\n@@ -322,7 +322,7 @@ protected void drawLinear(Canvas c, ILineDataSet dataSet) {\n \n         Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n \n-        float phaseX = mAnimator.getPhaseX();\n+        float phaseX = Math.max(0.f, Math.min(1.f, mAnimator.getPhaseX()));\n         float phaseY = mAnimator.getPhaseY();\n \n         mRenderPaint.setStyle(Paint.Style.STROKE);\n@@ -488,7 +488,7 @@ protected void drawLinearFill(Canvas c, ILineDataSet dataSet, int minx,\n     private Path generateFilledPath(ILineDataSet dataSet, int from, int to) {\n \n         float fillMin = dataSet.getFillFormatter().getFillLinePosition(dataSet, mChart);\n-        float phaseX = mAnimator.getPhaseX();\n+        float phaseX = Math.max(0.f, Math.min(1.f, mAnimator.getPhaseX()));\n         float phaseY = mAnimator.getPhaseY();\n         final boolean isDrawSteppedEnabled = dataSet.isDrawSteppedEnabled();\n \n@@ -593,7 +593,7 @@ protected void drawCircles(Canvas c) {\n \n         mRenderPaint.setStyle(Paint.Style.FILL);\n \n-        float phaseX = mAnimator.getPhaseX();\n+        float phaseX = Math.max(0.f, Math.min(1.f, mAnimator.getPhaseX()));\n         float phaseY = mAnimator.getPhaseY();\n \n         float[] circlesBuffer = new float[2];\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n@@ -61,7 +61,7 @@ protected void drawDataSet(Canvas c, IScatterDataSet dataSet) {\n \n         Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n \n-        float phaseX = mAnimator.getPhaseX();\n+        float phaseX = Math.max(0.f, Math.min(1.f, mAnimator.getPhaseX()));\n         float phaseY = mAnimator.getPhaseY();\n \n         final float shapeSize = Utils.convertDpToPixel(dataSet.getScatterShapeSize());",
    "output": "Fixed crash when phaseX causes entryForIndex to go out of bounds"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java\n@@ -16,6 +16,7 @@ public class BubbleDataSet extends BarLineScatterCandleBubbleDataSet<BubbleEntry\n     protected float mXMax;\n     protected float mXMin;\n     protected float mMaxSize;\n+    protected boolean mNormalizeSize = true;\n \n     private float mHighlightCircleWidth = 2.5f;\n \n@@ -119,6 +120,15 @@ public float getMaxSize() {\n         return mMaxSize;\n     }\n \n+    @Override\n+    public boolean isNormalizeSizeEnabled() {\n+        return mNormalizeSize;\n+    }\n+\n+    public void setNormalizeSizeEnabled(boolean normalizeSize) {\n+        mNormalizeSize = normalizeSize;\n+    }\n+\n     private float yMin(BubbleEntry entry) {\n         return entry.getVal();\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java\n@@ -19,6 +19,7 @@ public class RealmBubbleDataSet<T extends RealmObject> extends RealmBarLineScatt\n     protected float mXMax;\n     protected float mXMin;\n     protected float mMaxSize;\n+    protected boolean mNormalizeSize = true;\n \n     private float mHighlightCircleWidth = 2.5f;\n \n@@ -146,6 +147,15 @@ public float getMaxSize() {\n         return mMaxSize;\n     }\n \n+    @Override\n+    public boolean isNormalizeSizeEnabled() {\n+        return mNormalizeSize;\n+    }\n+\n+    public void setNormalizeSizeEnabled(boolean normalizeSize) {\n+        mNormalizeSize = normalizeSize;\n+    }\n+\n     private float yMin(BubbleEntry entry) {\n         return entry.getVal();\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet.java\n@@ -21,6 +21,8 @@ public interface IBubbleDataSet extends IBarLineScatterCandleBubbleDataSet<Bubbl\n \n     float getMaxSize();\n \n+    boolean isNormalizeSizeEnabled();\n+\n     /**\n      * Returns the width of the highlight-circle that surrounds the bubble\n       * @return\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n@@ -56,8 +56,13 @@ public void drawData(Canvas c) {\n     private float[] sizeBuffer = new float[4];\n     private float[] pointBuffer = new float[2];\n \n-    protected float getShapeSize(float entrySize, float maxSize, float reference) {\n-        final float factor = (maxSize == 0f) ? 1f : (float) Math.sqrt(entrySize / maxSize);\n+    protected float getShapeSize(float entrySize,\n+                                 float maxSize,\n+                                 float reference,\n+                                 boolean normalizeSize) {\n+        final float factor = normalizeSize\n+                ? ((maxSize == 0f) ? 1f : (float) Math.sqrt(entrySize / maxSize))\n+                : entrySize;\n         final float shapeSize = reference * factor;\n         return shapeSize;\n     }\n@@ -80,6 +85,8 @@ protected void drawDataSet(Canvas c, IBubbleDataSet dataSet) {\n \n         trans.pointValuesToPixel(sizeBuffer);\n \n+        boolean normalizeSize = dataSet.isNormalizeSizeEnabled();\n+\n         // calcualte the full width of 1 step on the x-axis\n         final float maxBubbleWidth = Math.abs(sizeBuffer[2] - sizeBuffer[0]);\n         final float maxBubbleHeight = Math.abs(mViewPortHandler.contentBottom() - mViewPortHandler.contentTop());\n@@ -93,7 +100,7 @@ protected void drawDataSet(Canvas c, IBubbleDataSet dataSet) {\n             pointBuffer[1] = (float) (entry.getVal()) * phaseY;\n             trans.pointValuesToPixel(pointBuffer);\n \n-            float shapeHalf = getShapeSize(entry.getSize(), dataSet.getMaxSize(), referenceSize) / 2f;\n+            float shapeHalf = getShapeSize(entry.getSize(), dataSet.getMaxSize(), referenceSize, normalizeSize) / 2f;\n \n             if (!mViewPortHandler.isInBoundsTop(pointBuffer[1] + shapeHalf)\n                     || !mViewPortHandler.isInBoundsBottom(pointBuffer[1] - shapeHalf))\n@@ -214,6 +221,8 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n             trans.pointValuesToPixel(sizeBuffer);\n \n+            boolean normalizeSize = dataSet.isNormalizeSizeEnabled();\n+\n             // calcualte the full width of 1 step on the x-axis\n             final float maxBubbleWidth = Math.abs(sizeBuffer[2] - sizeBuffer[0]);\n             final float maxBubbleHeight = Math.abs(mViewPortHandler.contentBottom() - mViewPortHandler.contentTop());\n@@ -223,7 +232,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             pointBuffer[1] = (float) (entry.getVal()) * phaseY;\n             trans.pointValuesToPixel(pointBuffer);\n \n-            float shapeHalf = getShapeSize(entry.getSize(), dataSet.getMaxSize(), referenceSize) / 2f;\n+            float shapeHalf = getShapeSize(entry.getSize(), dataSet.getMaxSize(), referenceSize, normalizeSize) / 2f;\n \n             if (!mViewPortHandler.isInBoundsTop(pointBuffer[1] + shapeHalf)\n                     || !mViewPortHandler.isInBoundsBottom(pointBuffer[1] - shapeHalf))",
    "output": "Allow bubble sizes to not be normalized against the dataset max"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -1345,7 +1345,7 @@ public int getLowestVisibleXIndex() {\n                 mViewPortHandler.contentLeft(), mViewPortHandler.contentBottom()\n         };\n         getTransformer(AxisDependency.LEFT).pixelsToValue(pts);\n-        return (pts[0] <= 0) ? 0 : (int) (pts[0] + 1.0f);\n+        return (pts[0] <= 0) ? 0 : (int)Math.ceil(pts[0]);\n     }\n \n     /**\n@@ -1360,7 +1360,7 @@ public int getHighestVisibleXIndex() {\n                 mViewPortHandler.contentRight(), mViewPortHandler.contentBottom()\n         };\n         getTransformer(AxisDependency.LEFT).pixelsToValue(pts);\n-        return (pts[0] >= mData.getXValCount()) ? mData.getXValCount() - 1 : (int) pts[0];\n+        return Math.min(mData.getXValCount() - 1, (int)Math.floor(pts[0]));\n     }\n \n     /**",
    "output": "Make these a little clearer"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n@@ -667,7 +667,7 @@ public void setDragOffsetY(float offset) {\n      * @return\n      */\n     public boolean hasNoDragOffset() {\n-        return mTransOffsetX <= 0 && mTransOffsetY <= 0 ? true : false;\n+        return mTransOffsetX <= 0 && mTransOffsetY <= 0;\n     }\n \n     /**",
    "output": "Removed unnecessary ternary expression"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n@@ -442,6 +442,9 @@ public void setMinimumScaleX(float xScale) {\n      */\n     public void setMaximumScaleX(float xScale) {\n \n+        if (xScale == 0.f)\n+            xScale = Float.MAX_VALUE;\n+\n         mMaxScaleX = xScale;\n \n         limitTransAndScale(mMatrixTouch, mContentRect);\n@@ -458,6 +461,9 @@ public void setMinMaxScaleX(float minScaleX, float maxScaleX) {\n         if (minScaleX < 1f)\n             minScaleX = 1f;\n \n+        if (maxScaleX == 0.f)\n+            maxScaleX = Float.MAX_VALUE;\n+\n         mMinScaleX = minScaleX;\n         mMaxScaleX = maxScaleX;\n \n@@ -486,6 +492,9 @@ public void setMinimumScaleY(float yScale) {\n      */\n     public void setMaximumScaleY(float yScale) {\n \n+        if (yScale == 0.f)\n+            yScale = Float.MAX_VALUE;\n+\n         mMaxScaleY = yScale;\n \n         limitTransAndScale(mMatrixTouch, mContentRect);",
    "output": "Avoid division by zeros"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -257,17 +257,16 @@ private void setData(int count, float range) {\n             set1 = new BarDataSet(yVals1, \"DataSet\");\n             set1.setBarSpacePercent(35f);\n             set1.setColors(ColorTemplate.MATERIAL_COLORS);\n-        }\n-\n \n-        ArrayList<IBarDataSet> dataSets = new ArrayList<IBarDataSet>();\n-        dataSets.add(set1);\n+            ArrayList<IBarDataSet> dataSets = new ArrayList<IBarDataSet>();\n+            dataSets.add(set1);\n \n-        BarData data = new BarData(xVals, dataSets);\n-        data.setValueTextSize(10f);\n-        data.setValueTypeface(mTf);\n+            BarData data = new BarData(xVals, dataSets);\n+            data.setValueTextSize(10f);\n+            data.setValueTypeface(mTf);\n \n-        mChart.setData(data);\n+            mChart.setData(data);\n+        }\n     }\n \n     @SuppressLint(\"NewApi\")",
    "output": "Fixed dataset update in demo"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -670,7 +670,9 @@ protected void drawMarkers(Canvas canvas) {\n             int xIndex = highlight.getXIndex();\n             int dataSetIndex = highlight.getDataSetIndex();\n \n-            float deltaX = mXAxis.mAxisRange;\n+            float deltaX = mXAxis != null \n+                ? mXAxis.mAxisRange\n+                : ((mData == null ? 0.f : mData.getXValCount()) - 1.f);\n \n             if (xIndex <= deltaX && xIndex <= deltaX * mAnimator.getPhaseX()) {\n ",
    "output": "Fixed a null exception when using markers with pie chart"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -35,6 +35,7 @@\n import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;\n import com.github.mikephil.charting.interfaces.datasets.IDataSet;\n import com.github.mikephil.charting.listener.OnChartValueSelectedListener;\n+import com.github.mikephil.charting.utils.ColorTemplate;\n import com.xxmassdeveloper.mpchartexample.custom.MyYAxisValueFormatter;\n import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n \n@@ -255,16 +256,18 @@ private void setData(int count, float range) {\n         } else {\n             set1 = new BarDataSet(yVals1, \"DataSet\");\n             set1.setBarSpacePercent(35f);\n+            set1.setColors(ColorTemplate.MATERIAL_COLORS);\n+        }\n \n-            ArrayList<IBarDataSet> dataSets = new ArrayList<IBarDataSet>();\n-            dataSets.add(set1);\n \n-            BarData data = new BarData(xVals, dataSets);\n-            data.setValueTextSize(10f);\n-            data.setValueTypeface(mTf);\n+        ArrayList<IBarDataSet> dataSets = new ArrayList<IBarDataSet>();\n+        dataSets.add(set1);\n \n-            mChart.setData(data);\n-        }\n+        BarData data = new BarData(xVals, dataSets);\n+        data.setValueTextSize(10f);\n+        data.setValueTypeface(mTf);\n+\n+        mChart.setData(data);\n     }\n \n     @SuppressLint(\"NewApi\")\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java b/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java\n@@ -51,6 +51,9 @@ public class ColorTemplate {\n             Color.rgb(192, 255, 140), Color.rgb(255, 247, 140), Color.rgb(255, 208, 140),\n             Color.rgb(140, 234, 255), Color.rgb(255, 140, 157)\n     };\n+    public static final int[] MATERIAL_COLORS = {\n+            rgb(\"#2ecc71\"), rgb(\"#f1c40f\"), rgb(\"#e74c3c\"), rgb(\"#3498db\")\n+    };\n \n     /**\n      * Converts the given hex-color-string to rgb.",
    "output": "Add material colors"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -140,8 +140,10 @@ protected void computeAxisValues(float min, float max) {\n                 double f;\n                 int i;\n                 int n = 0;\n-                for (f = first; f <= last; f += interval) {\n-                    ++n;\n+                if (interval != 0.0) {\n+                    for (f = first; f <= last; f += interval) {\n+                        ++n;\n+                    }\n                 }\n \n                 mYAxis.mEntryCount = n;",
    "output": "Protect loop from infinite loop in the highest of zooms"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -134,8 +134,8 @@ protected void computeAxisValues(float min, float max) {\n \n             } else {\n \n-                double first = Math.ceil(yMin / interval) * interval;\n-                double last = Utils.nextUp(Math.floor(yMax / interval) * interval);\n+                double first = interval == 0.0 ? 0.0 : Math.ceil(yMin / interval) * interval;\n+                double last = interval == 0.0 ? 0.0 : Utils.nextUp(Math.floor(yMax / interval) * interval);\n \n                 double f;\n                 int i;",
    "output": "Avoid division by zero when calculating huge zooms"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java\n@@ -126,6 +126,13 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 mChart.notifyDataSetChanged();\n                 break;\n             }\n+            case R.id.actionToggleBarBorders: {\n+                for (IBarDataSet set : mChart.getData().getDataSets())\n+                    ((BarDataSet)set).setBarBorderWidth(set.getBarBorderWidth() == 1.f ? 0.f : 1.f);\n+\n+                mChart.invalidate();\n+                break;\n+            }\n             case R.id.actionToggleHighlightArrow: {\n                 if (mChart.isDrawHighlightArrowEnabled())\n                     mChart.setDrawHighlightArrow(false);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -167,6 +167,13 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 mChart.notifyDataSetChanged();\n                 break;\n             }\n+            case R.id.actionToggleBarBorders: {\n+                for (IBarDataSet set : mChart.getData().getDataSets())\n+                    ((BarDataSet)set).setBarBorderWidth(set.getBarBorderWidth() == 1.f ? 0.f : 1.f);\n+\n+                mChart.invalidate();\n+                break;\n+            }\n             case R.id.actionToggleHighlightArrow: {\n                 if (mChart.isDrawHighlightArrowEnabled())\n                     mChart.setDrawHighlightArrow(false);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n@@ -135,6 +135,13 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 mChart.notifyDataSetChanged();\n                 break;\n             }\n+            case R.id.actionToggleBarBorders: {\n+                for (IBarDataSet set : mChart.getData().getDataSets())\n+                    ((BarDataSet)set).setBarBorderWidth(set.getBarBorderWidth() == 1.f ? 0.f : 1.f);\n+\n+                mChart.invalidate();\n+                break;\n+            }\n             case R.id.actionToggleHighlight: {\n                 if(mChart.getData() != null) {\n                     mChart.getData().setHighlightEnabled(!mChart.getData().isHighlightEnabled());\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java\n@@ -151,6 +151,13 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 mChart.notifyDataSetChanged();\n                 break;\n             }\n+            case R.id.actionToggleBarBorders: {\n+                for (IBarDataSet set : mChart.getData().getDataSets())\n+                    ((BarDataSet)set).setBarBorderWidth(set.getBarBorderWidth() == 1.f ? 0.f : 1.f);\n+\n+                mChart.invalidate();\n+                break;\n+            }\n             case R.id.actionToggleHighlightArrow: {\n                 if (mChart.isDrawHighlightArrowEnabled())\n                     mChart.setDrawHighlightArrow(false);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n@@ -169,6 +169,13 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 mChart.notifyDataSetChanged();\n                 break;\n             }\n+            case R.id.actionToggleBarBorders: {\n+                for (IBarDataSet set : mChart.getData().getDataSets())\n+                    ((BarDataSet)set).setBarBorderWidth(set.getBarBorderWidth() == 1.f ? 0.f : 1.f);\n+\n+                mChart.invalidate();\n+                break;\n+            }\n             case R.id.actionToggleHighlightArrow: {\n                 if (mChart.isDrawHighlightArrowEnabled())\n                     mChart.setDrawHighlightArrow(false);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n@@ -140,6 +140,13 @@ public boolean onOptionsItemSelected(MenuItem item) {\n \t\t\tmChart.notifyDataSetChanged();\n \t\t\tbreak;\n \t\t}\n+\t\tcase R.id.actionToggleBarBorders: {\n+\t\t\tfor (IBarDataSet set : mChart.getData().getDataSets())\n+\t\t\t\t((BarDataSet)set).setBarBorderWidth(set.getBarBorderWidth() == 1.f ? 0.f : 1.f);\n+\n+\t\t\tmChart.invalidate();\n+\t\t\tbreak;\n+\t\t}\n \t\tcase R.id.actionToggleHighlightArrow: {\n \t\t\tif (mChart.isDrawHighlightArrowEnabled())\n \t\t\t\tmChart.setDrawHighlightArrow(false);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java\n@@ -154,6 +154,13 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 mChart.notifyDataSetChanged();\n                 break;\n             }\n+            case R.id.actionToggleBarBorders: {\n+                for (IBarDataSet set : mChart.getData().getDataSets())\n+                    ((BarDataSet)set).setBarBorderWidth(set.getBarBorderWidth() == 1.f ? 0.f : 1.f);\n+\n+                mChart.invalidate();\n+                break;\n+            }\n             case R.id.actionToggleHighlightArrow: {\n                 if (mChart.isDrawHighlightArrowEnabled())\n                     mChart.setDrawHighlightArrow(false);",
    "output": "Added bar borders to the demo"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/BarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/BarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/BarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/BarDataSet.java\n@@ -26,6 +26,10 @@ public class BarDataSet extends BarLineScatterCandleBubbleDataSet<BarEntry> impl\n      */\n     private int mBarShadowColor = Color.rgb(215, 215, 215);\n \n+    private float mBarBorderWidth = 0.0f;\n+\n+    private int mBarBorderColor = Color.BLACK;\n+\n     /**\n      * the alpha value used to draw the highlight indicator bar\n      */\n@@ -217,6 +221,46 @@ public int getBarShadowColor() {\n         return mBarShadowColor;\n     }\n \n+    /**\n+     * Sets the width used for drawing borders around the bars.\n+     * If borderWidth == 0, no border will be drawn.\n+     *\n+     * @return\n+     */\n+    public void setBarBorderWidth(float width) {\n+        mBarBorderWidth = width;\n+    }\n+\n+    /**\n+     * Returns the width used for drawing borders around the bars.\n+     * If borderWidth == 0, no border will be drawn.\n+     *\n+     * @return\n+     */\n+    @Override\n+    public float getBarBorderWidth() {\n+        return mBarBorderWidth;\n+    }\n+\n+    /**\n+     * Sets the color drawing borders around the bars.\n+     *\n+     * @return\n+     */\n+    public void setBarBorderColor(int color) {\n+        mBarBorderColor = color;\n+    }\n+\n+    /**\n+     * Returns the color drawing borders around the bars.\n+     *\n+     * @return\n+     */\n+    @Override\n+    public int getBarBorderColor() {\n+        return mBarBorderColor;\n+    }\n+\n     /**\n      * Set the alpha value (transparency) that is used for drawing the highlight\n      * indicator bar. min = 0 (fully transparent), max = 255 (fully opaque)\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java\n@@ -34,6 +34,10 @@ public class RealmBarDataSet<T extends RealmObject> extends RealmBarLineScatterC\n      */\n     private int mBarShadowColor = Color.rgb(215, 215, 215);\n \n+    private float mBarBorderWidth = 0.0f;\n+\n+    private int mBarBorderColor = Color.BLACK;\n+\n     /**\n      * the alpha value used to draw the highlight indicator bar\n      */\n@@ -212,6 +216,46 @@ public int getBarShadowColor() {\n         return mBarShadowColor;\n     }\n \n+    /**\n+     * Sets the width used for drawing borders around the bars.\n+     * If borderWidth == 0, no border will be drawn.\n+     *\n+     * @return\n+     */\n+    public void setBarBorderWidth(float width) {\n+        mBarBorderWidth = width;\n+    }\n+\n+    /**\n+     * Returns the width used for drawing borders around the bars.\n+     * If borderWidth == 0, no border will be drawn.\n+     *\n+     * @return\n+     */\n+    @Override\n+    public float getBarBorderWidth() {\n+        return mBarBorderWidth;\n+    }\n+\n+    /**\n+     * Sets the color drawing borders around the bars.\n+     *\n+     * @return\n+     */\n+    public void setBarBorderColor(int color) {\n+        mBarBorderColor = color;\n+    }\n+\n+    /**\n+     * Returns the color drawing borders around the bars.\n+     *\n+     * @return\n+     */\n+    @Override\n+    public int getBarBorderColor() {\n+        return mBarBorderColor;\n+    }\n+\n     /**\n      * Set the alpha value (transparency) that is used for drawing the highlight\n      * indicator bar. min = 0 (fully transparent), max = 255 (fully opaque)\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/IBarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/IBarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/IBarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/IBarDataSet.java\n@@ -37,6 +37,21 @@ public interface IBarDataSet extends IBarLineScatterCandleBubbleDataSet<BarEntry\n      */\n     int getBarShadowColor();\n \n+    /**\n+     * Returns the width used for drawing borders around the bars.\n+     * If borderWidth == 0, no border will be drawn.\n+     *\n+     * @return\n+     */\n+    float getBarBorderWidth();\n+\n+    /**\n+     * Returns the color drawing borders around the bars.\n+     *\n+     * @return\n+     */\n+    int getBarBorderColor();\n+\n     /**\n      * Returns the alpha value (transparency) that is used for drawing the\n      * highlight indicator.\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -31,6 +31,7 @@ public class BarChartRenderer extends DataRenderer {\n     protected BarBuffer[] mBarBuffers;\n \n     protected Paint mShadowPaint;\n+    protected Paint mBarBorderPaint;\n \n     public BarChartRenderer(BarDataProvider chart, ChartAnimator animator,\n             ViewPortHandler viewPortHandler) {\n@@ -45,6 +46,9 @@ public BarChartRenderer(BarDataProvider chart, ChartAnimator animator,\n \n         mShadowPaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n         mShadowPaint.setStyle(Paint.Style.FILL);\n+\n+        mBarBorderPaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n+        mBarBorderPaint.setStyle(Paint.Style.STROKE);\n     }\n \n     @Override\n@@ -81,6 +85,10 @@ protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n         Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n \n         mShadowPaint.setColor(dataSet.getBarShadowColor());\n+        mBarBorderPaint.setColor(dataSet.getBarBorderColor());\n+        mBarBorderPaint.setStrokeWidth(dataSet.getBarBorderWidth());\n+\n+        final boolean drawBorder = dataSet.getBarBorderWidth() > 0.f;\n \n         float phaseX = mAnimator.getPhaseX();\n         float phaseY = mAnimator.getPhaseY();\n@@ -125,11 +133,15 @@ protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n                     break;\n \n                 // Set the color for the currently drawn value. If the index\n-                // is\n-                // out of bounds, reuse colors.\n+                // is out of bounds, reuse colors.\n                 mRenderPaint.setColor(dataSet.getColor(j / 4));\n                 c.drawRect(buffer.buffer[j], buffer.buffer[j + 1], buffer.buffer[j + 2],\n                         buffer.buffer[j + 3], mRenderPaint);\n+\n+                if (drawBorder) {\n+                    c.drawRect(buffer.buffer[j], buffer.buffer[j + 1], buffer.buffer[j + 2],\n+                            buffer.buffer[j + 3], mBarBorderPaint);\n+                }\n             }\n         } else {\n \n@@ -145,6 +157,11 @@ protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n \n                 c.drawRect(buffer.buffer[j], buffer.buffer[j + 1], buffer.buffer[j + 2],\n                         buffer.buffer[j + 3], mRenderPaint);\n+\n+                if (drawBorder) {\n+                    c.drawRect(buffer.buffer[j], buffer.buffer[j + 1], buffer.buffer[j + 2],\n+                            buffer.buffer[j + 3], mBarBorderPaint);\n+                }\n             }\n         }\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n@@ -52,6 +52,10 @@ protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n         Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n \n         mShadowPaint.setColor(dataSet.getBarShadowColor());\n+        mBarBorderPaint.setColor(dataSet.getBarBorderColor());\n+        mBarBorderPaint.setStrokeWidth(dataSet.getBarBorderWidth());\n+\n+        final boolean drawBorder = dataSet.getBarBorderWidth() > 0.f;\n \n         float phaseX = mAnimator.getPhaseX();\n         float phaseY = mAnimator.getPhaseY();\n@@ -82,11 +86,15 @@ protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n             }\n \n             // Set the color for the currently drawn value. If the index\n-            // is\n-            // out of bounds, reuse colors.\n+            // is out of bounds, reuse colors.\n             mRenderPaint.setColor(dataSet.getColor(j / 4));\n             c.drawRect(buffer.buffer[j], buffer.buffer[j + 1], buffer.buffer[j + 2],\n                     buffer.buffer[j + 3], mRenderPaint);\n+\n+            if (drawBorder) {\n+                c.drawRect(buffer.buffer[j], buffer.buffer[j + 1], buffer.buffer[j + 2],\n+                        buffer.buffer[j + 3], mBarBorderPaint);\n+            }\n         }\n     }\n ",
    "output": "Added feature for drawing bar borders"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -232,37 +232,18 @@ protected void drawCubicBezier(Canvas c, ILineDataSet dataSet) {\n             // let the spline start\n             cubicPath.moveTo(cur.getXIndex(), cur.getVal() * phaseY);\n \n-            for (int j = minx + 1, count = Math.min(size, entryCount - 1); j < count; j++) {\n+            for (int j = minx + 1, count = Math.min(size, entryCount); j < count; j++) {\n \n                 prevPrev = dataSet.getEntryForIndex(j == 1 ? 0 : j - 2);\n                 prev = dataSet.getEntryForIndex(j - 1);\n                 cur = dataSet.getEntryForIndex(j);\n-                next = dataSet.getEntryForIndex(j + 1);\n-\n-                prevDx = (cur.getXIndex() - prevPrev.getXIndex()) * intensity;\n-                prevDy = (cur.getVal() - prevPrev.getVal()) * intensity;\n-                curDx = (next.getXIndex() - prev.getXIndex()) * intensity;\n-                curDy = (next.getVal() - prev.getVal()) * intensity;\n-\n-                cubicPath.cubicTo(prev.getXIndex() + prevDx, (prev.getVal() + prevDy) * phaseY,\n-                        cur.getXIndex() - curDx,\n-                        (cur.getVal() - curDy) * phaseY, cur.getXIndex(), cur.getVal() * phaseY);\n-            }\n-\n-            if (size > entryCount - 1) {\n-\n-                prevPrev = dataSet.getEntryForIndex((entryCount >= 3) ? entryCount - 3\n-                        : entryCount - 2);\n-                prev = dataSet.getEntryForIndex(entryCount - 2);\n-                cur = dataSet.getEntryForIndex(entryCount - 1);\n-                next = cur;\n+                next = entryCount > j + 1 ? dataSet.getEntryForIndex(j + 1) : cur;\n \n                 prevDx = (cur.getXIndex() - prevPrev.getXIndex()) * intensity;\n                 prevDy = (cur.getVal() - prevPrev.getVal()) * intensity;\n                 curDx = (next.getXIndex() - prev.getXIndex()) * intensity;\n                 curDy = (next.getVal() - prev.getVal()) * intensity;\n \n-                // the last cubic\n                 cubicPath.cubicTo(prev.getXIndex() + prevDx, (prev.getVal() + prevDy) * phaseY,\n                         cur.getXIndex() - curDx,\n                         (cur.getVal() - curDy) * phaseY, cur.getXIndex(), cur.getVal() * phaseY);",
    "output": "DRYed some code here..."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -103,6 +103,16 @@ public List<T> getYVals() {\n         return mYVals;\n     }\n \n+    /**\n+     * Sets the array of y-values that this DataSet represents, and calls notifyDataSetChanged()\n+     *\n+     * @return\n+     */\n+    public void setYVals(List<T> yVals) {\n+        mYVals = yVals;\n+        notifyDataSetChanged();\n+    }\n+\n     /**\n      * Provides an exact copy of the DataSet this method is used on.\n      *",
    "output": "Make yVals settable"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n@@ -173,6 +173,34 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 mChart.invalidate();\n                 break;\n             }\n+            case R.id.actionToggleStepped: {\n+                List<ILineDataSet> sets = mChart.getData()\n+                        .getDataSets();\n+\n+                for (ILineDataSet iSet : sets) {\n+\n+                    LineDataSet set = (LineDataSet) iSet;\n+                    set.setMode(set.getMode() == LineDataSet.Mode.STEPPED\n+                            ? LineDataSet.Mode.LINEAR\n+                            :  LineDataSet.Mode.STEPPED);\n+                }\n+                mChart.invalidate();\n+                break;\n+            }\n+            case R.id.actionToggleHorizontalCubic: {\n+                List<ILineDataSet> sets = mChart.getData()\n+                        .getDataSets();\n+\n+                for (ILineDataSet iSet : sets) {\n+\n+                    LineDataSet set = (LineDataSet) iSet;\n+                    set.setMode(set.getMode() == LineDataSet.Mode.HORIZONTAL_BEZIER\n+                            ? LineDataSet.Mode.LINEAR\n+                            :  LineDataSet.Mode.HORIZONTAL_BEZIER);\n+                }\n+                mChart.invalidate();\n+                break;\n+            }\n             case R.id.actionTogglePinch: {\n                 if (mChart.isPinchZoomEnabled())\n                     mChart.setPinchZoom(false);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -256,6 +256,20 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 mChart.invalidate();\n                 break;\n             }\n+            case R.id.actionToggleHorizontalCubic: {\n+                List<ILineDataSet> sets = mChart.getData()\n+                        .getDataSets();\n+\n+                for (ILineDataSet iSet : sets) {\n+\n+                    LineDataSet set = (LineDataSet) iSet;\n+                    set.setMode(set.getMode() == LineDataSet.Mode.HORIZONTAL_BEZIER\n+                            ? LineDataSet.Mode.LINEAR\n+                            :  LineDataSet.Mode.HORIZONTAL_BEZIER);\n+                }\n+                mChart.invalidate();\n+                break;\n+            }\n             case R.id.actionTogglePinch: {\n                 if (mChart.isPinchZoomEnabled())\n                     mChart.setPinchZoom(false);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n@@ -215,6 +215,20 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 mChart.invalidate();\n                 break;\n             }\n+            case R.id.actionToggleHorizontalCubic: {\n+                List<ILineDataSet> sets = mChart.getData()\n+                        .getDataSets();\n+\n+                for (ILineDataSet iSet : sets) {\n+\n+                    LineDataSet set = (LineDataSet) iSet;\n+                    set.setMode(set.getMode() == LineDataSet.Mode.HORIZONTAL_BEZIER\n+                            ? LineDataSet.Mode.LINEAR\n+                            :  LineDataSet.Mode.HORIZONTAL_BEZIER);\n+                }\n+                mChart.invalidate();\n+                break;\n+            }\n             case R.id.actionTogglePinch: {\n                 if (mChart.isPinchZoomEnabled())\n                     mChart.setPinchZoom(false);",
    "output": "Add horizontal bezier to the demo"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -232,7 +232,7 @@ public void renderLegend(Canvas c) {\n                     if (direction == Legend.LegendDirection.LEFT_TO_RIGHT)\n                         originPosX -= mLegend.mNeededWidth;\n                 } else // BELOW_CHART_CENTER || ABOVE_CHART_CENTER\n-                    originPosX = mViewPortHandler.contentLeft() + contentWidth / 2.f;\n+                    originPosX = mViewPortHandler.contentLeft() + contentWidth / 2.f + xoffset;\n \n                 FSize[] calculatedLineSizes = mLegend.getCalculatedLineSizes();\n                 FSize[] calculatedLabelSizes = mLegend.getCalculatedLabelSizes();",
    "output": "Include offset in position calculation"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java\n@@ -404,5 +404,22 @@ public void setAxisMaxValue(float max) {\n      * @param dataMin the min value according to chart data\n      * @param dataMax the max value according to chart data\n      */\n-    public abstract void calculate(float dataMin, float dataMax);\n+    public void calculate(float dataMin, float dataMax) {\n+\n+        // if custom, use value as is, else use data value\n+        float min = mCustomAxisMin ? mAxisMinimum : dataMin;\n+        float max = mCustomAxisMax ? mAxisMaximum : dataMax;\n+\n+        // temporary range (before calculations)\n+        float range = Math.abs(max - min);\n+\n+        // in case all values are equal\n+        if (range == 0f) {\n+            max = max + 1f;\n+            min = min - 1f;\n+        }\n+\n+        // actual range\n+        this.mAxisRange = Math.abs(max - min);\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n@@ -255,24 +255,4 @@ public String getLongestLabel() {\n \n         return longest;\n     }\n-\n-    @Override\n-    public void calculate(float dataMin, float dataMax) {\n-\n-        // if custom, use value as is, else use data value\n-        float min = mCustomAxisMin ? mAxisMinimum : dataMin;\n-        float max = mCustomAxisMax ? mAxisMaximum : dataMax;\n-\n-        // temporary range (before calculations)\n-        float range = Math.abs(max - min);\n-\n-        // in case all values are equal\n-        if (range == 0f) {\n-            max = max + 1f;\n-            min = min - 1f;\n-        }\n-\n-        // actual range\n-        this.mAxisRange = Math.abs(max - min);\n-    }\n }",
    "output": "Improve axis calculate method"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java\n@@ -396,4 +396,13 @@ public void setAxisMaxValue(float max) {\n         mCustomAxisMax = true;\n         mAxisMaximum = max;\n     }\n+\n+    /**\n+     * Calculates the minimum / maximum  and range values of the axis with the given\n+     * minimum and maximum values from the chart data.\n+     *\n+     * @param dataMin the min value according to chart data\n+     * @param dataMax the max value according to chart data\n+     */\n+    public abstract void calculate(float dataMin, float dataMax);\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n@@ -255,4 +255,24 @@ public String getLongestLabel() {\n \n         return longest;\n     }\n+\n+    @Override\n+    public void calculate(float dataMin, float dataMax) {\n+\n+        // if custom, use value as is, else use data value\n+        float min = mCustomAxisMin ? mAxisMinimum : dataMin;\n+        float max = mCustomAxisMax ? mAxisMaximum : dataMax;\n+\n+        // temporary range (before calculations)\n+        float range = Math.abs(max - min);\n+\n+        // in case all values are equal\n+        if (range == 0f) {\n+            max = max + 1f;\n+            min = min - 1f;\n+        }\n+\n+        // actual range\n+        this.mAxisRange = Math.abs(max - min);\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n@@ -566,13 +566,7 @@ public boolean needsOffset() {\n             return false;\n     }\n \n-    /**\n-     * Calculates the minimum, maximum, granularity and range values of the YAxis with the given\n-     * minimum and maximum values from the chart data.\n-     *\n-     * @param dataMin the y-min value according to chart data\n-     * @param dataMax the y-max value according to chart data\n-     */\n+    @Override\n     public void calculate(float dataMin, float dataMax) {\n \n         // if custom, use value as is, else use data value",
    "output": "Implement axis calculate method"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java\n@@ -89,6 +89,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         leftAxis.setLabelCount(6, false);\n         leftAxis.setAxisMinValue(-2.5f);\n         leftAxis.setAxisMaxValue(2.5f);\n+        leftAxis.setGranularityEnabled(true);\n         leftAxis.setGranularity(0.1f);\n \n         YAxis rightAxis = mChart.getAxisRight();",
    "output": "Merge"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java\n@@ -16,6 +16,7 @@\n import com.github.mikephil.charting.data.BarData;\n import com.github.mikephil.charting.data.BarDataSet;\n import com.github.mikephil.charting.data.BarEntry;\n+import com.github.mikephil.charting.data.XAxisValue;\n import com.github.mikephil.charting.data.filter.Approximator;\n import com.github.mikephil.charting.data.filter.Approximator.ApproximatorType;\n import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;\n@@ -174,9 +175,11 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n             yVals1.add(new BarEntry((int) val1, i));\n         }\n \n-        ArrayList<String> xVals = new ArrayList<String>();\n+        ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();\n         for (int i = 0; i < mSeekBarX.getProgress() + 1; i++) {\n-            xVals.add((int) yVals1.get(i).getVal() + \"\");\n+\n+            XAxisValue xValue = new XAxisValue(i, (int) yVals1.get(i).getVal() + \"\");\n+            xVals.add(xValue);\n         }\n \n         BarDataSet set1 = new BarDataSet(yVals1, \"Data Set\");\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java\n@@ -22,6 +22,7 @@\n import com.github.mikephil.charting.data.BarData;\n import com.github.mikephil.charting.data.BarDataSet;\n import com.github.mikephil.charting.data.BarEntry;\n+import com.github.mikephil.charting.data.XAxisValue;\n import com.github.mikephil.charting.data.filter.Approximator;\n import com.github.mikephil.charting.data.filter.Approximator.ApproximatorType;\n import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;\n@@ -79,9 +80,6 @@ protected void onCreate(Bundle savedInstanceState) {\n         mTf = Typeface.createFromAsset(getAssets(), \"OpenSans-Regular.ttf\");\n \n         XAxis xAxis = mChart.getXAxis();\n-        xAxis.setPosition(XAxisPosition.BOTTOM);\n-        xAxis.setTypeface(mTf);\n-        xAxis.setDrawGridLines(false);\n         xAxis.setEnabled(false);\n \n         YAxis leftAxis = mChart.getAxisLeft();\n@@ -208,20 +206,17 @@ public void onStopTrackingTouch(SeekBar seekBar) {\n \n     private void setData(int count) {\n \n-        ArrayList<String> xVals = new ArrayList<String>();\n-        \n         ArrayList<BarEntry> entries = new ArrayList<BarEntry>();\n         \n         for (int i = 0; i < count; i++) {\n-            xVals.add(i+\"\");\n             entries.add(mSinusData.get(i));\n         }\n         \n         BarDataSet set = new BarDataSet(entries, \"Sinus Function\");\n         set.setBarSpacePercent(40f);\n         set.setColor(Color.rgb(240, 120, 124));\n \n-        BarData data = new BarData(xVals, set);\n+        BarData data = new BarData(null, set);\n         data.setValueTextSize(10f);\n         data.setValueTypeface(mTf);\n         data.setDrawValues(false);",
    "output": "Start fixing example"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/XAxisValue.java b/MPChartLib/src/com/github/mikephil/charting/data/XAxisValue.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/XAxisValue.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/XAxisValue.java\n@@ -0,0 +1,57 @@\n+package com.github.mikephil.charting.data;\n+\n+/**\n+ * Created by Philipp Jahoda on 03/04/16.\n+ */\n+public class XAxisValue {\n+\n+    /**\n+     * the label that describes this value\n+     */\n+    private String mLabel = \"\";\n+\n+    /**\n+     * the position of this value on the x-axis\n+     */\n+    private double mPosition;\n+\n+    /**\n+     * Constructor.\n+     *\n+     * @param xPosition the position of this value on the x-axis\n+     * @param label     the x-axis label of this value\n+     */\n+    public XAxisValue(double xPosition, String label) {\n+        this.mLabel = label;\n+        this.mPosition = xPosition;\n+    }\n+\n+    /**\n+     * Sets both x-position and label.\n+     *\n+     * @param xPosition\n+     * @param label\n+     */\n+    public void set(double xPosition, String label) {\n+        this.mLabel = label;\n+        this.mPosition = xPosition;\n+    }\n+\n+    /**\n+     * Returns the position (x) of the value on the x-axis.\n+     *\n+     * @return\n+     */\n+    public double getPosition() {\n+        return mPosition;\n+    }\n+\n+    /**\n+     * Returns the x-axis label of this value.\n+     *\n+     * @return\n+     */\n+    public String getLabel() {\n+        return mLabel;\n+    }\n+}",
    "output": "Merge branch 'remove_xindices' of https://github.com/PhilJay/MPAndroidChart into remove_xindices"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java\n@@ -89,6 +89,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         leftAxis.setLabelCount(6, false);\n         leftAxis.setAxisMinValue(-2.5f);\n         leftAxis.setAxisMaxValue(2.5f);\n+        leftAxis.setGranularityEnabled(true);\n         leftAxis.setGranularity(0.1f);\n \n         YAxis rightAxis = mChart.getAxisRight();",
    "output": "Turn on granularity for this example\n\nFor the value to take effect"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/XAxisValue.java b/MPChartLib/src/com/github/mikephil/charting/data/XAxisValue.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/XAxisValue.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/XAxisValue.java\n@@ -0,0 +1,57 @@\n+package com.github.mikephil.charting.data;\n+\n+/**\n+ * Created by Philipp Jahoda on 03/04/16.\n+ */\n+public class XAxisValue {\n+\n+    /**\n+     * the label that describes this value\n+     */\n+    private String mLabel = \"\";\n+\n+    /**\n+     * the position of this value on the x-axis\n+     */\n+    private double mPosition;\n+\n+    /**\n+     * Constructor.\n+     *\n+     * @param xPosition the position of this value on the x-axis\n+     * @param label     the x-axis label of this value\n+     */\n+    public XAxisValue(double xPosition, String label) {\n+        this.mLabel = label;\n+        this.mPosition = xPosition;\n+    }\n+\n+    /**\n+     * Sets both x-position and label.\n+     *\n+     * @param xPosition\n+     * @param label\n+     */\n+    public void set(double xPosition, String label) {\n+        this.mLabel = label;\n+        this.mPosition = xPosition;\n+    }\n+\n+    /**\n+     * Returns the position (x) of the value on the x-axis.\n+     *\n+     * @return\n+     */\n+    public double getPosition() {\n+        return mPosition;\n+    }\n+\n+    /**\n+     * Returns the x-axis label of this value.\n+     *\n+     * @return\n+     */\n+    public String getLabel() {\n+        return mLabel;\n+    }\n+}",
    "output": "Create XAxisValue class"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n@@ -128,7 +128,7 @@ public enum YAxisLabelPosition {\n      * This could happen if two adjacent axis values are rounded to same value.\n      * If using granularity this could be avoided by having fewer axis values visible.\n      */\n-    protected boolean mGranularityEnabled = true;\n+    protected boolean mGranularityEnabled = false;\n \n     /**\n      * the minimum interval between axis values\n@@ -207,7 +207,7 @@ public boolean isGranularityEnabled() {\n     /**\n      * Enabled/disable granularity control on axis value intervals. If enabled, the axis\n      * interval is not allowed to go below a certain granularity (which is either\n-     * auto-calculated, or custom set)\n+     * auto-calculated, or custom set). Default: false\n      *\n      * @param enabled\n      */\n@@ -224,20 +224,21 @@ public float getGranularity() {\n \n     /**\n      * Set a custom minimum interval between axis values (instead of auto-calculation). The axis\n-     * interval can then not go below\n-     * the specified limit. Use resetGranularity() to re-enable auto calculation.\n+     * interval can then not go below the specified limit. Use resetGranularity() to re-enable\n+     * auto calculation. This will automatically enable granularity.\n      * This can be used to avoid label duplicating when zooming in.\n      *\n      * @param granularity\n      */\n     public void setGranularity(float granularity) {\n         mGranularity = granularity;\n+        mGranularityEnabled = true;\n         mCustomGranularity = true;\n     }\n \n     /**\n      * Reset the custom-set granularity. If this method is called, granularity\n-     * is again auto calculated.\n+     * is again auto calculated (if enabled).\n      */\n     public void resetGranularity() {\n         mCustomGranularity = false;",
    "output": "Disable granularity calculation per default"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java\n@@ -35,12 +35,14 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         mTf = Typeface.createFromAsset(getAssets(), \"OpenSans-Bold.ttf\");\n \n-        LineData data = getData(36, 100);\n-        data.setValueTypeface(mTf);\n+        for (int i = 0; i < mCharts.length; i++) {\n+\n+            LineData data = getData(36, 100);\n+            data.setValueTypeface(mTf);\n \n-        for (int i = 0; i < mCharts.length; i++)\n             // add some transparency to the color with \"& 0x90FFFFFF\"\n             setupChart(mCharts[i], data, mColors[i % mColors.length]);\n+        }\n     }\n \n     private int[] mColors = new int[] {\n@@ -52,6 +54,8 @@ protected void onCreate(Bundle savedInstanceState) {\n \n     private void setupChart(LineChart chart, LineData data, int color) {\n \n+        ((LineDataSet) data.getDataSetByIndex(0)).setCircleColor(color);\n+\n         // no description text\n         chart.setDescription(\"\");\n         chart.setNoDataTextDescription(\"You need to provide data for the chart.\");\n@@ -85,6 +89,8 @@ private void setupChart(LineChart chart, LineData data, int color) {\n         l.setEnabled(false);\n \n         chart.getAxisLeft().setEnabled(false);\n+        chart.getAxisLeft().setSpaceTop(40);\n+        chart.getAxisLeft().setSpaceBottom(40);\n         chart.getAxisRight().setEnabled(false);\n \n         chart.getXAxis().setEnabled(false);\n@@ -113,9 +119,9 @@ private LineData getData(int count, float range) {\n         // set1.setFillColor(Color.RED);\n \n         set1.setLineWidth(1.75f);\n-        set1.setCircleRadius(3f);\n+        set1.setCircleRadius(5f);\n         set1.setColor(Color.WHITE);\n-        set1.setCircleColor(Color.WHITE);\n+        set1.setCircleColorHole(Color.WHITE);\n         set1.setHighLightColor(Color.WHITE);\n         set1.setDrawValues(false);\n ",
    "output": "Brush up example"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java\n@@ -226,8 +226,8 @@ private void setData(int count, float range) {\n \n \n         dataSet.setValueLinePart1OffsetPercentage(80.f);\n-        dataSet.setValueLinePart1Length(0.4f);\n-        dataSet.setValueLinePart2Length(0.5f);\n+        dataSet.setValueLinePart1Length(0.3f);\n+        dataSet.setValueLinePart2Length(0.4f);\n         // dataSet.setXValuePosition(PieDataSet.ValuePosition.OUTSIDE_SLICE);\n         dataSet.setYValuePosition(PieDataSet.ValuePosition.OUTSIDE_SLICE);\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/PieDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/PieDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/PieDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/PieDataSet.java\n@@ -19,9 +19,9 @@ public class PieDataSet extends DataSet<Entry> implements IPieDataSet {\n     private ValuePosition mYValuePosition = ValuePosition.INSIDE_SLICE;\n     private int mValueLineColor = 0xff000000;\n     private float mValueLineWidth = 1.0f;\n-    private float mValueLinePart1OffsetPercentage = 50.f;\n-    private float mValueLinePart1Length = 0.1f;\n-    private float mValueLinePart2Length = 0.2f;\n+    private float mValueLinePart1OffsetPercentage = 75.f;\n+    private float mValueLinePart1Length = 0.3f;\n+    private float mValueLinePart2Length = 0.4f;\n     private boolean mValueLineVariableLength = true;\n \n     public PieDataSet(List<Entry> yVals, String label) {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmPieDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmPieDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmPieDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmPieDataSet.java\n@@ -29,9 +29,9 @@ public class RealmPieDataSet<T extends RealmObject> extends RealmBaseDataSet<T,\n     private PieDataSet.ValuePosition mYValuePosition = PieDataSet.ValuePosition.INSIDE_SLICE;\n     private int mValueLineColor = 0xff000000;\n     private float mValueLineWidth = 1.0f;\n-    private float mValueLinePart1OffsetPercentage = 50.f;\n-    private float mValueLinePart1Length = 0.1f;\n-    private float mValueLinePart2Length = 0.2f;\n+    private float mValueLinePart1OffsetPercentage = 75.f;\n+    private float mValueLinePart1Length = 0.3f;\n+    private float mValueLinePart2Length = 0.4f;\n     private boolean mValueLineVariableLength = true;\n \n     /**",
    "output": "Change pie value line default values"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -400,6 +400,10 @@ public void setMinOffset(float minOffset) {\n      */\n     public float getDiameter() {\n         RectF content = mViewPortHandler.getContentRect();\n+        content.left += getExtraLeftOffset();\n+        content.top += getExtraTopOffset();\n+        content.right -= getExtraRightOffset();\n+        content.bottom -= getExtraBottomOffset();\n         return Math.min(content.width(), content.height());\n     }\n ",
    "output": "Take into account extra offsets for pie/radar charts"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/components/Legend.java b/MPChartLib/src/com/github/mikephil/charting/components/Legend.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/Legend.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/Legend.java\n@@ -108,7 +108,7 @@ public Legend() {\n         mTextSize = Utils.convertDpToPixel(10f);\n         mStackSpace = Utils.convertDpToPixel(3f);\n         this.mXOffset = Utils.convertDpToPixel(5f);\n-        this.mYOffset = Utils.convertDpToPixel(4f); // 2\n+        this.mYOffset = Utils.convertDpToPixel(3f); // 2\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -243,7 +243,7 @@ public void renderLegend(Canvas c) {\n                 if (legendPosition == Legend.LegendPosition.ABOVE_CHART_LEFT ||\n                         legendPosition == Legend.LegendPosition.ABOVE_CHART_RIGHT ||\n                         legendPosition == Legend.LegendPosition.ABOVE_CHART_CENTER) {\n-                    posY = 0.f;\n+                    posY = yoffset;\n                 } else {\n                     posY = mViewPortHandler.getChartHeight() - yoffset - mLegend.mNeededHeight;\n                 }",
    "output": "Fix #1637"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -232,7 +232,7 @@ public void renderLegend(Canvas c) {\n                     if (direction == Legend.LegendDirection.LEFT_TO_RIGHT)\n                         originPosX -= mLegend.mNeededWidth;\n                 } else // BELOW_CHART_CENTER || ABOVE_CHART_CENTER\n-                    originPosX = mViewPortHandler.contentLeft() + contentWidth / 2.f - mLegend.mNeededWidth / 2f;\n+                    originPosX = mViewPortHandler.contentLeft() + contentWidth / 2.f;\n \n                 FSize[] calculatedLineSizes = mLegend.getCalculatedLineSizes();\n                 FSize[] calculatedLabelSizes = mLegend.getCalculatedLabelSizes();\n@@ -256,7 +256,10 @@ public void renderLegend(Canvas c) {\n                         posY += labelLineHeight + labelLineSpacing;\n                     }\n \n-                    if (posX == originPosX && legendPosition == Legend.LegendPosition.BELOW_CHART_CENTER && lineIndex < calculatedLineSizes.length) {\n+                    if (posX == originPosX &&\n+                        (legendPosition == Legend.LegendPosition.BELOW_CHART_CENTER ||\n+                        legendPosition == Legend.LegendPosition.ABOVE_CHART_CENTER) &&\n+                        lineIndex < calculatedLineSizes.length) {\n                         posX += (direction == Legend.LegendDirection.RIGHT_TO_LEFT ? calculatedLineSizes[lineIndex].width : -calculatedLineSizes[lineIndex].width) / 2.f;\n                         lineIndex++;\n                     }",
    "output": "Merge"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmUtils.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmUtils.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmUtils.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmUtils.java\n@@ -20,7 +20,7 @@ public final class RealmUtils {\n      */\n     public static List<String> toXVals(RealmResults<? extends RealmObject> result, String xValuesField) {\n \n-        List<String> xVals = new ArrayList<>();\n+        List<String> xVals = new ArrayList<String>();\n \n         for (RealmObject object : result) {\n ",
    "output": "Minor changes"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -232,7 +232,7 @@ public void renderLegend(Canvas c) {\n                     if (direction == Legend.LegendDirection.LEFT_TO_RIGHT)\n                         originPosX -= mLegend.mNeededWidth;\n                 } else // BELOW_CHART_CENTER || ABOVE_CHART_CENTER\n-                    originPosX = mViewPortHandler.contentLeft() + contentWidth / 2.f - mLegend.mNeededWidth / 2f;\n+                    originPosX = mViewPortHandler.contentLeft() + contentWidth / 2.f;\n \n                 FSize[] calculatedLineSizes = mLegend.getCalculatedLineSizes();\n                 FSize[] calculatedLabelSizes = mLegend.getCalculatedLabelSizes();\n@@ -256,7 +256,10 @@ public void renderLegend(Canvas c) {\n                         posY += labelLineHeight + labelLineSpacing;\n                     }\n \n-                    if (posX == originPosX && legendPosition == Legend.LegendPosition.BELOW_CHART_CENTER && lineIndex < calculatedLineSizes.length) {\n+                    if (posX == originPosX &&\n+                        (legendPosition == Legend.LegendPosition.BELOW_CHART_CENTER ||\n+                        legendPosition == Legend.LegendPosition.ABOVE_CHART_CENTER) &&\n+                        lineIndex < calculatedLineSizes.length) {\n                         posX += (direction == Legend.LegendDirection.RIGHT_TO_LEFT ? calculatedLineSizes[lineIndex].width : -calculatedLineSizes[lineIndex].width) / 2.f;\n                         lineIndex++;\n                     }",
    "output": "Corrected legend to center while wrapping in both \"above\" and \"below\"\n\nFixes the bug introduced by 0ee538c"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java\n@@ -320,6 +320,14 @@ public DashPathEffect getGridDashPathEffect() {\n      * ###### BELOW CODE RELATED TO CUSTOM AXIS VALUES ######\n      */\n \n+    public float getAxisMaximum() {\n+        return mAxisMaximum;\n+    }\n+\n+    public float getAxisMinimum() {\n+        return mAxisMinimum;\n+    }\n+\n     /**\n      * By calling this method, any custom maximum value that has been previously set is reseted,\n      * and the calculation is\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -232,7 +232,7 @@ public void renderLegend(Canvas c) {\n                     if (direction == Legend.LegendDirection.LEFT_TO_RIGHT)\n                         originPosX -= mLegend.mNeededWidth;\n                 } else // BELOW_CHART_CENTER || ABOVE_CHART_CENTER\n-                    originPosX = mViewPortHandler.contentLeft() + contentWidth / 2.f;\n+                    originPosX = mViewPortHandler.contentLeft() + contentWidth / 2.f - mLegend.mNeededWidth / 2f;\n \n                 FSize[] calculatedLineSizes = mLegend.getCalculatedLineSizes();\n                 FSize[] calculatedLabelSizes = mLegend.getCalculatedLabelSizes();",
    "output": "Merge"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -246,15 +246,6 @@ protected void onDraw(Canvas canvas) {\n \n         mRenderer.drawData(canvas);\n \n-        if (!mXAxis.isDrawLimitLinesBehindDataEnabled())\n-            mXAxisRenderer.renderLimitLines(canvas);\n-\n-        if (!mAxisLeft.isDrawLimitLinesBehindDataEnabled())\n-            mAxisRendererLeft.renderLimitLines(canvas);\n-\n-        if (!mAxisRight.isDrawLimitLinesBehindDataEnabled())\n-            mAxisRendererRight.renderLimitLines(canvas);\n-\n         // if highlighting is enabled\n         if (valuesToHighlight())\n             mRenderer.drawHighlighted(canvas, mIndicesToHighlight);\n@@ -264,6 +255,15 @@ protected void onDraw(Canvas canvas) {\n \n         mRenderer.drawExtras(canvas);\n \n+        if (!mXAxis.isDrawLimitLinesBehindDataEnabled())\n+            mXAxisRenderer.renderLimitLines(canvas);\n+\n+        if (!mAxisLeft.isDrawLimitLinesBehindDataEnabled())\n+            mAxisRendererLeft.renderLimitLines(canvas);\n+\n+        if (!mAxisRight.isDrawLimitLinesBehindDataEnabled())\n+            mAxisRendererRight.renderLimitLines(canvas);\n+\n         mXAxisRenderer.renderAxisLabels(canvas);\n         mAxisRendererLeft.renderAxisLabels(canvas);\n         mAxisRendererRight.renderAxisLabels(canvas);",
    "output": "Fix issue #1529"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -232,7 +232,7 @@ public void renderLegend(Canvas c) {\n                     if (direction == Legend.LegendDirection.LEFT_TO_RIGHT)\n                         originPosX -= mLegend.mNeededWidth;\n                 } else // BELOW_CHART_CENTER || ABOVE_CHART_CENTER\n-                    originPosX = mViewPortHandler.contentLeft() + contentWidth / 2.f;\n+                    originPosX = mViewPortHandler.contentLeft() + contentWidth / 2.f - mLegend.mNeededWidth / 2f;\n \n                 FSize[] calculatedLineSizes = mLegend.getCalculatedLineSizes();\n                 FSize[] calculatedLabelSizes = mLegend.getCalculatedLabelSizes();",
    "output": "Fix issue #1631"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java\n@@ -320,6 +320,14 @@ public DashPathEffect getGridDashPathEffect() {\n      * ###### BELOW CODE RELATED TO CUSTOM AXIS VALUES ######\n      */\n \n+    public float getAxisMaximum() {\n+        return mAxisMaximum;\n+    }\n+\n+    public float getAxisMinimum() {\n+        return mAxisMinimum;\n+    }\n+\n     /**\n      * By calling this method, any custom maximum value that has been previously set is reseted,\n      * and the calculation is",
    "output": "Add methods for getting axis min and max value"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -174,7 +174,7 @@ private void checkLegal() {\n         if (mDataSets == null)\n             return;\n \n-        if (this instanceof ScatterData)\n+        if (this instanceof ScatterData || this instanceof CombinedData)\n             return;\n \n         for (int i = 0; i < mDataSets.size(); i++) {",
    "output": "Fix #1605"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -161,8 +161,7 @@ public void calculateOffsets() {\n \n     @Override\n     protected void calcMinMax() {\n-        super.calcMinMax();\n-\n+        \n         calcAngles();\n     }\n ",
    "output": "Merge pull request #1623 from KonstantinSchubert/patch-1\n\nAttempt to fix issue #1622"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -161,8 +161,7 @@ public void calculateOffsets() {\n \n     @Override\n     protected void calcMinMax() {\n-        super.calcMinMax();\n-\n+        \n         calcAngles();\n     }\n ",
    "output": "Attempt to fix issue #1622\n\nRemove call to super.calcMinMax() in PieChart."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n@@ -3,7 +3,9 @@\n \n import android.graphics.Color;\n import android.graphics.Typeface;\n+import android.graphics.drawable.Drawable;\n import android.os.Bundle;\n+import android.support.v4.content.ContextCompat;\n import android.view.Menu;\n import android.view.MenuItem;\n import android.view.WindowManager;\n@@ -57,7 +59,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         mSeekBarX.setOnSeekBarChangeListener(this);\n \n         mChart = (LineChart) findViewById(R.id.chart1);\n-        mChart.setViewPortOffsets(0, 20, 0, 0);\n+        mChart.setViewPortOffsets(0, 0, 0, 0);\n         mChart.setBackgroundColor(Color.rgb(104, 241, 175));\n \n         // no description text\n@@ -274,7 +276,7 @@ public float getFillLinePosition(ILineDataSet dataSet, LineDataProvider dataProv\n                 return -10;\n             }\n         });\n-        \n+\n         // create a data object with the datasets\n         LineData data = new LineData(xVals, set1);\n         data.setValueTypeface(tf);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -652,7 +652,7 @@ public void zoomOut() {\n      * @param y\n      */\n     public void zoom(float scaleX, float scaleY, float x, float y) {\n-        Matrix save = mViewPortHandler.zoom(scaleX, scaleY, x, -y);\n+        Matrix save = mViewPortHandler.zoom(scaleX, scaleY, x, y);\n         mViewPortHandler.refresh(save, this, false);\n \n         // Range might have changed, which means that Y-axis labels",
    "output": "Fix issue #1550"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -361,6 +361,8 @@ private void setData(int count, float range) {\n             // fill drawable only supported on api level 18 and above\n             Drawable drawable = ContextCompat.getDrawable(this, R.drawable.fade_red);\n             set1.setFillDrawable(drawable);\n+        } else {\n+            set1.setFillColor(Color.BLACK);\n         }\n \n         ArrayList<ILineDataSet> dataSets = new ArrayList<ILineDataSet>();",
    "output": "Set fill color if drawable is not supported"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -1378,17 +1378,6 @@ public boolean isInverted(AxisDependency axis) {\n         return getAxis(axis).isInverted();\n     }\n \n-    /**\n-     * Returns the object representing all x-labels, this method can be used to\n-     * acquire the XAxis object and modify it (e.g. change the position of the\n-     * labels)\n-     *\n-     * @return\n-     */\n-    public XAxis getXAxis() {\n-        return mXAxis;\n-    }\n-\n     /**\n      * If set to true, both x and y axis can be scaled simultaneously with 2 fingers, if false,\n      * x and y axis can be scaled separately. default: false\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -924,6 +924,18 @@ public void animateXY(int durationMillisX, int durationMillisY) {\n      */\n     /** BELOW THIS ONLY GETTERS AND SETTERS */\n \n+\n+    /**\n+     * Returns the object representing all x-labels, this method can be used to\n+     * acquire the XAxis object and modify it (e.g. change the position of the\n+     * labels, styling, etc.)\n+     *\n+     * @return\n+     */\n+    public XAxis getXAxis() {\n+        return mXAxis;\n+    }\n+\n     /**\n      * Returns the default ValueFormatter that has been determined by the chart\n      * considering the provided minimum and maximum values.\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -9,6 +9,7 @@\n import android.graphics.Typeface;\n import android.util.AttributeSet;\n \n+import com.github.mikephil.charting.components.XAxis;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.PieData;\n import com.github.mikephil.charting.highlight.Highlight;\n@@ -109,6 +110,7 @@ protected void init() {\n         super.init();\n \n         mRenderer = new PieChartRenderer(this, mAnimator, mViewPortHandler);\n+        mXAxis = null;\n     }\n \n     @Override\n@@ -275,6 +277,17 @@ private float calcAngle(float value, float yValueSum) {\n         return value / yValueSum * mMaxAngle;\n     }\n \n+    /**\n+     * This will throw an exception, PieChart has no XAxis object.\n+     *\n+     * @return\n+     */\n+    @Deprecated\n+    @Override\n+    public XAxis getXAxis() {\n+        throw new RuntimeException(\"PieChart has no XAxis\");\n+    }\n+\n     @Override\n     public int getIndexForAngle(float angle) {\n \n@@ -536,7 +549,8 @@ public float getTransparentCircleRadius() {\n     }\n \n     /**\n-     * Sets the amount of transparency the transparent circle should have 0 = fully transparent, 255 = fully opaque.\n+     * Sets the amount of transparency the transparent circle should have 0 = fully transparent,\n+     * 255 = fully opaque.\n      * Default value is 100.\n      *\n      * @param alpha 0-255\n@@ -594,15 +608,17 @@ public boolean isUsePercentValuesEnabled() {\n     }\n \n     /**\n-     * the rectangular radius of the bounding box for the center text, as a percentage of the pie hole\n+     * the rectangular radius of the bounding box for the center text, as a percentage of the pie\n+     * hole\n      * default 1.f (100%)\n      */\n     public void setCenterTextRadiusPercent(float percent) {\n         mCenterTextRadiusPercent = percent;\n     }\n \n     /**\n-     * the rectangular radius of the bounding box for the center text, as a percentage of the pie hole\n+     * the rectangular radius of the bounding box for the center text, as a percentage of the pie\n+     * hole\n      * default 1.f (100%)\n      */\n     public float getCenterTextRadiusPercent() {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -218,16 +218,6 @@ public YAxis getYAxis() {\n         return mYAxis;\n     }\n \n-    /**\n-     * Returns the object that represents all x-labels that are placed around\n-     * the RadarChart.\n-     *\n-     * @return\n-     */\n-    public XAxis getXAxis() {\n-        return mXAxis;\n-    }\n-\n     /**\n      * Sets the width of the web lines that come from the center.\n      *",
    "output": "Move getXAxis() method"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java\n@@ -55,6 +55,24 @@ public abstract class AxisBase extends ComponentBase {\n      */\n     protected boolean mDrawLimitLineBehindData = false;\n \n+    /**\n+     * flag indicating that the axis-min value has been customized\n+     */\n+    protected boolean mCustomAxisMin = false;\n+\n+    /**\n+     * flag indicating that the axis-max value has been customized\n+     */\n+    protected boolean mCustomAxisMax = false;\n+\n+    public float mAxisMaximum = 0f;\n+    public float mAxisMinimum = 0f;\n+\n+    /**\n+     * the total range of values this axis covers\n+     */\n+    public float mAxisRange = 0f;\n+\n     /**\n      * default constructor\n      */\n@@ -206,7 +224,8 @@ public void addLimitLine(LimitLine l) {\n \n         if (mLimitLines.size() > 6) {\n             Log.e(\"MPAndroiChart\",\n-                    \"Warning! You have more than 6 LimitLines on your axis, do you really want that?\");\n+                    \"Warning! You have more than 6 LimitLines on your axis, do you really want \" +\n+                            \"that?\");\n         }\n     }\n \n@@ -296,4 +315,67 @@ public boolean isGridDashedLineEnabled() {\n     public DashPathEffect getGridDashPathEffect() {\n         return mGridDashPathEffect;\n     }\n+\n+    /**\n+     * ###### BELOW CODE RELATED TO CUSTOM AXIS VALUES ######\n+     */\n+\n+    /**\n+     * By calling this method, any custom maximum value that has been previously set is reseted,\n+     * and the calculation is\n+     * done automatically.\n+     */\n+    public void resetAxisMaxValue() {\n+        mCustomAxisMax = false;\n+    }\n+\n+    /**\n+     * Returns true if the axis max value has been customized (and is not calculated automatically)\n+     *\n+     * @return\n+     */\n+    public boolean isAxisMaxCustom() {\n+        return mCustomAxisMax;\n+    }\n+\n+    /**\n+     * By calling this method, any custom minimum value that has been previously set is reseted,\n+     * and the calculation is\n+     * done automatically.\n+     */\n+    public void resetAxisMinValue() {\n+        mCustomAxisMin = false;\n+    }\n+\n+    /**\n+     * Returns true if the axis min value has been customized (and is not calculated automatically)\n+     *\n+     * @return\n+     */\n+    public boolean isAxisMinCustom() {\n+        return mCustomAxisMin;\n+    }\n+\n+    /**\n+     * Set a custom minimum value for this axis. If set, this value will not be calculated automatically depending on\n+     * the provided data. Use resetAxisMinValue() to undo this. Do not forget to call setStartAtZero(false) if you use\n+     * this method. Otherwise, the axis-minimum value will still be forced to 0.\n+     *\n+     * @param min\n+     */\n+    public void setAxisMinValue(float min) {\n+        mCustomAxisMin = true;\n+        mAxisMinimum = min;\n+    }\n+\n+    /**\n+     * Set a custom maximum value for this axis. If set, this value will not be calculated automatically depending on\n+     * the provided data. Use resetAxisMaxValue() to undo this.\n+     *\n+     * @param max\n+     */\n+    public void setAxisMaxValue(float max) {\n+        mCustomAxisMax = true;\n+        mAxisMaximum = max;\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n@@ -78,16 +78,6 @@ public class YAxis extends AxisBase {\n      */\n     protected float mZeroLineWidth = 1f;\n \n-    /**\n-     * flag indicating that the axis-min value has been customized\n-     */\n-    protected boolean mCustomAxisMin = false;\n-\n-    /**\n-     * flag indicating that the axis-max value has been customized\n-     */\n-    protected boolean mCustomAxisMax = false;\n-\n     /**\n      * axis space from the largest value to the top in percent of the total axis range\n      */\n@@ -98,14 +88,6 @@ public class YAxis extends AxisBase {\n      */\n     protected float mSpacePercentBottom = 10f;\n \n-    public float mAxisMaximum = 0f;\n-    public float mAxisMinimum = 0f;\n-\n-    /**\n-     * the total range of values this axis covers\n-     */\n-    public float mAxisRange = 0f;\n-\n     /**\n      * the position of the y-labels relative to the chart\n      */\n@@ -359,53 +341,6 @@ public void setStartAtZero(boolean startAtZero) {\n             resetAxisMinValue();\n     }\n \n-    /**\n-     * Set a custom minimum value for this axis. If set, this value will not be calculated automatically depending on\n-     * the provided data. Use resetAxisMinValue() to undo this. Do not forget to call setStartAtZero(false) if you use\n-     * this method. Otherwise, the axis-minimum value will still be forced to 0.\n-     *\n-     * @param min\n-     */\n-    public void setAxisMinValue(float min) {\n-        mCustomAxisMin = true;\n-        mAxisMinimum = min;\n-    }\n-\n-    /**\n-     * By calling this method, any custom minimum value that has been previously set is reseted, and the calculation is\n-     * done automatically.\n-     */\n-    public void resetAxisMinValue() {\n-        mCustomAxisMin = false;\n-    }\n-\n-    public boolean isAxisMinCustom() {\n-        return mCustomAxisMin;\n-    }\n-\n-    /**\n-     * Set a custom maximum value for this axis. If set, this value will not be calculated automatically depending on\n-     * the provided data. Use resetAxisMaxValue() to undo this.\n-     *\n-     * @param max\n-     */\n-    public void setAxisMaxValue(float max) {\n-        mCustomAxisMax = true;\n-        mAxisMaximum = max;\n-    }\n-\n-    /**\n-     * By calling this method, any custom maximum value that has been previously set is reseted, and the calculation is\n-     * done automatically.\n-     */\n-    public void resetAxisMaxValue() {\n-        mCustomAxisMax = false;\n-    }\n-\n-    public boolean isAxisMaxCustom() {\n-        return mCustomAxisMax;\n-    }\n-\n     /**\n      * Sets the top axis space in percent of the full range. Default 10f\n      *",
    "output": "Move axis min/max related code to AxisBase"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -353,58 +353,12 @@ protected void calcMinMax() {\n         if (mAutoScaleMinMaxEnabled)\n             mData.calcMinMax(getLowestVisibleXIndex(), getHighestVisibleXIndex());\n \n-        float minLeft = !Float.isNaN(mAxisLeft.getAxisMinValue())\n-                ? mAxisLeft.getAxisMinValue()\n-                : mData.getYMin(AxisDependency.LEFT);\n-        float maxLeft = !Float.isNaN(mAxisLeft.getAxisMaxValue())\n-                ? mAxisLeft.getAxisMaxValue()\n-                : mData.getYMax(AxisDependency.LEFT);\n-        float minRight = !Float.isNaN(mAxisRight.getAxisMinValue())\n-                ? mAxisRight.getAxisMinValue()\n-                : mData.getYMin(AxisDependency.RIGHT);\n-        float maxRight = !Float.isNaN(mAxisRight.getAxisMaxValue())\n-                ? mAxisRight.getAxisMaxValue()\n-                : mData.getYMax(AxisDependency.RIGHT);\n-\n-        float leftRange = Math.abs(maxLeft - minLeft);\n-        float rightRange = Math.abs(maxRight - minRight);\n-\n-        // in case all values are equal\n-        if (leftRange == 0f) {\n-            maxLeft = maxLeft + 1f;\n-            minLeft = minLeft - 1f;\n-        }\n-\n-        if (rightRange == 0f) {\n-            maxRight = maxRight + 1f;\n-            minRight = minRight - 1f;\n-        }\n-\n-        float topSpaceLeft = leftRange / 100f * mAxisLeft.getSpaceTop();\n-        float topSpaceRight = rightRange / 100f * mAxisRight.getSpaceTop();\n-        float bottomSpaceLeft = leftRange / 100f * mAxisLeft.getSpaceBottom();\n-        float bottomSpaceRight = rightRange / 100f * mAxisRight.getSpaceBottom();\n-\n         mXChartMax = mData.getXVals().size() - 1;\n         mDeltaX = Math.abs(mXChartMax - mXChartMin);\n \n-        // Use the values as they are\n-        mAxisLeft.mAxisMinimum = !Float.isNaN(mAxisLeft.getAxisMinValue())\n-                ? mAxisLeft.getAxisMinValue()\n-                : (minLeft - bottomSpaceLeft);\n-        mAxisLeft.mAxisMaximum = !Float.isNaN(mAxisLeft.getAxisMaxValue())\n-                ? mAxisLeft.getAxisMaxValue()\n-                : (maxLeft + topSpaceLeft);\n-\n-        mAxisRight.mAxisMinimum = !Float.isNaN(mAxisRight.getAxisMinValue())\n-                ? mAxisRight.getAxisMinValue()\n-                : (minRight - bottomSpaceRight);\n-        mAxisRight.mAxisMaximum = !Float.isNaN(mAxisRight.getAxisMaxValue())\n-                ? mAxisRight.getAxisMaxValue()\n-                : (maxRight + topSpaceRight);\n-\n-        mAxisLeft.mAxisRange = Math.abs(mAxisLeft.mAxisMaximum - mAxisLeft.mAxisMinimum);\n-        mAxisRight.mAxisRange = Math.abs(mAxisRight.mAxisMaximum - mAxisRight.mAxisMinimum);\n+        // calculate axis range (min / max) according to provided data\n+        mAxisLeft.calcMinMax(mData.getYMin(AxisDependency.LEFT), mData.getYMax(AxisDependency.LEFT));\n+        mAxisRight.calcMinMax(mData.getYMin(AxisDependency.RIGHT), mData.getYMax(AxisDependency.RIGHT));\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -107,33 +107,10 @@ protected void init() {\n     protected void calcMinMax() {\n         super.calcMinMax();\n \n-        float minLeft = !Float.isNaN(mYAxis.getAxisMinValue())\n-                ? mYAxis.getAxisMinValue()\n-                : mData.getYMin(AxisDependency.LEFT);\n-        float maxLeft = !Float.isNaN(mYAxis.getAxisMaxValue())\n-                ? mYAxis.getAxisMaxValue()\n-                : mData.getYMax(AxisDependency.LEFT);\n-\n         mXChartMax = mData.getXVals().size() - 1;\n         mDeltaX = Math.abs(mXChartMax - mXChartMin);\n \n-        float leftRange = Math.abs(maxLeft - minLeft);\n-\n-        float topSpaceLeft = leftRange / 100f * mYAxis.getSpaceTop();\n-        float bottomSpaceLeft = leftRange / 100f * mYAxis.getSpaceBottom();\n-\n-        mXChartMax = mData.getXVals().size() - 1;\n-        mDeltaX = Math.abs(mXChartMax - mXChartMin);\n-\n-        // Use the values as they are\n-        mYAxis.mAxisMinimum = !Float.isNaN(mYAxis.getAxisMinValue())\n-                ? mYAxis.getAxisMinValue()\n-                : (minLeft - bottomSpaceLeft);\n-        mYAxis.mAxisMaximum = !Float.isNaN(mYAxis.getAxisMaxValue())\n-                ? mYAxis.getAxisMaxValue()\n-                : (maxLeft + topSpaceLeft);\n-\n-        mYAxis.mAxisRange = Math.abs(mYAxis.mAxisMaximum - mYAxis.mAxisMinimum);\n+        mYAxis.calcMinMax(mData.getYMin(AxisDependency.LEFT), mData.getYMax(AxisDependency.LEFT));\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n@@ -79,14 +79,14 @@ public class YAxis extends AxisBase {\n     protected float mZeroLineWidth = 1f;\n \n     /**\n-     * custom minimum value this axis represents\n+     * flag indicating that the axis-min value has been customized\n      */\n-    protected float mCustomAxisMin = Float.NaN;\n+    protected boolean mCustomAxisMin = false;\n \n     /**\n-     * custom maximum value this axis represents\n+     * flag indicating that the axis-max value has been customized\n      */\n-    protected float mCustomAxisMax = Float.NaN;\n+    protected boolean mCustomAxisMax = false;\n \n     /**\n      * axis space from the largest value to the top in percent of the total axis range\n@@ -359,10 +359,6 @@ public void setStartAtZero(boolean startAtZero) {\n             resetAxisMinValue();\n     }\n \n-    public float getAxisMinValue() {\n-        return mCustomAxisMin;\n-    }\n-\n     /**\n      * Set a custom minimum value for this axis. If set, this value will not be calculated automatically depending on\n      * the provided data. Use resetAxisMinValue() to undo this. Do not forget to call setStartAtZero(false) if you use\n@@ -371,19 +367,20 @@ public float getAxisMinValue() {\n      * @param min\n      */\n     public void setAxisMinValue(float min) {\n-        mCustomAxisMin = min;\n+        mCustomAxisMin = true;\n+        mAxisMinimum = min;\n     }\n \n     /**\n      * By calling this method, any custom minimum value that has been previously set is reseted, and the calculation is\n      * done automatically.\n      */\n     public void resetAxisMinValue() {\n-        mCustomAxisMin = Float.NaN;\n+        mCustomAxisMin = false;\n     }\n \n-    public float getAxisMaxValue() {\n-        return mCustomAxisMax;\n+    public boolean isAxisMinCustom() {\n+        return mCustomAxisMin;\n     }\n \n     /**\n@@ -393,15 +390,20 @@ public float getAxisMaxValue() {\n      * @param max\n      */\n     public void setAxisMaxValue(float max) {\n-        mCustomAxisMax = max;\n+        mCustomAxisMax = true;\n+        mAxisMaximum = max;\n     }\n \n     /**\n      * By calling this method, any custom maximum value that has been previously set is reseted, and the calculation is\n      * done automatically.\n      */\n     public void resetAxisMaxValue() {\n-        mCustomAxisMax = Float.NaN;\n+        mCustomAxisMax = false;\n+    }\n+\n+    public boolean isAxisMaxCustom() {\n+        return mCustomAxisMax;\n     }\n \n     /**\n@@ -604,4 +606,43 @@ public boolean needsOffset() {\n         else\n             return false;\n     }\n+\n+    /**\n+     * Calculates the minimum, maximum and range values of the YAxis with the given\n+     * minimum and maximum values from the chart data.\n+     * @param dataMin the y-min value according to chart data\n+     * @param dataMax the y-max value according to chart data\n+     */\n+    public void calcMinMax(float dataMin, float dataMax) {\n+\n+        // if custom, use value as is, else use data value\n+        float min = mCustomAxisMin ? mAxisMinimum : dataMin;\n+        float max = mCustomAxisMax ? mAxisMaximum : dataMax;\n+\n+        // temporary range (before calculations)\n+        float range = Math.abs(max - min);\n+\n+        // in case all values are equal\n+        if (range == 0f) {\n+            max = max + 1f;\n+            min = min - 1f;\n+        }\n+\n+        // bottom-space only effects non-custom min\n+        if(!mCustomAxisMin) {\n+\n+            float bottomSpace = range / 100f * getSpaceBottom();\n+            this.mAxisMinimum = (min - bottomSpace);\n+        }\n+\n+        // top-space only effects non-custom max\n+        if(!mCustomAxisMax) {\n+\n+            float topSpace = range / 100f * getSpaceTop();\n+            this.mAxisMaximum = (max + topSpace);\n+        }\n+\n+        // calc actual range\n+        this.mAxisRange = Math.abs(this.mAxisMaximum - this.mAxisMinimum);\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n@@ -97,7 +97,7 @@ protected void computeAxisValues(float min, float max) {\n                     ++n;\n                 }\n \n-                if (Float.isNaN(mYAxis.getAxisMaxValue()))\n+                if (!mYAxis.isAxisMaxCustom())\n                     n += 1;\n \n                 mYAxis.mEntryCount = n;",
    "output": "Refactoring and change of axis min/max calculation and custom axis values"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -32,6 +32,7 @@\n import com.github.mikephil.charting.listener.ChartTouchListener;\n import com.github.mikephil.charting.listener.OnChartGestureListener;\n import com.github.mikephil.charting.listener.OnChartValueSelectedListener;\n+import com.github.mikephil.charting.utils.Utils;\n import com.xxmassdeveloper.mpchartexample.custom.MyMarkerView;\n import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n \n@@ -354,10 +355,14 @@ private void setData(int count, float range) {\n         set1.setCircleRadius(3f);\n         set1.setDrawCircleHole(false);\n         set1.setValueTextSize(9f);\n-        Drawable drawable = ContextCompat.getDrawable(this, R.drawable.fade_red);\n-        set1.setFillDrawable(drawable);\n         set1.setDrawFilled(true);\n \n+        if(Utils.getSDKInt() >= 18) {\n+            // fill drawable only supported on api level 18 and above\n+            Drawable drawable = ContextCompat.getDrawable(this, R.drawable.fade_red);\n+            set1.setFillDrawable(drawable);\n+        }\n+\n         ArrayList<ILineDataSet> dataSets = new ArrayList<ILineDataSet>();\n         dataSets.add(set1); // add the datasets\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/animation/ChartAnimator.java b/MPChartLib/src/com/github/mikephil/charting/animation/ChartAnimator.java\n--- a/MPChartLib/src/com/github/mikephil/charting/animation/ChartAnimator.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/animation/ChartAnimator.java\n@@ -11,7 +11,6 @@\n  * \n  * @author Philipp Jahoda\n  */\n-@SuppressLint(\"NewApi\")\n public class ChartAnimator {\n \n     /** object that is updated upon animation update */\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/LineRadarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/LineRadarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/LineRadarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/LineRadarDataSet.java\n@@ -1,6 +1,7 @@\n \n package com.github.mikephil.charting.data;\n \n+import android.annotation.TargetApi;\n import android.graphics.Color;\n import android.graphics.drawable.Drawable;\n \n@@ -72,6 +73,7 @@ public Drawable getFillDrawable() {\n      *\n      * @param drawable\n      */\n+    @TargetApi(18)\n     public void setFillDrawable(Drawable drawable) {\n         this.mFillDrawable = drawable;\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineRadarRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineRadarRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineRadarRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineRadarRenderer.java\n@@ -8,6 +8,7 @@\n import android.graphics.drawable.Drawable;\n \n import com.github.mikephil.charting.animation.ChartAnimator;\n+import com.github.mikephil.charting.utils.Utils;\n import com.github.mikephil.charting.utils.ViewPortHandler;\n \n /**\n@@ -41,7 +42,8 @@ protected void drawFilledPath(Canvas c, Path filledPath, Drawable drawable) {\n \n             c.restore();\n         } else {\n-            throw new RuntimeException(\"Fill-drawables not (yet) supported below API level 18\");\n+            throw new RuntimeException(\"Fill-drawables not (yet) supported below API level 18, \" +\n+                    \"this code was run on API level \" + Utils.getSDKInt() + \".\");\n         }\n     }\n \n@@ -83,7 +85,12 @@ protected void drawFilledPath(Canvas c, Path filledPath, int fillColor, int fill\n         }\n     }\n \n+    /**\n+     * Clip path with hardware acceleration only working properly on API level 18 and above.\n+     *\n+     * @return\n+     */\n     private boolean clipPathSupported() {\n-        return android.os.Build.VERSION.SDK_INT >= 18;\n+        return Utils.getSDKInt() >= 18;\n     }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n@@ -710,4 +710,7 @@ public static FSize getSizeOfRotatedRectangleByRadians(float rectangleWidth, flo\n         );\n     }\n \n+    public static int getSDKInt() {\n+        return android.os.Build.VERSION.SDK_INT;\n+    }\n }",
    "output": "Provide version checks"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineRadarRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineRadarRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineRadarRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineRadarRenderer.java\n@@ -1,7 +1,10 @@\n package com.github.mikephil.charting.renderer;\n \n import android.graphics.Canvas;\n+import android.graphics.Paint;\n import android.graphics.Path;\n+import android.graphics.PorterDuff;\n+import android.graphics.PorterDuffXfermode;\n import android.graphics.drawable.Drawable;\n \n import com.github.mikephil.charting.animation.ChartAnimator;\n@@ -24,16 +27,22 @@ public LineRadarRenderer(ChartAnimator animator, ViewPortHandler viewPortHandler\n      * @param drawable\n      */\n     protected void drawFilledPath(Canvas c, Path filledPath, Drawable drawable) {\n-        c.save();\n-        c.clipPath(filledPath);\n \n-        drawable.setBounds((int) mViewPortHandler.contentLeft(),\n-                (int) mViewPortHandler.contentTop(),\n-                (int) mViewPortHandler.contentRight(),\n-                (int) mViewPortHandler.contentBottom());\n-        drawable.draw(c);\n+        if (clipPathSupported()) {\n \n-        c.restore();\n+            c.save();\n+            c.clipPath(filledPath);\n+\n+            drawable.setBounds((int) mViewPortHandler.contentLeft(),\n+                    (int) mViewPortHandler.contentTop(),\n+                    (int) mViewPortHandler.contentRight(),\n+                    (int) mViewPortHandler.contentBottom());\n+            drawable.draw(c);\n+\n+            c.restore();\n+        } else {\n+            throw new RuntimeException(\"Fill-drawables not (yet) supported below API level 18\");\n+        }\n     }\n \n     /**\n@@ -46,11 +55,35 @@ protected void drawFilledPath(Canvas c, Path filledPath, Drawable drawable) {\n      * @param fillAlpha\n      */\n     protected void drawFilledPath(Canvas c, Path filledPath, int fillColor, int fillAlpha) {\n-        c.save();\n-        c.clipPath(filledPath);\n \n         int color = (fillAlpha << 24) | (fillColor & 0xffffff);\n-        c.drawColor(color);\n-        c.restore();\n+\n+        if (clipPathSupported()) {\n+\n+            c.save();\n+            c.clipPath(filledPath);\n+\n+            c.drawColor(color);\n+            c.restore();\n+        } else {\n+\n+            // save\n+            Paint.Style previous = mRenderPaint.getStyle();\n+            int previousColor = mRenderPaint.getColor();\n+\n+            // set\n+            mRenderPaint.setStyle(Paint.Style.FILL);\n+            mRenderPaint.setColor(color);\n+\n+            c.drawPath(filledPath, mRenderPaint);\n+\n+            // restore\n+            mRenderPaint.setColor(previousColor);\n+            mRenderPaint.setStyle(previous);\n+        }\n+    }\n+\n+    private boolean clipPathSupported() {\n+        return android.os.Build.VERSION.SDK_INT >= 18;\n     }\n }",
    "output": "Fix issue #1601"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -95,7 +95,7 @@ protected void computeAxisValues(float min, float max) {\n             interval = interval < mYAxis.getGranularity() ? mYAxis.getGranularity() : interval;\n \n         // Normalize interval\n-        double intervalMagnitude = Math.pow(10, (int) Math.log10(interval));\n+        double intervalMagnitude = Utils.roundToNextSignificant(Math.pow(10, (int) Math.log10(interval)));\n         int intervalSigDigit = (int) (interval / intervalMagnitude);\n         if (intervalSigDigit > 5) {\n             // Use one order of magnitude higher, to avoid intervals like 0.9 or",
    "output": "Fix #1323"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java b/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java\n@@ -19,13 +19,13 @@ public class ColorTemplate {\n     /**\n      * an \"invalid\" color that indicates that no color is set\n      */\n-    public static final int COLOR_NONE = -1;\n+    public static final int COLOR_NONE = 0x00112233;\n \n     /**\n      * this \"color\" is used for the Legend creation and indicates that the next\n      * form should be skipped\n      */\n-    public static final int COLOR_SKIP = -2;\n+    public static final int COLOR_SKIP = 0x00112234;\n \n     /**\n      * THE COLOR THEMES ARE PREDEFINED (predefined color integer arrays), FEEL",
    "output": "Change values or SKIP and NONE color"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n@@ -66,7 +66,7 @@ public class YAxis extends AxisBase {\n     /**\n      * flag that indicates if the zero-line should be drawn regardless of other grid lines\n      */\n-    protected boolean mDrawZeroLine = true;\n+    protected boolean mDrawZeroLine = false;\n \n     /**\n      * Color of the zero line\n@@ -446,7 +446,7 @@ public boolean isDrawZeroLineEnabled() {\n \n     /**\n      * Set this to true to draw the zero-line regardless of weather other\n-     * grid-lines are enabled or not.\n+     * grid-lines are enabled or not. Default: false\n      *\n      * @param mDrawZeroLine\n      */",
    "output": "Change zero line drawing default to false"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -213,6 +213,8 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n                 if (!mChart.needsHighlight(e.getXIndex(),\n                         mChart.getData().getIndexOfDataSet(dataSet))) {\n \n+                    final boolean accountForSliceSpacing = sliceSpace > 0.f && sliceAngle <= 180.f;\n+\n                     mRenderPaint.setColor(dataSet.getColor(j));\n \n                     final float sliceSpaceAngleOuter = visibleAngleCount == 1 ?\n@@ -254,9 +256,9 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n                             center.y + innerRadius);\n \n                     if (drawInnerArc &&\n-                            (innerRadius > 0.f || sliceSpace > 0.f)) {\n+                            (innerRadius > 0.f || accountForSliceSpacing)) {\n \n-                        if (sliceSpace > 0.f) {\n+                        if (accountForSliceSpacing) {\n                             float minSpacedRadius =\n                                     calculateMinimumRadiusForSpacedSlice(\n                                             center, radius,\n@@ -301,7 +303,7 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n                     else {\n \n                         if (sweepAngleOuter % 360f != 0.f) {\n-                            if (sliceSpace > 0.f) {\n+                            if (accountForSliceSpacing) {\n \n                                 float angleMiddle = startAngleOuter + sweepAngleOuter / 2.f;\n \n@@ -621,6 +623,8 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             highlightedCircleBox.set(mChart.getCircleBox());\n             highlightedCircleBox.inset(-shift, -shift);\n \n+            final boolean accountForSliceSpacing = sliceSpace > 0.f && sliceAngle <= 180.f;\n+\n             mRenderPaint.setColor(set.getColor(xIndex));\n \n             final float sliceSpaceAngleOuter = visibleAngleCount == 1 ?\n@@ -664,7 +668,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             }\n \n             float sliceSpaceRadius = 0.f;\n-            if (sliceSpace > 0.f) {\n+            if (accountForSliceSpacing) {\n                 sliceSpaceRadius =\n                         calculateMinimumRadiusForSpacedSlice(\n                                 center, radius,\n@@ -683,9 +687,9 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n                     center.y + innerRadius);\n \n             if (drawInnerArc &&\n-                    (innerRadius > 0.f || sliceSpace > 0.f)) {\n+                    (innerRadius > 0.f || accountForSliceSpacing)) {\n \n-                if (sliceSpace > 0.f) {\n+                if (accountForSliceSpacing) {\n                     float minSpacedRadius = sliceSpaceRadius;\n \n                     if (minSpacedRadius < 0.f)\n@@ -725,7 +729,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n                 if (sweepAngleOuter % 360f != 0.f) {\n \n-                    if (sliceSpace > 0.0) {\n+                    if (accountForSliceSpacing) {\n                         final float angleMiddle = startAngleOuter + sweepAngleOuter / 2.f;\n \n                         final float arcEndPointX = center.x +",
    "output": "Merge pull request #1595 from danielgindi/pie-improvements\n\nDo not let slice spacing make the chart go haywire. (Fixes #1582)"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -213,6 +213,8 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n                 if (!mChart.needsHighlight(e.getXIndex(),\n                         mChart.getData().getIndexOfDataSet(dataSet))) {\n \n+                    final boolean accountForSliceSpacing = sliceSpace > 0.f && sliceAngle <= 180.f;\n+\n                     mRenderPaint.setColor(dataSet.getColor(j));\n \n                     final float sliceSpaceAngleOuter = visibleAngleCount == 1 ?\n@@ -254,9 +256,9 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n                             center.y + innerRadius);\n \n                     if (drawInnerArc &&\n-                            (innerRadius > 0.f || sliceSpace > 0.f)) {\n+                            (innerRadius > 0.f || accountForSliceSpacing)) {\n \n-                        if (sliceSpace > 0.f) {\n+                        if (accountForSliceSpacing) {\n                             float minSpacedRadius =\n                                     calculateMinimumRadiusForSpacedSlice(\n                                             center, radius,\n@@ -301,7 +303,7 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n                     else {\n \n                         if (sweepAngleOuter % 360f != 0.f) {\n-                            if (sliceSpace > 0.f) {\n+                            if (accountForSliceSpacing) {\n \n                                 float angleMiddle = startAngleOuter + sweepAngleOuter / 2.f;\n \n@@ -621,6 +623,8 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             highlightedCircleBox.set(mChart.getCircleBox());\n             highlightedCircleBox.inset(-shift, -shift);\n \n+            final boolean accountForSliceSpacing = sliceSpace > 0.f && sliceAngle <= 180.f;\n+\n             mRenderPaint.setColor(set.getColor(xIndex));\n \n             final float sliceSpaceAngleOuter = visibleAngleCount == 1 ?\n@@ -664,7 +668,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             }\n \n             float sliceSpaceRadius = 0.f;\n-            if (sliceSpace > 0.f) {\n+            if (accountForSliceSpacing) {\n                 sliceSpaceRadius =\n                         calculateMinimumRadiusForSpacedSlice(\n                                 center, radius,\n@@ -683,9 +687,9 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n                     center.y + innerRadius);\n \n             if (drawInnerArc &&\n-                    (innerRadius > 0.f || sliceSpace > 0.f)) {\n+                    (innerRadius > 0.f || accountForSliceSpacing)) {\n \n-                if (sliceSpace > 0.f) {\n+                if (accountForSliceSpacing) {\n                     float minSpacedRadius = sliceSpaceRadius;\n \n                     if (minSpacedRadius < 0.f)\n@@ -725,7 +729,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n                 if (sweepAngleOuter % 360f != 0.f) {\n \n-                    if (sliceSpace > 0.0) {\n+                    if (accountForSliceSpacing) {\n                         final float angleMiddle = startAngleOuter + sweepAngleOuter / 2.f;\n \n                         final float arcEndPointX = center.x +",
    "output": "Do not let slice spacing make the chart go haywire. (Fixes #1582)\n\nIf the user provides data that does not allow the spacing to stay even -\nhe will need to manually fix that (i.e by giving a larger inner hole)\n\nEven with a hole - with very small slices it will not help.\nSpacing could be reduces, and small slices can be removed from the dataset."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -160,17 +160,6 @@ protected void drawCubic(Canvas c, ILineDataSet dataSet) {\n             // let the spline start\n             cubicPath.moveTo(cur.getXIndex(), cur.getVal() * phaseY);\n \n-            prevDx = (cur.getXIndex() - prev.getXIndex()) * intensity;\n-            prevDy = (cur.getVal() - prev.getVal()) * intensity;\n-\n-            curDx = (next.getXIndex() - cur.getXIndex()) * intensity;\n-            curDy = (next.getVal() - cur.getVal()) * intensity;\n-\n-            // the first cubic\n-            cubicPath.cubicTo(prev.getXIndex() + prevDx, (prev.getVal() + prevDy) * phaseY,\n-                    cur.getXIndex() - curDx,\n-                    (cur.getVal() - curDy) * phaseY, cur.getXIndex(), cur.getVal() * phaseY);\n-\n             for (int j = minx + 1, count = Math.min(size, entryCount - 1); j < count; j++) {\n \n                 prevPrev = dataSet.getEntryForIndex(j == 1 ? 0 : j - 2);",
    "output": "Merge pull request #1594 from danielgindi/cubic-leak-fix\n\nFixed cubic line \"leak\" on first point."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n@@ -123,6 +123,20 @@ public enum YAxisLabelPosition {\n      */\n     private AxisDependency mAxisDependency;\n \n+    /**\n+     * the minimum width that the axis should take (in dp).\n+     *\n+     * default: 0.0\n+     */\n+    protected float mMinWidth = 0.f;\n+\n+    /**\n+     * the maximum width that the axis can take (in dp).\n+     * use Inifinity for disabling the maximum\n+     * default: Float.POSITIVE_INFINITY (no maximum specified)\n+     */\n+    protected float mMaxWidth = Float.POSITIVE_INFINITY;\n+\n     /**\n      * When true, axis labels are controlled by the `granularity` property.\n      * When false, axis values could possibly be repeated.\n@@ -161,6 +175,36 @@ public AxisDependency getAxisDependency() {\n         return mAxisDependency;\n     }\n \n+    /**\n+     * @return the minimum width that the axis should take (in dp).\n+     */\n+    public float getMinWidth() {\n+        return mMinWidth;\n+    }\n+\n+    /**\n+     * Sets the minimum width that the axis should take (in dp).\n+     * @param minWidth\n+     */\n+    public void setMinWidth(float minWidth) {\n+        mMinWidth = minWidth;\n+    }\n+\n+    /**\n+     * @return the maximum width that the axis can take (in dp).\n+     */\n+    public float getMaxWidth() {\n+        return mMaxWidth;\n+    }\n+\n+    /**\n+     * Sets the maximum width that the axis can take (in dp).\n+     * @param maxWidth\n+     */\n+    public void setMaxWidth(float maxWidth) {\n+        mMaxWidth = maxWidth;\n+    }\n+\n     /**\n      * @return true if granularity is enabled\n      */\n@@ -447,7 +491,20 @@ public float getRequiredWidthSpace(Paint p) {\n         p.setTextSize(mTextSize);\n \n         String label = getLongestLabel();\n-        return (float) Utils.calcTextWidth(p, label) + getXOffset() * 2f;\n+        float width = (float) Utils.calcTextWidth(p, label) + getXOffset() * 2f;\n+\n+        float minWidth = getMinWidth();\n+        float maxWidth = getMaxWidth();\n+\n+        if (minWidth > 0.f)\n+            minWidth = Utils.convertDpToPixel(minWidth);\n+\n+        if (maxWidth > 0.f && maxWidth != Float.POSITIVE_INFINITY)\n+            maxWidth = Utils.convertDpToPixel(maxWidth);\n+\n+        width = Math.max(minWidth, Math.min(width, maxWidth > 0.0 ? maxWidth : width));\n+        \n+        return width;\n     }\n \n     /**",
    "output": "Merge pull request #1593 from danielgindi/yaxis-width-limits\n\nAdded feature for min/max width limits on yAxis"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -160,17 +160,6 @@ protected void drawCubic(Canvas c, ILineDataSet dataSet) {\n             // let the spline start\n             cubicPath.moveTo(cur.getXIndex(), cur.getVal() * phaseY);\n \n-            prevDx = (cur.getXIndex() - prev.getXIndex()) * intensity;\n-            prevDy = (cur.getVal() - prev.getVal()) * intensity;\n-\n-            curDx = (next.getXIndex() - cur.getXIndex()) * intensity;\n-            curDy = (next.getVal() - cur.getVal()) * intensity;\n-\n-            // the first cubic\n-            cubicPath.cubicTo(prev.getXIndex() + prevDx, (prev.getVal() + prevDy) * phaseY,\n-                    cur.getXIndex() - curDx,\n-                    (cur.getVal() - curDy) * phaseY, cur.getXIndex(), cur.getVal() * phaseY);\n-\n             for (int j = minx + 1, count = Math.min(size, entryCount - 1); j < count; j++) {\n \n                 prevPrev = dataSet.getEntryForIndex(j == 1 ? 0 : j - 2);",
    "output": "Fixed cubic line \"leak\" on first point.\n\nSince lately we've done many fixes to the calculation for first/last\n  points in cubic drawing - we not do not need that first \"add curve\".\n\nRelated issue: https://github.com/danielgindi/ios-charts/issues/683"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n@@ -123,6 +123,20 @@ public enum YAxisLabelPosition {\n      */\n     private AxisDependency mAxisDependency;\n \n+    /**\n+     * the minimum width that the axis should take (in dp).\n+     *\n+     * default: 0.0\n+     */\n+    protected float mMinWidth = 0.f;\n+\n+    /**\n+     * the maximum width that the axis can take (in dp).\n+     * use Inifinity for disabling the maximum\n+     * default: Float.POSITIVE_INFINITY (no maximum specified)\n+     */\n+    protected float mMaxWidth = Float.POSITIVE_INFINITY;\n+\n     /**\n      * When true, axis labels are controlled by the `granularity` property.\n      * When false, axis values could possibly be repeated.\n@@ -161,6 +175,36 @@ public AxisDependency getAxisDependency() {\n         return mAxisDependency;\n     }\n \n+    /**\n+     * @return the minimum width that the axis should take (in dp).\n+     */\n+    public float getMinWidth() {\n+        return mMinWidth;\n+    }\n+\n+    /**\n+     * Sets the minimum width that the axis should take (in dp).\n+     * @param minWidth\n+     */\n+    public void setMinWidth(float minWidth) {\n+        mMinWidth = minWidth;\n+    }\n+\n+    /**\n+     * @return the maximum width that the axis can take (in dp).\n+     */\n+    public float getMaxWidth() {\n+        return mMaxWidth;\n+    }\n+\n+    /**\n+     * Sets the maximum width that the axis can take (in dp).\n+     * @param maxWidth\n+     */\n+    public void setMaxWidth(float maxWidth) {\n+        mMaxWidth = maxWidth;\n+    }\n+\n     /**\n      * @return true if granularity is enabled\n      */\n@@ -447,7 +491,20 @@ public float getRequiredWidthSpace(Paint p) {\n         p.setTextSize(mTextSize);\n \n         String label = getLongestLabel();\n-        return (float) Utils.calcTextWidth(p, label) + getXOffset() * 2f;\n+        float width = (float) Utils.calcTextWidth(p, label) + getXOffset() * 2f;\n+\n+        float minWidth = getMinWidth();\n+        float maxWidth = getMaxWidth();\n+\n+        if (minWidth > 0.f)\n+            minWidth = Utils.convertDpToPixel(minWidth);\n+\n+        if (maxWidth > 0.f && maxWidth != Float.POSITIVE_INFINITY)\n+            maxWidth = Utils.convertDpToPixel(maxWidth);\n+\n+        width = Math.max(minWidth, Math.min(width, maxWidth > 0.0 ? maxWidth : width));\n+        \n+        return width;\n     }\n \n     /**",
    "output": "Added feature for min/max width limits on yAxis"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n@@ -114,6 +114,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         leftAxis.setAxisMaxValue(200f);\n         leftAxis.setAxisMinValue(0f);\n         leftAxis.setDrawGridLines(true);\n+        leftAxis.setGranularityEnabled(true);\n \n         YAxis rightAxis = mChart.getAxisRight();\n         rightAxis.setTypeface(tf);\n@@ -122,6 +123,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         rightAxis.setAxisMinValue(-200);\n         rightAxis.setDrawGridLines(false);\n         rightAxis.setDrawZeroLine(false);\n+        rightAxis.setGranularityEnabled(false);\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n@@ -123,6 +123,19 @@ public enum YAxisLabelPosition {\n      */\n     private AxisDependency mAxisDependency;\n \n+    /**\n+     * When true, axis labels are controlled by the `granularity` property.\n+     * When false, axis values could possibly be repeated.\n+     * This could happen if two adjacent axis values are rounded to same value.\n+     * If using granularity this could be avoided by having fewer axis values visible.\n+     */\n+    protected boolean mGranularityEnabled = true;\n+\n+    /**\n+     * the minimum interval between axis values\n+     */\n+    protected float mGranularity = 1.0f;\n+\n     /**\n      * Enum that specifies the axis a DataSet should be plotted against, either LEFT or RIGHT.\n      *\n@@ -148,6 +161,36 @@ public AxisDependency getAxisDependency() {\n         return mAxisDependency;\n     }\n \n+    /**\n+     * @return true if granularity is enabled\n+     */\n+    public boolean isGranularityEnabled() {\n+        return mGranularityEnabled;\n+    }\n+\n+    /**\n+     * Enabled/disable granularity control on axis value intervals\n+     * @param enabled\n+     */\n+    public void setGranularityEnabled(boolean enabled) {\n+        mGranularityEnabled = true;\n+    }\n+\n+    /**\n+     * @return the minimum interval between axis values\n+     */\n+    public float getGranularity() {\n+        return mGranularity;\n+    }\n+\n+    /**\n+     * set the minimum interval between axis values\n+     * @param granularity\n+     */\n+    public void setGranularity(float granularity) {\n+        mGranularity = granularity;\n+    }\n+\n     /**\n      * returns the position of the y-labels\n      */\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -85,8 +85,16 @@ protected void computeAxisValues(float min, float max) {\n             return;\n         }\n \n+        // Find out how much spacing (in y value space) between axis values\n         double rawInterval = range / labelCount;\n         double interval = Utils.roundToNextSignificant(rawInterval);\n+\n+        // If granularity is enabled, then do not allow the interval to go below specified granularity.\n+        // This is used to avoid repeated values when rounding values for display.\n+        if (mYAxis.isGranularityEnabled())\n+            interval = interval < mYAxis.getGranularity() ? mYAxis.getGranularity() : interval;\n+\n+        // Normalize interval\n         double intervalMagnitude = Math.pow(10, (int) Math.log10(interval));\n         int intervalSigDigit = (int) (interval / intervalMagnitude);\n         if (intervalSigDigit > 5) {",
    "output": "Prevent repeated y-axis values by controlling granularity"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -1615,6 +1615,8 @@ protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n             //Restoring old position of chart.\n             getTransformer(AxisDependency.LEFT).pointValuesToPixel(pts);\n             mViewPortHandler.centerViewPort(pts, this);\n+        } else {\n+            mViewPortHandler.refresh(mViewPortHandler.getMatrixTouch(), this, true);\n         }\n     }\n }",
    "output": "Fixed a bug where after rotation/resize the matrix stays out of bounds\n\nThis bug existed before \"keepPositionOnRotation\".\nIn my opinion - keepPositionOnRotation should be default..."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -1598,16 +1598,19 @@ public Paint getPaint(int which) {\n \n     @Override\n     protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n-        //Saving current position of chart.\n+            \n+        // Saving current position of chart.\n         float[] pts = new float[2];\n-        pts[0] = mViewPortHandler.contentLeft();\n-        pts[1] = mViewPortHandler.contentTop();\n-        getTransformer(AxisDependency.LEFT).pixelsToValue(pts);\n+        if (mKeepPositionOnRotation) {\n+            pts[0] = mViewPortHandler.contentLeft();\n+            pts[1] = mViewPortHandler.contentTop();\n+            getTransformer(AxisDependency.LEFT).pixelsToValue(pts);\n+        }\n \n         //Superclass transforms chart.\n         super.onSizeChanged(w, h, oldw, oldh);\n \n-        if(mKeepPositionOnRotation) {\n+        if (mKeepPositionOnRotation) {\n \n             //Restoring old position of chart.\n             getTransformer(AxisDependency.LEFT).pointValuesToPixel(pts);",
    "output": "Avoid extra computed when not needed"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n@@ -171,7 +171,7 @@ public float getShadowWidth() {\n      *\n      * @param showCandleBar\n      */\n-    public void setShadowWidth(boolean showCandleBar) {\n+    public void setShowCandleBar(boolean showCandleBar) {\n         mShowCandleBar = showCandleBar;\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n@@ -215,7 +215,7 @@ public float getShadowWidth() {\n      *\n      * @param showCandleBar\n      */\n-    public void setShadowWidth(boolean showCandleBar) {\n+    public void setShowCandleBar(boolean showCandleBar) {\n         mShowCandleBar = showCandleBar;\n     }\n ",
    "output": "Fix #1584"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -293,25 +293,6 @@ protected void onDraw(Canvas canvas) {\n         }\n     }\n \n-    @Override\n-    protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n-        //Saving current position of chart.\n-        float[] pts = new float[2];\n-        pts[0] = mViewPortHandler.contentLeft();\n-        pts[1] = mViewPortHandler.contentTop();\n-        getTransformer(AxisDependency.LEFT).pixelsToValue(pts);\n-\n-        //Superclass transforms chart.\n-        super.onSizeChanged(w, h, oldw, oldh);\n-\n-        if(mKeepPositionOnRotation) {\n-\n-            //Restoring old position of chart.\n-            getTransformer(AxisDependency.LEFT).pointValuesToPixel(pts);\n-            mViewPortHandler.centerViewPort(pts, this);\n-        }\n-    }\n-\n     /**\n      * RESET PERFORMANCE TRACKING FIELDS\n      */\n@@ -1614,4 +1595,23 @@ public Paint getPaint(int which) {\n \n         return null;\n     }\n+\n+    @Override\n+    protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n+        //Saving current position of chart.\n+        float[] pts = new float[2];\n+        pts[0] = mViewPortHandler.contentLeft();\n+        pts[1] = mViewPortHandler.contentTop();\n+        getTransformer(AxisDependency.LEFT).pixelsToValue(pts);\n+\n+        //Superclass transforms chart.\n+        super.onSizeChanged(w, h, oldw, oldh);\n+\n+        if(mKeepPositionOnRotation) {\n+\n+            //Restoring old position of chart.\n+            getTransformer(AxisDependency.LEFT).pointValuesToPixel(pts);\n+            mViewPortHandler.centerViewPort(pts, this);\n+        }\n+    }\n }",
    "output": "Move onSizeChanged(...)"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -304,9 +304,12 @@ protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n         //Superclass transforms chart.\n         super.onSizeChanged(w, h, oldw, oldh);\n \n-        //Restoring old position of chart.\n-        getTransformer(AxisDependency.LEFT).pointValuesToPixel(pts);\n-        mViewPortHandler.centerViewPort(pts, this);\n+        if(mKeepPositionOnRotation) {\n+\n+            //Restoring old position of chart.\n+            getTransformer(AxisDependency.LEFT).pointValuesToPixel(pts);\n+            mViewPortHandler.centerViewPort(pts, this);\n+        }\n     }\n \n     /**\n@@ -1238,7 +1241,7 @@ public boolean isKeepPositionOnRotation() {\n     }\n \n     /**\n-     * Sets the whether the chart should keep its position after a rotation.\n+     * Sets whether the chart should keep its position (zoom / scroll) after a rotation (orientation change)\n      */\n     public void setKeepPositionOnRotation(boolean keepPositionOnRotation) {\n         mKeepPositionOnRotation = keepPositionOnRotation;",
    "output": "Minor fix related to #1565"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -106,6 +106,11 @@ public abstract class BarLineChartBase<T extends BarLineScatterCandleBubbleData<\n      */\n     protected float mMinOffset = 15.f;\n \n+    /**\n+     * flag indicating if the chart should stay at the same position after a rotation. Default is false.\n+     */\n+    protected boolean mKeepPositionOnRotation = false;\n+\n     /**\n      * the listener for user drawing on the chart\n      */\n@@ -288,6 +293,22 @@ protected void onDraw(Canvas canvas) {\n         }\n     }\n \n+    @Override\n+    protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n+        //Saving current position of chart.\n+        float[] pts = new float[2];\n+        pts[0] = mViewPortHandler.contentLeft();\n+        pts[1] = mViewPortHandler.contentTop();\n+        getTransformer(AxisDependency.LEFT).pixelsToValue(pts);\n+\n+        //Superclass transforms chart.\n+        super.onSizeChanged(w, h, oldw, oldh);\n+\n+        //Restoring old position of chart.\n+        getTransformer(AxisDependency.LEFT).pointValuesToPixel(pts);\n+        mViewPortHandler.centerViewPort(pts, this);\n+    }\n+\n     /**\n      * RESET PERFORMANCE TRACKING FIELDS\n      */\n@@ -1209,6 +1230,20 @@ public void setMinOffset(float minOffset) {\n         mMinOffset = minOffset;\n     }\n \n+    /**\n+     * Returns true if keeping the position on rotation is enabled and false if not.\n+     */\n+    public boolean isKeepPositionOnRotation() {\n+        return mKeepPositionOnRotation;\n+    }\n+\n+    /**\n+     * Sets the whether the chart should keep its position after a rotation.\n+     */\n+    public void setKeepPositionOnRotation(boolean keepPositionOnRotation) {\n+        mKeepPositionOnRotation = keepPositionOnRotation;\n+    }\n+\n     /**\n      * Returns the Highlight object (contains x-index and DataSet index) of the\n      * selected value at the given touch point inside the Line-, Scatter-, or",
    "output": "Merge pull request #1565 from leoMehlig/rotation\n\nKeep position on rotation"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -96,6 +96,23 @@ protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n \n         trans.pointValuesToPixel(buffer.buffer);\n \n+        // draw the bar shadow before the values\n+        if (mChart.isDrawBarShadowEnabled()) {\n+\n+            for (int j = 0; j < buffer.size(); j += 4) {\n+\n+                if (!mViewPortHandler.isInBoundsLeft(buffer.buffer[j + 2]))\n+                    continue;\n+\n+                if (!mViewPortHandler.isInBoundsRight(buffer.buffer[j]))\n+                    break;\n+\n+                c.drawRect(buffer.buffer[j], mViewPortHandler.contentTop(),\n+                        buffer.buffer[j + 2],\n+                        mViewPortHandler.contentBottom(), mShadowPaint);\n+            }\n+        }\n+\n         // if multiple colors\n         if (dataSet.getColors().size() > 1) {\n \n@@ -107,12 +124,6 @@ protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n                 if (!mViewPortHandler.isInBoundsRight(buffer.buffer[j]))\n                     break;\n \n-                if (mChart.isDrawBarShadowEnabled()) {\n-                    c.drawRect(buffer.buffer[j], mViewPortHandler.contentTop(),\n-                            buffer.buffer[j + 2],\n-                            mViewPortHandler.contentBottom(), mShadowPaint);\n-                }\n-\n                 // Set the color for the currently drawn value. If the index\n                 // is\n                 // out of bounds, reuse colors.\n@@ -132,12 +143,6 @@ protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n                 if (!mViewPortHandler.isInBoundsRight(buffer.buffer[j]))\n                     break;\n \n-                if (mChart.isDrawBarShadowEnabled()) {\n-                    c.drawRect(buffer.buffer[j], mViewPortHandler.contentTop(),\n-                            buffer.buffer[j + 2],\n-                            mViewPortHandler.contentBottom(), mShadowPaint);\n-                }\n-\n                 c.drawRect(buffer.buffer[j], buffer.buffer[j + 1], buffer.buffer[j + 2],\n                         buffer.buffer[j + 3], mRenderPaint);\n             }",
    "output": "Fix issue #1561"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -106,6 +106,11 @@ public abstract class BarLineChartBase<T extends BarLineScatterCandleBubbleData<\n      */\n     protected float mMinOffset = 15.f;\n \n+    /**\n+     * flag indicating if the chart should stay at the same position after a rotation. Default is false.\n+     */\n+    protected boolean mKeepPositionOnRotation = false;\n+\n     /**\n      * the listener for user drawing on the chart\n      */\n@@ -288,6 +293,22 @@ protected void onDraw(Canvas canvas) {\n         }\n     }\n \n+    @Override\n+    protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n+        //Saving current position of chart.\n+        float[] pts = new float[2];\n+        pts[0] = mViewPortHandler.contentLeft();\n+        pts[1] = mViewPortHandler.contentTop();\n+        getTransformer(AxisDependency.LEFT).pixelsToValue(pts);\n+\n+        //Superclass transforms chart.\n+        super.onSizeChanged(w, h, oldw, oldh);\n+\n+        //Restoring old position of chart.\n+        getTransformer(AxisDependency.LEFT).pointValuesToPixel(pts);\n+        mViewPortHandler.centerViewPort(pts, this);\n+    }\n+\n     /**\n      * RESET PERFORMANCE TRACKING FIELDS\n      */\n@@ -1209,6 +1230,20 @@ public void setMinOffset(float minOffset) {\n         mMinOffset = minOffset;\n     }\n \n+    /**\n+     * Returns true if keeping the position on rotation is enabled and false if not.\n+     */\n+    public boolean isKeepPositionOnRotation() {\n+        return mKeepPositionOnRotation;\n+    }\n+\n+    /**\n+     * Sets the whether the chart should keep its position after a rotation.\n+     */\n+    public void setKeepPositionOnRotation(boolean keepPositionOnRotation) {\n+        mKeepPositionOnRotation = keepPositionOnRotation;\n+    }\n+\n     /**\n      * Returns the Highlight object (contains x-index and DataSet index) of the\n      * selected value at the given touch point inside the Line-, Scatter-, or",
    "output": "Keep position on rotation\n\nI’ve added a flag (keepPositionOnRotation) to BarLineChartBase\nindicating whether the chart\nshould stay at its current position or not."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1178,6 +1178,15 @@ public void setNoDataText(String text) {\n         mNoDataText = text;\n     }\n \n+    /**\n+     * Sets the color of the no data text.\n+     *\n+     * @param color\n+     */\n+    public void setNoDataTextColor(int color) {\n+        mInfoPaint.setColor(color);\n+    }\n+\n     /**\n      * Sets descriptive text to explain to the user why there is no chart\n      * available Defaults to empty if not set",
    "output": "Added Chart.setNoDataTextColor(int color)"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -23,21 +23,29 @@\n /**\n  * TouchListener for Bar-, Line-, Scatter- and CandleStickChart with handles all\n  * touch interaction. Longpress == Zoom out. Double-Tap == Zoom in.\n- * \n+ *\n  * @author Philipp Jahoda\n  */\n public class BarLineChartTouchListener extends ChartTouchListener<BarLineChartBase<? extends BarLineScatterCandleBubbleData<? extends IBarLineScatterCandleBubbleDataSet<? extends Entry>>>> {\n \n-    /** the original touch-matrix from the chart */\n+    /**\n+     * the original touch-matrix from the chart\n+     */\n     private Matrix mMatrix = new Matrix();\n \n-    /** matrix for saving the original matrix state */\n+    /**\n+     * matrix for saving the original matrix state\n+     */\n     private Matrix mSavedMatrix = new Matrix();\n \n-    /** point where the touch action started */\n+    /**\n+     * point where the touch action started\n+     */\n     private PointF mTouchStartPoint = new PointF();\n \n-    /** center between two pointers (fingers on the display) */\n+    /**\n+     * center between two pointers (fingers on the display)\n+     */\n     private PointF mTouchPointCenter = new PointF();\n \n     private float mSavedXDist = 1f;\n@@ -46,16 +54,26 @@ public class BarLineChartTouchListener extends ChartTouchListener<BarLineChartBa\n \n     private IDataSet mClosestDataSetToTouch;\n \n-    /** used for tracking velocity of dragging */\n+    /**\n+     * used for tracking velocity of dragging\n+     */\n     private VelocityTracker mVelocityTracker;\n \n     private long mDecelerationLastTime = 0;\n     private PointF mDecelerationCurrentPoint = new PointF();\n     private PointF mDecelerationVelocity = new PointF();\n \n+    /**\n+     * the distance of movement that will be counted as a drag\n+     */\n+    private float mDragTriggerDist;\n+\n     public BarLineChartTouchListener(BarLineChartBase<? extends BarLineScatterCandleBubbleData<? extends IBarLineScatterCandleBubbleDataSet<? extends Entry>>> chart, Matrix touchMatrix) {\n         super(chart);\n         this.mMatrix = touchMatrix;\n+\n+        // this equals to about 9 pixels on a 5.5\" FHD screen\n+        this.mDragTriggerDist = Utils.convertDpToPixel(3f);\n     }\n \n     @SuppressLint(\"ClickableViewAccessibility\")\n@@ -142,7 +160,7 @@ public boolean onTouch(View v, MotionEvent event) {\n \n                 } else if (mTouchMode == NONE\n                         && Math.abs(distance(event.getX(), mTouchStartPoint.x, event.getY(),\n-                                mTouchStartPoint.y)) > 5f) {\n+                        mTouchStartPoint.y)) > mDragTriggerDist) {\n \n \n                     if (mChart.hasNoDragOffset()) {\n@@ -237,7 +255,7 @@ public boolean onTouch(View v, MotionEvent event) {\n \n     /**\n      * Saves the current Matrix state and the touch-start point.\n-     * \n+     *\n      * @param event\n      */\n     private void saveTouchStart(MotionEvent event) {\n@@ -250,7 +268,7 @@ private void saveTouchStart(MotionEvent event) {\n \n     /**\n      * Performs all necessary operations needed for dragging.\n-     * \n+     *\n      * @param event\n      */\n     private void performDrag(MotionEvent event) {\n@@ -275,8 +293,7 @@ private void performDrag(MotionEvent event) {\n                 dX = event.getX() - mTouchStartPoint.x;\n                 dY = -(event.getY() - mTouchStartPoint.y);\n             }\n-        }\n-        else {\n+        } else {\n             dX = event.getX() - mTouchStartPoint.x;\n             dY = event.getY() - mTouchStartPoint.y;\n         }\n@@ -289,7 +306,7 @@ private void performDrag(MotionEvent event) {\n \n     /**\n      * Performs the all operations necessary for pinch and axis zoom.\n-     * \n+     *\n      * @param event\n      */\n     private void performZoom(MotionEvent event) {\n@@ -374,7 +391,7 @@ private void performZoom(MotionEvent event) {\n \n     /**\n      * Highlights upon dragging, generates callbacks for the selection-listener.\n-     * \n+     *\n      * @param e\n      */\n     private void performHighlightDrag(MotionEvent e) {\n@@ -395,7 +412,7 @@ private void performHighlightDrag(MotionEvent e) {\n \n     /**\n      * Determines the center point between two pointer touch points.\n-     * \n+     *\n      * @param point\n      * @param event\n      */\n@@ -407,7 +424,7 @@ private static void midPoint(PointF point, MotionEvent event) {\n \n     /**\n      * returns the distance between two pointer touch points\n-     * \n+     *\n      * @param event\n      * @return\n      */\n@@ -420,7 +437,7 @@ private static float spacing(MotionEvent event) {\n     /**\n      * calculates the distance on the x-axis between two pointers (fingers on\n      * the display)\n-     * \n+     *\n      * @param e\n      * @return\n      */\n@@ -432,7 +449,7 @@ private static float getXDist(MotionEvent e) {\n     /**\n      * calculates the distance on the y-axis between two pointers (fingers on\n      * the display)\n-     * \n+     *\n      * @param e\n      * @return\n      */\n@@ -444,7 +461,7 @@ private static float getYDist(MotionEvent e) {\n     /**\n      * returns the correct translation depending on the provided x and y touch\n      * points\n-     * \n+     *\n      * @param x\n      * @param y\n      * @return\n@@ -474,7 +491,7 @@ public PointF getTrans(float x, float y) {\n \n     /**\n      * returns the matrix object the listener holds\n-     * \n+     *\n      * @return\n      */\n     public Matrix getMatrix() {\n@@ -531,7 +548,7 @@ public boolean onSingleTapUp(MotionEvent e) {\n             l.onChartSingleTapped(e);\n         }\n \n-        if(!mChart.isHighlightPerTapEnabled()) {\n+        if (!mChart.isHighlightPerTapEnabled()) {\n             return false;\n         }\n \n@@ -585,7 +602,7 @@ public void computeScroll() {\n         mDecelerationVelocity.x *= mChart.getDragDecelerationFrictionCoef();\n         mDecelerationVelocity.y *= mChart.getDragDecelerationFrictionCoef();\n \n-        final float timeInterval = (float)(currentTime - mDecelerationLastTime) / 1000.f;\n+        final float timeInterval = (float) (currentTime - mDecelerationLastTime) / 1000.f;\n \n         float distanceX = mDecelerationVelocity.x * timeInterval;\n         float distanceY = mDecelerationVelocity.y * timeInterval;",
    "output": "Add dp conversion to fix issue #1540"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -183,7 +183,6 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n \n         final int entryCount = dataSet.getEntryCount();\n         final float[] drawAngles = mChart.getDrawAngles();\n-        float sliceSpace = dataSet.getSliceSpace();\n         final PointF center = mChart.getCenterCircleBox();\n         final float radius = mChart.getRadius();\n         final boolean drawInnerArc = mChart.isDrawHoleEnabled() && !mChart.isDrawSlicesUnderHoleEnabled();\n@@ -199,6 +198,8 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n             }\n         }\n \n+        final float sliceSpace = visibleAngleCount <= 1 ? 0.f : dataSet.getSliceSpace();\n+\n         for (int j = 0; j < entryCount; j++) {\n \n             float sliceAngle = drawAngles[j];\n@@ -610,7 +611,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             else\n                 angle = absoluteAngles[xIndex - 1] * phaseX;\n \n-            float sliceSpace = set.getSliceSpace();\n+            final float sliceSpace = visibleAngleCount <= 1 ? 0.f : set.getSliceSpace();\n \n             float sliceAngle = drawAngles[xIndex];\n             float innerRadius = userInnerRadius;",
    "output": "Merge"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java b/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java\n--- a/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java\n@@ -189,10 +189,11 @@ protected float getBase(float x) {\n \tprotected Range[] getRanges(BarEntry entry) {\n \n \t\tfloat[] values = entry.getVals();\n-\t\tRange[] ranges = new Range[values.length];\n \n \t\tif (values == null || values.length == 0)\n-\t\t\treturn ranges;\n+\t\t\treturn new Range[0];\n+\n+\t\tRange[] ranges = new Range[values.length];\n \n \t\tfloat negRemain = -entry.getNegativeSum();\n \t\tfloat posRemain = 0f;",
    "output": "Minor adjustment of previous fix."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -183,7 +183,6 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n \n         final int entryCount = dataSet.getEntryCount();\n         final float[] drawAngles = mChart.getDrawAngles();\n-        float sliceSpace = dataSet.getSliceSpace();\n         final PointF center = mChart.getCenterCircleBox();\n         final float radius = mChart.getRadius();\n         final boolean drawInnerArc = mChart.isDrawHoleEnabled() && !mChart.isDrawSlicesUnderHoleEnabled();\n@@ -199,6 +198,8 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n             }\n         }\n \n+        final float sliceSpace = visibleAngleCount <= 1 ? 0.f : dataSet.getSliceSpace();\n+\n         for (int j = 0; j < entryCount; j++) {\n \n             float sliceAngle = drawAngles[j];\n@@ -610,7 +611,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             else\n                 angle = absoluteAngles[xIndex - 1] * phaseX;\n \n-            float sliceSpace = set.getSliceSpace();\n+            final float sliceSpace = visibleAngleCount <= 1 ? 0.f : set.getSliceSpace();\n \n             float sliceAngle = drawAngles[xIndex];\n             float innerRadius = userInnerRadius;",
    "output": "Fixes circle-with-hole drawing hiccup (Closes #1528)"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java b/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java\n--- a/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java\n@@ -105,8 +105,10 @@ protected Highlight getStackedHighlight(Highlight old, IBarDataSet set, int xInd\n \t\tRange[] ranges = getRanges(entry);\n \t\tint stackIndex = getClosestStackIndex(ranges, (float) yValue);\n \n-\t\tHighlight h = new Highlight(xIndex, dataSetIndex, stackIndex, ranges[stackIndex]);\n-\t\treturn h;\n+\t\tif(ranges.length > 0)\n+\t\t\treturn new Highlight(xIndex, dataSetIndex, stackIndex, ranges[stackIndex]);\n+\t\telse\n+\t\t\treturn null;\n \t}\n \n \t/**\n@@ -187,15 +189,14 @@ protected float getBase(float x) {\n \tprotected Range[] getRanges(BarEntry entry) {\n \n \t\tfloat[] values = entry.getVals();\n+\t\tRange[] ranges = new Range[values.length];\n \n \t\tif (values == null || values.length == 0)\n-\t\t\treturn null;\n+\t\t\treturn ranges;\n \n \t\tfloat negRemain = -entry.getNegativeSum();\n \t\tfloat posRemain = 0f;\n \n-\t\tRange[] ranges = new Range[values.length];\n-\n \t\tfor (int i = 0; i < ranges.length; i++) {\n \n \t\t\tfloat value = values[i];",
    "output": "Fix #1535"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n@@ -116,16 +116,13 @@ protected void drawDataSet(Canvas c, IRadarDataSet dataSet, int mostEntries) {\n                 surface.lineTo(p.x, p.y);\n         }\n \n-        // if this is the largest set, close it\n-        if (dataSet.getEntryCount() >= mostEntries) {\n-            surface.close();\n-        } else {\n-\n-            // if this is not the largest set, draw a line to the center and then close it\n+        if (dataSet.getEntryCount() > mostEntries) {\n+            // if this is not the largest set, draw a line to the center before closing\n             surface.lineTo(center.x, center.y);\n-            surface.close();\n         }\n \n+        surface.close();\n+\n         if(dataSet.isDrawFilledEnabled()) {\n \n             final Drawable drawable = dataSet.getFillDrawable();",
    "output": "Make the extra last line clearer in the rendering code flow"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n@@ -4,6 +4,7 @@\n import android.graphics.Matrix;\n import android.graphics.PointF;\n import android.graphics.RectF;\n+import android.util.Log;\n import android.view.View;\n \n /**\n@@ -350,6 +351,11 @@ public void centerViewPort(final float[] transformedPts, final View view) {\n         refresh(save, view, true);\n     }\n \n+    /**\n+     * buffer for storing matrix values\n+     */\n+    protected final float[] matrixBuffer = new float[9];\n+\n     /**\n      * call this method to refresh the graph with a given matrix\n      *\n@@ -377,14 +383,13 @@ public Matrix refresh(Matrix newMatrix, View chart, boolean invalidate) {\n      */\n     public void limitTransAndScale(Matrix matrix, RectF content) {\n \n-        float[] vals = new float[9];\n-        matrix.getValues(vals);\n+        matrix.getValues(matrixBuffer);\n \n-        float curTransX = vals[Matrix.MTRANS_X];\n-        float curScaleX = vals[Matrix.MSCALE_X];\n+        float curTransX = matrixBuffer[Matrix.MTRANS_X];\n+        float curScaleX = matrixBuffer[Matrix.MSCALE_X];\n \n-        float curTransY = vals[Matrix.MTRANS_Y];\n-        float curScaleY = vals[Matrix.MSCALE_Y];\n+        float curTransY = matrixBuffer[Matrix.MTRANS_Y];\n+        float curScaleY = matrixBuffer[Matrix.MSCALE_Y];\n \n         // min scale-x is 1f, max is the max float\n         mScaleX = Math.min(Math.max(mMinScaleX, curScaleX), mMaxScaleX);\n@@ -408,13 +413,13 @@ public void limitTransAndScale(Matrix matrix, RectF content) {\n         float newTransY = Math.max(Math.min(curTransY, maxTransY + mTransOffsetY), -mTransOffsetY);\n         mTransY = newTransY;\n \n-        vals[Matrix.MTRANS_X] = mTransX;\n-        vals[Matrix.MSCALE_X] = mScaleX;\n+        matrixBuffer[Matrix.MTRANS_X] = mTransX;\n+        matrixBuffer[Matrix.MSCALE_X] = mScaleX;\n \n-        vals[Matrix.MTRANS_Y] = mTransY;\n-        vals[Matrix.MSCALE_Y] = mScaleY;\n+        matrixBuffer[Matrix.MTRANS_Y] = mTransY;\n+        matrixBuffer[Matrix.MSCALE_Y] = mScaleY;\n \n-        matrix.setValues(vals);\n+        matrix.setValues(matrixBuffer);\n     }\n \n     /**",
    "output": "Add matrixbuffer to avoid constant allocations"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -722,7 +722,7 @@ public void zoom(float scaleX, float scaleY, float x, float y) {\n     public void zoom(float scaleX, float scaleY, float xValue, float yValue, AxisDependency axis) {\n \n         Runnable job = new ZoomJob(mViewPortHandler, scaleX, scaleY, xValue, yValue, getTransformer(axis), axis, this);\n-        postJob(job);\n+        addViewportJob(job);\n     }\n \n     /**\n@@ -743,7 +743,7 @@ public void zoomAndCenterAnimated(float scaleX, float scaleY, float xValue, floa\n             PointD origin = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);\n \n             Runnable job = new AnimatedZoomJob(mViewPortHandler, this, getTransformer(axis), getAxis(axis), mXAxis.getValues().size(), scaleX, scaleY, mViewPortHandler.getScaleX(), mViewPortHandler.getScaleY(), xValue, yValue, (float) origin.x, (float) origin.y, duration);\n-            postJob(job);\n+            addViewportJob(job);\n \n         } else {\n             Log.e(LOG_TAG, \"Unable to execute zoomAndCenterAnimated(...) on API level < 11\");\n@@ -838,7 +838,7 @@ public void moveViewToX(float xIndex) {\n         Runnable job = new MoveViewJob(mViewPortHandler, xIndex, 0f,\n                 getTransformer(AxisDependency.LEFT), this);\n \n-        postJob(job);\n+        addViewportJob(job);\n     }\n \n     /**\n@@ -855,7 +855,7 @@ public void moveViewToY(float yValue, AxisDependency axis) {\n         Runnable job = new MoveViewJob(mViewPortHandler, 0f, yValue + valsInView / 2f,\n                 getTransformer(axis), this);\n \n-        postJob(job);\n+        addViewportJob(job);\n     }\n \n     /**\n@@ -875,7 +875,7 @@ public void moveViewTo(float xIndex, float yValue, AxisDependency axis) {\n         Runnable job = new MoveViewJob(mViewPortHandler, xIndex, yValue + valsInView / 2f,\n                 getTransformer(axis), this);\n \n-        postJob(job);\n+        addViewportJob(job);\n     }\n \n     /**\n@@ -900,7 +900,7 @@ public void moveViewToAnimated(float xIndex, float yValue, AxisDependency axis,\n             Runnable job = new AnimatedMoveViewJob(mViewPortHandler, xIndex, yValue + valsInView / 2f,\n                     getTransformer(axis), this, (float) bounds.x, (float) bounds.y, duration);\n \n-            postJob(job);\n+            addViewportJob(job);\n         } else {\n             Log.e(LOG_TAG, \"Unable to execute moveViewToAnimated(...) on API level < 11\");\n         }\n@@ -924,7 +924,7 @@ public void centerViewTo(float xIndex, float yValue, AxisDependency axis) {\n                 xIndex - xsInView / 2f, yValue + valsInView / 2f,\n                 getTransformer(axis), this);\n \n-        postJob(job);\n+        addViewportJob(job);\n     }\n \n     /**\n@@ -950,7 +950,7 @@ public void centerViewToAnimated(float xIndex, float yValue, AxisDependency axis\n                     xIndex - xsInView / 2f, yValue + valsInView / 2f,\n                     getTransformer(axis), this, (float) bounds.x, (float) bounds.y, duration);\n \n-            postJob(job);\n+            addViewportJob(job);\n         } else {\n             Log.e(LOG_TAG, \"Unable to execute centerViewToAnimated(...) on API level < 11\");\n         }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1612,21 +1612,11 @@ public boolean saveToGallery(String fileName, int quality) {\n      */\n     protected ArrayList<Runnable> mJobs = new ArrayList<Runnable>();\n \n-    /**\n-     * Adds a job to be executed after the chart-view is setup (after\n-     * onSizeChanged(...) is called).\n-     *\n-     * @param job\n-     */\n-    public void addJob(Runnable job) {\n-        mJobs.add(job);\n-    }\n-\n-    public void removeJob(Runnable job) {\n+    public void removeViewportJob(Runnable job) {\n         mJobs.remove(job);\n     }\n \n-    public void clearAllJobs() {\n+    public void clearAllViewportJobs() {\n         mJobs.clear();\n     }\n \n@@ -1636,7 +1626,7 @@ public void clearAllJobs() {\n      *\n      * @param job\n      */\n-    protected void postJob(Runnable job) {\n+    public void addViewportJob(Runnable job) {\n \n         if (mViewPortHandler.hasChartDimens()) {\n             post(job);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedMoveViewJob.java b/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedMoveViewJob.java\n--- a/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedMoveViewJob.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedMoveViewJob.java\n@@ -11,7 +11,7 @@\n /**\n  * Created by Philipp Jahoda on 19/02/16.\n  */\n-public class AnimatedMoveViewJob extends AnimatedJob {\n+public class AnimatedMoveViewJob extends AnimatedViewPortJob {\n \n     public AnimatedMoveViewJob(ViewPortHandler viewPortHandler, float xValue, float yValue, Transformer trans, View v, float xOrigin, float yOrigin, long duration) {\n         super(viewPortHandler, xValue, yValue, trans, v, xOrigin, yOrigin, duration);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedViewPortJob.java b/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedViewPortJob.java\n--- a/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedViewPortJob.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedViewPortJob.java\n@@ -12,7 +12,7 @@\n  * Created by Philipp Jahoda on 19/02/16.\n  */\n @SuppressLint(\"NewApi\")\n-public abstract class AnimatedJob extends ViewPortJob implements ValueAnimator.AnimatorUpdateListener {\n+public abstract class AnimatedViewPortJob extends ViewPortJob implements ValueAnimator.AnimatorUpdateListener {\n \n     protected ObjectAnimator animator;\n \n@@ -21,7 +21,7 @@ public abstract class AnimatedJob extends ViewPortJob implements ValueAnimator.A\n     protected float xOrigin;\n     protected float yOrigin;\n \n-    public AnimatedJob(ViewPortHandler viewPortHandler, float xValue, float yValue, Transformer trans, View v, float xOrigin, float yOrigin, long duration) {\n+    public AnimatedViewPortJob(ViewPortHandler viewPortHandler, float xValue, float yValue, Transformer trans, View v, float xOrigin, float yOrigin, long duration) {\n         super(viewPortHandler, xValue, yValue, trans, v);\n         this.xOrigin = xOrigin;\n         this.yOrigin = yOrigin;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedZoomJob.java b/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedZoomJob.java\n--- a/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedZoomJob.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedZoomJob.java\n@@ -15,7 +15,7 @@\n  * Created by Philipp Jahoda on 19/02/16.\n  */\n @SuppressLint(\"NewApi\")\n-public class AnimatedZoomJob extends AnimatedJob implements Animator.AnimatorListener {\n+public class AnimatedZoomJob extends AnimatedViewPortJob implements Animator.AnimatorListener {\n \n     protected float zoomOriginX;\n     protected float zoomOriginY;",
    "output": "Merge pull request #1524 from danielgindi/job-refactoring\n\nJob refactoring"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedMoveViewJob.java b/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedMoveViewJob.java\n--- a/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedMoveViewJob.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedMoveViewJob.java\n@@ -11,7 +11,7 @@\n /**\n  * Created by Philipp Jahoda on 19/02/16.\n  */\n-public class AnimatedMoveViewJob extends AnimatedJob {\n+public class AnimatedMoveViewJob extends AnimatedViewPortJob {\n \n     public AnimatedMoveViewJob(ViewPortHandler viewPortHandler, float xValue, float yValue, Transformer trans, View v, float xOrigin, float yOrigin, long duration) {\n         super(viewPortHandler, xValue, yValue, trans, v, xOrigin, yOrigin, duration);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedViewPortJob.java b/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedViewPortJob.java\n--- a/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedViewPortJob.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedViewPortJob.java\n@@ -12,7 +12,7 @@\n  * Created by Philipp Jahoda on 19/02/16.\n  */\n @SuppressLint(\"NewApi\")\n-public abstract class AnimatedJob extends ViewPortJob implements ValueAnimator.AnimatorUpdateListener {\n+public abstract class AnimatedViewPortJob extends ViewPortJob implements ValueAnimator.AnimatorUpdateListener {\n \n     protected ObjectAnimator animator;\n \n@@ -21,7 +21,7 @@ public abstract class AnimatedJob extends ViewPortJob implements ValueAnimator.A\n     protected float xOrigin;\n     protected float yOrigin;\n \n-    public AnimatedJob(ViewPortHandler viewPortHandler, float xValue, float yValue, Transformer trans, View v, float xOrigin, float yOrigin, long duration) {\n+    public AnimatedViewPortJob(ViewPortHandler viewPortHandler, float xValue, float yValue, Transformer trans, View v, float xOrigin, float yOrigin, long duration) {\n         super(viewPortHandler, xValue, yValue, trans, v);\n         this.xOrigin = xOrigin;\n         this.yOrigin = yOrigin;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedZoomJob.java b/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedZoomJob.java\n--- a/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedZoomJob.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedZoomJob.java\n@@ -15,7 +15,7 @@\n  * Created by Philipp Jahoda on 19/02/16.\n  */\n @SuppressLint(\"NewApi\")\n-public class AnimatedZoomJob extends AnimatedJob implements Animator.AnimatorListener {\n+public class AnimatedZoomJob extends AnimatedViewPortJob implements Animator.AnimatorListener {\n \n     protected float zoomOriginX;\n     protected float zoomOriginY;",
    "output": "Renamed AnimatedJob to match ViewPortJob naming"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1626,7 +1626,7 @@ public void clearAllViewportJobs() {\n      *\n      * @param job\n      */\n-    protected void addViewportJob(Runnable job) {\n+    public void addViewportJob(Runnable job) {\n \n         if (mViewPortHandler.hasChartDimens()) {\n             post(job);",
    "output": "If the other methods are public - this should be public as well"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1612,16 +1612,6 @@ public boolean saveToGallery(String fileName, int quality) {\n      */\n     protected ArrayList<Runnable> mJobs = new ArrayList<Runnable>();\n \n-    /**\n-     * Adds a job to be executed after the chart-view is setup (after\n-     * onSizeChanged(...) is called).\n-     *\n-     * @param job\n-     */\n-    public void addJob(Runnable job) {\n-        mJobs.add(job);\n-    }\n-\n     public void removeViewportJob(Runnable job) {\n         mJobs.remove(job);\n     }",
    "output": "Removed `addJob` as possible cause for confusion\n\nPeople should use `addViewportJob` instead"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -722,7 +722,7 @@ public void zoom(float scaleX, float scaleY, float x, float y) {\n     public void zoom(float scaleX, float scaleY, float xValue, float yValue, AxisDependency axis) {\n \n         Runnable job = new ZoomJob(mViewPortHandler, scaleX, scaleY, xValue, yValue, getTransformer(axis), axis, this);\n-        postJob(job);\n+        addViewportJob(job);\n     }\n \n     /**\n@@ -743,7 +743,7 @@ public void zoomAndCenterAnimated(float scaleX, float scaleY, float xValue, floa\n             PointD origin = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);\n \n             Runnable job = new AnimatedZoomJob(mViewPortHandler, this, getTransformer(axis), getAxis(axis), mXAxis.getValues().size(), scaleX, scaleY, mViewPortHandler.getScaleX(), mViewPortHandler.getScaleY(), xValue, yValue, (float) origin.x, (float) origin.y, duration);\n-            postJob(job);\n+            addViewportJob(job);\n \n         } else {\n             Log.e(LOG_TAG, \"Unable to execute zoomAndCenterAnimated(...) on API level < 11\");\n@@ -838,7 +838,7 @@ public void moveViewToX(float xIndex) {\n         Runnable job = new MoveViewJob(mViewPortHandler, xIndex, 0f,\n                 getTransformer(AxisDependency.LEFT), this);\n \n-        postJob(job);\n+        addViewportJob(job);\n     }\n \n     /**\n@@ -855,7 +855,7 @@ public void moveViewToY(float yValue, AxisDependency axis) {\n         Runnable job = new MoveViewJob(mViewPortHandler, 0f, yValue + valsInView / 2f,\n                 getTransformer(axis), this);\n \n-        postJob(job);\n+        addViewportJob(job);\n     }\n \n     /**\n@@ -875,7 +875,7 @@ public void moveViewTo(float xIndex, float yValue, AxisDependency axis) {\n         Runnable job = new MoveViewJob(mViewPortHandler, xIndex, yValue + valsInView / 2f,\n                 getTransformer(axis), this);\n \n-        postJob(job);\n+        addViewportJob(job);\n     }\n \n     /**\n@@ -900,7 +900,7 @@ public void moveViewToAnimated(float xIndex, float yValue, AxisDependency axis,\n             Runnable job = new AnimatedMoveViewJob(mViewPortHandler, xIndex, yValue + valsInView / 2f,\n                     getTransformer(axis), this, (float) bounds.x, (float) bounds.y, duration);\n \n-            postJob(job);\n+            addViewportJob(job);\n         } else {\n             Log.e(LOG_TAG, \"Unable to execute moveViewToAnimated(...) on API level < 11\");\n         }\n@@ -924,7 +924,7 @@ public void centerViewTo(float xIndex, float yValue, AxisDependency axis) {\n                 xIndex - xsInView / 2f, yValue + valsInView / 2f,\n                 getTransformer(axis), this);\n \n-        postJob(job);\n+        addViewportJob(job);\n     }\n \n     /**\n@@ -950,7 +950,7 @@ public void centerViewToAnimated(float xIndex, float yValue, AxisDependency axis\n                     xIndex - xsInView / 2f, yValue + valsInView / 2f,\n                     getTransformer(axis), this, (float) bounds.x, (float) bounds.y, duration);\n \n-            postJob(job);\n+            addViewportJob(job);\n         } else {\n             Log.e(LOG_TAG, \"Unable to execute centerViewToAnimated(...) on API level < 11\");\n         }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1622,11 +1622,11 @@ public void addJob(Runnable job) {\n         mJobs.add(job);\n     }\n \n-    public void removeJob(Runnable job) {\n+    public void removeViewportJob(Runnable job) {\n         mJobs.remove(job);\n     }\n \n-    public void clearAllJobs() {\n+    public void clearAllViewportJobs() {\n         mJobs.clear();\n     }\n \n@@ -1636,7 +1636,7 @@ public void clearAllJobs() {\n      *\n      * @param job\n      */\n-    protected void postJob(Runnable job) {\n+    protected void addViewportJob(Runnable job) {\n \n         if (mViewPortHandler.hasChartDimens()) {\n             post(job);",
    "output": "Renamed the job functions"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n@@ -72,7 +72,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart.setCenterText(generateCenterSpannableText());\n \n         mChart.setDrawHoleEnabled(true);\n-        mChart.setHoleColor(Color.TRANSPARENT);\n+        mChart.setHoleColor(Color.WHITE);\n \n         mChart.setTransparentCircleColor(Color.WHITE);\n         mChart.setTransparentCircleAlpha(110);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -5,8 +5,6 @@\n import android.graphics.Canvas;\n import android.graphics.Paint;\n import android.graphics.PointF;\n-import android.graphics.PorterDuff;\n-import android.graphics.PorterDuffXfermode;\n import android.graphics.RectF;\n import android.graphics.Typeface;\n import android.util.AttributeSet;\n@@ -55,9 +53,9 @@ public class PieChart extends PieRadarChartBase<PieData> {\n     private boolean mDrawHole = true;\n \n     /**\n-     * if true, the hole will see-through to the inner ends of the slices\n+     * if true, the hole will see-through to the inner tips of the slices\n      */\n-    private boolean mDrawHoleTransparent = true;\n+    private boolean mDrawSlicesUnderHole = false;\n \n     /**\n      * if true, the values inside the piechart are drawn as percent values\n@@ -332,7 +330,7 @@ public float[] getAbsoluteAngles() {\n \n     /**\n      * Sets the color for the hole that is drawn in the center of the PieChart\n-     * (if enabled). Use transparent colors to make things beneath the hole visible.\n+     * (if enabled).\n      *\n      * @param color\n      */\n@@ -341,7 +339,24 @@ public void setHoleColor(int color) {\n     }\n \n     /**\n-     * Set this to true to draw a hole in the pie center (the pie center is empty).\n+     * Enable or disable the visibility of the inner tips of the slices behind the hole\n+     */\n+    public void setDrawSlicesUnderHole(boolean enable) {\n+        mDrawSlicesUnderHole = enable;\n+    }\n+\n+    /**\n+     * Returns true if the inner tips of the slices are visible behind the hole,\n+     * false if not.\n+     *\n+     * @return true if slices are visible behind the hole.\n+     */\n+    public boolean isDrawSlicesUnderHoleEnabled() {\n+        return mDrawSlicesUnderHole;\n+    }\n+\n+    /**\n+     * set this to true to draw the pie center empty\n      *\n      * @param enabled\n      */\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -187,7 +187,7 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n         float sliceSpace = dataSet.getSliceSpace();\n         final PointF center = mChart.getCenterCircleBox();\n         final float radius = mChart.getRadius();\n-        final float userInnerRadius = mChart.isDrawHoleEnabled() && isHoleTransparent()\n+        final float userInnerRadius = mChart.isDrawHoleEnabled() && !mChart.isDrawSlicesUnderHoleEnabled()\n                 ? radius * (mChart.getHoleRadius() / 100.f)\n                 : 0.f;\n \n@@ -438,17 +438,17 @@ protected void drawHole(Canvas c) {\n             float radius = mChart.getRadius();\n             float holeRadius = radius * (mChart.getHoleRadius() / 100);\n             PointF center = mChart.getCenterCircleBox();\n-            boolean hasHoleColor = mHolePaint.getColor() != 0;\n \n-            if (hasHoleColor) {\n+            if (Color.alpha(mHolePaint.getColor()) > 0) {\n                 // draw the hole-circle\n                 mBitmapCanvas.drawCircle(\n                         center.x, center.y,\n                         holeRadius, mHolePaint);\n             }\n \n-            // only draw the circle if it can be seen (not covered by the hole), circle is independent of hole\n-            if (mChart.getTransparentCircleRadius() > mChart.getHoleRadius()) {\n+            // only draw the circle if it can be seen (not covered by the hole)\n+            if (Color.alpha(mTransparentCirclePaint.getColor()) > 0 &&\n+                    mChart.getTransparentCircleRadius() > mChart.getHoleRadius()) {\n \n                 int alpha = mTransparentCirclePaint.getAlpha();\n                 float secondHoleRadius = radius * (mChart.getTransparentCircleRadius() / 100);\n@@ -479,7 +479,7 @@ protected void drawCenterText(Canvas c) {\n \n             PointF center = mChart.getCenterCircleBox();\n \n-            float innerRadius = mChart.isDrawHoleEnabled() && isHoleTransparent()\n+            float innerRadius = mChart.isDrawHoleEnabled() && !mChart.isDrawSlicesUnderHoleEnabled()\n                     ? mChart.getRadius() * (mChart.getHoleRadius() / 100f)\n                     : mChart.getRadius();\n \n@@ -544,7 +544,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n         float[] absoluteAngles = mChart.getAbsoluteAngles();\n         final PointF center = mChart.getCenterCircleBox();\n         final float radius = mChart.getRadius();\n-        final float userInnerRadius = mChart.isDrawHoleEnabled() && isHoleTransparent()\n+        final float userInnerRadius = mChart.isDrawHoleEnabled() && !mChart.isDrawSlicesUnderHoleEnabled()\n                 ? radius * (mChart.getHoleRadius() / 100.f)\n                 : 0.f;\n \n@@ -680,16 +680,6 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n         }\n     }\n \n-    /**\n-     * Returns true if the hole in the center of the PieChart is transparent,\n-     * false if not.\n-     *\n-     * @return true if hole is transparent.\n-     */\n-    private boolean isHoleTransparent() {\n-        return Color.alpha(mHolePaint.getColor()) <= 0;\n-    }\n-\n     /**\n      * This gives all pie-slices a rounded edge.\n      *",
    "output": "Merge pull request #1517 from danielgindi/pie-fixes\n\nPie fixes"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -148,7 +148,7 @@ protected void drawCubic(Canvas c, ILineDataSet dataSet) {\n         Entry entryTo = dataSet.getEntryForXIndex(mMaxX, DataSet.Rounding.UP);\n \n         int diff = (entryFrom == entryTo) ? 1 : 0;\n-        int minx = Math.max(dataSet.getEntryIndex(entryFrom) - diff, 0);\n+        int minx = Math.max(dataSet.getEntryIndex(entryFrom) - diff - 1, 0);\n         int maxx = Math.min(dataSet.getEntryIndex(entryTo) + 1, entryCount);\n \n         float phaseX = mAnimator.getPhaseX();\n@@ -252,9 +252,18 @@ protected void drawCubicFill(Canvas c, ILineDataSet dataSet, Path spline, Transf\n \n         float fillMin = dataSet.getFillFormatter()\n                 .getFillLinePosition(dataSet, mChart);\n-\n-        spline.lineTo(to - 1, fillMin);\n-        spline.lineTo(from, fillMin);\n+        \n+        // Take the from/to xIndex from the entries themselves,\n+        // so missing entries won't screw up the filling.\n+        // What we need to draw is line from points of the xIndexes - not arbitrary entry indexes!\n+\n+        final Entry toEntry = dataSet.getEntryForIndex(to - 1);\n+        final Entry fromEntry = dataSet.getEntryForIndex(from);\n+        final float xTo = toEntry == null ? 0 : toEntry.getXIndex();\n+        final float xFrom = fromEntry == null ? 0 : fromEntry.getXIndex();\n+\n+        spline.lineTo(xTo, fillMin);\n+        spline.lineTo(xFrom, fillMin);\n         spline.close();\n \n         trans.pathValueToPixel(spline);",
    "output": "Merge pull request #1516 from danielgindi/cubic-line-fixes\n\nCubic line fixes"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -5,8 +5,6 @@\n import android.graphics.Canvas;\n import android.graphics.Paint;\n import android.graphics.PointF;\n-import android.graphics.PorterDuff;\n-import android.graphics.PorterDuffXfermode;\n import android.graphics.RectF;\n import android.graphics.Typeface;\n import android.util.AttributeSet;\n@@ -55,9 +53,9 @@ public class PieChart extends PieRadarChartBase<PieData> {\n     private boolean mDrawHole = true;\n \n     /**\n-     * if true, the hole will see-through to the inner ends of the slices\n+     * if true, the hole will see-through to the inner tips of the slices\n      */\n-    private boolean mDrawHoleTransparent = true;\n+    private boolean mDrawSlicesUnderHole = false;\n \n     /**\n      * if true, the values inside the piechart are drawn as percent values\n@@ -332,7 +330,7 @@ public float[] getAbsoluteAngles() {\n \n     /**\n      * Sets the color for the hole that is drawn in the center of the PieChart\n-     * (if enabled). Use transparent colors to make things beneath the hole visible.\n+     * (if enabled).\n      *\n      * @param color\n      */\n@@ -341,7 +339,24 @@ public void setHoleColor(int color) {\n     }\n \n     /**\n-     * Set this to true to draw a hole in the pie center (the pie center is empty).\n+     * Enable or disable the visibility of the inner tips of the slices behind the hole\n+     */\n+    public void setDrawSlicesUnderHole(boolean enable) {\n+        mDrawSlicesUnderHole = enable;\n+    }\n+\n+    /**\n+     * Returns true if the inner tips of the slices are visible behind the hole,\n+     * false if not.\n+     *\n+     * @return true if slices are visible behind the hole.\n+     */\n+    public boolean isDrawSlicesUnderHoleEnabled() {\n+        return mDrawSlicesUnderHole;\n+    }\n+\n+    /**\n+     * set this to true to draw the pie center empty\n      *\n      * @param enabled\n      */\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -187,7 +187,7 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n         float sliceSpace = dataSet.getSliceSpace();\n         final PointF center = mChart.getCenterCircleBox();\n         final float radius = mChart.getRadius();\n-        final float userInnerRadius = mChart.isDrawHoleEnabled() && isHoleTransparent()\n+        final float userInnerRadius = mChart.isDrawHoleEnabled() && !mChart.isDrawSlicesUnderHoleEnabled()\n                 ? radius * (mChart.getHoleRadius() / 100.f)\n                 : 0.f;\n \n@@ -479,7 +479,7 @@ protected void drawCenterText(Canvas c) {\n \n             PointF center = mChart.getCenterCircleBox();\n \n-            float innerRadius = mChart.isDrawHoleEnabled() && isHoleTransparent()\n+            float innerRadius = mChart.isDrawHoleEnabled() && !mChart.isDrawSlicesUnderHoleEnabled()\n                     ? mChart.getRadius() * (mChart.getHoleRadius() / 100f)\n                     : mChart.getRadius();\n \n@@ -544,7 +544,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n         float[] absoluteAngles = mChart.getAbsoluteAngles();\n         final PointF center = mChart.getCenterCircleBox();\n         final float radius = mChart.getRadius();\n-        final float userInnerRadius = mChart.isDrawHoleEnabled() && isHoleTransparent()\n+        final float userInnerRadius = mChart.isDrawHoleEnabled() && !mChart.isDrawSlicesUnderHoleEnabled()\n                 ? radius * (mChart.getHoleRadius() / 100.f)\n                 : 0.f;\n \n@@ -680,16 +680,6 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n         }\n     }\n \n-    /**\n-     * Returns true if the hole in the center of the PieChart is transparent,\n-     * false if not.\n-     *\n-     * @return true if hole is transparent.\n-     */\n-    private boolean isHoleTransparent() {\n-        return Color.alpha(mHolePaint.getColor()) <= 0;\n-    }\n-\n     /**\n      * This gives all pie-slices a rounded edge.\n      *",
    "output": "Normalise API for allowing to show slices under the hole"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n@@ -72,7 +72,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart.setCenterText(generateCenterSpannableText());\n \n         mChart.setDrawHoleEnabled(true);\n-        mChart.setHoleColor(Color.TRANSPARENT);\n+        mChart.setHoleColor(Color.WHITE);\n \n         mChart.setTransparentCircleColor(Color.WHITE);\n         mChart.setTransparentCircleAlpha(110);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -438,17 +438,17 @@ protected void drawHole(Canvas c) {\n             float radius = mChart.getRadius();\n             float holeRadius = radius * (mChart.getHoleRadius() / 100);\n             PointF center = mChart.getCenterCircleBox();\n-            boolean hasHoleColor = mHolePaint.getColor() != 0;\n \n-            if (hasHoleColor) {\n+            if (Color.alpha(mHolePaint.getColor()) > 0) {\n                 // draw the hole-circle\n                 mBitmapCanvas.drawCircle(\n                         center.x, center.y,\n                         holeRadius, mHolePaint);\n             }\n \n-            // only draw the circle if it can be seen (not covered by the hole), circle is independent of hole\n-            if (mChart.getTransparentCircleRadius() > mChart.getHoleRadius()) {\n+            // only draw the circle if it can be seen (not covered by the hole)\n+            if (Color.alpha(mTransparentCirclePaint.getColor()) > 0 &&\n+                    mChart.getTransparentCircleRadius() > mChart.getHoleRadius()) {\n \n                 int alpha = mTransparentCirclePaint.getAlpha();\n                 float secondHoleRadius = radius * (mChart.getTransparentCircleRadius() / 100);",
    "output": "Fixed drawing of hole colors"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -148,7 +148,7 @@ protected void drawCubic(Canvas c, ILineDataSet dataSet) {\n         Entry entryTo = dataSet.getEntryForXIndex(mMaxX, DataSet.Rounding.UP);\n \n         int diff = (entryFrom == entryTo) ? 1 : 0;\n-        int minx = Math.max(dataSet.getEntryIndex(entryFrom) - diff, 0);\n+        int minx = Math.max(dataSet.getEntryIndex(entryFrom) - diff - 1, 0);\n         int maxx = Math.min(dataSet.getEntryIndex(entryTo) + 1, entryCount);\n \n         float phaseX = mAnimator.getPhaseX();",
    "output": "Always start with previous xIndex to avoid clipping the cubic too soon"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -252,9 +252,18 @@ protected void drawCubicFill(Canvas c, ILineDataSet dataSet, Path spline, Transf\n \n         float fillMin = dataSet.getFillFormatter()\n                 .getFillLinePosition(dataSet, mChart);\n-\n-        spline.lineTo(to - 1, fillMin);\n-        spline.lineTo(from, fillMin);\n+        \n+        // Take the from/to xIndex from the entries themselves,\n+        // so missing entries won't screw up the filling.\n+        // What we need to draw is line from points of the xIndexes - not arbitrary entry indexes!\n+\n+        final Entry toEntry = dataSet.getEntryForIndex(to - 1);\n+        final Entry fromEntry = dataSet.getEntryForIndex(from);\n+        final float xTo = toEntry == null ? 0 : toEntry.getXIndex();\n+        final float xFrom = fromEntry == null ? 0 : fromEntry.getXIndex();\n+\n+        spline.lineTo(xTo, fillMin);\n+        spline.lineTo(xFrom, fillMin);\n         spline.close();\n \n         trans.pathValueToPixel(spline);",
    "output": "Fix cubic fill being weird when xIndex does not match entry index"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -2,6 +2,7 @@\n package com.github.mikephil.charting.charts;\n \n import android.annotation.SuppressLint;\n+import android.annotation.TargetApi;\n import android.content.Context;\n import android.graphics.Canvas;\n import android.graphics.Color;\n@@ -734,6 +735,7 @@ public void zoom(float scaleX, float scaleY, float xValue, float yValue, AxisDep\n      * @param axis\n      * @param duration\n      */\n+    @TargetApi(11)\n     public void zoomAndCenterAnimated(float scaleX, float scaleY, float xValue, float yValue, AxisDependency axis, long duration) {\n \n         if (android.os.Build.VERSION.SDK_INT >= 11) {\n@@ -886,6 +888,7 @@ public void moveViewTo(float xIndex, float yValue, AxisDependency axis) {\n      * @param axis\n      * @param duration the duration of the animation in milliseconds\n      */\n+    @TargetApi(11)\n     public void moveViewToAnimated(float xIndex, float yValue, AxisDependency axis, long duration) {\n \n         if (android.os.Build.VERSION.SDK_INT >= 11) {\n@@ -933,6 +936,7 @@ public void centerViewTo(float xIndex, float yValue, AxisDependency axis) {\n      * @param axis\n      * @param duration the duration of the animation in milliseconds\n      */\n+    @TargetApi(11)\n     public void centerViewToAnimated(float xIndex, float yValue, AxisDependency axis, long duration) {\n \n         if (android.os.Build.VERSION.SDK_INT >= 11) {",
    "output": "Add target API annotation"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -736,10 +736,16 @@ public void zoom(float scaleX, float scaleY, float xValue, float yValue, AxisDep\n      */\n     public void zoomAndCenterAnimated(float scaleX, float scaleY, float xValue, float yValue, AxisDependency axis, long duration) {\n \n-        PointD origin = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);\n+        if (android.os.Build.VERSION.SDK_INT >= 11) {\n \n-        Runnable job = new AnimatedZoomJob(mViewPortHandler, this, getTransformer(axis), getAxis(axis), mXAxis.getValues().size(), scaleX, scaleY, mViewPortHandler.getScaleX(), mViewPortHandler.getScaleY(), xValue, yValue, (float) origin.x, (float) origin.y, duration);\n-        postJob(job);\n+            PointD origin = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);\n+\n+            Runnable job = new AnimatedZoomJob(mViewPortHandler, this, getTransformer(axis), getAxis(axis), mXAxis.getValues().size(), scaleX, scaleY, mViewPortHandler.getScaleX(), mViewPortHandler.getScaleY(), xValue, yValue, (float) origin.x, (float) origin.y, duration);\n+            postJob(job);\n+\n+        } else {\n+            Log.e(LOG_TAG, \"Unable to execute zoomAndCenterAnimated(...) on API level < 11\");\n+        }\n     }\n \n     /**\n@@ -882,14 +888,19 @@ public void moveViewTo(float xIndex, float yValue, AxisDependency axis) {\n      */\n     public void moveViewToAnimated(float xIndex, float yValue, AxisDependency axis, long duration) {\n \n-        PointD bounds = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);\n+        if (android.os.Build.VERSION.SDK_INT >= 11) {\n \n-        float valsInView = getDeltaY(axis) / mViewPortHandler.getScaleY();\n+            PointD bounds = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);\n \n-        Runnable job = new AnimatedMoveViewJob(mViewPortHandler, xIndex, yValue + valsInView / 2f,\n-                getTransformer(axis), this, (float) bounds.x, (float) bounds.y, duration);\n+            float valsInView = getDeltaY(axis) / mViewPortHandler.getScaleY();\n \n-        postJob(job);\n+            Runnable job = new AnimatedMoveViewJob(mViewPortHandler, xIndex, yValue + valsInView / 2f,\n+                    getTransformer(axis), this, (float) bounds.x, (float) bounds.y, duration);\n+\n+            postJob(job);\n+        } else {\n+            Log.e(LOG_TAG, \"Unable to execute moveViewToAnimated(...) on API level < 11\");\n+        }\n     }\n \n     /**\n@@ -924,16 +935,21 @@ public void centerViewTo(float xIndex, float yValue, AxisDependency axis) {\n      */\n     public void centerViewToAnimated(float xIndex, float yValue, AxisDependency axis, long duration) {\n \n-        PointD bounds = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);\n+        if (android.os.Build.VERSION.SDK_INT >= 11) {\n \n-        float valsInView = getDeltaY(axis) / mViewPortHandler.getScaleY();\n-        float xsInView = getXAxis().getValues().size() / mViewPortHandler.getScaleX();\n+            PointD bounds = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);\n \n-        Runnable job = new AnimatedMoveViewJob(mViewPortHandler,\n-                xIndex - xsInView / 2f, yValue + valsInView / 2f,\n-                getTransformer(axis), this, (float) bounds.x, (float) bounds.y, duration);\n+            float valsInView = getDeltaY(axis) / mViewPortHandler.getScaleY();\n+            float xsInView = getXAxis().getValues().size() / mViewPortHandler.getScaleX();\n \n-        postJob(job);\n+            Runnable job = new AnimatedMoveViewJob(mViewPortHandler,\n+                    xIndex - xsInView / 2f, yValue + valsInView / 2f,\n+                    getTransformer(axis), this, (float) bounds.x, (float) bounds.y, duration);\n+\n+            postJob(job);\n+        } else {\n+            Log.e(LOG_TAG, \"Unable to execute centerViewToAnimated(...) on API level < 11\");\n+        }\n     }\n \n     /**",
    "output": "Add API level check for new animation methods"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n@@ -126,13 +126,16 @@ protected void drawDataSet(Canvas c, IRadarDataSet dataSet, int mostEntries) {\n             surface.close();\n         }\n \n-        final Drawable drawable = dataSet.getFillDrawable();\n-        if (drawable != null) {\n+        if(dataSet.isDrawFilledEnabled()) {\n \n-            drawFilledPath(c, surface, drawable);\n-        } else {\n+            final Drawable drawable = dataSet.getFillDrawable();\n+            if (drawable != null) {\n+\n+                drawFilledPath(c, surface, drawable);\n+            } else {\n \n-            drawFilledPath(c, surface, dataSet.getFillColor(), dataSet.getFillAlpha());\n+                drawFilledPath(c, surface, dataSet.getFillColor(), dataSet.getFillAlpha());\n+            }\n         }\n \n         mRenderPaint.setStrokeWidth(dataSet.getLineWidth());",
    "output": "Another RadarChart fix that caused fill never to be disabled"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n@@ -55,18 +55,17 @@ public void drawData(Canvas c) {\n \n         RadarData radarData = mChart.getData();\n \n-        for (IRadarDataSet set : radarData.getDataSets()) {\n-\n-            if (set.isVisible() && set.getEntryCount() > 0) {\n+        int mostEntries = 0;\n \n-                int mostEntries = 0;\n+        for (IRadarDataSet set : radarData.getDataSets()) {\n+            if (set.getEntryCount() > mostEntries) {\n+                mostEntries = set.getEntryCount();\n+            }\n+        }\n \n-                for (IRadarDataSet radarSet : radarData.getDataSets()) {\n-                    if (set != radarSet && radarSet.getEntryCount() > mostEntries) {\n-                        mostEntries = radarSet.getEntryCount();\n-                    }\n-                }\n+        for (IRadarDataSet set : radarData.getDataSets()) {\n \n+            if (set.isVisible() && set.getEntryCount() > 0) {\n                 drawDataSet(c, set, mostEntries);\n             }\n         }",
    "output": "Minor performance improvement for prior fix."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java\n@@ -54,12 +54,12 @@ public void calcMinMax(int start, int end) {\n \n         // need chart width to guess this properly\n \n-        for (int i = start; i < endValue; i++) {\n+        for (int i = start; i <= endValue; i++) {\n \n             final BubbleEntry entry = mYVals.get(i);\n \n-            final float ymin = yMin(entry);\n-            final float ymax = yMax(entry);\n+            float ymin = yMin(entry);\n+            float ymax = yMax(entry);\n \n             if (ymin < mYMin) {\n                 mYMin = ymin;",
    "output": "Fix issue #1506"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n@@ -327,9 +327,9 @@ private void setData(int count, float range) {\n     public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {\n         Log.i(\"Entry selected\", e.toString());\n \n-        //mChart.centerViewToAnimated(e.getXIndex(), e.getVal(), mChart.getData().getDataSetByIndex(dataSetIndex).getAxisDependency(), 1000);\n+        mChart.centerViewToAnimated(e.getXIndex(), e.getVal(), mChart.getData().getDataSetByIndex(dataSetIndex).getAxisDependency(), 500);\n         //mChart.zoomAndCenterAnimated(2.5f, 2.5f, e.getXIndex(), e.getVal(), mChart.getData().getDataSetByIndex(dataSetIndex).getAxisDependency(), 1000);\n-        mChart.zoomAndCenterAnimated(1.8f, 1.8f, e.getXIndex(), e.getVal(), mChart.getData().getDataSetByIndex(dataSetIndex).getAxisDependency(), 1000);\n+        //mChart.zoomAndCenterAnimated(1.8f, 1.8f, e.getXIndex(), e.getVal(), mChart.getData().getDataSetByIndex(dataSetIndex).getAxisDependency(), 1000);\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -658,8 +658,11 @@ public void computeScroll() {\n      * Zooms in by 1.4f, into the charts center. center.\n      */\n     public void zoomIn() {\n-        Matrix save = mViewPortHandler.zoomIn(getWidth() / 2f, -(getHeight() / 2f));\n-        mViewPortHandler.refresh(save, this, true);\n+\n+        PointF center = mViewPortHandler.getContentCenter();\n+\n+        Matrix save = mViewPortHandler.zoomIn(center.x, -center.y);\n+        mViewPortHandler.refresh(save, this, false);\n \n         // Range might have changed, which means that Y-axis labels\n         // could have changed in size, affecting Y-axis size.\n@@ -672,8 +675,11 @@ public void zoomIn() {\n      * Zooms out by 0.7f, from the charts center. center.\n      */\n     public void zoomOut() {\n-        Matrix save = mViewPortHandler.zoomOut(getWidth() / 2f, -(getHeight() / 2f));\n-        mViewPortHandler.refresh(save, this, true);\n+\n+        PointF center = mViewPortHandler.getContentCenter();\n+\n+        Matrix save = mViewPortHandler.zoomOut(center.x, -center.y);\n+        mViewPortHandler.refresh(save, this, false);\n \n         // Range might have changed, which means that Y-axis labels\n         // could have changed in size, affecting Y-axis size.\n@@ -693,7 +699,7 @@ public void zoomOut() {\n      */\n     public void zoom(float scaleX, float scaleY, float x, float y) {\n         Matrix save = mViewPortHandler.zoom(scaleX, scaleY, x, -y);\n-        mViewPortHandler.refresh(save, this, true);\n+        mViewPortHandler.refresh(save, this, false);\n \n         // Range might have changed, which means that Y-axis labels\n         // could have changed in size, affecting Y-axis size.\n@@ -704,7 +710,7 @@ public void zoom(float scaleX, float scaleY, float x, float y) {\n \n     /**\n      * Zooms in or out by the given scale factor.\n-     * x and y are the values to or which to zoom from (the values of the zoom center).\n+     * x and y are the values (NOT PIXELS) to or which to zoom from (the values of the zoom center).\n      *\n      * @param scaleX\n      * @param scaleY\n@@ -742,11 +748,8 @@ public void zoomAndCenterAnimated(float scaleX, float scaleY, float xValue, floa\n      */\n     public void fitScreen() {\n         Matrix save = mViewPortHandler.fitScreen();\n-        mViewPortHandler.refresh(save, this, true);\n+        mViewPortHandler.refresh(save, this, false);\n \n-        // Range might have changed, which means that Y-axis labels\n-        // could have changed in size, affecting Y-axis size.\n-        // So we need to recalculate offsets.\n         calculateOffsets();\n         postInvalidate();\n     }",
    "output": "Minor fixes with zoom methods"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -346,10 +346,18 @@ protected void calcMinMax() {\n         if (mAutoScaleMinMaxEnabled)\n             mData.calcMinMax(getLowestVisibleXIndex(), getHighestVisibleXIndex());\n \n-        float minLeft = mData.getYMin(AxisDependency.LEFT);\n-        float maxLeft = mData.getYMax(AxisDependency.LEFT);\n-        float minRight = mData.getYMin(AxisDependency.RIGHT);\n-        float maxRight = mData.getYMax(AxisDependency.RIGHT);\n+        float minLeft = !Float.isNaN(mAxisLeft.getAxisMinValue())\n+                ? mAxisLeft.getAxisMinValue()\n+                : mData.getYMin(AxisDependency.LEFT);\n+        float maxLeft = !Float.isNaN(mAxisLeft.getAxisMaxValue())\n+                ? mAxisLeft.getAxisMaxValue()\n+                : mData.getYMax(AxisDependency.LEFT);\n+        float minRight = !Float.isNaN(mAxisRight.getAxisMinValue())\n+                ? mAxisRight.getAxisMinValue()\n+                : mData.getYMin(AxisDependency.RIGHT);\n+        float maxRight = !Float.isNaN(mAxisRight.getAxisMaxValue())\n+                ? mAxisRight.getAxisMaxValue()\n+                : mData.getYMax(AxisDependency.RIGHT);\n \n         float leftRange = Math.abs(maxLeft - minLeft);\n         float rightRange = Math.abs(maxRight - minRight);\n@@ -374,11 +382,19 @@ protected void calcMinMax() {\n         mDeltaX = Math.abs(mXChartMax - mXChartMin);\n \n         // Use the values as they are\n-        mAxisLeft.mAxisMinimum = !Float.isNaN(mAxisLeft.getAxisMinValue()) ? mAxisLeft.getAxisMinValue() : (minLeft - bottomSpaceLeft);\n-        mAxisLeft.mAxisMaximum = !Float.isNaN(mAxisLeft.getAxisMaxValue()) ? mAxisLeft.getAxisMaxValue() : (maxLeft + topSpaceLeft);\n-\n-        mAxisRight.mAxisMinimum = !Float.isNaN(mAxisRight.getAxisMinValue()) ? mAxisRight.getAxisMinValue() : (minRight - bottomSpaceRight);\n-        mAxisRight.mAxisMaximum = !Float.isNaN(mAxisRight.getAxisMaxValue()) ? mAxisRight.getAxisMaxValue() : (maxRight + topSpaceRight);\n+        mAxisLeft.mAxisMinimum = !Float.isNaN(mAxisLeft.getAxisMinValue())\n+                ? mAxisLeft.getAxisMinValue()\n+                : (minLeft - bottomSpaceLeft);\n+        mAxisLeft.mAxisMaximum = !Float.isNaN(mAxisLeft.getAxisMaxValue())\n+                ? mAxisLeft.getAxisMaxValue()\n+                : (maxLeft + topSpaceLeft);\n+\n+        mAxisRight.mAxisMinimum = !Float.isNaN(mAxisRight.getAxisMinValue())\n+                ? mAxisRight.getAxisMinValue()\n+                : (minRight - bottomSpaceRight);\n+        mAxisRight.mAxisMaximum = !Float.isNaN(mAxisRight.getAxisMaxValue())\n+                ? mAxisRight.getAxisMaxValue()\n+                : (maxRight + topSpaceRight);\n \n         mAxisLeft.mAxisRange = Math.abs(mAxisLeft.mAxisMaximum - mAxisLeft.mAxisMinimum);\n         mAxisRight.mAxisRange = Math.abs(mAxisRight.mAxisMaximum - mAxisRight.mAxisMinimum);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -107,8 +107,12 @@ protected void init() {\n     protected void calcMinMax() {\n         super.calcMinMax();\n \n-        float minLeft = mData.getYMin(AxisDependency.LEFT);\n-        float maxLeft = mData.getYMax(AxisDependency.LEFT);\n+        float minLeft = !Float.isNaN(mYAxis.getAxisMinValue())\n+                ? mYAxis.getAxisMinValue()\n+                : mData.getYMin(AxisDependency.LEFT);\n+        float maxLeft = !Float.isNaN(mYAxis.getAxisMaxValue())\n+                ? mYAxis.getAxisMaxValue()\n+                : mData.getYMax(AxisDependency.LEFT);\n \n         mXChartMax = mData.getXVals().size() - 1;\n         mDeltaX = Math.abs(mXChartMax - mXChartMin);\n@@ -122,8 +126,12 @@ protected void calcMinMax() {\n         mDeltaX = Math.abs(mXChartMax - mXChartMin);\n \n         // Use the values as they are\n-        mYAxis.mAxisMinimum = !Float.isNaN(mYAxis.getAxisMinValue()) ? mYAxis.getAxisMinValue() : (minLeft - bottomSpaceLeft);\n-        mYAxis.mAxisMaximum = !Float.isNaN(mYAxis.getAxisMaxValue()) ? mYAxis.getAxisMaxValue() : (maxLeft + topSpaceLeft);\n+        mYAxis.mAxisMinimum = !Float.isNaN(mYAxis.getAxisMinValue())\n+                ? mYAxis.getAxisMinValue()\n+                : (minLeft - bottomSpaceLeft);\n+        mYAxis.mAxisMaximum = !Float.isNaN(mYAxis.getAxisMaxValue())\n+                ? mYAxis.getAxisMaxValue()\n+                : (maxLeft + topSpaceLeft);\n \n         mYAxis.mAxisRange = Math.abs(mYAxis.mAxisMaximum - mYAxis.mAxisMinimum);\n     }",
    "output": "Merge"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -344,10 +344,18 @@ protected void calcMinMax() {\n         if (mAutoScaleMinMaxEnabled)\n             mData.calcMinMax(getLowestVisibleXIndex(), getHighestVisibleXIndex());\n \n-        float minLeft = mData.getYMin(AxisDependency.LEFT);\n-        float maxLeft = mData.getYMax(AxisDependency.LEFT);\n-        float minRight = mData.getYMin(AxisDependency.RIGHT);\n-        float maxRight = mData.getYMax(AxisDependency.RIGHT);\n+        float minLeft = !Float.isNaN(mAxisLeft.getAxisMinValue())\n+                ? mAxisLeft.getAxisMinValue()\n+                : mData.getYMin(AxisDependency.LEFT);\n+        float maxLeft = !Float.isNaN(mAxisLeft.getAxisMaxValue())\n+                ? mAxisLeft.getAxisMaxValue()\n+                : mData.getYMax(AxisDependency.LEFT);\n+        float minRight = !Float.isNaN(mAxisRight.getAxisMinValue())\n+                ? mAxisRight.getAxisMinValue()\n+                : mData.getYMin(AxisDependency.RIGHT);\n+        float maxRight = !Float.isNaN(mAxisRight.getAxisMaxValue())\n+                ? mAxisRight.getAxisMaxValue()\n+                : mData.getYMax(AxisDependency.RIGHT);\n \n         float leftRange = Math.abs(maxLeft - minLeft);\n         float rightRange = Math.abs(maxRight - minRight);\n@@ -372,11 +380,19 @@ protected void calcMinMax() {\n         mDeltaX = Math.abs(mXChartMax - mXChartMin);\n \n         // Use the values as they are\n-        mAxisLeft.mAxisMinimum = !Float.isNaN(mAxisLeft.getAxisMinValue()) ? mAxisLeft.getAxisMinValue() : (minLeft - bottomSpaceLeft);\n-        mAxisLeft.mAxisMaximum = !Float.isNaN(mAxisLeft.getAxisMaxValue()) ? mAxisLeft.getAxisMaxValue() : (maxLeft + topSpaceLeft);\n-\n-        mAxisRight.mAxisMinimum = !Float.isNaN(mAxisRight.getAxisMinValue()) ? mAxisRight.getAxisMinValue() : (minRight - bottomSpaceRight);\n-        mAxisRight.mAxisMaximum = !Float.isNaN(mAxisRight.getAxisMaxValue()) ? mAxisRight.getAxisMaxValue() : (maxRight + topSpaceRight);\n+        mAxisLeft.mAxisMinimum = !Float.isNaN(mAxisLeft.getAxisMinValue())\n+                ? mAxisLeft.getAxisMinValue()\n+                : (minLeft - bottomSpaceLeft);\n+        mAxisLeft.mAxisMaximum = !Float.isNaN(mAxisLeft.getAxisMaxValue())\n+                ? mAxisLeft.getAxisMaxValue()\n+                : (maxLeft + topSpaceLeft);\n+\n+        mAxisRight.mAxisMinimum = !Float.isNaN(mAxisRight.getAxisMinValue())\n+                ? mAxisRight.getAxisMinValue()\n+                : (minRight - bottomSpaceRight);\n+        mAxisRight.mAxisMaximum = !Float.isNaN(mAxisRight.getAxisMaxValue())\n+                ? mAxisRight.getAxisMaxValue()\n+                : (maxRight + topSpaceRight);\n \n         mAxisLeft.mAxisRange = Math.abs(mAxisLeft.mAxisMaximum - mAxisLeft.mAxisMinimum);\n         mAxisRight.mAxisRange = Math.abs(mAxisRight.mAxisMaximum - mAxisRight.mAxisMinimum);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -107,8 +107,12 @@ protected void init() {\n     protected void calcMinMax() {\n         super.calcMinMax();\n \n-        float minLeft = mData.getYMin(AxisDependency.LEFT);\n-        float maxLeft = mData.getYMax(AxisDependency.LEFT);\n+        float minLeft = !Float.isNaN(mYAxis.getAxisMinValue())\n+                ? mYAxis.getAxisMinValue()\n+                : mData.getYMin(AxisDependency.LEFT);\n+        float maxLeft = !Float.isNaN(mYAxis.getAxisMaxValue())\n+                ? mYAxis.getAxisMaxValue()\n+                : mData.getYMax(AxisDependency.LEFT);\n \n         mXChartMax = mData.getXVals().size() - 1;\n         mDeltaX = Math.abs(mXChartMax - mXChartMin);\n@@ -122,8 +126,12 @@ protected void calcMinMax() {\n         mDeltaX = Math.abs(mXChartMax - mXChartMin);\n \n         // Use the values as they are\n-        mYAxis.mAxisMinimum = !Float.isNaN(mYAxis.getAxisMinValue()) ? mYAxis.getAxisMinValue() : (minLeft - bottomSpaceLeft);\n-        mYAxis.mAxisMaximum = !Float.isNaN(mYAxis.getAxisMaxValue()) ? mYAxis.getAxisMaxValue() : (maxLeft + topSpaceLeft);\n+        mYAxis.mAxisMinimum = !Float.isNaN(mYAxis.getAxisMinValue())\n+                ? mYAxis.getAxisMinValue()\n+                : (minLeft - bottomSpaceLeft);\n+        mYAxis.mAxisMaximum = !Float.isNaN(mYAxis.getAxisMaxValue())\n+                ? mYAxis.getAxisMaxValue()\n+                : (maxLeft + topSpaceLeft);\n \n         mYAxis.mAxisRange = Math.abs(mYAxis.mAxisMaximum - mYAxis.mAxisMinimum);\n     }",
    "output": "Merge pull request #1499 from danielgindi/axis-range-fix\n\nFixed range calculation according to axisMin/axisMax"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -344,10 +344,18 @@ protected void calcMinMax() {\n         if (mAutoScaleMinMaxEnabled)\n             mData.calcMinMax(getLowestVisibleXIndex(), getHighestVisibleXIndex());\n \n-        float minLeft = mData.getYMin(AxisDependency.LEFT);\n-        float maxLeft = mData.getYMax(AxisDependency.LEFT);\n-        float minRight = mData.getYMin(AxisDependency.RIGHT);\n-        float maxRight = mData.getYMax(AxisDependency.RIGHT);\n+        float minLeft = !Float.isNaN(mAxisLeft.getAxisMinValue())\n+                ? mAxisLeft.getAxisMinValue()\n+                : mData.getYMin(AxisDependency.LEFT);\n+        float maxLeft = !Float.isNaN(mAxisLeft.getAxisMaxValue())\n+                ? mAxisLeft.getAxisMaxValue()\n+                : mData.getYMax(AxisDependency.LEFT);\n+        float minRight = !Float.isNaN(mAxisRight.getAxisMinValue())\n+                ? mAxisRight.getAxisMinValue()\n+                : mData.getYMin(AxisDependency.RIGHT);\n+        float maxRight = !Float.isNaN(mAxisRight.getAxisMaxValue())\n+                ? mAxisRight.getAxisMaxValue()\n+                : mData.getYMax(AxisDependency.RIGHT);\n \n         float leftRange = Math.abs(maxLeft - minLeft);\n         float rightRange = Math.abs(maxRight - minRight);\n@@ -372,11 +380,19 @@ protected void calcMinMax() {\n         mDeltaX = Math.abs(mXChartMax - mXChartMin);\n \n         // Use the values as they are\n-        mAxisLeft.mAxisMinimum = !Float.isNaN(mAxisLeft.getAxisMinValue()) ? mAxisLeft.getAxisMinValue() : (minLeft - bottomSpaceLeft);\n-        mAxisLeft.mAxisMaximum = !Float.isNaN(mAxisLeft.getAxisMaxValue()) ? mAxisLeft.getAxisMaxValue() : (maxLeft + topSpaceLeft);\n-\n-        mAxisRight.mAxisMinimum = !Float.isNaN(mAxisRight.getAxisMinValue()) ? mAxisRight.getAxisMinValue() : (minRight - bottomSpaceRight);\n-        mAxisRight.mAxisMaximum = !Float.isNaN(mAxisRight.getAxisMaxValue()) ? mAxisRight.getAxisMaxValue() : (maxRight + topSpaceRight);\n+        mAxisLeft.mAxisMinimum = !Float.isNaN(mAxisLeft.getAxisMinValue())\n+                ? mAxisLeft.getAxisMinValue()\n+                : (minLeft - bottomSpaceLeft);\n+        mAxisLeft.mAxisMaximum = !Float.isNaN(mAxisLeft.getAxisMaxValue())\n+                ? mAxisLeft.getAxisMaxValue()\n+                : (maxLeft + topSpaceLeft);\n+\n+        mAxisRight.mAxisMinimum = !Float.isNaN(mAxisRight.getAxisMinValue())\n+                ? mAxisRight.getAxisMinValue()\n+                : (minRight - bottomSpaceRight);\n+        mAxisRight.mAxisMaximum = !Float.isNaN(mAxisRight.getAxisMaxValue())\n+                ? mAxisRight.getAxisMaxValue()\n+                : (maxRight + topSpaceRight);\n \n         mAxisLeft.mAxisRange = Math.abs(mAxisLeft.mAxisMaximum - mAxisLeft.mAxisMinimum);\n         mAxisRight.mAxisRange = Math.abs(mAxisRight.mAxisMaximum - mAxisRight.mAxisMinimum);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -107,8 +107,12 @@ protected void init() {\n     protected void calcMinMax() {\n         super.calcMinMax();\n \n-        float minLeft = mData.getYMin(AxisDependency.LEFT);\n-        float maxLeft = mData.getYMax(AxisDependency.LEFT);\n+        float minLeft = !Float.isNaN(mYAxis.getAxisMinValue())\n+                ? mYAxis.getAxisMinValue()\n+                : mData.getYMin(AxisDependency.LEFT);\n+        float maxLeft = !Float.isNaN(mYAxis.getAxisMaxValue())\n+                ? mYAxis.getAxisMaxValue()\n+                : mData.getYMax(AxisDependency.LEFT);\n \n         mXChartMax = mData.getXVals().size() - 1;\n         mDeltaX = Math.abs(mXChartMax - mXChartMin);\n@@ -122,8 +126,12 @@ protected void calcMinMax() {\n         mDeltaX = Math.abs(mXChartMax - mXChartMin);\n \n         // Use the values as they are\n-        mYAxis.mAxisMinimum = !Float.isNaN(mYAxis.getAxisMinValue()) ? mYAxis.getAxisMinValue() : (minLeft - bottomSpaceLeft);\n-        mYAxis.mAxisMaximum = !Float.isNaN(mYAxis.getAxisMaxValue()) ? mYAxis.getAxisMaxValue() : (maxLeft + topSpaceLeft);\n+        mYAxis.mAxisMinimum = !Float.isNaN(mYAxis.getAxisMinValue())\n+                ? mYAxis.getAxisMinValue()\n+                : (minLeft - bottomSpaceLeft);\n+        mYAxis.mAxisMaximum = !Float.isNaN(mYAxis.getAxisMaxValue())\n+                ? mYAxis.getAxisMaxValue()\n+                : (maxLeft + topSpaceLeft);\n \n         mYAxis.mAxisRange = Math.abs(mYAxis.mAxisMaximum - mYAxis.mAxisMinimum);\n     }",
    "output": "Fixed range calculation according to axisMin/axisMax"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -130,6 +130,48 @@ public void drawData(Canvas c) {\n     private Path mPathBuffer = new Path();\n     private RectF mInnerRectBuffer = new RectF();\n \n+    protected float calculateMinimumRadiusForSpacedSlice(\n+            PointF center,\n+            float radius,\n+            float angle,\n+            float arcStartPointX,\n+            float arcStartPointY,\n+            float startAngle,\n+            float sweepAngle)\n+    {\n+        final float angleMiddle = startAngle + sweepAngle / 2.f;\n+\n+        // Other point of the arc\n+        float arcEndPointX = center.x + radius * (float) Math.cos((startAngle + sweepAngle) * Utils.FDEG2RAD);\n+        float arcEndPointY = center.y + radius * (float) Math.sin((startAngle + sweepAngle) * Utils.FDEG2RAD);\n+\n+        // Middle point on the arc\n+        float arcMidPointX = center.x + radius * (float) Math.cos(angleMiddle * Utils.FDEG2RAD);\n+        float arcMidPointY = center.y + radius * (float) Math.sin(angleMiddle * Utils.FDEG2RAD);\n+\n+        // Middle point on straight line between the two point.\n+        // This is the base of the contained triangle\n+        double basePointsDistance = Math.sqrt(\n+                Math.pow(arcEndPointX - arcStartPointX, 2) +\n+                        Math.pow(arcEndPointY - arcStartPointY, 2));\n+\n+        // After reducing space from both sides of the \"slice\",\n+        //   the angle of the contained triangle should stay the same.\n+        // So let's find out the height of that triangle.\n+        float containedTriangleHeight = (float)(basePointsDistance / 2.0 *\n+                Math.tan((180.0 - angle) / 2.0 * Utils.DEG2RAD));\n+\n+        // Now we subtract that from the radius\n+        float spacedRadius = radius - containedTriangleHeight;\n+\n+        // And now subtract the height of the arc that's between the triangle and the outer circle\n+        spacedRadius -= Math.sqrt(\n+                Math.pow(arcMidPointX - (arcEndPointX + arcStartPointX) / 2.f, 2) +\n+                        Math.pow(arcMidPointY - (arcEndPointY + arcStartPointY) / 2.f, 2));\n+\n+        return spacedRadius;\n+    }\n+\n     protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n \n         float angle = 0;\n@@ -145,17 +187,10 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n         float sliceSpace = dataSet.getSliceSpace();\n         final PointF center = mChart.getCenterCircleBox();\n         final float radius = mChart.getRadius();\n-        final float innerRadius = mChart.isDrawHoleEnabled() && mChart.isHoleTransparent()\n+        final float userInnerRadius = mChart.isDrawHoleEnabled() && mChart.isHoleTransparent()\n                 ? radius * (mChart.getHoleRadius() / 100.f)\n                 : 0.f;\n \n-        // API < 21 does not receive floats in addArc, but a RectF\n-        mInnerRectBuffer.set(\n-                center.x - innerRadius,\n-                center.y - innerRadius,\n-                center.x + innerRadius,\n-                center.y + innerRadius);\n-\n         int visibleAngleCount = 0;\n         for (int j = 0; j < entryCount; j++) {\n             // draw only if the value is greater than zero\n@@ -167,6 +202,7 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n         for (int j = 0; j < entryCount; j++) {\n \n             float sliceAngle = drawAngles[j];\n+            float innerRadius = userInnerRadius;\n \n             Entry e = dataSet.getEntryForIndex(j);\n \n@@ -190,14 +226,17 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n \n                     mPathBuffer.reset();\n \n+                    float arcStartPointX = 0.f, arcStartPointY = 0.f;\n+\n                     if (sweepAngleOuter % 360f == 0.f) {\n                         // Android is doing \"mod 360\"\n                         mPathBuffer.addCircle(center.x, center.y, radius, Path.Direction.CW);\n                     } else {\n \n-                        mPathBuffer.moveTo(\n-                                center.x + radius * (float) Math.cos(startAngleOuter * Utils.FDEG2RAD),\n-                                center.y + radius * (float) Math.sin(startAngleOuter * Utils.FDEG2RAD));\n+                        arcStartPointX = center.x + radius * (float) Math.cos(startAngleOuter * Utils.FDEG2RAD);\n+                        arcStartPointY = center.y + radius * (float) Math.sin(startAngleOuter * Utils.FDEG2RAD);\n+\n+                        mPathBuffer.moveTo(arcStartPointX, arcStartPointY);\n \n                         mPathBuffer.arcTo(\n                                 circleBox,\n@@ -206,6 +245,23 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n                         );\n                     }\n \n+                    if (sliceSpace > 0.f) {\n+                        innerRadius = Math.max(innerRadius,\n+                                calculateMinimumRadiusForSpacedSlice(\n+                                        center, radius,\n+                                        sliceAngle * phaseY,\n+                                        arcStartPointX, arcStartPointY,\n+                                        startAngleOuter,\n+                                        sweepAngleOuter));\n+                    }\n+\n+                    // API < 21 does not receive floats in addArc, but a RectF\n+                    mInnerRectBuffer.set(\n+                            center.x - innerRadius,\n+                            center.y - innerRadius,\n+                            center.x + innerRadius,\n+                            center.y + innerRadius);\n+\n                     if (innerRadius > 0.0)\n                     {\n                         final float sliceSpaceInnerAngle = visibleAngleCount == 1 ?\n@@ -488,7 +544,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n         float[] absoluteAngles = mChart.getAbsoluteAngles();\n         final PointF center = mChart.getCenterCircleBox();\n         final float radius = mChart.getRadius();\n-        final float innerRadius = mChart.isDrawHoleEnabled() && mChart.isHoleTransparent()\n+        final float userInnerRadius = mChart.isDrawHoleEnabled() && mChart.isHoleTransparent()\n                 ? radius * (mChart.getHoleRadius() / 100.f)\n                 : 0.f;\n \n@@ -528,6 +584,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             final float sliceSpaceOuterAngle = visibleAngleCount == 1 ?\n                     0.f :\n                     sliceSpace / (Utils.FDEG2RAD * radius);\n+            float innerRadius = userInnerRadius;\n \n             float shift = set.getSelectionShift();\n             final float highlightedRadius = radius + shift;\n@@ -544,7 +601,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             }\n \n             mPathBuffer.reset();\n-\n+            \n             if (sweepAngleOuter % 360f == 0.f) {\n                 // Android is doing \"mod 360\"\n                 mPathBuffer.addCircle(center.x, center.y, highlightedRadius, Path.Direction.CW);\n@@ -561,6 +618,24 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n                 );\n             }\n \n+            if (sliceSpace > 0.f) {\n+                innerRadius = Math.max(innerRadius,\n+                        calculateMinimumRadiusForSpacedSlice(\n+                                center, radius,\n+                                sliceAngle * phaseY,\n+                                center.x + radius * (float) Math.cos(startAngleOuter * Utils.FDEG2RAD),\n+                                center.y + radius * (float) Math.sin(startAngleOuter * Utils.FDEG2RAD),\n+                                startAngleOuter,\n+                                sweepAngleOuter));\n+            }\n+\n+            // API < 21 does not receive floats in addArc, but a RectF\n+            mInnerRectBuffer.set(\n+                    center.x - innerRadius,\n+                    center.y - innerRadius,\n+                    center.x + innerRadius,\n+                    center.y + innerRadius);\n+\n             if (innerRadius > 0.0) {\n                 final float sliceSpaceInnerAngle = visibleAngleCount == 1 ?\n                         0.f :",
    "output": "Added calculation of minimum inner radius for proper spacing\n\nThis also allows for animating the spacing :-)"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -16,6 +16,7 @@\n import com.github.mikephil.charting.highlight.Highlight;\n import com.github.mikephil.charting.interfaces.datasets.IPieDataSet;\n import com.github.mikephil.charting.renderer.PieChartRenderer;\n+import com.github.mikephil.charting.utils.ColorTemplate;\n import com.github.mikephil.charting.utils.Utils;\n \n import java.util.List;\n@@ -53,6 +54,11 @@ public class PieChart extends PieRadarChartBase<PieData> {\n      */\n     private boolean mDrawHole = true;\n \n+    /**\n+     * if true, the hole will see-through to the inner ends of the slices\n+     */\n+    private boolean mDrawHoleTransparent = true;\n+\n     /**\n      * if true, the values inside the piechart are drawn as percent values\n      */\n@@ -332,25 +338,17 @@ public float[] getAbsoluteAngles() {\n      * @param color\n      */\n     public void setHoleColor(int color) {\n-        ((PieChartRenderer) mRenderer).getPaintHole().setXfermode(null);\n+        if (color == ColorTemplate.COLOR_NONE || color == ColorTemplate.COLOR_SKIP) {\n+            color = 0; // Transparent\n+        }\n         ((PieChartRenderer) mRenderer).getPaintHole().setColor(color);\n     }\n \n     /**\n-     * Set the hole in the center of the PieChart transparent. Thank you, code\n-     * provided by:\n-     *\n-     * @param enable\n-     * @link https://github.com/tbarthel-fr\n+     * Set the hole in the center of the PieChart transparent.\n      */\n     public void setHoleColorTransparent(boolean enable) {\n-        if (enable) {\n-            ((PieChartRenderer) mRenderer).getPaintHole().setColor(0xFFFFFFFF);\n-            ((PieChartRenderer) mRenderer).getPaintHole().setXfermode(\n-                    new PorterDuffXfermode(PorterDuff.Mode.CLEAR));\n-        } else {\n-            ((PieChartRenderer) mRenderer).getPaintHole().setXfermode(null);\n-        }\n+        mDrawHoleTransparent = enable;\n     }\n \n     /**\n@@ -360,7 +358,7 @@ public void setHoleColorTransparent(boolean enable) {\n      * @return true if hole is transparent.\n      */\n     public boolean isHoleTransparent() {\n-        return ((PieChartRenderer) mRenderer).getPaintHole().getXfermode() != null;\n+        return mDrawHoleTransparent;\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -160,7 +160,7 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n             float sliceAngle = drawAngles[j];\n             float sliceSpace = dataSet.getSliceSpace();\n             final float sliceSpaceOuterAngle = sliceSpace / (Utils.FDEG2RAD * radius);\n-            final float sliceSpaceInnerAngle = sliceSpace / (Utils.FDEG2RAD * innerRadius);\n+            final float sliceSpaceInnerAngle = innerRadius == 0.f ? 0.f : sliceSpace / (Utils.FDEG2RAD * innerRadius);\n \n             Entry e = dataSet.getEntryForIndex(j);\n \n@@ -211,6 +211,11 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n                                 -sweepAngleInner\n                         );\n                     }\n+                    else {\n+                        mPathBuffer.lineTo(\n+                                center.x,\n+                                center.y);\n+                    }\n \n                     mPathBuffer.close();\n \n@@ -336,6 +341,8 @@ public void drawExtras(Canvas c) {\n         drawCenterText(c);\n     }\n \n+    private Path mHoleCirclePath = new Path();\n+\n     /**\n      * draws the hole in the center of the chart and the transparent circle /\n      * hole\n@@ -344,30 +351,35 @@ protected void drawHole(Canvas c) {\n \n         if (mChart.isDrawHoleEnabled()) {\n \n-            float transparentCircleRadius = mChart.getTransparentCircleRadius();\n-            float holeRadius = mChart.getHoleRadius();\n             float radius = mChart.getRadius();\n-\n+            float holeRadius = radius * (mChart.getHoleRadius() / 100);\n             PointF center = mChart.getCenterCircleBox();\n+            boolean hasHoleColor = mHolePaint.getColor() != 0;\n+\n+            if (hasHoleColor) {\n+                // draw the hole-circle\n+                mBitmapCanvas.drawCircle(\n+                        center.x, center.y,\n+                        holeRadius, mHolePaint);\n+            }\n \n             // only draw the circle if it can be seen (not covered by the hole)\n-            if (transparentCircleRadius > holeRadius) {\n+            if (hasHoleColor && mChart.getTransparentCircleRadius() > mChart.getHoleRadius()) {\n \n-                // get original alpha\n                 int alpha = mTransparentCirclePaint.getAlpha();\n+                float secondHoleRadius = radius * (mChart.getTransparentCircleRadius() / 100);\n+\n                 mTransparentCirclePaint.setAlpha((int) ((float) alpha * mAnimator.getPhaseX() * mAnimator.getPhaseY()));\n \n                 // draw the transparent-circle\n-                mBitmapCanvas.drawCircle(center.x, center.y,\n-                        radius / 100 * transparentCircleRadius, mTransparentCirclePaint);\n+                mHoleCirclePath.reset();\n+                mHoleCirclePath.addCircle(center.x, center.y, secondHoleRadius, Path.Direction.CW);\n+                mHoleCirclePath.addCircle(center.x, center.y, holeRadius, Path.Direction.CCW);\n+                mBitmapCanvas.drawPath(mHoleCirclePath, mTransparentCirclePaint);\n \n                 // reset alpha\n                 mTransparentCirclePaint.setAlpha(alpha);\n             }\n-\n-            // draw the hole-circle\n-            mBitmapCanvas.drawCircle(center.x, center.y,\n-                    radius / 100 * holeRadius, mHolePaint);\n         }\n     }\n \n@@ -476,7 +488,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             float sliceAngle = drawAngles[xIndex];\n             float sliceSpace = set.getSliceSpace();\n             final float sliceSpaceOuterAngle = sliceSpace / (Utils.FDEG2RAD * radius);\n-            final float sliceSpaceInnerAngle = sliceSpace / (Utils.FDEG2RAD * innerRadius);\n+            final float sliceSpaceInnerAngle = innerRadius == 0.f ? 0.f : sliceSpace / (Utils.FDEG2RAD * innerRadius);\n \n             float shift = set.getSelectionShift();\n             final float highlightedRadius = radius + shift;\n@@ -504,8 +516,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n                     sweepAngleOuter\n             );\n \n-            if (innerRadius > 0.0)\n-            {\n+            if (innerRadius > 0.0) {\n                 final float startAngleInner = rotationAngle + (angle + sliceSpaceInnerAngle / 2.f) * phaseY;\n                 float sweepAngleInner = (sliceAngle - sliceSpaceInnerAngle) * phaseY;\n                 if (sweepAngleInner < 0.f)\n@@ -524,6 +535,11 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n                         -sweepAngleInner\n                 );\n             }\n+            else {\n+                mPathBuffer.lineTo(\n+                        center.x,\n+                        center.y);\n+            }\n \n             mPathBuffer.close();\n ",
    "output": "Improved transparentCircle for Pie\n\nInstead of using PorterDuffXfer to clear everything in the hole -\nwe allow both hole color and transparentCircle to co-exist.\n\nAlso now we allow to see through to the inner ends of the pie slices."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -371,7 +371,6 @@ protected void calcMinMax() {\n         mXChartMax = mData.getXVals().size() - 1;\n         mDeltaX = Math.abs(mXChartMax - mXChartMin);\n \n-        // Consider sticking one of the edges of the axis to zero (0.0)\n         // Use the values as they are\n         mAxisLeft.mAxisMinimum = !Float.isNaN(mAxisLeft.getAxisMinValue()) ? mAxisLeft.getAxisMinValue() : (minLeft - bottomSpaceLeft);\n         mAxisLeft.mAxisMaximum = !Float.isNaN(mAxisLeft.getAxisMaxValue()) ? mAxisLeft.getAxisMaxValue() : (maxLeft + topSpaceLeft);",
    "output": "Update BarLineChartBase.java"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n@@ -11,12 +11,12 @@\n import com.github.mikephil.charting.data.LineData;\n import com.github.mikephil.charting.data.ScatterData;\n import com.github.mikephil.charting.highlight.CombinedHighlighter;\n+import com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet;\n import com.github.mikephil.charting.interfaces.dataprovider.BarDataProvider;\n import com.github.mikephil.charting.interfaces.dataprovider.BubbleDataProvider;\n import com.github.mikephil.charting.interfaces.dataprovider.CandleDataProvider;\n import com.github.mikephil.charting.interfaces.dataprovider.LineDataProvider;\n import com.github.mikephil.charting.interfaces.dataprovider.ScatterDataProvider;\n-import com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet;\n import com.github.mikephil.charting.renderer.CombinedChartRenderer;\n \n /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java\n@@ -110,6 +110,8 @@ public List<Integer> getColors() {\n         return mColors;\n     }\n \n+    public List<Integer> getValueColors() { return mValueColors; }\n+\n     @Override\n     public int getColor() {\n         return mColors.get(0);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n@@ -150,7 +150,7 @@ public void drawValues(Canvas c) {\n                         }\n \n                         drawValue(c, formattedValue, valuePoints[j] + (val >= 0 ? posOffset : negOffset),\n-                                valuePoints[j + 1] + halfTextHeight);\n+                                valuePoints[j + 1] + halfTextHeight, dataSet.getValueTextColor(j / 2));\n                     }\n \n                     // if each value of a potential stack should be drawn\n@@ -191,7 +191,7 @@ public void drawValues(Canvas c) {\n \n                             drawValue(c, formattedValue, valuePoints[j]\n                                             + (e.getVal() >= 0 ? posOffset : negOffset),\n-                                    valuePoints[j + 1] + halfTextHeight);\n+                                    valuePoints[j + 1] + halfTextHeight, dataSet.getValueTextColor(j / 2));\n \n                         } else {\n \n@@ -246,7 +246,7 @@ public void drawValues(Canvas c) {\n                                 if (!mViewPortHandler.isInBoundsBottom(y))\n                                     continue;\n \n-                                drawValue(c, formattedValue, x, y + halfTextHeight);\n+                                drawValue(c, formattedValue, x, y + halfTextHeight, dataSet.getValueTextColor(j / 2));\n                             }\n                         }\n                     }\n@@ -255,7 +255,8 @@ public void drawValues(Canvas c) {\n         }\n     }\n \n-    protected void drawValue(Canvas c, String valueText, float x, float y) {\n+    protected void drawValue(Canvas c, String valueText, float x, float y, int color) {\n+        mValuePaint.setColor(color);\n         c.drawText(valueText, x, y, mValuePaint);\n     }\n ",
    "output": "Fix issue related to value-text colors (issue #1478)."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmPieDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmPieDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmPieDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmPieDataSet.java\n@@ -15,7 +15,7 @@\n public class RealmPieDataSet<T extends RealmObject> extends RealmBaseDataSet<T, Entry> implements IPieDataSet {\n \n     /**\n-     * the space in degrees between the chart-slices, default 0f\n+     * the space in pixels between the chart-slices, default 0f\n      */\n     private float mSliceSpace = 0f;\n \n@@ -77,19 +77,19 @@ public void build(RealmResults<T> results) {\n     }\n \n     /**\n-     * sets the space that is left out between the piechart-slices, default: 0°\n-     * --> no space, maximum 45, minimum 0 (no space)\n+     * Sets the space that is left out between the piechart-slices in dp.\n+     * Default: 0 --> no space, maximum 20f\n      *\n-     * @param degrees\n+     * @param spaceDp\n      */\n-    public void setSliceSpace(float degrees) {\n+    public void setSliceSpace(float spaceDp) {\n \n-        if (degrees > 45)\n-            degrees = 45f;\n-        if (degrees < 0)\n-            degrees = 0f;\n+        if (spaceDp > 20)\n+            spaceDp = 20f;\n+        if (spaceDp < 0)\n+            spaceDp = 0f;\n \n-        mSliceSpace = degrees;\n+        mSliceSpace = Utils.convertDpToPixel(spaceDp);\n     }\n \n     @Override",
    "output": "PieChart fixes for realm dataset"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n@@ -48,6 +48,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         mSeekBarY.setOnSeekBarChangeListener(this);\n \n         mChart = (CandleStickChart) findViewById(R.id.chart1);\n+        mChart.setBackgroundColor(Color.WHITE);\n \n         mChart.setDescription(\"\");\n ",
    "output": "New candlestickchart screenshot"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -143,14 +143,11 @@ protected void computeAxisValues(float min, float max) {\n                     mYAxis.mEntries = new float[n];\n                 }\n \n-                f = first;\n-                Double d = new Double(f);\n+                for (f = first, i = 0; i < n; f += interval, ++i) {\n \n-                // check negative zero\n-                mYAxis.mEntries[0] = (float) (d.equals(-0.0) ? Math.abs(f) : f);\n-                f += interval;\n+                    if (f == 0.0) // Fix for negative zero case (Where value == -0.0, and 0.0 == -0.0)\n+                        f = 0.0;\n \n-                for (i = 1; i < n; f += interval, ++i) {\n                     mYAxis.mEntries[i] = (float) f;\n                 }\n             }\n@@ -297,7 +294,7 @@ public void renderGridLines(Canvas c) {\n             position[1] = 0f;\n             mTrans.pointValuesToPixel(position);\n \n-            drawZeroLine(c, mViewPortHandler.offsetLeft(), mViewPortHandler.contentRight(), position[1]-1, position[1]-1);\n+            drawZeroLine(c, mViewPortHandler.offsetLeft(), mViewPortHandler.contentRight(), position[1] - 1, position[1] - 1);\n         }\n     }\n ",
    "output": "Minor changes for negative zero fix"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n@@ -105,7 +105,7 @@ protected void drawDataSet(Canvas c, IScatterDataSet dataSet) {\n                                 buffer.buffer[i + 1] + shapeHoleSizeHalf + shapeStrokeSizeHalf,\n                                 mRenderPaint);\n \n-                        if (shapeHoleColor != ColorTemplate.COLOR_NONE && shapeHoleSize > 0f) {\n+                        if (shapeHoleColor != ColorTemplate.COLOR_NONE) {\n                             mRenderPaint.setStyle(Style.FILL);\n \n                             mRenderPaint.setColor(shapeHoleColor);\n@@ -152,7 +152,7 @@ protected void drawDataSet(Canvas c, IScatterDataSet dataSet) {\n                                 shapeHoleSizeHalf + shapeStrokeSizeHalf,\n                                 mRenderPaint);\n \n-                        if (shapeHoleColor != ColorTemplate.COLOR_NONE && shapeHoleSize > 0f) {\n+                        if (shapeHoleColor != ColorTemplate.COLOR_NONE) {\n                             mRenderPaint.setStyle(Style.FILL);\n \n                             mRenderPaint.setColor(shapeHoleColor);",
    "output": "Remove redundant if-check"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java\n@@ -35,6 +35,7 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         mTf = Typeface.createFromAsset(getAssets(), \"OpenSans-Regular.ttf\");\n         mChart = (BarChart) findViewById(R.id.chart1);\n+        mChart.setBackgroundColor(Color.WHITE);\n         mChart.setExtraTopOffset(-30f);\n         mChart.setExtraBottomOffset(10f);\n         mChart.setExtraLeftOffset(70f);",
    "output": "Add zeroline screenshot"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -415,13 +415,29 @@ protected void onDraw(Canvas canvas) {\n \n         if (mData == null) {\n \n+            boolean hasText = !TextUtils.isEmpty(mNoDataText);\n+            boolean hasDescription = !TextUtils.isEmpty(mNoDataTextDescription);\n+            float line1height = hasText ? Utils.calcTextHeight(mInfoPaint, mNoDataText) : 0.f;\n+            float line2height = hasDescription ? Utils.calcTextHeight(mInfoPaint, mNoDataTextDescription) : 0.f;\n+            float lineSpacing = (hasText && hasDescription) ?\n+                    (mInfoPaint.getFontSpacing() - line1height) : 0.f;\n+\n             // if no data, inform the user\n-            canvas.drawText(mNoDataText, getWidth() / 2, getHeight() / 2, mInfoPaint);\n \n-            if (!TextUtils.isEmpty(mNoDataTextDescription)) {\n-                float textOffset = -mInfoPaint.ascent() + mInfoPaint.descent();\n-                canvas.drawText(mNoDataTextDescription, getWidth() / 2, (getHeight() / 2)\n-                        + textOffset, mInfoPaint);\n+            float y = (getHeight() -\n+                    (line1height + lineSpacing + line2height)) / 2.f\n+                    + line1height;\n+\n+            if (hasText) {\n+                canvas.drawText(mNoDataText, getWidth() / 2, y, mInfoPaint);\n+\n+                if (hasDescription) {\n+                    y = y + line1height + lineSpacing;\n+                }\n+            }\n+\n+            if (hasDescription) {\n+                canvas.drawText(mNoDataTextDescription, getWidth() / 2, y, mInfoPaint);\n             }\n             return;\n         }",
    "output": "Merge pull request #1455 from danielgindi/no-data-text\n\nCenter the \"no data text\" vertically"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n@@ -154,7 +154,7 @@ protected CandleData generateCandleData() {\n \n         CandleDataSet set = new CandleDataSet(entries, \"Candle DataSet\");\n         set.setColor(Color.rgb(80, 80, 80));\n-        set.setBodySpace(0.3f);\n+        set.setBarSpace(0.3f);\n         set.setValueTextSize(10f);\n         set.setDrawValues(false);\n         d.addDataSet(set);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n@@ -33,7 +33,7 @@ public class CandleDataSet extends LineScatterCandleRadarDataSet<CandleEntry> im\n     /**\n      * the space between the candle entries, default 0.1f (10%)\n      */\n-    private float mBodySpace = 0.1f;\n+    private float mBarSpace = 0.1f;\n \n     /**\n      * use candle color for the shadow\n@@ -90,7 +90,7 @@ public DataSet<CandleEntry> copy() {\n         copied.mColors = mColors;\n         copied.mShadowWidth = mShadowWidth;\n         copied.mShowCandleBar = mShowCandleBar;\n-        copied.mBodySpace = mBodySpace;\n+        copied.mBarSpace = mBarSpace;\n         copied.mHighLightColor = mHighLightColor;\n         copied.mIncreasingPaintStyle = mIncreasingPaintStyle;\n         copied.mDecreasingPaintStyle = mDecreasingPaintStyle;\n@@ -137,19 +137,19 @@ public void calcMinMax(int start, int end) {\n      *\n      * @param space\n      */\n-    public void setBodySpace(float space) {\n+    public void setBarSpace(float space) {\n \n         if (space < 0f)\n             space = 0f;\n         if (space > 0.45f)\n             space = 0.45f;\n \n-        mBodySpace = space;\n+        mBarSpace = space;\n     }\n \n     @Override\n-    public float getBodySpace() {\n-        return mBodySpace;\n+    public float getBarSpace() {\n+        return mBarSpace;\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n@@ -38,7 +38,7 @@ public class RealmCandleDataSet<T extends RealmObject> extends RealmLineScatterC\n     /**\n      * the space between the candle entries, default 0.1f (10%)\n      */\n-    private float mBodySpace = 0.1f;\n+    private float mBarSpace = 0.1f;\n \n     /**\n      * use candle color for the shadow\n@@ -181,19 +181,19 @@ public void calcMinMax(int start, int end) {\n      *\n      * @param space\n      */\n-    public void setBodySpace(float space) {\n+    public void setBarSpace(float space) {\n \n         if (space < 0f)\n             space = 0f;\n         if (space > 0.45f)\n             space = 0.45f;\n \n-        mBodySpace = space;\n+        mBarSpace = space;\n     }\n \n     @Override\n-    public float getBodySpace() {\n-        return mBodySpace;\n+    public float getBarSpace() {\n+        return mBarSpace;\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/ICandleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/ICandleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/ICandleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/ICandleDataSet.java\n@@ -15,7 +15,7 @@ public interface ICandleDataSet extends ILineScatterCandleRadarDataSet<CandleEnt\n      *\n      * @return\n      */\n-    float getBodySpace();\n+    float getBarSpace();\n \n     /**\n      * Returns whether the candle bars should show?\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n@@ -56,7 +56,7 @@ protected void drawDataSet(Canvas c, ICandleDataSet dataSet) {\n \n         float phaseX = mAnimator.getPhaseX();\n         float phaseY = mAnimator.getPhaseY();\n-        float bodySpace = dataSet.getBodySpace();\n+        float barSpace = dataSet.getBarSpace();\n         boolean showCandleBar = dataSet.getShowCandleBar();\n \n         int minx = Math.max(mMinX, 0);\n@@ -149,9 +149,9 @@ else if (open < close)\n \n                 // calculate the body\n \n-                mBodyBuffers[0] = xIndex - 0.5f + bodySpace;\n+                mBodyBuffers[0] = xIndex - 0.5f + barSpace;\n                 mBodyBuffers[1] = close * phaseY;\n-                mBodyBuffers[2] = (xIndex + 0.5f - bodySpace);\n+                mBodyBuffers[2] = (xIndex + 0.5f - barSpace);\n                 mBodyBuffers[3] = open * phaseY;\n \n                 trans.pointValuesToPixel(mBodyBuffers);\n@@ -206,12 +206,12 @@ else if (open < close)\n                 mRangeBuffers[2] = xIndex;\n                 mRangeBuffers[3] = low * phaseY;\n \n-                mOpenBuffers[0] = xIndex - 0.5f + bodySpace;\n+                mOpenBuffers[0] = xIndex - 0.5f + barSpace;\n                 mOpenBuffers[1] = open * phaseY;\n                 mOpenBuffers[2] = xIndex;\n                 mOpenBuffers[3] = open * phaseY;\n \n-                mCloseBuffers[0] = xIndex + 0.5f - bodySpace;\n+                mCloseBuffers[0] = xIndex + 0.5f - barSpace;\n                 mCloseBuffers[1] = close * phaseY;\n                 mCloseBuffers[2] = xIndex;\n                 mCloseBuffers[3] = close * phaseY;",
    "output": "Renamed candleDataSet.bodySpace -> barSpace"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n@@ -33,7 +33,7 @@ public class CandleDataSet extends LineScatterCandleRadarDataSet<CandleEntry> im\n     private boolean mShadowColorSameAsCandle = false;\n \n     /**\n-     * paint style when open <= close\n+     * paint style when open < close\n      * increasing candlesticks are traditionally hollow\n      */\n     protected Paint.Style mIncreasingPaintStyle = Paint.Style.STROKE;\n@@ -186,60 +186,60 @@ public int getNeutralColor() {\n \n     /**\n      * Sets the one and ONLY color that should be used for this DataSet when\n-     * open > close.\n+     * open <= close.\n      *\n      * @param color\n      */\n-    public void setDecreasingColor(int color) {\n-        mDecreasingColor = color;\n+    public void setIncreasingColor(int color) {\n+        mIncreasingColor = color;\n     }\n \n     @Override\n-    public int getDecreasingColor() {\n-        return mDecreasingColor;\n+    public int getIncreasingColor() {\n+        return mIncreasingColor;\n     }\n \n     /**\n      * Sets the one and ONLY color that should be used for this DataSet when\n-     * open <= close.\n+     * open > close.\n      *\n      * @param color\n      */\n-    public void setIncreasingColor(int color) {\n-        mIncreasingColor = color;\n+    public void setDecreasingColor(int color) {\n+        mDecreasingColor = color;\n     }\n \n     @Override\n-    public int getIncreasingColor() {\n-        return mIncreasingColor;\n+    public int getDecreasingColor() {\n+        return mDecreasingColor;\n     }\n \n     @Override\n-    public Paint.Style getDecreasingPaintStyle() {\n-        return mDecreasingPaintStyle;\n+    public Paint.Style getIncreasingPaintStyle() {\n+        return mIncreasingPaintStyle;\n     }\n \n     /**\n-     * Sets paint style when open > close\n+     * Sets paint style when open < close\n      *\n-     * @param decreasingPaintStyle\n+     * @param paintStyle\n      */\n-    public void setDecreasingPaintStyle(Paint.Style decreasingPaintStyle) {\n-        this.mDecreasingPaintStyle = decreasingPaintStyle;\n+    public void setIncreasingPaintStyle(Paint.Style paintStyle) {\n+        this.mIncreasingPaintStyle = paintStyle;\n     }\n \n     @Override\n-    public Paint.Style getIncreasingPaintStyle() {\n-        return mIncreasingPaintStyle;\n+    public Paint.Style getDecreasingPaintStyle() {\n+        return mDecreasingPaintStyle;\n     }\n \n     /**\n-     * Sets paint style when open <= close\n+     * Sets paint style when open > close\n      *\n-     * @param paintStyle\n+     * @param decreasingPaintStyle\n      */\n-    public void setIncreasingPaintStyle(Paint.Style paintStyle) {\n-        this.mIncreasingPaintStyle = paintStyle;\n+    public void setDecreasingPaintStyle(Paint.Style decreasingPaintStyle) {\n+        this.mDecreasingPaintStyle = decreasingPaintStyle;\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n@@ -38,7 +38,7 @@ public class RealmCandleDataSet<T extends RealmObject> extends RealmLineScatterC\n     private boolean mShadowColorSameAsCandle = false;\n \n     /**\n-     * paint style when open <= close\n+     * paint style when open < close\n      * increasing candlesticks are traditionally hollow\n      */\n     protected Paint.Style mIncreasingPaintStyle = Paint.Style.STROKE;\n@@ -222,60 +222,60 @@ public int getNeutralColor() {\n \n     /**\n      * Sets the one and ONLY color that should be used for this DataSet when\n-     * open > close.\n+     * open < close.\n      *\n      * @param color\n      */\n-    public void setDecreasingColor(int color) {\n-        mDecreasingColor = color;\n+    public void setIncreasingColor(int color) {\n+        mIncreasingColor = color;\n     }\n \n     @Override\n-    public int getDecreasingColor() {\n-        return mDecreasingColor;\n+    public int getIncreasingColor() {\n+        return mIncreasingColor;\n     }\n \n     /**\n      * Sets the one and ONLY color that should be used for this DataSet when\n-     * open < close.\n+     * open > close.\n      *\n      * @param color\n      */\n-    public void setIncreasingColor(int color) {\n-        mIncreasingColor = color;\n+    public void setDecreasingColor(int color) {\n+        mDecreasingColor = color;\n     }\n \n     @Override\n-    public int getIncreasingColor() {\n-        return mIncreasingColor;\n+    public int getDecreasingColor() {\n+        return mDecreasingColor;\n     }\n \n     @Override\n-    public Paint.Style getDecreasingPaintStyle() {\n-        return mDecreasingPaintStyle;\n+    public Paint.Style getIncreasingPaintStyle() {\n+        return mIncreasingPaintStyle;\n     }\n \n     /**\n-     * Sets paint style when open > close\n+     * Sets paint style when open < close\n      *\n-     * @param decreasingPaintStyle\n+     * @param paintStyle\n      */\n-    public void setDecreasingPaintStyle(Paint.Style decreasingPaintStyle) {\n-        this.mDecreasingPaintStyle = decreasingPaintStyle;\n+    public void setIncreasingPaintStyle(Paint.Style paintStyle) {\n+        this.mIncreasingPaintStyle = paintStyle;\n     }\n \n     @Override\n-    public Paint.Style getIncreasingPaintStyle() {\n-        return mIncreasingPaintStyle;\n+    public Paint.Style getDecreasingPaintStyle() {\n+        return mDecreasingPaintStyle;\n     }\n \n     /**\n-     * Sets paint style when open <= close\n+     * Sets paint style when open > close\n      *\n-     * @param paintStyle\n+     * @param decreasingPaintStyle\n      */\n-    public void setIncreasingPaintStyle(Paint.Style paintStyle) {\n-        this.mIncreasingPaintStyle = paintStyle;\n+    public void setDecreasingPaintStyle(Paint.Style decreasingPaintStyle) {\n+        this.mDecreasingPaintStyle = decreasingPaintStyle;\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/ICandleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/ICandleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/ICandleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/ICandleDataSet.java\n@@ -39,32 +39,32 @@ public interface ICandleDataSet extends ILineScatterCandleRadarDataSet<CandleEnt\n     int getNeutralColor();\n \n     /**\n-     * Returns the decreasing color (for open > close).\n+     * Returns the increasing color (for open < close).\n      *\n      * @return\n      */\n-    int getDecreasingColor();\n+    int getIncreasingColor();\n \n     /**\n-     * Returns the increasing color (for open < close).\n+     * Returns the decreasing color (for open > close).\n      *\n      * @return\n      */\n-    int getIncreasingColor();\n+    int getDecreasingColor();\n \n     /**\n-     * Returns paint style when open > close\n+     * Returns paint style when open < close\n      *\n      * @return\n      */\n-    Paint.Style getDecreasingPaintStyle();\n+    Paint.Style getIncreasingPaintStyle();\n \n     /**\n-     * Returns paint style when open <= close\n+     * Returns paint style when open > close\n      *\n      * @return\n      */\n-    Paint.Style getIncreasingPaintStyle();\n+    Paint.Style getDecreasingPaintStyle();\n \n     /**\n      * Is the shadow color same as the candle color?",
    "output": "Changed order of those properties for consistency"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n@@ -58,21 +58,22 @@ protected void drawDataSet(Canvas c, ICandleDataSet dataSet) {\n         int minx = Math.max(mMinX, 0);\n         int maxx = Math.min(mMaxX + 1, dataSet.getEntryCount());\n \n-        int range = (maxx - minx) * 4;\n-        int to = (int) Math.ceil((maxx - minx) * phaseX + minx);\n-\n         mRenderPaint.setStrokeWidth(dataSet.getShadowWidth());\n \n         // draw the body\n-        for (int j = 0; j < range; j += 4) {\n+        for (int j = minx,\n+             count = (int) Math.ceil((maxx - minx) * phaseX + (float)minx);\n+             j < count;\n+             j++) {\n \n             // get the entry\n-            CandleEntry e = dataSet.getEntryForIndex(j / 4 + minx);\n+            CandleEntry e = dataSet.getEntryForIndex(j);\n+\n+            final int xIndex = e.getXIndex();\n \n-            if (!fitsBounds(e.getXIndex(), mMinX, to))\n+            if (xIndex < minx || xIndex >= maxx)\n                 continue;\n \n-            final int xIndex = e.getXIndex();\n             final float open = e.getOpen();\n             final float close = e.getClose();\n             final float high = e.getHigh();\n@@ -159,7 +160,7 @@ else if (open < close)\n             if (open > close) { // decreasing\n \n                 if (dataSet.getDecreasingColor() == ColorTemplate.COLOR_NONE) {\n-                    mRenderPaint.setColor(dataSet.getColor(j / 4 + minx));\n+                    mRenderPaint.setColor(dataSet.getColor(j));\n                 } else {\n                     mRenderPaint.setColor(dataSet.getDecreasingColor());\n                 }\n@@ -174,7 +175,7 @@ else if (open < close)\n             } else if (open < close) {\n \n                 if (dataSet.getIncreasingColor() == ColorTemplate.COLOR_NONE) {\n-                    mRenderPaint.setColor(dataSet.getColor(j / 4 + minx));\n+                    mRenderPaint.setColor(dataSet.getColor(j));\n                 } else {\n                     mRenderPaint.setColor(dataSet.getIncreasingColor());\n                 }\n@@ -188,7 +189,7 @@ else if (open < close)\n             } else { // equal values\n \n                 if (dataSet.getNeutralColor() == ColorTemplate.COLOR_NONE) {\n-                    mRenderPaint.setColor(dataSet.getColor(j / 4 + minx));\n+                    mRenderPaint.setColor(dataSet.getColor(j));\n                 } else {\n                     mRenderPaint.setColor(dataSet.getNeutralColor());\n                 }",
    "output": "Got rid of the confusing 4 multiplier here"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n@@ -204,6 +204,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n         set1.setDecreasingPaintStyle(Paint.Style.FILL);\n         set1.setIncreasingColor(Color.rgb(122, 242, 84));\n         set1.setIncreasingPaintStyle(Paint.Style.STROKE);\n+        set1.setNeutralColor(Color.BLUE);\n         //set1.setHighlightLineWidth(1f);\n \n         CandleData data = new CandleData(xVals, set1);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityCandle.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityCandle.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityCandle.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityCandle.java\n@@ -61,6 +61,7 @@ private void setData() {\n         set.setDecreasingPaintStyle(Paint.Style.FILL);\n         set.setIncreasingColor(Color.rgb(122, 242, 84));\n         set.setIncreasingPaintStyle(Paint.Style.STROKE);\n+        set.setNeutralColor(Color.BLUE);\n \n         ArrayList<ICandleDataSet> dataSets = new ArrayList<ICandleDataSet>();\n         dataSets.add(set); // add the dataset\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n@@ -45,7 +45,12 @@ public class CandleDataSet extends LineScatterCandleRadarDataSet<CandleEntry> im\n     protected Paint.Style mDecreasingPaintStyle = Paint.Style.FILL;\n \n     /**\n-     * color for open <= close\n+     * color for open == close\n+     */\n+    protected int mNeutralColor = ColorTemplate.COLOR_NONE;\n+\n+    /**\n+     * color for open < close\n      */\n     protected int mIncreasingColor = ColorTemplate.COLOR_NONE;\n \n@@ -164,6 +169,21 @@ public float getShadowWidth() {\n \n     /** BELOW THIS COLOR HANDLING */\n \n+    /**\n+     * Sets the one and ONLY color that should be used for this DataSet when\n+     * open == close.\n+     *\n+     * @param color\n+     */\n+    public void setNeutralColor(int color) {\n+        mNeutralColor = color;\n+    }\n+\n+    @Override\n+    public int getNeutralColor() {\n+        return mNeutralColor;\n+    }\n+\n     /**\n      * Sets the one and ONLY color that should be used for this DataSet when\n      * open > close.\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n@@ -50,7 +50,12 @@ public class RealmCandleDataSet<T extends RealmObject> extends RealmLineScatterC\n     protected Paint.Style mDecreasingPaintStyle = Paint.Style.FILL;\n \n     /**\n-     * color for open <= close\n+     * color for open == close\n+     */\n+    protected int mNeutralColor = ColorTemplate.COLOR_NONE;\n+\n+    /**\n+     * color for open < close\n      */\n     protected int mIncreasingColor = ColorTemplate.COLOR_NONE;\n \n@@ -200,6 +205,21 @@ public float getShadowWidth() {\n \n     /** BELOW THIS COLOR HANDLING */\n \n+    /**\n+     * Sets the one and ONLY color that should be used for this DataSet when\n+     * open == close.\n+     *\n+     * @param color\n+     */\n+    public void setNeutralColor(int color) {\n+        mNeutralColor = color;\n+    }\n+\n+    @Override\n+    public int getNeutralColor() {\n+        return mNeutralColor;\n+    }\n+\n     /**\n      * Sets the one and ONLY color that should be used for this DataSet when\n      * open > close.\n@@ -217,7 +237,7 @@ public int getDecreasingColor() {\n \n     /**\n      * Sets the one and ONLY color that should be used for this DataSet when\n-     * open <= close.\n+     * open < close.\n      *\n      * @param color\n      */\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/ICandleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/ICandleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/ICandleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/ICandleDataSet.java\n@@ -29,17 +29,24 @@ public interface ICandleDataSet extends ILineScatterCandleRadarDataSet<CandleEnt\n      *\n      * @return\n      */\n-    public int getShadowColor();\n+    int getShadowColor();\n \n     /**\n-     * Returns the decreasing color.\n+     * Returns the neutral color (for open == close)\n+     *\n+     * @return\n+     */\n+    int getNeutralColor();\n+\n+    /**\n+     * Returns the decreasing color (for open > close).\n      *\n      * @return\n      */\n     int getDecreasingColor();\n \n     /**\n-     * Returns the increasing color.\n+     * Returns the increasing color (for open < close).\n      *\n      * @return\n      */\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n@@ -129,9 +129,9 @@ else if (open < close)\n \n                 else\n                     mRenderPaint.setColor(\n-                            dataSet.getShadowColor() == ColorTemplate.COLOR_NONE ?\n+                            dataSet.getNeutralColor() == ColorTemplate.COLOR_NONE ?\n                                     dataSet.getColor(j) :\n-                                    dataSet.getShadowColor()\n+                                    dataSet.getNeutralColor()\n                     );\n \n             } else {\n@@ -187,7 +187,11 @@ else if (open < close)\n                         mRenderPaint);\n             } else { // equal values\n \n-                mRenderPaint.setColor(dataSet.getShadowColor());\n+                if (dataSet.getNeutralColor() == ColorTemplate.COLOR_NONE) {\n+                    mRenderPaint.setColor(dataSet.getColor(j / 4 + minx));\n+                } else {\n+                    mRenderPaint.setColor(dataSet.getNeutralColor());\n+                }\n \n                 c.drawLine(\n                         mBodyBuffers[0], mBodyBuffers[1],",
    "output": "Separate neutralColor in candlestick chart"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n@@ -201,9 +201,9 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n         set1.setShadowColor(Color.DKGRAY);\n         set1.setShadowWidth(0.7f);\n         set1.setDecreasingColor(Color.RED);\n-        set1.setDecreasingPaintStyle(Paint.Style.STROKE);\n+        set1.setDecreasingPaintStyle(Paint.Style.FILL);\n         set1.setIncreasingColor(Color.rgb(122, 242, 84));\n-        set1.setIncreasingPaintStyle(Paint.Style.FILL);\n+        set1.setIncreasingPaintStyle(Paint.Style.STROKE);\n         //set1.setHighlightLineWidth(1f);\n \n         CandleData data = new CandleData(xVals, set1);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityCandle.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityCandle.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityCandle.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityCandle.java\n@@ -58,9 +58,9 @@ private void setData() {\n         set.setShadowColor(Color.DKGRAY);\n         set.setShadowWidth(0.7f);\n         set.setDecreasingColor(Color.RED);\n-        set.setDecreasingPaintStyle(Paint.Style.STROKE);\n+        set.setDecreasingPaintStyle(Paint.Style.FILL);\n         set.setIncreasingColor(Color.rgb(122, 242, 84));\n-        set.setIncreasingPaintStyle(Paint.Style.FILL);\n+        set.setIncreasingPaintStyle(Paint.Style.STROKE);\n \n         ArrayList<ICandleDataSet> dataSets = new ArrayList<ICandleDataSet>();\n         dataSets.add(set); // add the dataset\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n@@ -34,13 +34,15 @@ public class CandleDataSet extends LineScatterCandleRadarDataSet<CandleEntry> im\n \n     /**\n      * paint style when open <= close\n+     * increasing candlesticks are traditionally hollow\n      */\n-    protected Paint.Style mIncreasingPaintStyle = Paint.Style.FILL;\n+    protected Paint.Style mIncreasingPaintStyle = Paint.Style.STROKE;\n \n     /**\n      * paint style when open > close\n+     * descreasing candlesticks are traditionally filled\n      */\n-    protected Paint.Style mDecreasingPaintStyle = Paint.Style.STROKE;\n+    protected Paint.Style mDecreasingPaintStyle = Paint.Style.FILL;\n \n     /**\n      * color for open <= close\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n@@ -39,13 +39,15 @@ public class RealmCandleDataSet<T extends RealmObject> extends RealmLineScatterC\n \n     /**\n      * paint style when open <= close\n+     * increasing candlesticks are traditionally hollow\n      */\n-    protected Paint.Style mIncreasingPaintStyle = Paint.Style.FILL;\n+    protected Paint.Style mIncreasingPaintStyle = Paint.Style.STROKE;\n \n     /**\n      * paint style when open > close\n+     * descreasing candlesticks are traditionally filled\n      */\n-    protected Paint.Style mDecreasingPaintStyle = Paint.Style.STROKE;\n+    protected Paint.Style mDecreasingPaintStyle = Paint.Style.FILL;\n \n     /**\n      * color for open <= close",
    "output": "Default filled/not-filled in candle chart were wrong"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java\n@@ -67,6 +67,8 @@ protected void onCreate(Bundle savedInstanceState) {\n         left.setDrawAxisLine(false);\n         left.setDrawGridLines(false);\n         left.setDrawZeroLine(true); // draw a zero line\n+        left.setZeroLineColor(Color.GRAY);\n+        left.setZeroLineWidth(0.7f);\n         mChart.getAxisRight().setEnabled(false);\n         mChart.getLegend().setEnabled(false);\n \n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -133,6 +133,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         leftAxis.setStartAtZero(false);\n         //leftAxis.setYOffset(20f);\n         leftAxis.enableGridDashedLine(10f, 10f, 0f);\n+        leftAxis.setDrawZeroLine(false);\n \n         // limit lines are drawn behind data (and not on top)\n         leftAxis.setDrawLimitLinesBehindData(true);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n@@ -123,6 +123,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         rightAxis.setStartAtZero(false);\n         rightAxis.setAxisMinValue(-200);\n         rightAxis.setDrawGridLines(false);\n+        rightAxis.setDrawZeroLine(false);\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n@@ -1,5 +1,6 @@\n package com.github.mikephil.charting.components;\n \n+import android.graphics.Color;\n import android.graphics.Paint;\n \n import com.github.mikephil.charting.formatter.DefaultValueFormatter;\n@@ -72,6 +73,16 @@ public class YAxis extends AxisBase {\n      */\n     protected boolean mDrawZeroLine = true;\n \n+    /**\n+     * Color of the zero line\n+     */\n+    protected int mZeroLineColor = Color.GRAY;\n+\n+    /**\n+     * Width of the zero line in pixels\n+     */\n+    protected float mZeroLineWidth = 1f;\n+\n     /**\n      * custom minimum value this axis represents\n      */\n@@ -365,6 +376,32 @@ public void setDrawZeroLine(boolean mDrawZeroLine) {\n         this.mDrawZeroLine = mDrawZeroLine;\n     }\n \n+    public int getZeroLineColor() {\n+        return mZeroLineColor;\n+    }\n+\n+    /**\n+     * Sets the color of the zero line\n+     *\n+     * @param color\n+     */\n+    public void setZeroLineColor(int color) {\n+        mZeroLineColor = color;\n+    }\n+\n+    public float getZeroLineWidth() {\n+        return mZeroLineWidth;\n+    }\n+\n+    /**\n+     * Sets the width of the zero line in dp\n+     *\n+     * @param width\n+     */\n+    public void setZeroLineWidth(float width) {\n+        this.mZeroLineWidth = Utils.convertDpToPixel(width);\n+    }\n+\n     /**\n      * This is for normal (not horizontal) charts horizontal spacing.\n      *\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -21,13 +21,20 @@ public class YAxisRenderer extends AxisRenderer {\n \n     protected YAxis mYAxis;\n \n+    protected Paint mZeroLinePaint;\n+\n     public YAxisRenderer(ViewPortHandler viewPortHandler, YAxis yAxis, Transformer trans) {\n         super(viewPortHandler, trans);\n \n         this.mYAxis = yAxis;\n \n         mAxisLabelPaint.setColor(Color.BLACK);\n         mAxisLabelPaint.setTextSize(Utils.convertDpToPixel(10f));\n+\n+        mZeroLinePaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n+        mZeroLinePaint.setColor(Color.GRAY);\n+        mZeroLinePaint.setStrokeWidth(1f);\n+        mZeroLinePaint.setStyle(Paint.Style.STROKE);\n     }\n \n     /**\n@@ -283,7 +290,7 @@ public void renderGridLines(Canvas c) {\n             position[1] = 0f;\n             mTrans.pointValuesToPixel(position);\n \n-            drawZeroLine(c, mViewPortHandler.offsetLeft(), mViewPortHandler.contentRight(), position[1], position[1]);\n+            drawZeroLine(c, mViewPortHandler.offsetLeft(), mViewPortHandler.contentRight(), position[1]-1, position[1]-1);\n         }\n     }\n \n@@ -298,13 +305,16 @@ public void renderGridLines(Canvas c) {\n      */\n     protected void drawZeroLine(Canvas c, float x1, float x2, float y1, float y2) {\n \n+        mZeroLinePaint.setColor(mYAxis.getZeroLineColor());\n+        mZeroLinePaint.setStrokeWidth(mYAxis.getZeroLineWidth());\n+\n         Path zeroLinePath = new Path();\n \n         zeroLinePath.moveTo(x1, y1);\n         zeroLinePath.lineTo(x2, y2);\n \n         // draw a path because lines don't support dashing on lower android versions\n-        c.drawPath(zeroLinePath, mGridPaint);\n+        c.drawPath(zeroLinePath, mZeroLinePaint);\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n@@ -185,7 +185,7 @@ public void renderGridLines(Canvas c) {\n             position[0] = 0f;\n             mTrans.pointValuesToPixel(position);\n \n-            drawZeroLine(c, position[0], position[0], mViewPortHandler.contentTop(), mViewPortHandler.contentBottom());\n+            drawZeroLine(c, position[0]+1, position[0]+1, mViewPortHandler.contentTop(), mViewPortHandler.contentBottom());\n         }\n     }\n ",
    "output": "Final fixes and improvements concerning zero line"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -84,7 +84,7 @@ public class PieChart extends PieRadarChartBase<PieData> {\n      */\n     private boolean mDrawCenterText = true;\n \n-    private float mCenterTextRadiusPercent = 1.f;\n+    private float mCenterTextRadiusPercent = 100.f;\n \n     protected float mMaxAngle = 360f;\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -7,8 +7,10 @@\n import android.graphics.Paint;\n import android.graphics.Paint.Align;\n import android.graphics.Paint.Style;\n+import android.graphics.Path;\n import android.graphics.PointF;\n import android.graphics.RectF;\n+import android.os.Build;\n import android.text.Layout;\n import android.text.StaticLayout;\n import android.text.TextPaint;\n@@ -356,55 +358,20 @@ protected void drawCenterText(Canvas c) {\n                         Layout.Alignment.ALIGN_CENTER, 1.f, 0.f, false);\n             }\n \n-            // I wish we could make an ellipse clipping path on Android to clip to the hole...\n-            // If we ever find out how, this is the place to add it, based on holeRect\n-\n             //float layoutWidth = Utils.getStaticLayoutMaxWidth(mCenterTextLayout);\n             float layoutHeight = mCenterTextLayout.getHeight();\n \n             c.save();\n+            if (Build.VERSION.SDK_INT >= 18) {\n+                Path path = new Path();\n+                path.addOval(holeRect, Path.Direction.CW);\n+                c.clipPath(path);\n+            }\n+\n             c.translate(boundingRect.left, boundingRect.top + (boundingRect.height() - layoutHeight) / 2.f);\n             mCenterTextLayout.draw(c);\n-            c.restore();\n \n-//            }\n-//\n-//        else {\n-//\n-//\n-//                // get all lines from the text\n-//                String[] lines = centerText.toString().split(\"\\n\");\n-//\n-//                float maxlineheight = 0f;\n-//\n-//                // calc the maximum line height\n-//                for (String line : lines) {\n-//                    float curHeight = Utils.calcTextHeight(mCenterTextPaint, line);\n-//                    if (curHeight > maxlineheight)\n-//                        maxlineheight = curHeight;\n-//                }\n-//\n-//                float linespacing = maxlineheight * 0.25f;\n-//\n-//                float totalheight = maxlineheight * lines.length - linespacing * (lines.length - 1);\n-//\n-//                int cnt = lines.length;\n-//\n-//                float y = center.y;\n-//\n-//                for (int i = 0; i < lines.length; i++) {\n-//\n-//                    String line = lines[lines.length - i - 1];\n-//\n-//\n-//\n-//                    c.drawText(line, center.x, y\n-//                                    + maxlineheight * cnt - totalheight / 2f,\n-//                            mCenterTextPaint);\n-//                    cnt--;\n-//                    y -= linespacing;\n-//                }\n-//            }\n+            c.restore();\n         }\n     }\n ",
    "output": "Merge pull request #1456 from danielgindi/pie-center-text\n\nPie center text"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/ScatterDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/ScatterDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ScatterDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ScatterDataSet.java\n@@ -12,7 +12,7 @@\n public class ScatterDataSet extends LineScatterCandleRadarDataSet<Entry> implements IScatterDataSet {\n \n     /**\n-     * the size the scattershape will have, in screen pixels\n+     * the size the scattershape will have, in density pixels\n      */\n     private float mShapeSize = 15f;\n \n@@ -42,8 +42,6 @@ public class ScatterDataSet extends LineScatterCandleRadarDataSet<Entry> impleme\n     //private Path mCustomScatterPath = null;\n     public ScatterDataSet(List<Entry> yVals, String label) {\n         super(yVals, label);\n-\n-        // mShapeSize = Utils.convertDpToPixel(8f);\n     }\n \n     @Override\n@@ -74,7 +72,7 @@ public DataSet<Entry> copy() {\n      * @param size\n      */\n     public void setScatterShapeSize(float size) {\n-        mShapeSize = Utils.convertDpToPixel(size);\n+        mShapeSize = size;\n     }\n \n     @Override\n@@ -102,7 +100,7 @@ public ScatterShape getScatterShape() {\n      * @param holeRadius\n      */\n     public void setScatterShapeHoleRadius(float holeRadius) {\n-        mScatterShapeHoleRadius = Utils.convertDpToPixel(holeRadius);\n+        mScatterShapeHoleRadius = holeRadius;\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterDataSet.java\n@@ -17,9 +17,9 @@\n public class RealmScatterDataSet<T extends RealmObject> extends RealmLineScatterCandleRadarDataSet<T, Entry> implements IScatterDataSet {\n \n     /**\n-     * the size the scattershape will have, in screen pixels\n+     * the size the scattershape will have, in density pixels\n      */\n-    private float mShapeSize = 15f;\n+    private float mShapeSize = 10f;\n \n     /**\n      * the type of shape that is set to be drawn where the values are at,\n@@ -98,7 +98,7 @@ public void build(RealmResults<T> results) {\n      * @param size\n      */\n     public void setScatterShapeSize(float size) {\n-        mShapeSize = Utils.convertDpToPixel(size);\n+        mShapeSize = size;\n     }\n \n     @Override\n@@ -128,7 +128,7 @@ public ScatterChart.ScatterShape getScatterShape() {\n      * @param holeRadius\n      */\n     public void setScatterShapeHoleRadius(float holeRadius) {\n-        mScatterShapeHoleRadius = Utils.convertDpToPixel(holeRadius);\n+        mScatterShapeHoleRadius = holeRadius;\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n@@ -64,9 +64,9 @@ protected void drawDataSet(Canvas c, IScatterDataSet dataSet) {\n         float phaseX = mAnimator.getPhaseX();\n         float phaseY = mAnimator.getPhaseY();\n \n-        final float shapeSize = dataSet.getScatterShapeSize();\n+        final float shapeSize = Utils.convertDpToPixel(dataSet.getScatterShapeSize());\n         final float shapeHalf = shapeSize / 2f;\n-        final float shapeHoleSizeHalf = dataSet.getScatterShapeHoleRadius();\n+        final float shapeHoleSizeHalf = Utils.convertDpToPixel(dataSet.getScatterShapeHoleRadius());\n         final float shapeHoleSize = shapeHoleSizeHalf * 2.f;\n         final int shapeHoleColor = dataSet.getScatterShapeHoleColor();\n         final float shapeStrokeSize = (shapeSize - shapeHoleSize) / 2.f;\n@@ -348,7 +348,7 @@ public void drawValues(Canvas c) {\n                         .generateTransformedValuesScatter(dataSet,\n                                 mAnimator.getPhaseY());\n \n-                float shapeSize = dataSet.getScatterShapeSize();\n+                float shapeSize = Utils.convertDpToPixel(dataSet.getScatterShapeSize());\n \n                 for (int j = 0; j < positions.length * mAnimator.getPhaseX(); j += 2) {\n ",
    "output": "On the fly conversion of dp - to avoid confusion"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java\n@@ -18,12 +18,10 @@\n public class ScatterChart extends BarLineChartBase<ScatterData> implements ScatterDataProvider {\n \n     /**\n-     * enum that defines the shape that is drawn where the values are, CIRCLE\n-     * and SCQUARE offer the best performance, TRIANGLE has the worst\n-     * performance.\n+     * enum that defines the shape that is drawn where the values are\n      */\n     public enum ScatterShape {\n-        CROSS, TRIANGLE, CIRCLE, SQUARE\n+        SQUARE, CIRCLE, TRIANGLE, CROSS, X,\n     }\n \n     public ScatterChart(Context context) {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n@@ -249,12 +249,49 @@ protected void drawDataSet(Canvas c, IScatterDataSet dataSet) {\n \n                     mRenderPaint.setColor(dataSet.getColor(i / 2));\n \n-                    c.drawLine(buffer.buffer[i] - shapeHalf, buffer.buffer[i + 1],\n+                    c.drawLine(\n+                            buffer.buffer[i] - shapeHalf,\n+                            buffer.buffer[i + 1],\n                             buffer.buffer[i] + shapeHalf,\n-                            buffer.buffer[i + 1], mRenderPaint);\n-                    c.drawLine(buffer.buffer[i], buffer.buffer[i + 1] - shapeHalf,\n-                            buffer.buffer[i], buffer.buffer[i + 1]\n-                                    + shapeHalf, mRenderPaint);\n+                            buffer.buffer[i + 1],\n+                            mRenderPaint);\n+                    c.drawLine(\n+                            buffer.buffer[i],\n+                            buffer.buffer[i + 1] - shapeHalf,\n+                            buffer.buffer[i],\n+                            buffer.buffer[i + 1] + shapeHalf,\n+                            mRenderPaint);\n+                }\n+                break;\n+\n+            case X:\n+\n+                mRenderPaint.setStyle(Style.STROKE);\n+                mRenderPaint.setStrokeWidth(Utils.convertDpToPixel(1f));\n+\n+                for (int i = 0; i < buffer.size(); i += 2) {\n+\n+                    if (!mViewPortHandler.isInBoundsRight(buffer.buffer[i]))\n+                        break;\n+\n+                    if (!mViewPortHandler.isInBoundsLeft(buffer.buffer[i])\n+                            || !mViewPortHandler.isInBoundsY(buffer.buffer[i + 1]))\n+                        continue;\n+\n+                    mRenderPaint.setColor(dataSet.getColor(i / 2));\n+\n+                    c.drawLine(\n+                            buffer.buffer[i] - shapeHalf,\n+                            buffer.buffer[i + 1] - shapeHalf,\n+                            buffer.buffer[i] + shapeHalf,\n+                            buffer.buffer[i + 1] + shapeHalf,\n+                            mRenderPaint);\n+                    c.drawLine(\n+                            buffer.buffer[i] + shapeHalf,\n+                            buffer.buffer[i + 1] - shapeHalf,\n+                            buffer.buffer[i] - shapeHalf,\n+                            buffer.buffer[i + 1] + shapeHalf,\n+                            mRenderPaint);\n                 }\n                 break;\n ",
    "output": "New X shape for Scatter"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -415,13 +415,29 @@ protected void onDraw(Canvas canvas) {\n \n         if (mData == null) {\n \n+            boolean hasText = !TextUtils.isEmpty(mNoDataText);\n+            boolean hasDescription = !TextUtils.isEmpty(mNoDataTextDescription);\n+            float line1height = hasText ? Utils.calcTextHeight(mInfoPaint, mNoDataText) : 0.f;\n+            float line2height = hasDescription ? Utils.calcTextHeight(mInfoPaint, mNoDataTextDescription) : 0.f;\n+            float lineSpacing = (hasText && hasDescription) ?\n+                    (mInfoPaint.getFontSpacing() - line1height) : 0.f;\n+\n             // if no data, inform the user\n-            canvas.drawText(mNoDataText, getWidth() / 2, getHeight() / 2, mInfoPaint);\n \n-            if (!TextUtils.isEmpty(mNoDataTextDescription)) {\n-                float textOffset = -mInfoPaint.ascent() + mInfoPaint.descent();\n-                canvas.drawText(mNoDataTextDescription, getWidth() / 2, (getHeight() / 2)\n-                        + textOffset, mInfoPaint);\n+            float y = (getHeight() -\n+                    (line1height + lineSpacing + line2height)) / 2.f\n+                    + line1height;\n+\n+            if (hasText) {\n+                canvas.drawText(mNoDataText, getWidth() / 2, y, mInfoPaint);\n+\n+                if (hasDescription) {\n+                    y = y + line1height + lineSpacing;\n+                }\n+            }\n+\n+            if (hasDescription) {\n+                canvas.drawText(mNoDataTextDescription, getWidth() / 2, y, mInfoPaint);\n             }\n             return;\n         }",
    "output": "Center the \"no data text\" vertically"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -7,8 +7,10 @@\n import android.graphics.Paint;\n import android.graphics.Paint.Align;\n import android.graphics.Paint.Style;\n+import android.graphics.Path;\n import android.graphics.PointF;\n import android.graphics.RectF;\n+import android.os.Build;\n import android.text.Layout;\n import android.text.StaticLayout;\n import android.text.TextPaint;\n@@ -356,15 +358,19 @@ protected void drawCenterText(Canvas c) {\n                         Layout.Alignment.ALIGN_CENTER, 1.f, 0.f, false);\n             }\n \n-            // I wish we could make an ellipse clipping path on Android to clip to the hole...\n-            // If we ever find out how, this is the place to add it, based on holeRect\n-\n             //float layoutWidth = Utils.getStaticLayoutMaxWidth(mCenterTextLayout);\n             float layoutHeight = mCenterTextLayout.getHeight();\n \n             c.save();\n+            if (Build.VERSION.SDK_INT >= 18) {\n+                Path path = new Path();\n+                path.addOval(holeRect, Path.Direction.CW);\n+                c.clipPath(path);\n+            }\n+\n             c.translate(boundingRect.left, boundingRect.top + (boundingRect.height() - layoutHeight) / 2.f);\n             mCenterTextLayout.draw(c);\n+\n             c.restore();\n         }\n     }",
    "output": "Clipping to path on Hardware layer available since API 18"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -366,45 +366,6 @@ protected void drawCenterText(Canvas c) {\n             c.translate(boundingRect.left, boundingRect.top + (boundingRect.height() - layoutHeight) / 2.f);\n             mCenterTextLayout.draw(c);\n             c.restore();\n-\n-//            }\n-//\n-//        else {\n-//\n-//\n-//                // get all lines from the text\n-//                String[] lines = centerText.toString().split(\"\\n\");\n-//\n-//                float maxlineheight = 0f;\n-//\n-//                // calc the maximum line height\n-//                for (String line : lines) {\n-//                    float curHeight = Utils.calcTextHeight(mCenterTextPaint, line);\n-//                    if (curHeight > maxlineheight)\n-//                        maxlineheight = curHeight;\n-//                }\n-//\n-//                float linespacing = maxlineheight * 0.25f;\n-//\n-//                float totalheight = maxlineheight * lines.length - linespacing * (lines.length - 1);\n-//\n-//                int cnt = lines.length;\n-//\n-//                float y = center.y;\n-//\n-//                for (int i = 0; i < lines.length; i++) {\n-//\n-//                    String line = lines[lines.length - i - 1];\n-//\n-//\n-//\n-//                    c.drawText(line, center.x, y\n-//                                    + maxlineheight * cnt - totalheight / 2f,\n-//                            mCenterTextPaint);\n-//                    cnt--;\n-//                    y -= linespacing;\n-//                }\n-//            }\n         }\n     }\n ",
    "output": "Cleaned up this residue"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -84,7 +84,7 @@ public class PieChart extends PieRadarChartBase<PieData> {\n      */\n     private boolean mDrawCenterText = true;\n \n-    private float mCenterTextRadiusPercent = 1.f;\n+    private float mCenterTextRadiusPercent = 100.f;\n \n     protected float mMaxAngle = 360f;\n ",
    "output": "Percentages on MPAndroidCharts are 0-100"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java\n@@ -282,6 +282,11 @@ public void setValueTextSize(float size) {\n         mValueTextSize = Utils.convertDpToPixel(size);\n     }\n \n+    @Override\n+    public int getValueTextColor() {\n+        return mValueColors.get(0);\n+    }\n+\n     @Override\n     public int getValueTextColor(int index) {\n         return mValueColors.get(index % mValueColors.size());\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -158,7 +158,7 @@ private void calcXValMaximumLength() {\n \n             int length = mXVals.get(i).length();\n \n-            if(length > max)\n+            if (length > max)\n                 max = length;\n         }\n \n@@ -382,7 +382,7 @@ public List<String> getXVals() {\n      */\n     public void addXValue(String xVal) {\n \n-        if(xVal != null && xVal.length() > mXValMaximumLength)\n+        if (xVal != null && xVal.length() > mXValMaximumLength)\n             mXValMaximumLength = xVal.length();\n \n         mXVals.add(xVal);\n@@ -858,6 +858,18 @@ public void setValueTextColor(int color) {\n         }\n     }\n \n+    /**\n+     * Sets the same list of value-colors for all DataSets this\n+     * data object contains.\n+     *\n+     * @param colors\n+     */\n+    public void setValueTextColors(List<Integer> colors) {\n+        for (IDataSet set : mDataSets) {\n+            set.setValueTextColors(colors);\n+        }\n+    }\n+\n     /**\n      * Sets the Typeface for all value-labels for all DataSets this data object\n      * contains.\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/IDataSet.java b/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/IDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/IDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/IDataSet.java\n@@ -309,6 +309,13 @@ public interface IDataSet<T extends Entry> {\n      */\n     void setValueTextSize(float size);\n \n+    /**\n+     * Returns only the first color of all colors that are set to be used for the values.\n+     *\n+     * @return\n+     */\n+    int getValueTextColor();\n+\n     /**\n      * Returns the color at the specified index that is used for drawing the values inside the chart.\n      * Uses modulus internally.\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n@@ -150,10 +150,11 @@ public void drawValues(Canvas c) {\n                 final float[] positions = mChart.getTransformer(dataSet.getAxisDependency())\n                         .generateTransformedValuesBubble(dataSet, phaseX, phaseY, minx, maxx);\n \n+                final float alpha = phaseX == 1 ? phaseY : phaseX;\n+\n                 for (int j = 0; j < positions.length; j += 2) {\n \n-                    final float alpha = phaseX == 1 ? phaseY : phaseX;\n-                    int valueTextColor = dataSet.getValueTextColor(j / 2);\n+                    int valueTextColor = dataSet.getValueTextColor(j / 2 + minx);\n                     valueTextColor = Color.argb(Math.round(255.f * alpha), Color.red(valueTextColor),\n                             Color.green(valueTextColor), Color.blue(valueTextColor));\n \n@@ -173,7 +174,6 @@ public void drawValues(Canvas c) {\n                 }\n             }\n         }\n-\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -246,13 +246,16 @@ public void drawValues(Canvas c) {\n \n                     drawValue(c, formatter, value, entry, 0, x, y, dataSet.getValueTextColor(j));\n \n-                    if (j < data.getXValCount())\n+                    if (j < data.getXValCount()) {\n                         c.drawText(data.getXVals().get(j), x, y + lineHeight,\n                                 mValuePaint);\n+                    }\n \n                 } else if (drawXVals) {\n-                    if (j < data.getXValCount())\n+                    if (j < data.getXValCount()) {\n+                        mValuePaint.setColor(dataSet.getValueTextColor(j));\n                         c.drawText(data.getXVals().get(j), x, y + lineHeight / 2f, mValuePaint);\n+                    }\n                 } else if (drawYVals) {\n \n                     drawValue(c, formatter, value, entry, 0, x, y + lineHeight / 2f, dataSet.getValueTextColor(j));",
    "output": "Fixes for last commit"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java\n@@ -7,18 +7,13 @@\n import android.view.WindowManager;\n \n import com.github.mikephil.charting.charts.BarChart;\n-import com.github.mikephil.charting.components.Legend;\n-import com.github.mikephil.charting.components.Legend.LegendForm;\n-import com.github.mikephil.charting.components.Legend.LegendPosition;\n import com.github.mikephil.charting.components.XAxis;\n import com.github.mikephil.charting.components.XAxis.XAxisPosition;\n import com.github.mikephil.charting.components.YAxis;\n import com.github.mikephil.charting.data.BarData;\n import com.github.mikephil.charting.data.BarDataSet;\n import com.github.mikephil.charting.data.BarEntry;\n import com.github.mikephil.charting.data.Entry;\n-import com.github.mikephil.charting.formatter.ValueFormatter;\n-import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;\n import com.github.mikephil.charting.utils.ViewPortHandler;\n import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n \n@@ -42,6 +37,8 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart = (BarChart) findViewById(R.id.chart1);\n         mChart.setExtraTopOffset(-30f);\n         mChart.setExtraBottomOffset(10f);\n+        mChart.setExtraLeftOffset(70f);\n+        mChart.setExtraRightOffset(70f);\n \n         mChart.setDrawBarShadow(false);\n         mChart.setDrawValueAboveBar(true);\n@@ -60,7 +57,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         xAxis.setDrawAxisLine(false);\n         xAxis.setSpaceBetweenLabels(2);\n         xAxis.setTextColor(Color.LTGRAY);\n-        xAxis.setTextSize(12f);\n+        xAxis.setTextSize(13f);\n \n         YAxis left = mChart.getAxisLeft();\n         left.setDrawLabels(false);\n@@ -85,42 +82,35 @@ protected void onCreate(Bundle savedInstanceState) {\n \n     private void setData(List<Data> dataList) {\n \n-        ArrayList<BarEntry> positiveValues = new ArrayList<BarEntry>();\n-        ArrayList<BarEntry> negativeValues = new ArrayList<BarEntry>();\n+        ArrayList<BarEntry> values = new ArrayList<BarEntry>();\n         String[] dates = new String[dataList.size()];\n+        List<Integer> colors = new ArrayList<Integer>();\n+\n+        int green = Color.rgb(110, 190, 102);\n+        int red = Color.rgb(211, 74, 88);\n \n         for (int i = 0; i < dataList.size(); i++) {\n \n             Data d = dataList.get(i);\n             BarEntry entry = new BarEntry(d.yValue, d.xIndex);\n+            values.add(entry);\n \n+            dates[i] = dataList.get(i).xAxisValue;\n+\n+            // specific colors\n             if (d.yValue >= 0)\n-                positiveValues.add(entry);\n+                colors.add(red);\n             else\n-                negativeValues.add(entry);\n-\n-            dates[i] = dataList.get(i).xAxisValue;\n+                colors.add(green);\n         }\n \n-        int green = Color.rgb(110, 190, 102);\n-        int red = Color.rgb(211, 74, 88);\n-\n-        BarDataSet positive = new BarDataSet(positiveValues, \"Positive\");\n-        positive.setBarSpacePercent(35f);\n-        positive.setColor(red);\n-        positive.setValueTextColor(red);\n-\n-        BarDataSet negative = new BarDataSet(negativeValues, \"Negative\");\n-        negative.setBarSpacePercent(35f);\n-        negative.setColor(green);\n-        negative.setValueTextColor(green);\n-\n-        ArrayList<IBarDataSet> dataSets = new ArrayList<IBarDataSet>();\n-        dataSets.add(positive);\n-        dataSets.add(negative);\n+        BarDataSet set = new BarDataSet(values, \"Values\");\n+        set.setBarSpacePercent(40f);\n+        set.setColors(colors);\n+        set.setValueTextColor(red);\n \n-        BarData data = new BarData(dates, dataSets);\n-        data.setValueTextSize(12f);\n+        BarData data = new BarData(dates, set);\n+        data.setValueTextSize(13f);\n         data.setValueTypeface(mTf);\n         data.setValueFormatter(new ValueFormatter());\n ",
    "output": "Improve example"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java\n@@ -0,0 +1,160 @@\n+\n+package com.xxmassdeveloper.mpchartexample;\n+\n+import android.graphics.Color;\n+import android.graphics.Typeface;\n+import android.os.Bundle;\n+import android.view.WindowManager;\n+\n+import com.github.mikephil.charting.charts.BarChart;\n+import com.github.mikephil.charting.components.Legend;\n+import com.github.mikephil.charting.components.Legend.LegendForm;\n+import com.github.mikephil.charting.components.Legend.LegendPosition;\n+import com.github.mikephil.charting.components.XAxis;\n+import com.github.mikephil.charting.components.XAxis.XAxisPosition;\n+import com.github.mikephil.charting.components.YAxis;\n+import com.github.mikephil.charting.data.BarData;\n+import com.github.mikephil.charting.data.BarDataSet;\n+import com.github.mikephil.charting.data.BarEntry;\n+import com.github.mikephil.charting.data.Entry;\n+import com.github.mikephil.charting.formatter.ValueFormatter;\n+import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;\n+import com.github.mikephil.charting.utils.ViewPortHandler;\n+import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n+\n+import java.text.DecimalFormat;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class BarChartPositiveNegative extends DemoBase {\n+\n+    protected BarChart mChart;\n+    private Typeface mTf;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,\n+                WindowManager.LayoutParams.FLAG_FULLSCREEN);\n+        setContentView(R.layout.activity_barchart_noseekbar);\n+\n+        mTf = Typeface.createFromAsset(getAssets(), \"OpenSans-Regular.ttf\");\n+        mChart = (BarChart) findViewById(R.id.chart1);\n+        mChart.setExtraTopOffset(-30f);\n+        mChart.setExtraBottomOffset(10f);\n+\n+        mChart.setDrawBarShadow(false);\n+        mChart.setDrawValueAboveBar(true);\n+\n+        mChart.setDescription(\"\");\n+\n+        // scaling can now only be done on x- and y-axis separately\n+        mChart.setPinchZoom(false);\n+\n+        mChart.setDrawGridBackground(false);\n+\n+        XAxis xAxis = mChart.getXAxis();\n+        xAxis.setPosition(XAxisPosition.BOTTOM);\n+        xAxis.setTypeface(mTf);\n+        xAxis.setDrawGridLines(false);\n+        xAxis.setDrawAxisLine(false);\n+        xAxis.setSpaceBetweenLabels(2);\n+        xAxis.setTextColor(Color.LTGRAY);\n+        xAxis.setTextSize(12f);\n+\n+        YAxis left = mChart.getAxisLeft();\n+        left.setDrawLabels(false);\n+        left.setStartAtZero(false);\n+        left.setSpaceTop(25f);\n+        left.setSpaceBottom(25f);\n+        left.setDrawAxisLine(false);\n+        left.setDrawGridLines(false);\n+        mChart.getAxisRight().setEnabled(false);\n+        mChart.getLegend().setEnabled(false);\n+\n+        // THIS IS THE ORIGINAL DATA YOU WANT TO PLOT\n+        List<Data> data = new ArrayList<>();\n+        data.add(new Data(0, -224.1f, \"12-29\"));\n+        data.add(new Data(1, 238.5f, \"12-30\"));\n+        data.add(new Data(2, 1280.1f, \"12-31\"));\n+        data.add(new Data(3, -442.3f, \"01-01\"));\n+        data.add(new Data(4, -2280.1f, \"01-02\"));\n+\n+        setData(data);\n+    }\n+\n+    private void setData(List<Data> dataList) {\n+\n+        ArrayList<BarEntry> positiveValues = new ArrayList<BarEntry>();\n+        ArrayList<BarEntry> negativeValues = new ArrayList<BarEntry>();\n+        String[] dates = new String[dataList.size()];\n+\n+        for (int i = 0; i < dataList.size(); i++) {\n+\n+            Data d = dataList.get(i);\n+            BarEntry entry = new BarEntry(d.yValue, d.xIndex);\n+\n+            if (d.yValue >= 0)\n+                positiveValues.add(entry);\n+            else\n+                negativeValues.add(entry);\n+\n+            dates[i] = dataList.get(i).xAxisValue;\n+        }\n+\n+        int green = Color.rgb(110, 190, 102);\n+        int red = Color.rgb(211, 74, 88);\n+\n+        BarDataSet positive = new BarDataSet(positiveValues, \"Positive\");\n+        positive.setBarSpacePercent(35f);\n+        positive.setColor(red);\n+        positive.setValueTextColor(red);\n+\n+        BarDataSet negative = new BarDataSet(negativeValues, \"Negative\");\n+        negative.setBarSpacePercent(35f);\n+        negative.setColor(green);\n+        negative.setValueTextColor(green);\n+\n+        ArrayList<IBarDataSet> dataSets = new ArrayList<IBarDataSet>();\n+        dataSets.add(positive);\n+        dataSets.add(negative);\n+\n+        BarData data = new BarData(dates, dataSets);\n+        data.setValueTextSize(12f);\n+        data.setValueTypeface(mTf);\n+        data.setValueFormatter(new ValueFormatter());\n+\n+        mChart.setData(data);\n+        mChart.invalidate();\n+    }\n+\n+    /**\n+     * Demo class representing data.\n+     */\n+    private class Data {\n+\n+        public String xAxisValue;\n+        public float yValue;\n+        public int xIndex;\n+\n+        public Data(int xIndex, float yValue, String xAxisValue) {\n+            this.xAxisValue = xAxisValue;\n+            this.yValue = yValue;\n+            this.xIndex = xIndex;\n+        }\n+    }\n+\n+    private class ValueFormatter implements com.github.mikephil.charting.formatter.ValueFormatter {\n+\n+        private DecimalFormat mFormat;\n+\n+        public ValueFormatter() {\n+            mFormat = new DecimalFormat(\"######.0\");\n+        }\n+\n+        @Override\n+        public String getFormattedValue(float value, Entry entry, int dataSetIndex, ViewPortHandler viewPortHandler) {\n+            return mFormat.format(value);\n+        }\n+    }\n+}\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n@@ -18,6 +18,7 @@\n import com.xxmassdeveloper.mpchartexample.BarChartActivity;\n import com.xxmassdeveloper.mpchartexample.BarChartActivityMultiDataset;\n import com.xxmassdeveloper.mpchartexample.BarChartActivitySinus;\n+import com.xxmassdeveloper.mpchartexample.BarChartPositiveNegative;\n import com.xxmassdeveloper.mpchartexample.BubbleChartActivity;\n import com.xxmassdeveloper.mpchartexample.CandleStickChartActivity;\n import com.xxmassdeveloper.mpchartexample.CombinedChartActivity;\n@@ -123,6 +124,9 @@ protected void onCreate(Bundle savedInstanceState) {\n         objects.add(new ContentItem(\n                 \"Chart in ScrollView\",\n                 \"This demonstrates how to use a chart inside a ScrollView.\"));\n+        objects.add(new ContentItem(\n+                \"BarChart positive / negative\",\n+                \"This demonstrates how to create a BarChart with positive and negative values in different colors.\"));\n \n         ContentItem realm = new ContentItem(\n                 \"Realm.io Database\",\n@@ -249,6 +253,10 @@ public void onItemClick(AdapterView<?> av, View v, int pos, long arg3) {\n                 startActivity(i);\n                 break;\n             case 26:\n+                i = new Intent(this, BarChartPositiveNegative.class);\n+                startActivity(i);\n+                break;\n+            case 27:\n                 i = new Intent(this, RealmMainActivity.class);\n                 startActivity(i);\n                 break;",
    "output": "Work on new example with multicolor barchart"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java\n@@ -208,6 +208,7 @@ public void setColor(int color, int alpha) {\n      * @param alpha\n      */\n     public void setColors(int[] colors, int alpha) {\n+        resetColors();\n         for (int color : colors) {\n             addColor(Color.argb(alpha, Color.red(color), Color.green(color), Color.blue(color)));\n         }",
    "output": "Fix #1425"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -318,7 +318,9 @@ protected void drawCenterText(Canvas c) {\n \n             PointF center = mChart.getCenterCircleBox();\n \n-            float innerRadius = mChart.isDrawHoleEnabled() && mChart.isHoleTransparent() ? mChart.getRadius() * (mChart.getHoleRadius() / 100f) : mChart.getRadius();\n+            float innerRadius = mChart.isDrawHoleEnabled()\n+                    ? mChart.getRadius() * (mChart.getHoleRadius() / 100f)\n+                    : mChart.getRadius();\n \n             RectF holeRect = mRectBuffer[0];\n             holeRect.left = center.x - innerRadius;",
    "output": "Another minor fix for pie center text"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -328,7 +328,7 @@ protected void drawCenterText(Canvas c) {\n             RectF boundingRect = mRectBuffer[1];\n             boundingRect.set(holeRect);\n \n-            float radiusPercent = mChart.getCenterTextRadiusPercent();\n+            float radiusPercent = mChart.getCenterTextRadiusPercent() / 100f;\n             if (radiusPercent > 0.0) {\n                 boundingRect.inset(\n                         (boundingRect.width() - boundingRect.width() * radiusPercent) / 2.f,",
    "output": "Fixed pie text bounds"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/formatter/StackedValueFormatter.java b/MPChartLib/src/com/github/mikephil/charting/formatter/StackedValueFormatter.java\n--- a/MPChartLib/src/com/github/mikephil/charting/formatter/StackedValueFormatter.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/formatter/StackedValueFormatter.java\n@@ -50,22 +50,25 @@ public StackedValueFormatter(boolean drawWholeStack, String appendix, int decima\n     @Override\n     public String getFormattedValue(float value, Entry entry, int dataSetIndex, ViewPortHandler viewPortHandler) {\n \n-        if (entry instanceof BarEntry && !mDrawWholeStack) {\n+        if (!mDrawWholeStack && entry instanceof BarEntry) {\n \n             BarEntry barEntry = (BarEntry) entry;\n             float[] vals = barEntry.getVals();\n \n             if (vals != null) {\n \n-                // find out if we are on top\n+                // find out if we are on top of the stack\n                 if (vals[vals.length - 1] == value) {\n+\n+                    // return the \"sum\" across all stack values\n                     return mFormat.format(barEntry.getVal()) + mAppendix;\n                 } else {\n-                    return \"\";\n+                    return \"\"; // return empty\n                 }\n             }\n         }\n \n+        // return the \"proposed\" value\n         return mFormat.format(value) + mAppendix;\n     }\n }",
    "output": "Performance improvement & documentation of new formatter"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/formatter/StackedValueFormatter.java b/MPChartLib/src/com/github/mikephil/charting/formatter/StackedValueFormatter.java\n--- a/MPChartLib/src/com/github/mikephil/charting/formatter/StackedValueFormatter.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/formatter/StackedValueFormatter.java\n@@ -0,0 +1,71 @@\n+package com.github.mikephil.charting.formatter;\n+\n+import com.github.mikephil.charting.data.BarEntry;\n+import com.github.mikephil.charting.data.Entry;\n+import com.github.mikephil.charting.utils.ViewPortHandler;\n+\n+import java.text.DecimalFormat;\n+\n+/**\n+ * Created by Philipp Jahoda on 28/01/16.\n+ * <p/>\n+ * A formatter specifically for stacked BarChart that allows to specify whether the all stack values\n+ * or just the top value should be drawn.\n+ */\n+public class StackedValueFormatter implements ValueFormatter {\n+\n+    /**\n+     * if true, all stack values of the stacked bar entry are drawn, else only top\n+     */\n+    private boolean mDrawWholeStack;\n+\n+    /**\n+     * a string that should be appended behind the value\n+     */\n+    private String mAppendix;\n+\n+    private DecimalFormat mFormat;\n+\n+    /**\n+     * Constructor.\n+     *\n+     * @param drawWholeStack if true, all stack values of the stacked bar entry are drawn, else only top\n+     * @param appendix       a string that should be appended behind the value\n+     * @param decimals       the number of decimal digits to use\n+     */\n+    public StackedValueFormatter(boolean drawWholeStack, String appendix, int decimals) {\n+        this.mDrawWholeStack = drawWholeStack;\n+        this.mAppendix = appendix;\n+\n+        StringBuffer b = new StringBuffer();\n+        for (int i = 0; i < decimals; i++) {\n+            if (i == 0)\n+                b.append(\".\");\n+            b.append(\"0\");\n+        }\n+\n+        this.mFormat = new DecimalFormat(\"###,###,###,##0\" + b.toString());\n+    }\n+\n+    @Override\n+    public String getFormattedValue(float value, Entry entry, int dataSetIndex, ViewPortHandler viewPortHandler) {\n+\n+        if (entry instanceof BarEntry && !mDrawWholeStack) {\n+\n+            BarEntry barEntry = (BarEntry) entry;\n+            float[] vals = barEntry.getVals();\n+\n+            if (vals != null) {\n+\n+                // find out if we are on top\n+                if (vals[vals.length - 1] == value) {\n+                    return mFormat.format(barEntry.getVal()) + mAppendix;\n+                } else {\n+                    return \"\";\n+                }\n+            }\n+        }\n+\n+        return mFormat.format(value) + mAppendix;\n+    }\n+}",
    "output": "Introducing StackedValueFormatter (#1415)"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -250,10 +250,10 @@ public void drawValues(Canvas c) {\n                         c.drawText(data.getXVals().get(j), x, y + lineHeight,\n                                 mValuePaint);\n \n-                } else if (drawXVals && !drawYVals) {\n+                } else if (drawXVals) {\n                     if (j < data.getXValCount())\n                         c.drawText(data.getXVals().get(j), x, y + lineHeight / 2f, mValuePaint);\n-                } else if (!drawXVals && drawYVals) {\n+                } else if (drawYVals) {\n \n                     drawValue(c, formatter, value, entry, 0, x, y + lineHeight / 2f);\n                 }",
    "output": "These are redundant"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -190,7 +190,8 @@ public void drawValues(Canvas c) {\n \n         boolean drawXVals = mChart.isDrawSliceTextEnabled();\n \n-        int cnt = 0;\n+        float angle;\n+        int xIndex = 0;\n \n         for (int i = 0; i < dataSets.size(); i++) {\n \n@@ -212,10 +213,19 @@ public void drawValues(Canvas c) {\n \n                 Entry entry = dataSet.getEntryForIndex(j);\n \n+                if (xIndex == 0)\n+                    angle = 0.f;\n+                else\n+                    angle = absoluteAngles[xIndex - 1] * phaseX;\n+\n+                final float sliceAngle = drawAngles[xIndex];\n+                final float sliceSpace = dataSet.getSliceSpace();\n+\n                 // offset needed to center the drawn text in the slice\n-                float offset = drawAngles[cnt] / 2;\n+                final float offset = (sliceAngle - sliceSpace / 2.f) / 2.f;\n+\n+                angle = angle + offset;\n \n-                float angle = (absoluteAngles[cnt] - offset) * phaseY;\n                 // calculate the text position\n                 float x = (float) (r\n                         * Math.cos(Math.toRadians(rotationAngle + angle))\n@@ -248,7 +258,7 @@ public void drawValues(Canvas c) {\n                     drawValue(c, formatter, value, entry, 0, x, y + lineHeight / 2f);\n                 }\n \n-                cnt++;\n+                xIndex++;\n             }\n         }\n     }",
    "output": "Fix pie chart values animation on X axis"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -131,6 +131,9 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n         float angle = 0;\n         float rotationAngle = mChart.getRotationAngle();\n \n+        float phaseX = mAnimator.getPhaseX();\n+        float phaseY = mAnimator.getPhaseY();\n+\n         float[] drawAngles = mChart.getDrawAngles();\n \n         for (int j = 0; j < dataSet.getEntryCount(); j++) {\n@@ -148,13 +151,13 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n \n                     mRenderPaint.setColor(dataSet.getColor(j));\n                     mBitmapCanvas.drawArc(mChart.getCircleBox(),\n-                            rotationAngle + (angle + sliceSpace / 2f) * mAnimator.getPhaseY(),\n-                            (sliceAngle - sliceSpace / 2f) * mAnimator.getPhaseY(),\n+                            rotationAngle + (angle + sliceSpace / 2f) * phaseY,\n+                            (sliceAngle - sliceSpace / 2f) * phaseY,\n                             true, mRenderPaint);\n                 }\n             }\n \n-            angle += sliceAngle * mAnimator.getPhaseX();\n+            angle += sliceAngle * phaseX;\n         }\n     }\n \n@@ -169,6 +172,9 @@ public void drawValues(Canvas c) {\n         float[] drawAngles = mChart.getDrawAngles();\n         float[] absoluteAngles = mChart.getAbsoluteAngles();\n \n+        float phaseX = mAnimator.getPhaseX();\n+        float phaseY = mAnimator.getPhaseY();\n+\n         float off = r / 10f * 3.6f;\n \n         if (mChart.isDrawHoleEnabled()) {\n@@ -202,14 +208,14 @@ public void drawValues(Canvas c) {\n             int entryCount = dataSet.getEntryCount();\n \n             for (int j = 0, maxEntry = Math.min(\n-                    (int) Math.ceil(entryCount * mAnimator.getPhaseX()), entryCount); j < maxEntry; j++) {\n+                    (int) Math.ceil(entryCount * phaseX), entryCount); j < maxEntry; j++) {\n \n                 Entry entry = dataSet.getEntryForIndex(j);\n \n                 // offset needed to center the drawn text in the slice\n                 float offset = drawAngles[cnt] / 2;\n \n-                float angle = (absoluteAngles[cnt] - offset) * mAnimator.getPhaseY();\n+                float angle = (absoluteAngles[cnt] - offset) * phaseY;\n                 // calculate the text position\n                 float x = (float) (r\n                         * Math.cos(Math.toRadians(rotationAngle + angle))\n@@ -390,8 +396,11 @@ protected void drawCenterText(Canvas c) {\n     @Override\n     public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n+        float phaseX = mAnimator.getPhaseX();\n+        float phaseY = mAnimator.getPhaseY();\n+\n+        float angle;\n         float rotationAngle = mChart.getRotationAngle();\n-        float angle = 0f;\n \n         float[] drawAngles = mChart.getDrawAngles();\n         float[] absoluteAngles = mChart.getAbsoluteAngles();\n@@ -413,7 +422,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             if (xIndex == 0)\n                 angle = 0.f;\n             else\n-                angle = absoluteAngles[xIndex - 1] * mAnimator.getPhaseX();\n+                angle = absoluteAngles[xIndex - 1] * phaseX;\n             \n             float sliceAngle = drawAngles[xIndex];\n             float sliceSpace = set.getSliceSpace();\n@@ -437,8 +446,8 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             // redefine the rect that contains the arc so that the\n             // highlighted pie is not cut off\n             mBitmapCanvas.drawArc(highlighted,\n-                    rotationAngle + (angle + sliceSpace / 2f) * mAnimator.getPhaseY(),\n-                    (sliceAngle - sliceSpace / 2f) * mAnimator.getPhaseY(),\n+                    rotationAngle + (angle + sliceSpace / 2f) * phaseY,\n+                    (sliceAngle - sliceSpace / 2f) * phaseY,\n                     true, mRenderPaint);\n         }\n     }\n@@ -458,6 +467,9 @@ protected void drawRoundedSlices(Canvas c) {\n         if (!dataSet.isVisible())\n             return;\n \n+        float phaseX = mAnimator.getPhaseX();\n+        float phaseY = mAnimator.getPhaseY();\n+\n         PointF center = mChart.getCenterCircleBox();\n         float r = mChart.getRadius();\n \n@@ -478,16 +490,16 @@ protected void drawRoundedSlices(Canvas c) {\n \n                 float x = (float) ((r - circleRadius)\n                         * Math.cos(Math.toRadians((angle + sliceAngle)\n-                        * mAnimator.getPhaseY())) + center.x);\n+                        * phaseY)) + center.x);\n                 float y = (float) ((r - circleRadius)\n                         * Math.sin(Math.toRadians((angle + sliceAngle)\n-                        * mAnimator.getPhaseY())) + center.y);\n+                        * phaseY)) + center.y);\n \n                 mRenderPaint.setColor(dataSet.getColor(j));\n                 mBitmapCanvas.drawCircle(x, y, circleRadius, mRenderPaint);\n             }\n \n-            angle += sliceAngle * mAnimator.getPhaseX();\n+            angle += sliceAngle * phaseX;\n         }\n     }\n ",
    "output": "Minor perf for pie chart"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java\n@@ -56,6 +56,11 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         setData();\n \n+        mChart.animateXY(\n+                1400, 1400,\n+                Easing.EasingOption.EaseInOutQuad,\n+                Easing.EasingOption.EaseInOutQuad);\n+\n         XAxis xAxis = mChart.getXAxis();\n         xAxis.setTypeface(tf);\n         xAxis.setTextSize(9f);\n@@ -140,6 +145,18 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 mChart.invalidate();\n                 break;\n             }\n+            case R.id.animateX: {\n+                mChart.animateX(1400);\n+                break;\n+            }\n+            case R.id.animateY: {\n+                mChart.animateY(1400);\n+                break;\n+            }\n+            case R.id.animateXY: {\n+                mChart.animateXY(1400, 1400);\n+                break;\n+            }\n             case R.id.actionToggleSpin: {\n                 mChart.spin(2000, mChart.getRotationAngle(), mChart.getRotationAngle() + 360, Easing.EasingOption.EaseInCubic);\n                 break;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n@@ -64,6 +64,9 @@ public void drawData(Canvas c) {\n \n     protected void drawDataSet(Canvas c, IRadarDataSet dataSet) {\n \n+        float phaseX = mAnimator.getPhaseX();\n+        float phaseY = mAnimator.getPhaseY();\n+\n         float sliceangle = mChart.getSliceAngle();\n \n         // calculate the factor that is needed for transforming the value to\n@@ -82,8 +85,10 @@ protected void drawDataSet(Canvas c, IRadarDataSet dataSet) {\n \n             Entry e = dataSet.getEntryForIndex(j);\n \n-            PointF p = Utils.getPosition(center, (e.getVal() - mChart.getYChartMin()) * factor,\n-                    sliceangle * j + mChart.getRotationAngle());\n+            PointF p = Utils.getPosition(\n+                    center,\n+                    (e.getVal() - mChart.getYChartMin()) * factor * phaseY,\n+                    sliceangle * j * phaseX + mChart.getRotationAngle());\n \n             if (Float.isNaN(p.x))\n                 continue;\n@@ -125,6 +130,9 @@ protected void drawDataSet(Canvas c, IRadarDataSet dataSet) {\n     @Override\n     public void drawValues(Canvas c) {\n \n+        float phaseX = mAnimator.getPhaseX();\n+        float phaseY = mAnimator.getPhaseY();\n+\n         float sliceangle = mChart.getSliceAngle();\n \n         // calculate the factor that is needed for transforming the value to\n@@ -149,8 +157,10 @@ public void drawValues(Canvas c) {\n \n                 Entry entry = dataSet.getEntryForIndex(j);\n \n-                PointF p = Utils.getPosition(center, (entry.getVal() - mChart.getYChartMin()) * factor,\n-                        sliceangle * j + mChart.getRotationAngle());\n+                PointF p = Utils.getPosition(\n+                        center,\n+                        (entry.getVal() - mChart.getYChartMin()) * factor * phaseY,\n+                        sliceangle * j * phaseX + mChart.getRotationAngle());\n \n                 drawValue(c, dataSet.getValueFormatter(), entry.getVal(), entry, i, p.x, p.y - yoffset);\n             }\n@@ -182,8 +192,10 @@ protected void drawWeb(Canvas c) {\n \n         for (int i = 0; i < mChart.getData().getXValCount(); i += xIncrements) {\n \n-            PointF p = Utils.getPosition(center, mChart.getYRange() * factor, sliceangle * i\n-                    + rotationangle);\n+            PointF p = Utils.getPosition(\n+                    center,\n+                    mChart.getYRange() * factor,\n+                    sliceangle * i + rotationangle);\n \n             c.drawLine(center.x, center.y, p.x, p.y, mWebPaint);\n         }\n@@ -212,6 +224,9 @@ protected void drawWeb(Canvas c) {\n     @Override\n     public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n+        float phaseX = mAnimator.getPhaseX();\n+        float phaseY = mAnimator.getPhaseY();\n+\n         float sliceangle = mChart.getSliceAngle();\n         float factor = mChart.getFactor();\n \n@@ -239,8 +254,10 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             if (Float.isNaN(y))\n                 continue;\n \n-            PointF p = Utils.getPosition(center, y * factor,\n-                    sliceangle * j + mChart.getRotationAngle());\n+            PointF p = Utils.getPosition(\n+                    center,\n+                    y * factor * phaseY,\n+                    sliceangle * j * phaseX + mChart.getRotationAngle());\n \n             float[] pts = new float[]{\n                     p.x, p.y",
    "output": "Support for animating Radar charts"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -131,7 +131,6 @@ protected void onCreate(Bundle savedInstanceState) {\n         leftAxis.setAxisMaxValue(220f);\n         leftAxis.setAxisMinValue(-50f);\n         leftAxis.setStartAtZero(false);\n-        leftAxis.setStartAtZero(false);\n         //leftAxis.setYOffset(20f);\n         leftAxis.enableGridDashedLine(10f, 10f, 0f);\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -382,7 +382,9 @@ public List<String> getXVals() {\n      */\n     public void addXValue(String xVal) {\n \n-        mXValMaximumLength = (mXValMaximumLength + xVal.length()) / 2f;\n+        if(xVal != null && xVal.length() > mXValMaximumLength)\n+            mXValMaximumLength = xVal.length();\n+\n         mXVals.add(xVal);\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n@@ -33,14 +33,14 @@ public XAxisRenderer(ViewPortHandler viewPortHandler, XAxis xAxis, Transformer t\n         mAxisLabelPaint.setTextSize(Utils.convertDpToPixel(10f));\n     }\n \n-    public void computeAxis(float xValAverageLength, List<String> xValues) {\n+    public void computeAxis(float xValMaximumLength, List<String> xValues) {\n \n         mAxisLabelPaint.setTypeface(mXAxis.getTypeface());\n         mAxisLabelPaint.setTextSize(mXAxis.getTextSize());\n \n         StringBuilder widthText = new StringBuilder();\n \n-        int xValChars = Math.round(xValAverageLength);\n+        int xValChars = Math.round(xValMaximumLength);\n \n         for (int i = 0; i < xValChars; i++) {\n             widthText.append('h');",
    "output": "Fixes for recent changes"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -131,6 +131,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         leftAxis.setAxisMaxValue(220f);\n         leftAxis.setAxisMinValue(-50f);\n         leftAxis.setStartAtZero(false);\n+        leftAxis.setStartAtZero(false);\n         //leftAxis.setYOffset(20f);\n         leftAxis.enableGridDashedLine(10f, 10f, 0f);\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -341,7 +341,7 @@ public void notifyDataSetChanged() {\n         mAxisRendererLeft.computeAxis(mAxisLeft.mAxisMinimum, mAxisLeft.mAxisMaximum);\n         mAxisRendererRight.computeAxis(mAxisRight.mAxisMinimum, mAxisRight.mAxisMaximum);\n \n-        mXAxisRenderer.computeAxis(mData.getXValAverageLength(), mData.getXVals());\n+        mXAxisRenderer.computeAxis(mData.getXValMaximumLength(), mData.getXVals());\n \n         if (mLegend != null)\n             mLegendRenderer.computeLegend(mData);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -171,7 +171,7 @@ public void notifyDataSetChanged() {\n //        }\n \n         mYAxisRenderer.computeAxis(mYAxis.mAxisMinimum, mYAxis.mAxisMaximum);\n-        mXAxisRenderer.computeAxis(mData.getXValAverageLength(), mData.getXVals());\n+        mXAxisRenderer.computeAxis(mData.getXValMaximumLength(), mData.getXVals());\n \n         if (mLegend != null && !mLegend.isLegendCustom())\n             mLegendRenderer.computeLegend(mData);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n@@ -47,7 +47,7 @@ public class XAxis extends AxisBase {\n     /**\n      * This is the angle for drawing the X axis labels (in degrees)\n      */\n-    protected float mLabelRotationAngle = 0.f;\n+    protected float mLabelRotationAngle = 0f;\n \n     /**\n      * the space that should be left out (in characters) between the x-axis\n@@ -67,14 +67,6 @@ public class XAxis extends AxisBase {\n      * it's auto, if true, then custom. default: false (automatic modulus)\n      */\n     private boolean mIsAxisModulusCustom = false;\n-\n-    /**\n-     * the modulus that indicates if a value at a specified index in an\n-     * array(list) for the y-axis-labels is drawn or not. If index % modulus ==\n-     * 0 DRAW, else dont draw. THIS IS ONLY FOR HORIZONTAL BARCHART.\n-     */\n-    public int mYAxisLabelModulus = 1;\n-\n     /**\n      * if set to true, the chart will avoid that the first and last label entry\n      * in the chart \"clip\" off the edge of the chart\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -45,10 +45,10 @@ public abstract class ChartData<T extends IDataSet<? extends Entry>> {\n     private int mYValCount = 0;\n \n     /**\n-     * contains the average length (in characters) an entry in the x-vals array\n+     * contains the maximum length (in characters) an entry in the x-vals array\n      * has\n      */\n-    private float mXValAverageLength = 0;\n+    private float mXValMaximumLength = 0;\n \n     /**\n      * holds all x-values the chart represents\n@@ -139,26 +139,30 @@ protected void init() {\n         calcYValueCount();\n         calcMinMax(0, mYValCount);\n \n-        calcXValAverageLength();\n+        calcXValMaximumLength();\n     }\n \n     /**\n      * calculates the average length (in characters) across all x-value strings\n      */\n-    private void calcXValAverageLength() {\n+    private void calcXValMaximumLength() {\n \n         if (mXVals.size() <= 0) {\n-            mXValAverageLength = 1;\n+            mXValMaximumLength = 1;\n             return;\n         }\n \n-        float sum = 1f;\n+        int max = 1;\n \n         for (int i = 0; i < mXVals.size(); i++) {\n-            sum += mXVals.get(i).length();\n+\n+            int length = mXVals.get(i).length();\n+\n+            if(length > max)\n+                max = length;\n         }\n \n-        mXValAverageLength = sum / (float) mXVals.size();\n+        mXValMaximumLength = max;\n     }\n \n     /**\n@@ -343,13 +347,13 @@ public float getYMax(AxisDependency axis) {\n     }\n \n     /**\n-     * returns the average length (in characters) across all values in the\n+     * returns the maximum length (in characters) across all values in the\n      * x-vals array\n      *\n      * @return\n      */\n-    public float getXValAverageLength() {\n-        return mXValAverageLength;\n+    public float getXValMaximumLength() {\n+        return mXValMaximumLength;\n     }\n \n     /**\n@@ -378,7 +382,7 @@ public List<String> getXVals() {\n      */\n     public void addXValue(String xVal) {\n \n-        mXValAverageLength = (mXValAverageLength + xVal.length()) / 2f;\n+        mXValMaximumLength = (mXValMaximumLength + xVal.length()) / 2f;\n         mXVals.add(xVal);\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n@@ -40,10 +40,9 @@ public void computeAxis(float xValAverageLength, List<String> xValues) {\n \n         StringBuilder widthText = new StringBuilder();\n \n-        int max = Math.round(xValAverageLength\n-                + mXAxis.getSpaceBetweenLabels());\n+        int xValChars = Math.round(xValAverageLength);\n \n-        for (int i = 0; i < max; i++) {\n+        for (int i = 0; i < xValChars; i++) {\n             widthText.append('h');\n         }\n \n@@ -57,9 +56,18 @@ public void computeAxis(float xValAverageLength, List<String> xValues) {\n                 labelHeight,\n                 mXAxis.getLabelRotationAngle());\n \n-        mXAxis.mLabelWidth = Math.round(labelWidth);\n+        StringBuilder space = new StringBuilder();\n+        int xValSpaceChars = mXAxis.getSpaceBetweenLabels();\n+\n+        for (int i = 0; i < xValSpaceChars; i++) {\n+            space.append('h');\n+        }\n+\n+        final FSize spaceSize = Utils.calcTextSize(mAxisLabelPaint, space.toString());\n+\n+        mXAxis.mLabelWidth = Math.round(labelWidth + spaceSize.width);\n         mXAxis.mLabelHeight = Math.round(labelHeight);\n-        mXAxis.mLabelRotatedWidth = Math.round(labelRotatedSize.width);\n+        mXAxis.mLabelRotatedWidth = Math.round(labelRotatedSize.width + spaceSize.width);\n         mXAxis.mLabelRotatedHeight = Math.round(labelRotatedSize.height);\n \n         mXAxis.setValues(xValues);",
    "output": "Fix #1410"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -131,6 +131,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         leftAxis.setAxisMaxValue(220f);\n         leftAxis.setAxisMinValue(-50f);\n         leftAxis.setStartAtZero(false);\n+        leftAxis.setStartAtZero(false);\n         //leftAxis.setYOffset(20f);\n         leftAxis.enableGridDashedLine(10f, 10f, 0f);\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -341,7 +341,7 @@ public void notifyDataSetChanged() {\n         mAxisRendererLeft.computeAxis(mAxisLeft.mAxisMinimum, mAxisLeft.mAxisMaximum);\n         mAxisRendererRight.computeAxis(mAxisRight.mAxisMinimum, mAxisRight.mAxisMaximum);\n \n-        mXAxisRenderer.computeAxis(mData.getXValAverageLength(), mData.getXVals());\n+        mXAxisRenderer.computeAxis(mData.getXValMaximumLength(), mData.getXVals());\n \n         if (mLegend != null)\n             mLegendRenderer.computeLegend(mData);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -171,7 +171,7 @@ public void notifyDataSetChanged() {\n //        }\n \n         mYAxisRenderer.computeAxis(mYAxis.mAxisMinimum, mYAxis.mAxisMaximum);\n-        mXAxisRenderer.computeAxis(mData.getXValAverageLength(), mData.getXVals());\n+        mXAxisRenderer.computeAxis(mData.getXValMaximumLength(), mData.getXVals());\n \n         if (mLegend != null && !mLegend.isLegendCustom())\n             mLegendRenderer.computeLegend(mData);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n@@ -47,7 +47,7 @@ public class XAxis extends AxisBase {\n     /**\n      * This is the angle for drawing the X axis labels (in degrees)\n      */\n-    protected float mLabelRotationAngle = 0.f;\n+    protected float mLabelRotationAngle = 0f;\n \n     /**\n      * the space that should be left out (in characters) between the x-axis\n@@ -67,14 +67,6 @@ public class XAxis extends AxisBase {\n      * it's auto, if true, then custom. default: false (automatic modulus)\n      */\n     private boolean mIsAxisModulusCustom = false;\n-\n-    /**\n-     * the modulus that indicates if a value at a specified index in an\n-     * array(list) for the y-axis-labels is drawn or not. If index % modulus ==\n-     * 0 DRAW, else dont draw. THIS IS ONLY FOR HORIZONTAL BARCHART.\n-     */\n-    public int mYAxisLabelModulus = 1;\n-\n     /**\n      * if set to true, the chart will avoid that the first and last label entry\n      * in the chart \"clip\" off the edge of the chart\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -45,10 +45,10 @@ public abstract class ChartData<T extends IDataSet<? extends Entry>> {\n     private int mYValCount = 0;\n \n     /**\n-     * contains the average length (in characters) an entry in the x-vals array\n+     * contains the maximum length (in characters) an entry in the x-vals array\n      * has\n      */\n-    private float mXValAverageLength = 0;\n+    private float mXValMaximumLength = 0;\n \n     /**\n      * holds all x-values the chart represents\n@@ -139,26 +139,30 @@ protected void init() {\n         calcYValueCount();\n         calcMinMax(0, mYValCount);\n \n-        calcXValAverageLength();\n+        calcXValMaximumLength();\n     }\n \n     /**\n      * calculates the average length (in characters) across all x-value strings\n      */\n-    private void calcXValAverageLength() {\n+    private void calcXValMaximumLength() {\n \n         if (mXVals.size() <= 0) {\n-            mXValAverageLength = 1;\n+            mXValMaximumLength = 1;\n             return;\n         }\n \n-        float sum = 1f;\n+        int max = 1;\n \n         for (int i = 0; i < mXVals.size(); i++) {\n-            sum += mXVals.get(i).length();\n+\n+            int length = mXVals.get(i).length();\n+\n+            if(length > max)\n+                max = length;\n         }\n \n-        mXValAverageLength = sum / (float) mXVals.size();\n+        mXValMaximumLength = max;\n     }\n \n     /**\n@@ -343,13 +347,13 @@ public float getYMax(AxisDependency axis) {\n     }\n \n     /**\n-     * returns the average length (in characters) across all values in the\n+     * returns the maximum length (in characters) across all values in the\n      * x-vals array\n      *\n      * @return\n      */\n-    public float getXValAverageLength() {\n-        return mXValAverageLength;\n+    public float getXValMaximumLength() {\n+        return mXValMaximumLength;\n     }\n \n     /**\n@@ -378,7 +382,7 @@ public List<String> getXVals() {\n      */\n     public void addXValue(String xVal) {\n \n-        mXValAverageLength = (mXValAverageLength + xVal.length()) / 2f;\n+        mXValMaximumLength = (mXValMaximumLength + xVal.length()) / 2f;\n         mXVals.add(xVal);\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n@@ -40,10 +40,9 @@ public void computeAxis(float xValAverageLength, List<String> xValues) {\n \n         StringBuilder widthText = new StringBuilder();\n \n-        int max = Math.round(xValAverageLength\n-                + mXAxis.getSpaceBetweenLabels());\n+        int xValChars = Math.round(xValAverageLength);\n \n-        for (int i = 0; i < max; i++) {\n+        for (int i = 0; i < xValChars; i++) {\n             widthText.append('h');\n         }\n \n@@ -57,9 +56,18 @@ public void computeAxis(float xValAverageLength, List<String> xValues) {\n                 labelHeight,\n                 mXAxis.getLabelRotationAngle());\n \n-        mXAxis.mLabelWidth = Math.round(labelWidth);\n+        StringBuilder space = new StringBuilder();\n+        int xValSpaceChars = mXAxis.getSpaceBetweenLabels();\n+\n+        for (int i = 0; i < xValSpaceChars; i++) {\n+            space.append('h');\n+        }\n+\n+        final FSize spaceSize = Utils.calcTextSize(mAxisLabelPaint, space.toString());\n+\n+        mXAxis.mLabelWidth = Math.round(labelWidth + spaceSize.width);\n         mXAxis.mLabelHeight = Math.round(labelHeight);\n-        mXAxis.mLabelRotatedWidth = Math.round(labelRotatedSize.width);\n+        mXAxis.mLabelRotatedWidth = Math.round(labelRotatedSize.width + spaceSize.width);\n         mXAxis.mLabelRotatedHeight = Math.round(labelRotatedSize.height);\n \n         mXAxis.setValues(xValues);",
    "output": "Fix 1410"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineRadarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineRadarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineRadarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineRadarDataSet.java\n@@ -83,6 +83,7 @@ public int getFillColor() {\n      */\n     public void setFillColor(int color) {\n         mFillColor = color;\n+        mFillDrawable = null;\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n@@ -97,13 +97,6 @@ protected void drawDataSet(Canvas c, IRadarDataSet dataSet) {\n \n         surface.close();\n \n-        mRenderPaint.setStrokeWidth(dataSet.getLineWidth());\n-        mRenderPaint.setStyle(Paint.Style.STROKE);\n-\n-        // draw the line (only if filled is disabled or alpha is below 255)\n-        if (!dataSet.isDrawFilledEnabled() || dataSet.getFillAlpha() < 255)\n-            c.drawPath(surface, mRenderPaint);\n-\n         final Drawable drawable = dataSet.getFillDrawable();\n         if (drawable != null) {\n \n@@ -112,6 +105,13 @@ protected void drawDataSet(Canvas c, IRadarDataSet dataSet) {\n \n             drawFilledPath(c, surface, dataSet.getFillColor(), dataSet.getFillAlpha());\n         }\n+\n+        mRenderPaint.setStrokeWidth(dataSet.getLineWidth());\n+        mRenderPaint.setStyle(Paint.Style.STROKE);\n+\n+        // draw the line (only if filled is disabled or alpha is below 255)\n+        if (!dataSet.isDrawFilledEnabled() || dataSet.getFillAlpha() < 255)\n+            c.drawPath(surface, mRenderPaint);\n //\n //        // draw filled\n //        if (dataSet.isDrawFilledEnabled()) {",
    "output": "Minor bugfixing or recent additions"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -490,7 +490,6 @@ public boolean onDoubleTap(MotionEvent e) {\n \n         if (l != null) {\n             l.onChartDoubleTapped(e);\n-            return super.onDoubleTap(e);\n         }\n \n         // check if double-tap zooming is enabled",
    "output": "Fix double tap issue with listener #1411"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/components/Legend.java b/MPChartLib/src/com/github/mikephil/charting/components/Legend.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/Legend.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/Legend.java\n@@ -108,7 +108,7 @@ public Legend() {\n         mTextSize = Utils.convertDpToPixel(10f);\n         mStackSpace = Utils.convertDpToPixel(3f);\n         this.mXOffset = Utils.convertDpToPixel(5f);\n-        this.mYOffset = Utils.convertDpToPixel(4f);\n+        this.mYOffset = Utils.convertDpToPixel(4f); // 2\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n@@ -97,7 +97,7 @@ public enum XAxisPosition {\n     public XAxis() {\n         super();\n \n-        mYOffset = Utils.convertDpToPixel(4.f);\n+        mYOffset = Utils.convertDpToPixel(4.f); // -3\n     }\n \n     /**",
    "output": "New gradient linechart screenshot"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -44,6 +44,11 @@ public class LineChartRenderer extends LineRadarRenderer {\n      */\n     protected Canvas mBitmapCanvas;\n \n+    /**\n+     * the bitmap configuration to be used\n+     */\n+    protected Bitmap.Config mBitmapConfig = Bitmap.Config.ARGB_8888;\n+\n     protected Path cubicPath = new Path();\n     protected Path cubicFillPath = new Path();\n \n@@ -87,7 +92,7 @@ public void drawData(Canvas c) {\n \n             if (width > 0 && height > 0) {\n \n-                mDrawBitmap = new WeakReference<Bitmap>(Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888));\n+                mDrawBitmap = new WeakReference<Bitmap>(Bitmap.createBitmap(width, height, mBitmapConfig));\n                 mBitmapCanvas = new Canvas(mDrawBitmap.get());\n             } else\n                 return;\n@@ -571,6 +576,27 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n         }\n     }\n \n+    /**\n+     * Sets the Bitmap.Config to be used by this renderer.\n+     * Default: Bitmap.Config.ARGB_8888\n+     * Use Bitmap.Config.ARGB_4444 to consume less memory.\n+     *\n+     * @param config\n+     */\n+    public void setBitmapConfig(Bitmap.Config config) {\n+        mBitmapConfig = config;\n+        releaseBitmap();\n+    }\n+\n+    /**\n+     * Returns the Bitmap.Config that is used by this renderer.\n+     *\n+     * @return\n+     */\n+    public Bitmap.Config getBitmapConfig() {\n+        return mBitmapConfig;\n+    }\n+\n     /**\n      * Releases the drawing bitmap. This should be called when {@link LineChart#onDetachedFromWindow()}.\n      */",
    "output": "Allow to set Bitmap.Config for LineChartRenderer - memory management"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java\n@@ -179,11 +179,13 @@ public void setData() {\n \n         RadarDataSet set1 = new RadarDataSet(yVals1, \"Set 1\");\n         set1.setColor(ColorTemplate.VORDIPLOM_COLORS[0]);\n+        set1.setFillColor(ColorTemplate.VORDIPLOM_COLORS[0]);\n         set1.setDrawFilled(true);\n         set1.setLineWidth(2f);\n \n         RadarDataSet set2 = new RadarDataSet(yVals2, \"Set 2\");\n         set2.setColor(ColorTemplate.VORDIPLOM_COLORS[4]);\n+        set2.setFillColor(ColorTemplate.VORDIPLOM_COLORS[4]);\n         set2.setDrawFilled(true);\n         set2.setLineWidth(2f);\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -23,7 +23,7 @@\n import java.lang.ref.WeakReference;\n import java.util.List;\n \n-public class LineChartRenderer extends LineScatterCandleRadarRenderer {\n+public class LineChartRenderer extends LineRadarRenderer {\n \n     protected LineDataProvider mChart;\n \n@@ -127,22 +127,6 @@ protected void drawDataSet(Canvas c, ILineDataSet dataSet) {\n         mRenderPaint.setPathEffect(null);\n     }\n \n-    /**\n-     * Draws the provided path in filled mode with the provided drawable.\n-     */\n-    protected void drawFilledPath(Canvas c, Path filledPath, Drawable drawable) {\n-        c.save();\n-        c.clipPath(filledPath);\n-\n-        drawable.setBounds((int) mViewPortHandler.contentLeft(),\n-                (int) mViewPortHandler.contentTop(),\n-                (int) mViewPortHandler.contentRight(),\n-                (int) mViewPortHandler.contentBottom());\n-        drawable.draw(c);\n-\n-        c.restore();\n-    }\n-\n     /**\n      * Draws a cubic line.\n      *\n@@ -271,7 +255,7 @@ protected void drawCubicFill(Canvas c, ILineDataSet dataSet, Path spline, Transf\n         trans.pathValueToPixel(spline);\n \n         final Drawable drawable = dataSet.getFillDrawable();\n-        if (dataSet.getFillDrawable() != null) {\n+        if (drawable != null) {\n \n             drawFilledPath(c, spline, drawable);\n         } else {\n@@ -384,24 +368,6 @@ protected void drawLinearFill(Canvas c, ILineDataSet dataSet, int minx,\n         }\n     }\n \n-    /**\n-     * Draws the provided path in filled mode with the provided color and alpha.\n-     * Special thanks to Angelo Suzuki (https://github.com/tinsukE) for this.\n-     *\n-     * @param c\n-     * @param filledPath\n-     * @param fillColor\n-     * @param fillAlpha\n-     */\n-    protected void drawFilledPath(Canvas c, Path filledPath, int fillColor, int fillAlpha) {\n-        c.save();\n-        c.clipPath(filledPath);\n-\n-        int color = (fillAlpha << 24) | (fillColor & 0xffffff);\n-        c.drawColor(color);\n-        c.restore();\n-    }\n-\n     /**\n      * Generates the path that is used for filled drawing.\n      *\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineRadarRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineRadarRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineRadarRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineRadarRenderer.java\n@@ -0,0 +1,56 @@\n+package com.github.mikephil.charting.renderer;\n+\n+import android.graphics.Canvas;\n+import android.graphics.Path;\n+import android.graphics.drawable.Drawable;\n+\n+import com.github.mikephil.charting.animation.ChartAnimator;\n+import com.github.mikephil.charting.utils.ViewPortHandler;\n+\n+/**\n+ * Created by Philipp Jahoda on 25/01/16.\n+ */\n+public abstract class LineRadarRenderer extends LineScatterCandleRadarRenderer {\n+\n+    public LineRadarRenderer(ChartAnimator animator, ViewPortHandler viewPortHandler) {\n+        super(animator, viewPortHandler);\n+    }\n+\n+    /**\n+     * Draws the provided path in filled mode with the provided drawable.\n+     *\n+     * @param c\n+     * @param filledPath\n+     * @param drawable\n+     */\n+    protected void drawFilledPath(Canvas c, Path filledPath, Drawable drawable) {\n+        c.save();\n+        c.clipPath(filledPath);\n+\n+        drawable.setBounds((int) mViewPortHandler.contentLeft(),\n+                (int) mViewPortHandler.contentTop(),\n+                (int) mViewPortHandler.contentRight(),\n+                (int) mViewPortHandler.contentBottom());\n+        drawable.draw(c);\n+\n+        c.restore();\n+    }\n+\n+    /**\n+     * Draws the provided path in filled mode with the provided color and alpha.\n+     * Special thanks to Angelo Suzuki (https://github.com/tinsukE) for this.\n+     *\n+     * @param c\n+     * @param filledPath\n+     * @param fillColor\n+     * @param fillAlpha\n+     */\n+    protected void drawFilledPath(Canvas c, Path filledPath, int fillColor, int fillAlpha) {\n+        c.save();\n+        c.clipPath(filledPath);\n+\n+        int color = (fillAlpha << 24) | (fillColor & 0xffffff);\n+        c.drawColor(color);\n+        c.restore();\n+    }\n+}\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n@@ -6,6 +6,7 @@\n import android.graphics.Paint;\n import android.graphics.Path;\n import android.graphics.PointF;\n+import android.graphics.drawable.Drawable;\n \n import com.github.mikephil.charting.animation.ChartAnimator;\n import com.github.mikephil.charting.charts.RadarChart;\n@@ -16,7 +17,7 @@\n import com.github.mikephil.charting.utils.Utils;\n import com.github.mikephil.charting.utils.ViewPortHandler;\n \n-public class RadarChartRenderer extends LineScatterCandleRadarRenderer {\n+public class RadarChartRenderer extends LineRadarRenderer {\n \n     protected RadarChart mChart;\n \n@@ -96,20 +97,29 @@ protected void drawDataSet(Canvas c, IRadarDataSet dataSet) {\n \n         surface.close();\n \n-        // draw filled\n-        if (dataSet.isDrawFilledEnabled()) {\n-            mRenderPaint.setStyle(Paint.Style.FILL);\n-            mRenderPaint.setAlpha(dataSet.getFillAlpha());\n-            c.drawPath(surface, mRenderPaint);\n-            mRenderPaint.setAlpha(255);\n-        }\n-\n         mRenderPaint.setStrokeWidth(dataSet.getLineWidth());\n         mRenderPaint.setStyle(Paint.Style.STROKE);\n \n         // draw the line (only if filled is disabled or alpha is below 255)\n         if (!dataSet.isDrawFilledEnabled() || dataSet.getFillAlpha() < 255)\n             c.drawPath(surface, mRenderPaint);\n+\n+        final Drawable drawable = dataSet.getFillDrawable();\n+        if (drawable != null) {\n+\n+            drawFilledPath(c, surface, drawable);\n+        } else {\n+\n+            drawFilledPath(c, surface, dataSet.getFillColor(), dataSet.getFillAlpha());\n+        }\n+//\n+//        // draw filled\n+//        if (dataSet.isDrawFilledEnabled()) {\n+//            mRenderPaint.setStyle(Paint.Style.FILL);\n+//            mRenderPaint.setAlpha(dataSet.getFillAlpha());\n+//            c.drawPath(surface, mRenderPaint);\n+//            mRenderPaint.setAlpha(255);\n+//        }\n     }\n \n     @Override",
    "output": "Allow drawables for RadarChart area filling."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1716,4 +1716,50 @@ public void setHardwareAccelerationEnabled(boolean enabled) {\n                     \"Cannot enable/disable hardware acceleration for devices below API level 11.\");\n         }\n     }\n+\n+    @Override\n+    protected void onDetachedFromWindow() {\n+        super.onDetachedFromWindow();\n+\n+        //Log.i(LOG_TAG, \"Detaching...\");\n+\n+        if(mUnbind)\n+            unbindDrawables(this);\n+    }\n+\n+    /**\n+     * unbind flag\n+     */\n+    private boolean mUnbind = false;\n+\n+    /**\n+     * Unbind all drawables to avoid memory leaks.\n+     * Link: http://stackoverflow.com/a/6779164/1590502\n+     *\n+     * @param view\n+     */\n+    private void unbindDrawables(View view) {\n+\n+        if (view.getBackground() != null) {\n+            view.getBackground().setCallback(null);\n+        }\n+        if (view instanceof ViewGroup) {\n+            for (int i = 0; i < ((ViewGroup) view).getChildCount(); i++) {\n+                unbindDrawables(((ViewGroup) view).getChildAt(i));\n+            }\n+            ((ViewGroup) view).removeAllViews();\n+        }\n+    }\n+\n+    /**\n+     * Set this to true to enable \"unbinding\" of drawables. When a View is detached\n+     * from a window. This helps avoid memory leaks.\n+     * Default: false\n+     * Link: http://stackoverflow.com/a/6779164/1590502\n+     *\n+     * @param enabled\n+     */\n+    public void setUnbindEnabled(boolean enabled) {\n+        this.mUnbind = enabled;\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -87,7 +87,7 @@ public void drawData(Canvas c) {\n \n             if (width > 0 && height > 0) {\n \n-                mDrawBitmap = new WeakReference<Bitmap>(Bitmap.createBitmap(width, height, Bitmap.Config.RGB_565));\n+                mDrawBitmap = new WeakReference<Bitmap>(Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888));\n                 mBitmapCanvas = new Canvas(mDrawBitmap.get());\n             } else\n                 return;",
    "output": "Unbind flag that allows unbinding of drawables to counter memory leaks"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmFloat.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmFloat.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmFloat.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmFloat.java\n@@ -21,7 +21,7 @@ public float getFloatValue() {\n         return floatValue;\n     }\n \n-    public void setFloatValue(Float value) {\n+    public void setFloatValue(float value) {\n         this.floatValue = value;\n     }\n }",
    "output": "Fix issue #1401"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -3,7 +3,9 @@\n \n import android.graphics.Color;\n import android.graphics.Typeface;\n+import android.graphics.drawable.Drawable;\n import android.os.Bundle;\n+import android.support.v4.content.ContextCompat;\n import android.util.Log;\n import android.view.Menu;\n import android.view.MenuItem;\n@@ -358,11 +360,9 @@ private void setData(int count, float range) {\n         set1.setCircleRadius(3f);\n         set1.setDrawCircleHole(false);\n         set1.setValueTextSize(9f);\n-        set1.setFillAlpha(65);\n-        set1.setFillColor(Color.BLACK);\n-//        set1.setDrawFilled(true);\n-        // set1.setShader(new LinearGradient(0, 0, 0, mChart.getHeight(),\n-        // Color.BLACK, Color.WHITE, Shader.TileMode.MIRROR));\n+        Drawable drawable = ContextCompat.getDrawable(this, R.drawable.fade_red);\n+        set1.setFillDrawable(drawable);\n+        set1.setDrawFilled(true);\n \n         ArrayList<ILineDataSet> dataSets = new ArrayList<ILineDataSet>();\n         dataSets.add(set1); // add the datasets\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java\n@@ -4,6 +4,7 @@\n import android.content.Context;\n import android.graphics.Color;\n import android.graphics.DashPathEffect;\n+import android.graphics.drawable.Drawable;\n \n import com.github.mikephil.charting.interfaces.datasets.ILineDataSet;\n import com.github.mikephil.charting.utils.ColorTemplate;\n@@ -42,6 +43,10 @@ public class LineDataSet extends LineRadarDataSet<Entry> implements ILineDataSet\n \n     private boolean mDrawCircleHole = true;\n \n+    /** the drawable to be used for filling the line surface*/\n+    protected Drawable mFillDrawable;\n+\n+\n     public LineDataSet(List<Entry> yVals, String label) {\n         super(yVals, label);\n \n@@ -326,4 +331,32 @@ public void setFillFormatter(FillFormatter formatter) {\n     public FillFormatter getFillFormatter() {\n         return mFillFormatter;\n     }\n+\n+\n+    /**\n+     * sets the color that is used for filling the line surface\n+     * disables filling with a drawable\n+     * @param color\n+     */\n+    @Override\n+    public void setFillColor(int color) {\n+        super.setFillColor(color);\n+        mFillDrawable = null;\n+    }\n+\n+    /**\n+     * sets the drawable to be used for filling the line surface. The drawable is used\n+     * instead of the solid color\n+     * @param drawable\n+     */\n+    @Override\n+    public void setFillDrawable(Drawable drawable) {\n+        mFillDrawable = drawable;\n+    }\n+\n+    @Override\n+    public Drawable getFillDrawable() {\n+        return mFillDrawable;\n+    }\n+\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmLineDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmLineDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmLineDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmLineDataSet.java\n@@ -3,8 +3,8 @@\n import android.content.Context;\n import android.graphics.Color;\n import android.graphics.DashPathEffect;\n+import android.graphics.drawable.Drawable;\n \n-import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.realm.base.RealmLineRadarDataSet;\n import com.github.mikephil.charting.formatter.DefaultFillFormatter;\n import com.github.mikephil.charting.formatter.FillFormatter;\n@@ -17,7 +17,6 @@\n \n import io.realm.RealmObject;\n import io.realm.RealmResults;\n-import io.realm.dynamic.DynamicRealmObject;\n \n /**\n  * Created by Philipp Jahoda on 21/10/15.\n@@ -66,6 +65,8 @@ public class RealmLineDataSet<T extends RealmObject> extends RealmLineRadarDataS\n \n     private boolean mDrawCircleHole = true;\n \n+    /** the drawable to be used for filling the line surface*/\n+    protected Drawable mFillDrawable;\n \n     /**\n      * Constructor for creating a LineDataSet with realm data.\n@@ -332,4 +333,15 @@ public void setFillFormatter(FillFormatter formatter) {\n     public FillFormatter getFillFormatter() {\n         return mFillFormatter;\n     }\n+\n+    @Override\n+    public void setFillDrawable(Drawable drawable) {\n+        mFillDrawable = drawable;\n+    }\n+\n+    @Override\n+    public Drawable getFillDrawable() {\n+        return mFillDrawable;\n+    }\n+\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/ILineDataSet.java b/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/ILineDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/ILineDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/ILineDataSet.java\n@@ -1,6 +1,7 @@\n package com.github.mikephil.charting.interfaces.datasets;\n \n import android.graphics.DashPathEffect;\n+import android.graphics.drawable.Drawable;\n \n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.formatter.FillFormatter;\n@@ -81,4 +82,16 @@ public interface ILineDataSet extends ILineRadarDataSet<Entry> {\n      * @return\n      */\n     FillFormatter getFillFormatter();\n-}\n+\n+\n+    /**\n+     * Sets the drawable to be used for filling\n+     * @param drawable\n+     */\n+    void setFillDrawable(Drawable drawable);\n+\n+    /**\n+     * @return the drawable used for filling\n+     */\n+    Drawable getFillDrawable();\n+}\n\\ No newline at end of file\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -5,6 +5,7 @@\n import android.graphics.Color;\n import android.graphics.Paint;\n import android.graphics.Path;\n+import android.graphics.drawable.Drawable;\n \n import com.github.mikephil.charting.animation.ChartAnimator;\n import com.github.mikephil.charting.buffer.CircleBuffer;\n@@ -85,7 +86,7 @@ public void drawData(Canvas c) {\n \n             if (width > 0 && height > 0) {\n \n-                mDrawBitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_4444);\n+                mDrawBitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);\n                 mBitmapCanvas = new Canvas(mDrawBitmap);\n             } else\n                 return;\n@@ -125,6 +126,22 @@ protected void drawDataSet(Canvas c, ILineDataSet dataSet) {\n         mRenderPaint.setPathEffect(null);\n     }\n \n+    /**\n+     * Draws the provided path in filled mode with the provided drawable.\n+     */\n+    protected void drawFilledPath(Canvas c, Path filledPath, Drawable drawable) {\n+        c.save();\n+        c.clipPath(filledPath);\n+\n+        drawable.setBounds((int) mViewPortHandler.contentLeft(),\n+                (int) mViewPortHandler.contentTop(),\n+                (int) mViewPortHandler.contentRight(),\n+                (int) mViewPortHandler.contentBottom());\n+        drawable.draw(c);\n+\n+        c.restore();\n+    }\n+\n     /**\n      * Draws a cubic line.\n      *\n@@ -252,6 +269,11 @@ protected void drawCubicFill(Canvas c, ILineDataSet dataSet, Path spline, Transf\n \n         trans.pathValueToPixel(spline);\n \n+        final Drawable drawable = dataSet.getFillDrawable();\n+        if (dataSet.getFillDrawable() != null) {\n+            drawFilledPath(c, spline, drawable);\n+            return;\n+        }\n         drawFilledPath(c, spline, dataSet.getFillColor(), dataSet.getFillAlpha());\n     }\n \n@@ -349,6 +371,12 @@ protected void drawLinearFill(Canvas c, ILineDataSet dataSet, int minx,\n \n         trans.pathValueToPixel(filled);\n \n+        final Drawable drawable = dataSet.getFillDrawable();\n+        if (drawable != null) {\n+            drawFilledPath(c, filled, drawable);\n+            return;\n+        }\n+\n         drawFilledPath(c, filled, dataSet.getFillColor(), dataSet.getFillAlpha());\n     }\n ",
    "output": "Fill line chart with a Drawable\n\ncan be used for gradients, pictures, etc."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java\n@@ -78,12 +78,12 @@ public void build(RealmResults<T> results) {\n \n             DynamicRealmObject dynamicObject = new DynamicRealmObject(realmObject);\n \n-            try {\n+            try { // normal entry\n \n                 float value = dynamicObject.getFloat(mValuesField);\n                 mValues.add(new BarEntry(value, dynamicObject.getInt(mIndexField)));\n \n-            } catch (IllegalArgumentException e) {\n+            } catch (IllegalArgumentException e) { // stacked entry\n \n                 RealmList<DynamicRealmObject> list = dynamicObject.getList(mValuesField);\n                 float[] values = new float[list.size()];",
    "output": "Add documentation"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmFloat.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmFloat.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmFloat.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmFloat.java\n@@ -21,7 +21,7 @@ public float getFloatValue() {\n         return floatValue;\n     }\n \n-    public void setFloatValue(float value) {\n+    public void setFloatValue(Float value) {\n         this.floatValue = value;\n     }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBarLineScatterCandleBubbleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBarLineScatterCandleBubbleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBarLineScatterCandleBubbleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBarLineScatterCandleBubbleDataSet.java\n@@ -16,7 +16,6 @@ public abstract class RealmBarLineScatterCandleBubbleDataSet<T extends RealmObje\n     /** default highlight color */\n     protected int mHighLightColor = Color.rgb(255, 187, 115);\n \n-\n     public RealmBarLineScatterCandleBubbleDataSet(RealmResults<T> results, String yValuesField) {\n         super(results, yValuesField);\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n@@ -9,6 +9,7 @@\n \n import io.realm.RealmObject;\n import io.realm.RealmResults;\n+import io.realm.Sort;\n \n /**\n  * Created by Philipp Jahoda on 06/11/15.\n@@ -51,7 +52,7 @@ public RealmBaseDataSet(RealmResults<T> results, String yValuesField) {\n         this.mValues = new ArrayList<S>();\n \n         if (mIndexField != null)\n-            this.results.sort(mIndexField, true);\n+            this.results.sort(mIndexField, Sort.ASCENDING);\n     }\n \n     /**\n@@ -68,7 +69,7 @@ public RealmBaseDataSet(RealmResults<T> results, String yValuesField, String xIn\n         this.mValues = new ArrayList<S>();\n \n         if (mIndexField != null)\n-            this.results.sort(mIndexField, true);\n+            this.results.sort(mIndexField, Sort.ASCENDING);\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineRadarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineRadarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineRadarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineRadarDataSet.java\n@@ -6,9 +6,9 @@\n import com.github.mikephil.charting.interfaces.datasets.ILineRadarDataSet;\n import com.github.mikephil.charting.utils.Utils;\n \n+import io.realm.DynamicRealmObject;\n import io.realm.RealmObject;\n import io.realm.RealmResults;\n-import io.realm.dynamic.DynamicRealmObject;\n \n /**\n  * Created by Philipp Jahoda on 08/11/15.\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmUtils.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmUtils.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmUtils.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmUtils.java\n@@ -3,10 +3,9 @@\n import java.util.ArrayList;\n import java.util.List;\n \n+import io.realm.DynamicRealmObject;\n import io.realm.RealmObject;\n import io.realm.RealmResults;\n-import io.realm.dynamic.DynamicRealmObject;\n-\n /**\n  * Created by Philipp Jahoda on 19/12/15.\n  */\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java\n@@ -6,10 +6,10 @@\n import com.github.mikephil.charting.data.realm.base.RealmBarLineScatterCandleBubbleDataSet;\n import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;\n \n+import io.realm.DynamicRealmObject;\n+import io.realm.RealmList;\n import io.realm.RealmObject;\n import io.realm.RealmResults;\n-import io.realm.dynamic.DynamicRealmList;\n-import io.realm.dynamic.DynamicRealmObject;\n \n /**\n  * Created by Philipp Jahoda on 07/11/15.\n@@ -85,7 +85,7 @@ public void build(RealmResults<T> results) {\n \n             } catch (IllegalArgumentException e) {\n \n-                DynamicRealmList list = dynamicObject.getList(mValuesField);\n+                RealmList<DynamicRealmObject> list = dynamicObject.getList(mValuesField);\n                 float[] values = new float[list.size()];\n \n                 int i = 0;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java\n@@ -1,15 +1,13 @@\n package com.github.mikephil.charting.data.realm.implementation;\n \n-import android.graphics.Color;\n-\n import com.github.mikephil.charting.data.BubbleEntry;\n import com.github.mikephil.charting.data.realm.base.RealmBarLineScatterCandleBubbleDataSet;\n import com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet;\n import com.github.mikephil.charting.utils.Utils;\n \n+import io.realm.DynamicRealmObject;\n import io.realm.RealmObject;\n import io.realm.RealmResults;\n-import io.realm.dynamic.DynamicRealmObject;\n \n /**\n  * Created by Philipp Jahoda on 07/11/15.\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n@@ -8,9 +8,9 @@\n import com.github.mikephil.charting.utils.ColorTemplate;\n import com.github.mikephil.charting.utils.Utils;\n \n+import io.realm.DynamicRealmObject;\n import io.realm.RealmObject;\n import io.realm.RealmResults;\n-import io.realm.dynamic.DynamicRealmObject;\n \n /**\n  * Created by Philipp Jahoda on 07/11/15.\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmLineDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmLineDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmLineDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmLineDataSet.java\n@@ -4,7 +4,6 @@\n import android.graphics.Color;\n import android.graphics.DashPathEffect;\n \n-import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.realm.base.RealmLineRadarDataSet;\n import com.github.mikephil.charting.formatter.DefaultFillFormatter;\n import com.github.mikephil.charting.formatter.FillFormatter;\n@@ -17,7 +16,6 @@\n \n import io.realm.RealmObject;\n import io.realm.RealmResults;\n-import io.realm.dynamic.DynamicRealmObject;\n \n /**\n  * Created by Philipp Jahoda on 21/10/15.\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmPieDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmPieDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmPieDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmPieDataSet.java\n@@ -5,9 +5,9 @@\n import com.github.mikephil.charting.interfaces.datasets.IPieDataSet;\n import com.github.mikephil.charting.utils.Utils;\n \n+import io.realm.DynamicRealmObject;\n import io.realm.RealmObject;\n import io.realm.RealmResults;\n-import io.realm.dynamic.DynamicRealmObject;\n \n /**\n  * Created by Philipp Jahoda on 07/11/15.\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmRadarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmRadarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmRadarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmRadarDataSet.java\n@@ -1,12 +1,10 @@\n package com.github.mikephil.charting.data.realm.implementation;\n \n-import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.realm.base.RealmLineRadarDataSet;\n import com.github.mikephil.charting.interfaces.datasets.IRadarDataSet;\n \n import io.realm.RealmObject;\n import io.realm.RealmResults;\n-import io.realm.dynamic.DynamicRealmObject;\n \n /**\n  * Created by Philipp Jahoda on 07/11/15.\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterDataSet.java\n@@ -6,9 +6,9 @@\n import com.github.mikephil.charting.interfaces.datasets.IScatterDataSet;\n import com.github.mikephil.charting.utils.Utils;\n \n+import io.realm.DynamicRealmObject;\n import io.realm.RealmObject;\n import io.realm.RealmResults;\n-import io.realm.dynamic.DynamicRealmObject;\n \n /**\n  * Created by Philipp Jahoda on 07/11/15.",
    "output": "Update to realm 0.87.2 (issue #1397)"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -98,7 +98,7 @@ public abstract class BarLineChartBase<T extends BarLineScatterCandleBubbleData<\n     /**\n      * flag indicating if the grid background should be drawn or not\n      */\n-    protected boolean mDrawGridBackground = true;\n+    protected boolean mDrawGridBackground = false;\n \n     protected boolean mDrawBorders = false;\n ",
    "output": "DrawGridBackground now defaults to false"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -19,6 +19,7 @@\n import com.github.mikephil.charting.utils.Transformer;\n import com.github.mikephil.charting.utils.ViewPortHandler;\n \n+import java.lang.ref.WeakReference;\n import java.util.List;\n \n public class LineChartRenderer extends LineScatterCandleRadarRenderer {\n@@ -34,7 +35,7 @@ public class LineChartRenderer extends LineScatterCandleRadarRenderer {\n      * Bitmap object used for drawing the paths (otherwise they are too long if\n      * rendered directly on the canvas)\n      */\n-    protected Bitmap mDrawBitmap;\n+    protected WeakReference<Bitmap> mDrawBitmap;\n \n     /**\n      * on this canvas, the paths are rendered, it is initialized with the\n@@ -80,18 +81,18 @@ public void drawData(Canvas c) {\n         int height = (int) mViewPortHandler.getChartHeight();\n \n         if (mDrawBitmap == null\n-                || (mDrawBitmap.getWidth() != width)\n-                || (mDrawBitmap.getHeight() != height)) {\n+                || (mDrawBitmap.get().getWidth() != width)\n+                || (mDrawBitmap.get().getHeight() != height)) {\n \n             if (width > 0 && height > 0) {\n \n-                mDrawBitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_4444);\n-                mBitmapCanvas = new Canvas(mDrawBitmap);\n+                mDrawBitmap = new WeakReference<Bitmap>(Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_4444));\n+                mBitmapCanvas = new Canvas(mDrawBitmap.get());\n             } else\n                 return;\n         }\n \n-        mDrawBitmap.eraseColor(Color.TRANSPARENT);\n+        mDrawBitmap.get().eraseColor(Color.TRANSPARENT);\n \n         LineData lineData = mChart.getLineData();\n \n@@ -101,7 +102,7 @@ public void drawData(Canvas c) {\n                 drawDataSet(c, set);\n         }\n \n-        c.drawBitmap(mDrawBitmap, 0, 0, mRenderPaint);\n+        c.drawBitmap(mDrawBitmap.get(), 0, 0, mRenderPaint);\n     }\n \n     protected void drawDataSet(Canvas c, ILineDataSet dataSet) {\n@@ -578,7 +579,8 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n      */\n     public void releaseBitmap() {\n         if (mDrawBitmap != null) {\n-            mDrawBitmap.recycle();\n+            mDrawBitmap.get().recycle();\n+            mDrawBitmap.clear();\n             mDrawBitmap = null;\n         }\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -24,6 +24,7 @@\n import com.github.mikephil.charting.utils.Utils;\n import com.github.mikephil.charting.utils.ViewPortHandler;\n \n+import java.lang.ref.WeakReference;\n import java.util.List;\n \n public class PieChartRenderer extends DataRenderer {\n@@ -51,7 +52,7 @@ public class PieChartRenderer extends DataRenderer {\n     /**\n      * Bitmap for drawing the center hole\n      */\n-    protected Bitmap mDrawBitmap;\n+    protected WeakReference<Bitmap> mDrawBitmap;\n \n     protected Canvas mBitmapCanvas;\n \n@@ -103,18 +104,18 @@ public void drawData(Canvas c) {\n         int height = (int) mViewPortHandler.getChartHeight();\n \n         if (mDrawBitmap == null\n-                || (mDrawBitmap.getWidth() != width)\n-                || (mDrawBitmap.getHeight() != height)) {\n+                || (mDrawBitmap.get().getWidth() != width)\n+                || (mDrawBitmap.get().getHeight() != height)) {\n \n             if (width > 0 && height > 0) {\n \n-                mDrawBitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_4444);\n-                mBitmapCanvas = new Canvas(mDrawBitmap);\n+                mDrawBitmap = new WeakReference<Bitmap>(Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_4444));\n+                mBitmapCanvas = new Canvas(mDrawBitmap.get());\n             } else\n                 return;\n         }\n \n-        mDrawBitmap.eraseColor(Color.TRANSPARENT);\n+        mDrawBitmap.get().eraseColor(Color.TRANSPARENT);\n \n         PieData pieData = mChart.getData();\n \n@@ -250,7 +251,7 @@ public void drawValues(Canvas c) {\n     public void drawExtras(Canvas c) {\n         // drawCircles(c);\n         drawHole(c);\n-        c.drawBitmap(mDrawBitmap, 0, 0, null);\n+        c.drawBitmap(mDrawBitmap.get(), 0, 0, null);\n         drawCenterText(c);\n     }\n \n@@ -495,7 +496,8 @@ protected void drawRoundedSlices(Canvas c) {\n      */\n     public void releaseBitmap() {\n         if (mDrawBitmap != null) {\n-            mDrawBitmap.recycle();\n+            mDrawBitmap.get().recycle();\n+            mDrawBitmap.clear();\n             mDrawBitmap = null;\n         }\n     }",
    "output": "Introducing WeakReference for Bitmap (issue #1386)"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmDemoData.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmDemoData.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmDemoData.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmDemoData.java\n@@ -46,7 +46,7 @@ public RealmDemoData(float value, int xIndex, String xValue) {\n     public RealmDemoData(float[] stackValues, int xIndex, String xValue) {\n         this.xIndex = xIndex;\n         this.xValue = xValue;\n-        this.stackValues = new RealmList<>();\n+        this.stackValues = new RealmList<RealmFloat>();\n \n         for (float val : stackValues) {\n             this.stackValues.add(new RealmFloat(val));\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java\n@@ -75,7 +75,7 @@ public abstract class BaseDataSet<T extends Entry> implements IDataSet<T> {\n      * Default constructor.\n      */\n     public BaseDataSet() {\n-        mColors = new ArrayList<>();\n+        mColors = new ArrayList<Integer>();\n \n         // default color\n         mColors.add(Color.rgb(140, 234, 255));",
    "output": "Minor fixes"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n@@ -97,7 +97,7 @@ public enum XAxisPosition {\n     public XAxis() {\n         super();\n \n-        mYOffset = Utils.convertDpToPixel(3.f);\n+        mYOffset = Utils.convertDpToPixel(4.f);\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n@@ -532,11 +532,11 @@ public static void drawText(Canvas c, String text, float x, float y,\n         float drawOffsetX = 0.f;\n         float drawOffsetY = 0.f;\n \n-        final float lineHeight = paint.getFontMetrics(mFontMetricsBuffer);\n-\n         paint.getTextBounds(text, 0, text.length(), mDrawTextRectBuffer);\n \n-        // Android sometimes has pre-padding\n+        final float lineHeight = mDrawTextRectBuffer.height();\n+\n+                // Android sometimes has pre-padding\n         drawOffsetX -= mDrawTextRectBuffer.left;\n \n         // Android does not snap the bounds to line boundaries,",
    "output": "Fixes regarding offsets on x-axis"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n@@ -97,7 +97,7 @@ public enum XAxisPosition {\n     public XAxis() {\n         super();\n \n-        mYOffset = Utils.convertDpToPixel(1.f);\n+        mYOffset = Utils.convertDpToPixel(3.f);\n     }\n \n     /**",
    "output": "Change back default offset"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n@@ -8,11 +8,10 @@\n import com.github.mikephil.charting.buffer.BarBuffer;\n import com.github.mikephil.charting.buffer.HorizontalBarBuffer;\n import com.github.mikephil.charting.data.BarData;\n-import com.github.mikephil.charting.data.BarDataSet;\n import com.github.mikephil.charting.data.BarEntry;\n import com.github.mikephil.charting.formatter.ValueFormatter;\n-import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;\n import com.github.mikephil.charting.interfaces.dataprovider.BarDataProvider;\n+import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;\n import com.github.mikephil.charting.utils.Transformer;\n import com.github.mikephil.charting.utils.Utils;\n import com.github.mikephil.charting.utils.ViewPortHandler;\n@@ -21,13 +20,13 @@\n \n /**\n  * Renderer for the HorizontalBarChart.\n- * \n+ *\n  * @author Philipp Jahoda\n  */\n public class HorizontalBarChartRenderer extends BarChartRenderer {\n \n     public HorizontalBarChartRenderer(BarDataProvider chart, ChartAnimator animator,\n-            ViewPortHandler viewPortHandler) {\n+                                      ViewPortHandler viewPortHandler) {\n         super(chart, animator, viewPortHandler);\n \n         mValuePaint.setTextAlign(Align.LEFT);\n@@ -47,7 +46,8 @@ public void initBuffers() {\n         }\n     }\n \n-    protected void drawDataSet(Canvas c, BarDataSet dataSet, int index) {\n+    @Override\n+    protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n \n         Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n \n@@ -56,8 +56,6 @@ protected void drawDataSet(Canvas c, BarDataSet dataSet, int index) {\n         float phaseX = mAnimator.getPhaseX();\n         float phaseY = mAnimator.getPhaseY();\n \n-        List<BarEntry> entries = dataSet.getYVals();\n-\n         // initialize the buffer\n         BarBuffer buffer = mBarBuffers[index];\n         buffer.setPhases(phaseX, phaseY);\n@@ -192,7 +190,7 @@ public void drawValues(Canvas c) {\n                             }\n \n                             drawValue(c, formattedValue, valuePoints[j]\n-                                    + (e.getVal() >= 0 ? posOffset : negOffset),\n+                                            + (e.getVal() >= 0 ? posOffset : negOffset),\n                                     valuePoints[j + 1] + halfTextHeight);\n \n                         } else {\n@@ -263,7 +261,7 @@ protected void drawValue(Canvas c, String valueText, float x, float y) {\n \n     @Override\n     protected void prepareBarHighlight(float x, float y1, float y2, float barspaceHalf,\n-            Transformer trans) {\n+                                       Transformer trans) {\n \n         float top = x - 0.5f + barspaceHalf;\n         float bottom = x + 0.5f - barspaceHalf;\n@@ -277,7 +275,7 @@ protected void prepareBarHighlight(float x, float y1, float y2, float barspaceHa\n \n     @Override\n     public float[] getTransformedValues(Transformer trans, IBarDataSet data,\n-            int dataSetIndex) {\n+                                        int dataSetIndex) {\n         return trans.generateTransformedValuesHorizontalBarChart(data, dataSetIndex,\n                 mChart.getBarData(), mAnimator.getPhaseY());\n     }",
    "output": "Fix bug in HorizontalBarChartRenderer"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/components/Legend.java b/MPChartLib/src/com/github/mikephil/charting/components/Legend.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/Legend.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/Legend.java\n@@ -108,7 +108,7 @@ public Legend() {\n         mTextSize = Utils.convertDpToPixel(10f);\n         mStackSpace = Utils.convertDpToPixel(3f);\n         this.mXOffset = Utils.convertDpToPixel(5f);\n-        this.mYOffset = Utils.convertDpToPixel(7f);\n+        this.mYOffset = Utils.convertDpToPixel(4f);\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n@@ -97,7 +97,7 @@ public enum XAxisPosition {\n     public XAxis() {\n         super();\n \n-        mYOffset = Utils.convertDpToPixel(4.f);\n+        mYOffset = Utils.convertDpToPixel(1.f);\n     }\n \n     /**",
    "output": "Optimized default y-offsets of legend and xaxis for better default look"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n@@ -67,8 +67,8 @@ public RealmBaseDataSet(RealmResults<T> results, String yValuesField, String xIn\n         this.mIndexField = xIndexField;\n         this.mValues = new ArrayList<S>();\n \n-        if (mIndexField != null) ;\n-        this.results.sort(mIndexField, true);\n+        if (mIndexField != null)\n+            this.results.sort(mIndexField, true);\n     }\n \n     /**",
    "output": "Minor fix"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -200,6 +200,8 @@ private void calcAngles() {\n         mDrawAngles = new float[mData.getYValCount()];\n         mAbsoluteAngles = new float[mData.getYValCount()];\n \n+        float yValueSum = mData.getYValueSum();\n+\n         List<IPieDataSet> dataSets = mData.getDataSets();\n \n         int cnt = 0;\n@@ -210,7 +212,7 @@ private void calcAngles() {\n \n             for (int j = 0; j < set.getEntryCount(); j++) {\n \n-                mDrawAngles[cnt] = calcAngle(Math.abs(set.getEntryForIndex(j).getVal()));\n+                mDrawAngles[cnt] = calcAngle(Math.abs(set.getEntryForIndex(j).getVal()), yValueSum);\n \n                 if (cnt == 0) {\n                     mAbsoluteAngles[cnt] = mDrawAngles[cnt];\n@@ -255,7 +257,18 @@ public boolean needsHighlight(int xIndex, int dataSetIndex) {\n      * @return\n      */\n     private float calcAngle(float value) {\n-        return value / mData.getYValueSum() * mMaxAngle;\n+        return calcAngle(value, mData.getYValueSum());\n+    }\n+\n+    /**\n+     * calculates the needed angle for a given value\n+     *\n+     * @param value\n+     * @param yValueSum\n+     * @return\n+     */\n+    private float calcAngle(float value, float yValueSum) {\n+        return value / yValueSum * mMaxAngle;\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -178,6 +178,9 @@ public void drawValues(Canvas c) {\n \n         PieData data = mChart.getData();\n         List<IPieDataSet> dataSets = data.getDataSets();\n+\n+        float yValueSum = data.getYValueSum();\n+\n         boolean drawXVals = mChart.isDrawSliceTextEnabled();\n \n         int cnt = 0;\n@@ -215,7 +218,7 @@ public void drawValues(Canvas c) {\n                         + center.y);\n \n                 float value = mChart.isUsePercentValuesEnabled() ? entry.getVal()\n-                        / data.getYValueSum() * 100f : entry.getVal();\n+                        / yValueSum * 100f : entry.getVal();\n \n                 ValueFormatter formatter = dataSet.getValueFormatter();\n ",
    "output": "Merge pull request #1358 from danielgindi/minor-perf\n\nMinor performance improvement"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -200,6 +200,8 @@ private void calcAngles() {\n         mDrawAngles = new float[mData.getYValCount()];\n         mAbsoluteAngles = new float[mData.getYValCount()];\n \n+        float yValueSum = mData.getYValueSum();\n+\n         List<IPieDataSet> dataSets = mData.getDataSets();\n \n         int cnt = 0;\n@@ -210,7 +212,7 @@ private void calcAngles() {\n \n             for (int j = 0; j < set.getEntryCount(); j++) {\n \n-                mDrawAngles[cnt] = calcAngle(Math.abs(set.getEntryForIndex(j).getVal()));\n+                mDrawAngles[cnt] = calcAngle(Math.abs(set.getEntryForIndex(j).getVal()), yValueSum);\n \n                 if (cnt == 0) {\n                     mAbsoluteAngles[cnt] = mDrawAngles[cnt];\n@@ -255,7 +257,18 @@ public boolean needsHighlight(int xIndex, int dataSetIndex) {\n      * @return\n      */\n     private float calcAngle(float value) {\n-        return value / mData.getYValueSum() * mMaxAngle;\n+        return calcAngle(value, mData.getYValueSum());\n+    }\n+\n+    /**\n+     * calculates the needed angle for a given value\n+     *\n+     * @param value\n+     * @param yValueSum\n+     * @return\n+     */\n+    private float calcAngle(float value, float yValueSum) {\n+        return value / yValueSum * mMaxAngle;\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -178,6 +178,9 @@ public void drawValues(Canvas c) {\n \n         PieData data = mChart.getData();\n         List<IPieDataSet> dataSets = data.getDataSets();\n+\n+        float yValueSum = data.getYValueSum();\n+\n         boolean drawXVals = mChart.isDrawSliceTextEnabled();\n \n         int cnt = 0;\n@@ -215,7 +218,7 @@ public void drawValues(Canvas c) {\n                         + center.y);\n \n                 float value = mChart.isUsePercentValuesEnabled() ? entry.getVal()\n-                        / data.getYValueSum() * 100f : entry.getVal();\n+                        / yValueSum * 100f : entry.getVal();\n \n                 ValueFormatter formatter = dataSet.getValueFormatter();\n ",
    "output": "Minor performance improvement in pie chart\n\nOn large datasets - this will spare many loops over the data just to sum"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n@@ -59,7 +59,7 @@ protected void init() {\n \t\tmRenderer = new BarChartRenderer(this, mAnimator, mViewPortHandler);\n \t\tmXAxisRenderer = new XAxisRendererBarChart(mViewPortHandler, mXAxis, mLeftAxisTransformer, this);\n \n-\t\tmHighlighter = new BarHighlighter(this);\n+\t\tsetHighlighter(new BarHighlighter(this));\n \n \t\tmXChartMin = -0.5f;\n \t}\n@@ -94,7 +94,7 @@ public Highlight getHighlightByTouchPoint(float x, float y) {\n \t\t\tLog.e(LOG_TAG, \"Can't select by touch. No data set.\");\n \t\t\treturn null;\n \t\t} else\n-\t\t\treturn mHighlighter.getHighlight(x, y);\n+\t\t\treturn getHighlighter().getHighlight(x, y);\n \t}\n \n \t/**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -164,7 +164,7 @@ protected void init() {\n \n         mXAxisRenderer = new XAxisRenderer(mViewPortHandler, mXAxis, mLeftAxisTransformer);\n \n-        mHighlighter = new ChartHighlighter(this);\n+        setHighlighter(new ChartHighlighter(this));\n \n         mChartTouchListener = new BarLineChartTouchListener(this, mViewPortHandler.getMatrixTouch());\n \n@@ -1158,7 +1158,7 @@ public Highlight getHighlightByTouchPoint(float x, float y) {\n             Log.e(LOG_TAG, \"Can't select by touch. No data set.\");\n             return null;\n         } else\n-            return mHighlighter.getHighlight(x, y);\n+            return getHighlighter().getHighlight(x, y);\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1445,6 +1445,15 @@ public void setRenderer(DataRenderer renderer) {\n             mRenderer = renderer;\n     }\n \n+    public ChartHighlighter getHighlighter() {\n+        return mHighlighter;\n+    }\n+\n+    public void setHighlighter(ChartHighlighter highlighter) {\n+\n+        mHighlighter = highlighter;\n+    }\n+\n     @Override\n     public PointF getCenterOfView() {\n         return getCenter();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n@@ -73,7 +73,7 @@ public CombinedChart(Context context, AttributeSet attrs, int defStyle) {\n     protected void init() {\n         super.init();\n \n-        mHighlighter = new CombinedHighlighter(this);\n+        setHighlighter(new CombinedHighlighter(this));\n \n         // mRenderer = new CombinedChartRenderer(this, mAnimator,\n         // mViewPortHandler);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n@@ -49,7 +49,7 @@ protected void init() {\n \t\tmRightAxisTransformer = new TransformerHorizontalBarChart(mViewPortHandler);\n \n \t\tmRenderer = new HorizontalBarChartRenderer(this, mAnimator, mViewPortHandler);\n-\t\tmHighlighter = new HorizontalBarHighlighter(this);\n+\t\tsetHighlighter(new HorizontalBarHighlighter(this));\n \n \t\tmAxisRendererLeft = new YAxisRendererHorizontalBarChart(mViewPortHandler, mAxisLeft, mLeftAxisTransformer);\n \t\tmAxisRendererRight = new YAxisRendererHorizontalBarChart(mViewPortHandler, mAxisRight, mRightAxisTransformer);\n@@ -224,7 +224,7 @@ public Highlight getHighlightByTouchPoint(float x, float y) {\n \t\t\tLog.e(LOG_TAG, \"Can't select by touch. No data set.\");\n \t\t\treturn null;\n \t\t} else\n-\t\t\treturn mHighlighter.getHighlight(y, x); // switch x and y\n+\t\t\treturn getHighlighter().getHighlight(y, x); // switch x and y\n \t}\n \n \t/**",
    "output": "Merge pull request #1354 from danielgindi/highlighter-protocol\n\nMake highlighter public for extensibility"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -407,12 +407,10 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n                 continue;\n \n             if (xIndex == 0)\n-                angle = rotationAngle;\n+                angle = 0.f;\n             else\n-                angle = rotationAngle + absoluteAngles[xIndex - 1];\n-\n-            angle *= mAnimator.getPhaseX();\n-\n+                angle = absoluteAngles[xIndex - 1] * mAnimator.getPhaseX();\n+            \n             float sliceAngle = drawAngles[xIndex];\n             float sliceSpace = set.getSliceSpace();\n ",
    "output": "Merge pull request #1353 from danielgindi/pie-animation-highlight-fix\n\nFixes base angle for rotate highlight in pie chart"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -407,12 +407,10 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n                 continue;\n \n             if (xIndex == 0)\n-                angle = rotationAngle;\n+                angle = 0.f;\n             else\n-                angle = rotationAngle + absoluteAngles[xIndex - 1];\n-\n-            angle *= mAnimator.getPhaseX();\n-\n+                angle = absoluteAngles[xIndex - 1] * mAnimator.getPhaseX();\n+            \n             float sliceAngle = drawAngles[xIndex];\n             float sliceSpace = set.getSliceSpace();\n ",
    "output": "Fixes base angle for rotate highlight in pie chart"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n@@ -59,7 +59,7 @@ protected void init() {\n \t\tmRenderer = new BarChartRenderer(this, mAnimator, mViewPortHandler);\n \t\tmXAxisRenderer = new XAxisRendererBarChart(mViewPortHandler, mXAxis, mLeftAxisTransformer, this);\n \n-\t\tmHighlighter = new BarHighlighter(this);\n+\t\tsetHighlighter(new BarHighlighter(this));\n \n \t\tmXChartMin = -0.5f;\n \t}\n@@ -94,7 +94,7 @@ public Highlight getHighlightByTouchPoint(float x, float y) {\n \t\t\tLog.e(LOG_TAG, \"Can't select by touch. No data set.\");\n \t\t\treturn null;\n \t\t} else\n-\t\t\treturn mHighlighter.getHighlight(x, y);\n+\t\t\treturn getHighlighter().getHighlight(x, y);\n \t}\n \n \t/**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -164,7 +164,7 @@ protected void init() {\n \n         mXAxisRenderer = new XAxisRenderer(mViewPortHandler, mXAxis, mLeftAxisTransformer);\n \n-        mHighlighter = new ChartHighlighter(this);\n+        setHighlighter(new ChartHighlighter(this));\n \n         mChartTouchListener = new BarLineChartTouchListener(this, mViewPortHandler.getMatrixTouch());\n \n@@ -1158,7 +1158,7 @@ public Highlight getHighlightByTouchPoint(float x, float y) {\n             Log.e(LOG_TAG, \"Can't select by touch. No data set.\");\n             return null;\n         } else\n-            return mHighlighter.getHighlight(x, y);\n+            return getHighlighter().getHighlight(x, y);\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1445,6 +1445,15 @@ public void setRenderer(DataRenderer renderer) {\n             mRenderer = renderer;\n     }\n \n+    public ChartHighlighter getHighlighter() {\n+        return mHighlighter;\n+    }\n+\n+    public void setHighlighter(ChartHighlighter highlighter) {\n+\n+        mHighlighter = highlighter;\n+    }\n+\n     @Override\n     public PointF getCenterOfView() {\n         return getCenter();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n@@ -73,7 +73,7 @@ public CombinedChart(Context context, AttributeSet attrs, int defStyle) {\n     protected void init() {\n         super.init();\n \n-        mHighlighter = new CombinedHighlighter(this);\n+        setHighlighter(new CombinedHighlighter(this));\n \n         // mRenderer = new CombinedChartRenderer(this, mAnimator,\n         // mViewPortHandler);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n@@ -49,7 +49,7 @@ protected void init() {\n \t\tmRightAxisTransformer = new TransformerHorizontalBarChart(mViewPortHandler);\n \n \t\tmRenderer = new HorizontalBarChartRenderer(this, mAnimator, mViewPortHandler);\n-\t\tmHighlighter = new HorizontalBarHighlighter(this);\n+\t\tsetHighlighter(new HorizontalBarHighlighter(this));\n \n \t\tmAxisRendererLeft = new YAxisRendererHorizontalBarChart(mViewPortHandler, mAxisLeft, mLeftAxisTransformer);\n \t\tmAxisRendererRight = new YAxisRendererHorizontalBarChart(mViewPortHandler, mAxisRight, mRightAxisTransformer);\n@@ -224,7 +224,7 @@ public Highlight getHighlightByTouchPoint(float x, float y) {\n \t\t\tLog.e(LOG_TAG, \"Can't select by touch. No data set.\");\n \t\t\treturn null;\n \t\t} else\n-\t\t\treturn mHighlighter.getHighlight(y, x); // switch x and y\n+\t\t\treturn getHighlighter().getHighlight(y, x); // switch x and y\n \t}\n \n \t/**",
    "output": "Make highlighter public for extensibility\n\nSee also: https://github.com/danielgindi/ios-charts/pull/567"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n@@ -54,6 +54,15 @@ public void prepareMatrixValuePx(float xChartMin, float deltaX, float deltaY, fl\n         float scaleX = (float) ((mViewPortHandler.contentWidth()) / deltaX);\n         float scaleY = (float) ((mViewPortHandler.contentHeight()) / deltaY);\n \n+        if (Float.isInfinite(scaleX))\n+        {\n+            scaleX = 0;\n+        }\n+        if (Float.isInfinite(scaleY))\n+        {\n+            scaleY = 0;\n+        }\n+\n         // setup all matrices\n         mMatrixValueToPx.reset();\n         mMatrixValueToPx.postTranslate(-xChartMin, -yChartMin);",
    "output": "Merge pull request #1350 from danielgindi/matrix-inf\n\nPrevent the matrix from reaching invalid values"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -134,7 +134,7 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n \n         for (int j = 0; j < dataSet.getEntryCount(); j++) {\n \n-            float newangle = drawAngles[j];\n+            float sliceAngle = drawAngles[j];\n             float sliceSpace = dataSet.getSliceSpace();\n \n             Entry e = dataSet.getEntryForIndex(j);\n@@ -148,12 +148,12 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n                     mRenderPaint.setColor(dataSet.getColor(j));\n                     mBitmapCanvas.drawArc(mChart.getCircleBox(),\n                             rotationAngle + (angle + sliceSpace / 2f) * mAnimator.getPhaseY(),\n-                            (newangle - sliceSpace / 2f) * mAnimator.getPhaseY(),\n+                            (sliceAngle - sliceSpace / 2f) * mAnimator.getPhaseY(),\n                             true, mRenderPaint);\n                 }\n             }\n \n-            angle += newangle * mAnimator.getPhaseX();\n+            angle += sliceAngle * mAnimator.getPhaseX();\n         }\n     }\n \n@@ -208,10 +208,10 @@ public void drawValues(Canvas c) {\n                 float angle = (absoluteAngles[cnt] - offset) * mAnimator.getPhaseY();\n                 // calculate the text position\n                 float x = (float) (r\n-                        * Math.cos(Math.toRadians(rotationAngle) + Math.toRadians(angle))\n+                        * Math.cos(Math.toRadians(rotationAngle + angle))\n                         + center.x);\n                 float y = (float) (r\n-                        * Math.sin(Math.toRadians(rotationAngle) + Math.toRadians(angle))\n+                        * Math.sin(Math.toRadians(rotationAngle + angle))\n                         + center.y);\n \n                 float value = mChart.isUsePercentValuesEnabled() ? entry.getVal()\n@@ -413,7 +413,8 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n             angle *= mAnimator.getPhaseX();\n \n-            float sliceDegrees = drawAngles[xIndex];\n+            float sliceAngle = drawAngles[xIndex];\n+            float sliceSpace = set.getSliceSpace();\n \n             float shift = set.getSelectionShift();\n             RectF circleBox = mChart.getCircleBox();\n@@ -433,9 +434,10 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n             // redefine the rect that contains the arc so that the\n             // highlighted pie is not cut off\n-            mBitmapCanvas.drawArc(highlighted, angle + set.getSliceSpace() / 2f, sliceDegrees\n-                    * mAnimator.getPhaseY()\n-                    - set.getSliceSpace() / 2f, true, mRenderPaint);\n+            mBitmapCanvas.drawArc(highlighted,\n+                    rotationAngle + (angle + sliceSpace / 2f) * mAnimator.getPhaseY(),\n+                    (sliceAngle - sliceSpace / 2f) * mAnimator.getPhaseY(),\n+                    true, mRenderPaint);\n         }\n     }\n \n@@ -465,25 +467,25 @@ protected void drawRoundedSlices(Canvas c) {\n \n         for (int j = 0; j < dataSet.getEntryCount(); j++) {\n \n-            float newangle = drawAngles[j];\n+            float sliceAngle = drawAngles[j];\n \n             Entry e = dataSet.getEntryForIndex(j);\n \n             // draw only if the value is greater than zero\n             if ((Math.abs(e.getVal()) > 0.000001)) {\n \n                 float x = (float) ((r - circleRadius)\n-                        * Math.cos(Math.toRadians((angle + newangle)\n+                        * Math.cos(Math.toRadians((angle + sliceAngle)\n                         * mAnimator.getPhaseY())) + center.x);\n                 float y = (float) ((r - circleRadius)\n-                        * Math.sin(Math.toRadians((angle + newangle)\n+                        * Math.sin(Math.toRadians((angle + sliceAngle)\n                         * mAnimator.getPhaseY())) + center.y);\n \n                 mRenderPaint.setColor(dataSet.getColor(j));\n                 mBitmapCanvas.drawCircle(x, y, circleRadius, mRenderPaint);\n             }\n \n-            angle += newangle * mAnimator.getPhaseX();\n+            angle += sliceAngle * mAnimator.getPhaseX();\n         }\n     }\n ",
    "output": "Merge pull request #1349 from danielgindi/pie-animation-fixes\n\nPie animation fixes"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -414,6 +414,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             angle *= mAnimator.getPhaseX();\n \n             float sliceAngle = drawAngles[xIndex];\n+            float sliceSpace = set.getSliceSpace();\n \n             float shift = set.getSelectionShift();\n             RectF circleBox = mChart.getCircleBox();\n@@ -433,9 +434,10 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n             // redefine the rect that contains the arc so that the\n             // highlighted pie is not cut off\n-            mBitmapCanvas.drawArc(highlighted, angle + set.getSliceSpace() / 2f, sliceAngle\n-                    * mAnimator.getPhaseY()\n-                    - set.getSliceSpace() / 2f, true, mRenderPaint);\n+            mBitmapCanvas.drawArc(highlighted,\n+                    rotationAngle + (angle + sliceSpace / 2f) * mAnimator.getPhaseY(),\n+                    (sliceAngle - sliceSpace / 2f) * mAnimator.getPhaseY(),\n+                    true, mRenderPaint);\n         }\n     }\n ",
    "output": "Fixed highlighted pie animation"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -134,7 +134,7 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n \n         for (int j = 0; j < dataSet.getEntryCount(); j++) {\n \n-            float newangle = drawAngles[j];\n+            float sliceAngle = drawAngles[j];\n             float sliceSpace = dataSet.getSliceSpace();\n \n             Entry e = dataSet.getEntryForIndex(j);\n@@ -148,12 +148,12 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n                     mRenderPaint.setColor(dataSet.getColor(j));\n                     mBitmapCanvas.drawArc(mChart.getCircleBox(),\n                             rotationAngle + (angle + sliceSpace / 2f) * mAnimator.getPhaseY(),\n-                            (newangle - sliceSpace / 2f) * mAnimator.getPhaseY(),\n+                            (sliceAngle - sliceSpace / 2f) * mAnimator.getPhaseY(),\n                             true, mRenderPaint);\n                 }\n             }\n \n-            angle += newangle * mAnimator.getPhaseX();\n+            angle += sliceAngle * mAnimator.getPhaseX();\n         }\n     }\n \n@@ -413,7 +413,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n             angle *= mAnimator.getPhaseX();\n \n-            float sliceDegrees = drawAngles[xIndex];\n+            float sliceAngle = drawAngles[xIndex];\n \n             float shift = set.getSelectionShift();\n             RectF circleBox = mChart.getCircleBox();\n@@ -433,7 +433,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n             // redefine the rect that contains the arc so that the\n             // highlighted pie is not cut off\n-            mBitmapCanvas.drawArc(highlighted, angle + set.getSliceSpace() / 2f, sliceDegrees\n+            mBitmapCanvas.drawArc(highlighted, angle + set.getSliceSpace() / 2f, sliceAngle\n                     * mAnimator.getPhaseY()\n                     - set.getSliceSpace() / 2f, true, mRenderPaint);\n         }\n@@ -465,25 +465,25 @@ protected void drawRoundedSlices(Canvas c) {\n \n         for (int j = 0; j < dataSet.getEntryCount(); j++) {\n \n-            float newangle = drawAngles[j];\n+            float sliceAngle = drawAngles[j];\n \n             Entry e = dataSet.getEntryForIndex(j);\n \n             // draw only if the value is greater than zero\n             if ((Math.abs(e.getVal()) > 0.000001)) {\n \n                 float x = (float) ((r - circleRadius)\n-                        * Math.cos(Math.toRadians((angle + newangle)\n+                        * Math.cos(Math.toRadians((angle + sliceAngle)\n                         * mAnimator.getPhaseY())) + center.x);\n                 float y = (float) ((r - circleRadius)\n-                        * Math.sin(Math.toRadians((angle + newangle)\n+                        * Math.sin(Math.toRadians((angle + sliceAngle)\n                         * mAnimator.getPhaseY())) + center.y);\n \n                 mRenderPaint.setColor(dataSet.getColor(j));\n                 mBitmapCanvas.drawCircle(x, y, circleRadius, mRenderPaint);\n             }\n \n-            angle += newangle * mAnimator.getPhaseX();\n+            angle += sliceAngle * mAnimator.getPhaseX();\n         }\n     }\n ",
    "output": "Renamed variables to be more consistent"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/PieChartItem.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/PieChartItem.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/PieChartItem.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/PieChartItem.java\n@@ -79,7 +79,7 @@ public View getView(int position, View convertView, Context c) {\n \n         // do not forget to refresh the chart\n         // holder.chart.invalidate();\n-        holder.chart.animateXY(900, 900);\n+        holder.chart.animateY(900);\n \n         return convertView;\n     }\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmWikiExample.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmWikiExample.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmWikiExample.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmWikiExample.java\n@@ -39,6 +39,9 @@ protected void onCreate(Bundle savedInstanceState) {\n         setup(lineChart);\n         setup(barChart);\n \n+        lineChart.setExtraBottomOffset(5f);\n+        barChart.setExtraBottomOffset(5f);\n+\n         lineChart.getAxisLeft().setDrawGridLines(false);\n         lineChart.getXAxis().setDrawGridLines(false);\n         barChart.getAxisLeft().setDrawGridLines(false);",
    "output": "Improve example"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -127,7 +127,8 @@ public void drawData(Canvas c) {\n \n     protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n \n-        float angle = mChart.getRotationAngle();\n+        float angle = 0;\n+        float rotationAngle = mChart.getRotationAngle();\n \n         float[] drawAngles = mChart.getDrawAngles();\n \n@@ -146,7 +147,7 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n \n                     mRenderPaint.setColor(dataSet.getColor(j));\n                     mBitmapCanvas.drawArc(mChart.getCircleBox(),\n-                            (angle + sliceSpace / 2f) * mAnimator.getPhaseY(),\n+                            rotationAngle + (angle + sliceSpace / 2f) * mAnimator.getPhaseY(),\n                             (newangle - sliceSpace / 2f) * mAnimator.getPhaseY(),\n                             true, mRenderPaint);\n                 }\n@@ -204,13 +205,14 @@ public void drawValues(Canvas c) {\n                 // offset needed to center the drawn text in the slice\n                 float offset = drawAngles[cnt] / 2;\n \n+                float angle = (absoluteAngles[cnt] - offset) * mAnimator.getPhaseY();\n                 // calculate the text position\n                 float x = (float) (r\n-                        * Math.cos(Math.toRadians((rotationAngle + absoluteAngles[cnt] - offset)\n-                        * mAnimator.getPhaseY())) + center.x);\n+                        * Math.cos(Math.toRadians(rotationAngle) + Math.toRadians(angle))\n+                        + center.x);\n                 float y = (float) (r\n-                        * Math.sin(Math.toRadians((rotationAngle + absoluteAngles[cnt] - offset)\n-                        * mAnimator.getPhaseY())) + center.y);\n+                        * Math.sin(Math.toRadians(rotationAngle) + Math.toRadians(angle))\n+                        + center.y);\n \n                 float value = mChart.isUsePercentValuesEnabled() ? entry.getVal()\n                         / data.getYValueSum() * 100f : entry.getVal();",
    "output": "Merge pull request #1322 from mikemonteith/master\n\nPie animation should be applied after rotationAngle"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -9,7 +9,6 @@\n import android.graphics.PorterDuffXfermode;\n import android.graphics.RectF;\n import android.graphics.Typeface;\n-import android.text.SpannableString;\n import android.util.AttributeSet;\n \n import com.github.mikephil.charting.data.Entry;\n@@ -67,7 +66,7 @@ public class PieChart extends PieRadarChartBase<PieData> {\n     /**\n      * variable for the text that is drawn in the center of the pie-chart\n      */\n-    private SpannableString mCenterText = new SpannableString(\"\");\n+    private CharSequence mCenterText = \"\";\n \n     /**\n      * indicates the size of the hole in the center of the piechart, default:\n@@ -371,33 +370,23 @@ public boolean isDrawHoleEnabled() {\n     }\n \n     /**\n-     * Sets the text SpannableString that is displayed in the center of the PieChart.\n+     * Sets the text String that is displayed in the center of the PieChart.\n      *\n      * @param text\n      */\n-    public void setCenterText(SpannableString text) {\n-\n+    public void setCenterText(CharSequence text) {\n         if (text == null)\n-            mCenterText = new SpannableString(\"\");\n+            mCenterText = \"\";\n         else\n             mCenterText = text;\n     }\n \n-    /**\n-     * Sets the text String that is displayed in the center of the PieChart.\n-     *\n-     * @param text\n-     */\n-    public void setCenterText(String text) {\n-        setCenterText(new SpannableString(text));\n-    }\n-\n     /**\n      * returns the text that is drawn in the center of the pie-chart\n      *\n      * @return\n      */\n-    public SpannableString getCenterText() {\n+    public CharSequence getCenterText() {\n         return mCenterText;\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -10,7 +10,6 @@\n import android.graphics.PointF;\n import android.graphics.RectF;\n import android.text.Layout;\n-import android.text.SpannableString;\n import android.text.StaticLayout;\n import android.text.TextPaint;\n \n@@ -45,7 +44,7 @@ public class PieChartRenderer extends DataRenderer {\n     private TextPaint mCenterTextPaint;\n \n     private StaticLayout mCenterTextLayout;\n-    private SpannableString mCenterTextLastValue;\n+    private CharSequence mCenterTextLastValue;\n     private RectF mCenterTextLastBounds = new RectF();\n     private RectF[] mRectBuffer = {new RectF(), new RectF(), new RectF()};\n \n@@ -291,7 +290,7 @@ protected void drawHole(Canvas c) {\n      */\n     protected void drawCenterText(Canvas c) {\n \n-        SpannableString centerText = mChart.getCenterText();\n+        CharSequence centerText = mChart.getCenterText();\n \n         if (mChart.isDrawCenterTextEnabled() && centerText != null) {\n ",
    "output": "Merge pull request #1333 from matiash/master\n\nRemove PieChart.setCenterText() overloads."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n@@ -9,6 +9,9 @@\n import android.graphics.PointF;\n import android.graphics.Rect;\n import android.os.Build;\n+import android.text.Layout;\n+import android.text.StaticLayout;\n+import android.text.TextPaint;\n import android.util.DisplayMetrics;\n import android.util.Log;\n import android.view.MotionEvent;\n@@ -520,19 +523,26 @@ public static float getNormalizedAngle(float angle) {\n     }\n \n     private static Rect mDrawTextRectBuffer = new Rect();\n+    private static Paint.FontMetrics mFontMetricsBuffer = new Paint.FontMetrics();\n \n-    public static void drawText(Canvas c, String text, float x, float y, Paint paint, PointF anchor, float angleDegrees) {\n+    public static void drawText(Canvas c, String text, float x, float y,\n+                                Paint paint,\n+                                PointF anchor, float angleDegrees) {\n \n         float drawOffsetX = 0.f;\n         float drawOffsetY = 0.f;\n \n+        final float lineHeight = paint.getFontMetrics(mFontMetricsBuffer);\n+\n         paint.getTextBounds(text, 0, text.length(), mDrawTextRectBuffer);\n \n         // Android sometimes has pre-padding\n         drawOffsetX -= mDrawTextRectBuffer.left;\n \n-        // Android sets the top = - (lineheight), and we want to normalize it to the center\n-        drawOffsetY -= mDrawTextRectBuffer.top;\n+        // Android does not snap the bounds to line boundaries,\n+        //  and draws from bottom to top.\n+        // And we want to normalize it.\n+        drawOffsetY += lineHeight;\n \n         // To have a consistent point of reference, we always draw left-aligned\n         Paint.Align originalTextAlign = paint.getTextAlign();\n@@ -542,7 +552,7 @@ public static void drawText(Canvas c, String text, float x, float y, Paint paint\n \n             // Move the text drawing rect in a way that it always rotates around its center\n             drawOffsetX -= mDrawTextRectBuffer.width() * 0.5f;\n-            drawOffsetY -= mDrawTextRectBuffer.height() * 0.5f;\n+            drawOffsetY -= lineHeight * 0.5f;\n \n             float translateX = x;\n             float translateY = y;\n@@ -551,7 +561,7 @@ public static void drawText(Canvas c, String text, float x, float y, Paint paint\n             if (anchor.x != 0.5f || anchor.y != 0.5f) {\n                 final FSize rotatedSize = getSizeOfRotatedRectangleByDegrees(\n                         mDrawTextRectBuffer.width(),\n-                        mDrawTextRectBuffer.height(),\n+                        lineHeight,\n                         angleDegrees);\n \n                 translateX -= rotatedSize.width * (anchor.x - 0.5f);\n@@ -570,7 +580,7 @@ public static void drawText(Canvas c, String text, float x, float y, Paint paint\n             if (anchor.x != 0.f || anchor.y != 0.f) {\n \n                 drawOffsetX -= mDrawTextRectBuffer.width() * anchor.x;\n-                drawOffsetY -= mDrawTextRectBuffer.height() * anchor.y;\n+                drawOffsetY -= lineHeight * anchor.y;\n             }\n \n             drawOffsetX += x;\n@@ -582,6 +592,99 @@ public static void drawText(Canvas c, String text, float x, float y, Paint paint\n         paint.setTextAlign(originalTextAlign);\n     }\n \n+    public static void drawMultilineText(Canvas c, StaticLayout textLayout,\n+                                         float x, float y,\n+                                         TextPaint paint,\n+                                         PointF anchor, float angleDegrees) {\n+\n+        float drawOffsetX = 0.f;\n+        float drawOffsetY = 0.f;\n+        float drawWidth;\n+        float drawHeight;\n+\n+        final float lineHeight = paint.getFontMetrics(mFontMetricsBuffer);\n+\n+        drawWidth = textLayout.getWidth();\n+        drawHeight = textLayout.getLineCount() * lineHeight;\n+\n+        // Android sometimes has pre-padding\n+        drawOffsetX -= mDrawTextRectBuffer.left;\n+\n+        // Android does not snap the bounds to line boundaries,\n+        //  and draws from bottom to top.\n+        // And we want to normalize it.\n+        drawOffsetY += drawHeight;\n+\n+        // To have a consistent point of reference, we always draw left-aligned\n+        Paint.Align originalTextAlign = paint.getTextAlign();\n+        paint.setTextAlign(Paint.Align.LEFT);\n+\n+        if (angleDegrees != 0.f) {\n+\n+            // Move the text drawing rect in a way that it always rotates around its center\n+            drawOffsetX -= drawWidth * 0.5f;\n+            drawOffsetY -= drawHeight * 0.5f;\n+\n+            float translateX = x;\n+            float translateY = y;\n+\n+            // Move the \"outer\" rect relative to the anchor, assuming its centered\n+            if (anchor.x != 0.5f || anchor.y != 0.5f) {\n+                final FSize rotatedSize = getSizeOfRotatedRectangleByDegrees(\n+                        drawWidth,\n+                        drawHeight,\n+                        angleDegrees);\n+\n+                translateX -= rotatedSize.width * (anchor.x - 0.5f);\n+                translateY -= rotatedSize.height * (anchor.y - 0.5f);\n+            }\n+\n+            c.save();\n+            c.translate(translateX, translateY);\n+            c.rotate(angleDegrees);\n+\n+            c.translate(drawOffsetX, drawOffsetY);\n+            textLayout.draw(c);\n+\n+            c.restore();\n+        }\n+        else {\n+            if (anchor.x != 0.f || anchor.y != 0.f) {\n+\n+                drawOffsetX -= drawWidth * anchor.x;\n+                drawOffsetY -= drawHeight * anchor.y;\n+            }\n+\n+            drawOffsetX += x;\n+            drawOffsetY += y;\n+\n+            c.save();\n+\n+            c.translate(drawOffsetX, drawOffsetY);\n+            textLayout.draw(c);\n+\n+            c.restore();\n+        }\n+\n+        paint.setTextAlign(originalTextAlign);\n+    }\n+\n+    public static void drawMultilineText(Canvas c, String text,\n+                                         float x, float y,\n+                                         TextPaint paint,\n+                                         FSize constrainedToSize,\n+                                         PointF anchor, float angleDegrees) {\n+\n+        StaticLayout textLayout = new StaticLayout(\n+                text, 0, text.length(),\n+                paint,\n+                (int) Math.max(Math.ceil(constrainedToSize.width), 1.f),\n+                Layout.Alignment.ALIGN_NORMAL, 1.f, 0.f, false);\n+\n+\n+        drawMultilineText(c, textLayout, x, y, paint, anchor, angleDegrees);\n+    }\n+\n     public static FSize getSizeOfRotatedRectangleByDegrees(FSize rectangleSize, float degrees)\n     {\n         final float radians = degrees * FDEG2RAD;",
    "output": "Merge pull request #1326 from danielgindi/text-lineheight-fix\n\nText lineheight fix"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -9,7 +9,6 @@\n import android.graphics.PorterDuffXfermode;\n import android.graphics.RectF;\n import android.graphics.Typeface;\n-import android.text.SpannableString;\n import android.util.AttributeSet;\n \n import com.github.mikephil.charting.data.Entry;\n@@ -67,7 +66,7 @@ public class PieChart extends PieRadarChartBase<PieData> {\n     /**\n      * variable for the text that is drawn in the center of the pie-chart\n      */\n-    private SpannableString mCenterText = new SpannableString(\"\");\n+    private CharSequence mCenterText = \"\";\n \n     /**\n      * indicates the size of the hole in the center of the piechart, default:\n@@ -371,33 +370,23 @@ public boolean isDrawHoleEnabled() {\n     }\n \n     /**\n-     * Sets the text SpannableString that is displayed in the center of the PieChart.\n+     * Sets the text String that is displayed in the center of the PieChart.\n      *\n      * @param text\n      */\n-    public void setCenterText(SpannableString text) {\n-\n+    public void setCenterText(CharSequence text) {\n         if (text == null)\n-            mCenterText = new SpannableString(\"\");\n+            mCenterText = \"\";\n         else\n             mCenterText = text;\n     }\n \n-    /**\n-     * Sets the text String that is displayed in the center of the PieChart.\n-     *\n-     * @param text\n-     */\n-    public void setCenterText(String text) {\n-        setCenterText(new SpannableString(text));\n-    }\n-\n     /**\n      * returns the text that is drawn in the center of the pie-chart\n      *\n      * @return\n      */\n-    public SpannableString getCenterText() {\n+    public CharSequence getCenterText() {\n         return mCenterText;\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -10,7 +10,6 @@\n import android.graphics.PointF;\n import android.graphics.RectF;\n import android.text.Layout;\n-import android.text.SpannableString;\n import android.text.StaticLayout;\n import android.text.TextPaint;\n \n@@ -45,7 +44,7 @@ public class PieChartRenderer extends DataRenderer {\n     private TextPaint mCenterTextPaint;\n \n     private StaticLayout mCenterTextLayout;\n-    private SpannableString mCenterTextLastValue;\n+    private CharSequence mCenterTextLastValue;\n     private RectF mCenterTextLastBounds = new RectF();\n     private RectF[] mRectBuffer = {new RectF(), new RectF(), new RectF()};\n \n@@ -291,7 +290,7 @@ protected void drawHole(Canvas c) {\n      */\n     protected void drawCenterText(Canvas c) {\n \n-        SpannableString centerText = mChart.getCenterText();\n+        CharSequence centerText = mChart.getCenterText();\n \n         if (mChart.isDrawCenterTextEnabled() && centerText != null) {\n ",
    "output": "Remove PieChart.setCenterText() overloads.\n\nReplaced them by a single method receiving CharSequence."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n@@ -9,6 +9,9 @@\n import android.graphics.PointF;\n import android.graphics.Rect;\n import android.os.Build;\n+import android.text.Layout;\n+import android.text.StaticLayout;\n+import android.text.TextPaint;\n import android.util.DisplayMetrics;\n import android.util.Log;\n import android.view.MotionEvent;\n@@ -589,6 +592,99 @@ public static void drawText(Canvas c, String text, float x, float y,\n         paint.setTextAlign(originalTextAlign);\n     }\n \n+    public static void drawMultilineText(Canvas c, StaticLayout textLayout,\n+                                         float x, float y,\n+                                         TextPaint paint,\n+                                         PointF anchor, float angleDegrees) {\n+\n+        float drawOffsetX = 0.f;\n+        float drawOffsetY = 0.f;\n+        float drawWidth;\n+        float drawHeight;\n+\n+        final float lineHeight = paint.getFontMetrics(mFontMetricsBuffer);\n+\n+        drawWidth = textLayout.getWidth();\n+        drawHeight = textLayout.getLineCount() * lineHeight;\n+\n+        // Android sometimes has pre-padding\n+        drawOffsetX -= mDrawTextRectBuffer.left;\n+\n+        // Android does not snap the bounds to line boundaries,\n+        //  and draws from bottom to top.\n+        // And we want to normalize it.\n+        drawOffsetY += drawHeight;\n+\n+        // To have a consistent point of reference, we always draw left-aligned\n+        Paint.Align originalTextAlign = paint.getTextAlign();\n+        paint.setTextAlign(Paint.Align.LEFT);\n+\n+        if (angleDegrees != 0.f) {\n+\n+            // Move the text drawing rect in a way that it always rotates around its center\n+            drawOffsetX -= drawWidth * 0.5f;\n+            drawOffsetY -= drawHeight * 0.5f;\n+\n+            float translateX = x;\n+            float translateY = y;\n+\n+            // Move the \"outer\" rect relative to the anchor, assuming its centered\n+            if (anchor.x != 0.5f || anchor.y != 0.5f) {\n+                final FSize rotatedSize = getSizeOfRotatedRectangleByDegrees(\n+                        drawWidth,\n+                        drawHeight,\n+                        angleDegrees);\n+\n+                translateX -= rotatedSize.width * (anchor.x - 0.5f);\n+                translateY -= rotatedSize.height * (anchor.y - 0.5f);\n+            }\n+\n+            c.save();\n+            c.translate(translateX, translateY);\n+            c.rotate(angleDegrees);\n+\n+            c.translate(drawOffsetX, drawOffsetY);\n+            textLayout.draw(c);\n+\n+            c.restore();\n+        }\n+        else {\n+            if (anchor.x != 0.f || anchor.y != 0.f) {\n+\n+                drawOffsetX -= drawWidth * anchor.x;\n+                drawOffsetY -= drawHeight * anchor.y;\n+            }\n+\n+            drawOffsetX += x;\n+            drawOffsetY += y;\n+\n+            c.save();\n+\n+            c.translate(drawOffsetX, drawOffsetY);\n+            textLayout.draw(c);\n+\n+            c.restore();\n+        }\n+\n+        paint.setTextAlign(originalTextAlign);\n+    }\n+\n+    public static void drawMultilineText(Canvas c, String text,\n+                                         float x, float y,\n+                                         TextPaint paint,\n+                                         FSize constrainedToSize,\n+                                         PointF anchor, float angleDegrees) {\n+\n+        StaticLayout textLayout = new StaticLayout(\n+                text, 0, text.length(),\n+                paint,\n+                (int) Math.max(Math.ceil(constrainedToSize.width), 1.f),\n+                Layout.Alignment.ALIGN_NORMAL, 1.f, 0.f, false);\n+\n+\n+        drawMultilineText(c, textLayout, x, y, paint, anchor, angleDegrees);\n+    }\n+\n     public static FSize getSizeOfRotatedRectangleByDegrees(FSize rectangleSize, float degrees)\n     {\n         final float radians = degrees * FDEG2RAD;",
    "output": "Preparations for rotated multiline text"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n@@ -520,19 +520,26 @@ public static float getNormalizedAngle(float angle) {\n     }\n \n     private static Rect mDrawTextRectBuffer = new Rect();\n+    private static Paint.FontMetrics mFontMetricsBuffer = new Paint.FontMetrics();\n \n-    public static void drawText(Canvas c, String text, float x, float y, Paint paint, PointF anchor, float angleDegrees) {\n+    public static void drawText(Canvas c, String text, float x, float y,\n+                                Paint paint,\n+                                PointF anchor, float angleDegrees) {\n \n         float drawOffsetX = 0.f;\n         float drawOffsetY = 0.f;\n \n+        final float lineHeight = paint.getFontMetrics(mFontMetricsBuffer);\n+\n         paint.getTextBounds(text, 0, text.length(), mDrawTextRectBuffer);\n \n         // Android sometimes has pre-padding\n         drawOffsetX -= mDrawTextRectBuffer.left;\n \n-        // Android sets the top = - (lineheight), and we want to normalize it to the center\n-        drawOffsetY -= mDrawTextRectBuffer.top;\n+        // Android does not snap the bounds to line boundaries,\n+        //  and draws from bottom to top.\n+        // And we want to normalize it.\n+        drawOffsetY += lineHeight;\n \n         // To have a consistent point of reference, we always draw left-aligned\n         Paint.Align originalTextAlign = paint.getTextAlign();\n@@ -542,7 +549,7 @@ public static void drawText(Canvas c, String text, float x, float y, Paint paint\n \n             // Move the text drawing rect in a way that it always rotates around its center\n             drawOffsetX -= mDrawTextRectBuffer.width() * 0.5f;\n-            drawOffsetY -= mDrawTextRectBuffer.height() * 0.5f;\n+            drawOffsetY -= lineHeight * 0.5f;\n \n             float translateX = x;\n             float translateY = y;\n@@ -551,7 +558,7 @@ public static void drawText(Canvas c, String text, float x, float y, Paint paint\n             if (anchor.x != 0.5f || anchor.y != 0.5f) {\n                 final FSize rotatedSize = getSizeOfRotatedRectangleByDegrees(\n                         mDrawTextRectBuffer.width(),\n-                        mDrawTextRectBuffer.height(),\n+                        lineHeight,\n                         angleDegrees);\n \n                 translateX -= rotatedSize.width * (anchor.x - 0.5f);\n@@ -570,7 +577,7 @@ public static void drawText(Canvas c, String text, float x, float y, Paint paint\n             if (anchor.x != 0.f || anchor.y != 0.f) {\n \n                 drawOffsetX -= mDrawTextRectBuffer.width() * anchor.x;\n-                drawOffsetY -= mDrawTextRectBuffer.height() * anchor.y;\n+                drawOffsetY -= lineHeight * anchor.y;\n             }\n \n             drawOffsetX += x;",
    "output": "Fixes y-offset when rendering rotate-able text"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -128,7 +128,8 @@ public void drawData(Canvas c) {\n \n     protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n \n-        float angle = mChart.getRotationAngle();\n+        float angle = 0;\n+        float rotationAngle = mChart.getRotationAngle();\n \n         float[] drawAngles = mChart.getDrawAngles();\n \n@@ -147,7 +148,7 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n \n                     mRenderPaint.setColor(dataSet.getColor(j));\n                     mBitmapCanvas.drawArc(mChart.getCircleBox(),\n-                            (angle + sliceSpace / 2f) * mAnimator.getPhaseY(),\n+                            rotationAngle + (angle + sliceSpace / 2f) * mAnimator.getPhaseY(),\n                             (newangle - sliceSpace / 2f) * mAnimator.getPhaseY(),\n                             true, mRenderPaint);\n                 }\n@@ -205,13 +206,14 @@ public void drawValues(Canvas c) {\n                 // offset needed to center the drawn text in the slice\n                 float offset = drawAngles[cnt] / 2;\n \n+                float angle = (absoluteAngles[cnt] - offset) * mAnimator.getPhaseY();\n                 // calculate the text position\n                 float x = (float) (r\n-                        * Math.cos(Math.toRadians((rotationAngle + absoluteAngles[cnt] - offset)\n-                        * mAnimator.getPhaseY())) + center.x);\n+                        * Math.cos(Math.toRadians(rotationAngle) + Math.toRadians(angle))\n+                        + center.x);\n                 float y = (float) (r\n-                        * Math.sin(Math.toRadians((rotationAngle + absoluteAngles[cnt] - offset)\n-                        * mAnimator.getPhaseY())) + center.y);\n+                        * Math.sin(Math.toRadians(rotationAngle) + Math.toRadians(angle))\n+                        + center.y);\n \n                 float value = mChart.isUsePercentValuesEnabled() ? entry.getVal()\n                         / data.getYValueSum() * 100f : entry.getVal();",
    "output": "Pie animation should be applied after rotationAngle"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -246,7 +246,7 @@ public void drawValues(Canvas c) {\n     public void drawExtras(Canvas c) {\n         // drawCircles(c);\n         drawHole(c);\n-        c.drawBitmap(mDrawBitmap, 0, 0, mRenderPaint);\n+        c.drawBitmap(mDrawBitmap, 0, 0, null);\n         drawCenterText(c);\n     }\n ",
    "output": "Merge pull request #1315 from mikemonteith/master\n\nFixes #1258"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -246,7 +246,7 @@ public void drawValues(Canvas c) {\n     public void drawExtras(Canvas c) {\n         // drawCircles(c);\n         drawHole(c);\n-        c.drawBitmap(mDrawBitmap, 0, 0, mRenderPaint);\n+        c.drawBitmap(mDrawBitmap, 0, 0, null);\n         drawCenterText(c);\n     }\n ",
    "output": "Fixes #1258"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n@@ -45,7 +45,6 @@ public abstract class RealmBaseDataSet<T extends RealmObject, S extends Entry> e\n      */\n     protected String mIndexField;\n \n-\n     public RealmBaseDataSet(RealmResults<T> results, String yValuesField) {\n         this.results = results;\n         this.mValuesField = yValuesField;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterDataSet.java\n@@ -15,7 +15,9 @@\n  */\n public class RealmScatterDataSet<T extends RealmObject> extends RealmLineScatterCandleRadarDataSet<T, Entry> implements IScatterDataSet {\n \n-    /** the size the scattershape will have, in screen pixels */\n+    /**\n+     * the size the scattershape will have, in screen pixels\n+     */\n     private float mShapeSize = 15f;\n \n     /**\n@@ -24,6 +26,27 @@ public class RealmScatterDataSet<T extends RealmObject> extends RealmLineScatter\n      */\n     private ScatterChart.ScatterShape mScatterShape = ScatterChart.ScatterShape.SQUARE;\n \n+\n+    /**\n+     * Constructor for creating a LineDataSet with realm data.\n+     *\n+     * @param result       the queried results from the realm database\n+     * @param yValuesField the name of the field in your data object that represents the y-value\n+     */\n+    public RealmScatterDataSet(RealmResults<T> result, String yValuesField) {\n+        super(result, yValuesField);\n+\n+        build(this.results);\n+        calcMinMax(0, results.size());\n+    }\n+\n+    /**\n+     * Constructor for creating a LineDataSet with realm data.\n+     *\n+     * @param result       the queried results from the realm database\n+     * @param yValuesField the name of the field in your data object that represents the y-value\n+     * @param xIndexField  the name of the field in your data object that represents the x-index\n+     */\n     public RealmScatterDataSet(RealmResults<T> result, String yValuesField, String xIndexField) {\n         super(result, yValuesField, xIndexField);\n \n@@ -34,10 +57,24 @@ public RealmScatterDataSet(RealmResults<T> result, String yValuesField, String x\n     @Override\n     public void build(RealmResults<T> results) {\n \n-        for (T object : results) {\n+        if (mIndexField == null) { // x-index not available\n+\n+            int xIndex = 0;\n+\n+            for (T object : results) {\n+\n+                DynamicRealmObject dynamicObject = new DynamicRealmObject(object);\n+                mValues.add(new Entry(dynamicObject.getFloat(mValuesField), xIndex));\n+                xIndex++;\n+            }\n+\n+        } else {\n+\n+            for (T object : results) {\n \n-            DynamicRealmObject dynamicObject = new DynamicRealmObject(object);\n-            mValues.add(new Entry(dynamicObject.getFloat(mValuesField), dynamicObject.getInt(mIndexField)));\n+                DynamicRealmObject dynamicObject = new DynamicRealmObject(object);\n+                mValues.add(new Entry(dynamicObject.getFloat(mValuesField), dynamicObject.getInt(mIndexField)));\n+            }\n         }\n     }\n ",
    "output": "Allow ScatterDataSet to be created without x-index"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBarLineScatterCandleBubbleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBarLineScatterCandleBubbleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBarLineScatterCandleBubbleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBarLineScatterCandleBubbleDataSet.java\n@@ -16,6 +16,11 @@ public abstract class RealmBarLineScatterCandleBubbleDataSet<T extends RealmObje\n     /** default highlight color */\n     protected int mHighLightColor = Color.rgb(255, 187, 115);\n \n+\n+    public RealmBarLineScatterCandleBubbleDataSet(RealmResults<T> results, String yValuesField) {\n+        super(results, yValuesField);\n+    }\n+\n     /**\n      * Constructor that takes the realm RealmResults, sorts & stores them.\n      *\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n@@ -45,6 +45,14 @@ public abstract class RealmBaseDataSet<T extends RealmObject, S extends Entry> e\n      */\n     protected String mIndexField;\n \n+\n+    public RealmBaseDataSet(RealmResults<T> results, String yValuesField) {\n+        this.results = results;\n+        this.mValuesField = yValuesField;\n+        this.mValues = new ArrayList<S>();\n+        this.results.sort(mIndexField, true);\n+    }\n+\n     /**\n      * Constructor that takes the realm RealmResults, sorts & stores them.\n      *\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineRadarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineRadarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineRadarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineRadarDataSet.java\n@@ -26,6 +26,11 @@ public abstract class RealmLineRadarDataSet<T extends RealmObject, S extends Ent\n     /** if true, the data will also be drawn filled */\n     private boolean mDrawFilled = false;\n \n+\n+    public RealmLineRadarDataSet(RealmResults<T> results, String yValuesField) {\n+        super(results, yValuesField);\n+    }\n+\n     /**\n      * Constructor that takes the realm RealmResults, sorts & stores them.\n      *\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineScatterCandleRadarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineScatterCandleRadarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineScatterCandleRadarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineScatterCandleRadarDataSet.java\n@@ -23,6 +23,11 @@ public abstract class RealmLineScatterCandleRadarDataSet<T extends RealmObject,\n     /** the path effect for dashed highlight-lines */\n     protected DashPathEffect mHighlightDashPathEffect = null;\n \n+\n+    public RealmLineScatterCandleRadarDataSet(RealmResults<T> results, String yValuesField) {\n+        super(results, yValuesField);\n+    }\n+\n     /**\n      * Constructor that takes the realm RealmResults, sorts & stores them.\n      *\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmLineDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmLineDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmLineDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmLineDataSet.java\n@@ -24,32 +24,73 @@\n  */\n public class RealmLineDataSet<T extends RealmObject> extends RealmLineRadarDataSet<T, Entry> implements ILineDataSet {\n \n-    /** List representing all colors that are used for the circles */\n+    /**\n+     * List representing all colors that are used for the circles\n+     */\n     private List<Integer> mCircleColors = null;\n \n-    /** the color of the inner circles */\n+    /**\n+     * the color of the inner circles\n+     */\n     private int mCircleColorHole = Color.WHITE;\n \n-    /** the radius of the circle-shaped value indicators */\n+    /**\n+     * the radius of the circle-shaped value indicators\n+     */\n     private float mCircleSize = 8f;\n \n-    /** sets the intensity of the cubic lines */\n+    /**\n+     * sets the intensity of the cubic lines\n+     */\n     private float mCubicIntensity = 0.2f;\n \n-    /** the path effect of this DataSet that makes dashed lines possible */\n+    /**\n+     * the path effect of this DataSet that makes dashed lines possible\n+     */\n     private DashPathEffect mDashPathEffect = null;\n \n-    /** formatter for customizing the position of the fill-line */\n+    /**\n+     * formatter for customizing the position of the fill-line\n+     */\n     private FillFormatter mFillFormatter = new DefaultFillFormatter();\n \n-    /** if true, drawing circles is enabled */\n+    /**\n+     * if true, drawing circles is enabled\n+     */\n     private boolean mDrawCircles = true;\n \n-    /** if true, cubic lines are drawn instead of linear */\n+    /**\n+     * if true, cubic lines are drawn instead of linear\n+     */\n     private boolean mDrawCubic = false;\n \n     private boolean mDrawCircleHole = true;\n \n+\n+    /**\n+     * Constructor for creating a LineDataSet with realm data.\n+     *\n+     * @param result       the queried results from the realm database\n+     * @param yValuesField the name of the field in your data object that represents the y-value\n+     */\n+    public RealmLineDataSet(RealmResults<T> result, String yValuesField) {\n+        super(result, yValuesField);\n+        mCircleColors = new ArrayList<Integer>();\n+\n+        // default color\n+        mCircleColors.add(Color.rgb(140, 234, 255));\n+\n+        build(this.results);\n+        calcMinMax(0, results.size());\n+    }\n+\n+    /**\n+     * Constructor for creating a LineDataSet with realm data.\n+     *\n+     * @param result       the queried results from the realm database\n+     * @param yValuesField the name of the field in your data object that represents the y-value\n+     * @param xIndexField  the name of the field in your data object that represents the x-index\n+     */\n     public RealmLineDataSet(RealmResults<T> result, String yValuesField, String xIndexField) {\n         super(result, yValuesField, xIndexField);\n         mCircleColors = new ArrayList<Integer>();\n@@ -64,14 +105,27 @@ public RealmLineDataSet(RealmResults<T> result, String yValuesField, String xInd\n     @Override\n     public void build(RealmResults<T> results) {\n \n-        for (T object : results) {\n+        if (mIndexField == null) { // x-index not available\n+\n+            int xIndex = 0;\n+\n+            for (T object : results) {\n \n-            DynamicRealmObject dynamicObject = new DynamicRealmObject(object);\n-            mValues.add(new Entry(dynamicObject.getFloat(mValuesField), dynamicObject.getInt(mIndexField)));\n+                DynamicRealmObject dynamicObject = new DynamicRealmObject(object);\n+                mValues.add(new Entry(dynamicObject.getFloat(mValuesField), xIndex));\n+                xIndex++;\n+            }\n+\n+        } else {\n+\n+            for (T object : results) {\n+\n+                DynamicRealmObject dynamicObject = new DynamicRealmObject(object);\n+                mValues.add(new Entry(dynamicObject.getFloat(mValuesField), dynamicObject.getInt(mIndexField)));\n+            }\n         }\n     }\n \n-\n     /**\n      * Sets the intensity for cubic lines (if enabled). Max = 1f = very cubic,\n      * Min = 0.05f = low cubic effect, Default: 0.2f\n@@ -113,12 +167,12 @@ public float getCircleSize() {\n      * \"- - - - - -\". THIS ONLY WORKS IF HARDWARE-ACCELERATION IS TURNED OFF.\n      * Keep in mind that hardware acceleration boosts performance.\n      *\n-     * @param lineLength the length of the line pieces\n+     * @param lineLength  the length of the line pieces\n      * @param spaceLength the length of space in between the pieces\n-     * @param phase offset, in degrees (normally, use 0)\n+     * @param phase       offset, in degrees (normally, use 0)\n      */\n     public void enableDashedLine(float lineLength, float spaceLength, float phase) {\n-        mDashPathEffect = new DashPathEffect(new float[] {\n+        mDashPathEffect = new DashPathEffect(new float[]{\n                 lineLength, spaceLength\n         }, phase);\n     }",
    "output": "Add more constructors for realm. Allow LineDataSet to be created without x-index."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n@@ -56,6 +56,8 @@ protected void onCreate(Bundle savedInstanceState) {\n                 WindowManager.LayoutParams.FLAG_FULLSCREEN);\n         setContentView(R.layout.activity_main);\n \n+        setTitle(\"MPAndroidChart Example\");\n+\n         // initialize the utilities\n         Utils.init(this);\n \n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MyAdapter.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MyAdapter.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MyAdapter.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MyAdapter.java\n@@ -1,6 +1,7 @@\n package com.xxmassdeveloper.mpchartexample.notimportant;\n \n import android.content.Context;\n+import android.graphics.Typeface;\n import android.view.LayoutInflater;\n import android.view.View;\n import android.view.ViewGroup;\n@@ -12,12 +13,18 @@\n import java.util.List;\n \n /**\n- * Created by philipp on 07/12/15.\n+ * Created by Philipp Jahoda on 07/12/15.\n  */\n public class MyAdapter extends ArrayAdapter<ContentItem> {\n \n+    private Typeface mTypeFaceLight;\n+    private Typeface mTypeFaceRegular;\n+\n     public MyAdapter(Context context, List<ContentItem> objects) {\n         super(context, 0, objects);\n+\n+        mTypeFaceLight = Typeface.createFromAsset(context.getAssets(), \"OpenSans-Light.ttf\");\n+        mTypeFaceRegular = Typeface.createFromAsset(context.getAssets(), \"OpenSans-Regular.ttf\");\n     }\n \n     @Override\n@@ -42,6 +49,10 @@ public View getView(int position, View convertView, ViewGroup parent) {\n             holder = (ViewHolder) convertView.getTag();\n         }\n \n+        holder.tvNew.setTypeface(mTypeFaceRegular);\n+        holder.tvName.setTypeface(mTypeFaceLight);\n+        holder.tvDesc.setTypeface(mTypeFaceLight);\n+\n         holder.tvName.setText(c.name);\n         holder.tvDesc.setText(c.desc);\n \n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java\n@@ -2,6 +2,7 @@\n \n import android.graphics.Color;\n import android.graphics.Typeface;\n+import android.os.Bundle;\n \n import com.github.mikephil.charting.charts.BarLineChartBase;\n import com.github.mikephil.charting.charts.Chart;\n@@ -27,6 +28,12 @@ public abstract class RealmBaseActivity extends DemoBase {\n \n     protected Typeface mTf;\n \n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setTitle(\"Realm.io Examples\");\n+    }\n+\n     protected void setup(Chart<?> chart) {\n \n         mTf = Typeface.createFromAsset(getAssets(), \"OpenSans-Regular.ttf\");\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmMainActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmMainActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmMainActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmMainActivity.java\n@@ -29,6 +29,8 @@ protected void onCreate(Bundle savedInstanceState) {\n                 WindowManager.LayoutParams.FLAG_FULLSCREEN);\n         setContentView(R.layout.activity_main);\n \n+        setTitle(\"Realm.io Examples\");\n+\n         ArrayList<ContentItem> objects = new ArrayList<ContentItem>();\n \n         objects.add(new ContentItem(\"Line Chart\", \"Creating a LineChart with Realm.io database\"));\n@@ -95,6 +97,8 @@ public void onItemClick(AdapterView<?> av, View v, int pos, long arg3) {\n                 startActivity(i);\n                 break;\n         }\n+\n+        overridePendingTransition(R.anim.move_right_in_activity, R.anim.move_left_out_activity);\n     }\n \n     @Override",
    "output": "Minor fixes on example project"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n@@ -239,7 +239,7 @@ private void setData(int count, float range) {\n \n     private SpannableString generateCenterSpannableText() {\n \n-        SpannableString s = new SpannableString(\"MPAndroidChart developed by Philipp Jahoda\");\n+        SpannableString s = new SpannableString(\"MPAndroidChart\\ndeveloped by Philipp Jahoda\");\n         s.setSpan(new RelativeSizeSpan(1.7f), 0, 14, 0);\n         s.setSpan(new StyleSpan(Typeface.NORMAL), 14, s.length() - 15, 0);\n         s.setSpan(new ForegroundColorSpan(Color.GRAY), 14, s.length() - 15, 0);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityBubble.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityBubble.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityBubble.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityBubble.java\n@@ -5,7 +5,7 @@\n \n import com.github.mikephil.charting.animation.Easing;\n import com.github.mikephil.charting.charts.BubbleChart;\n-import com.github.mikephil.charting.data.BubbleData;\n+import com.github.mikephil.charting.data.realm.implementation.RealmBubbleData;\n import com.github.mikephil.charting.data.realm.implementation.RealmBubbleDataSet;\n import com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet;\n import com.github.mikephil.charting.utils.ColorTemplate;\n@@ -61,7 +61,7 @@ private void setData() {\n         dataSets.add(set); // add the dataset\n \n         // create a data object with the dataset list\n-        BubbleData data = new BubbleData(result, \"xValue\", dataSets);\n+        RealmBubbleData data = new RealmBubbleData(result, \"xValue\", dataSets);\n         styleData(data);\n \n         // set data\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityCandle.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityCandle.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityCandle.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityCandle.java\n@@ -7,7 +7,7 @@\n \n import com.github.mikephil.charting.animation.Easing;\n import com.github.mikephil.charting.charts.CandleStickChart;\n-import com.github.mikephil.charting.data.CandleData;\n+import com.github.mikephil.charting.data.realm.implementation.RealmCandleData;\n import com.github.mikephil.charting.data.realm.implementation.RealmCandleDataSet;\n import com.github.mikephil.charting.interfaces.datasets.ICandleDataSet;\n import com.xxmassdeveloper.mpchartexample.R;\n@@ -66,7 +66,7 @@ private void setData() {\n         dataSets.add(set); // add the dataset\n \n         // create a data object with the dataset list\n-        CandleData data = new CandleData(result, \"xValue\", dataSets);\n+        RealmCandleData data = new RealmCandleData(result, \"xValue\", dataSets);\n         styleData(data);\n \n         // set data\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityLine.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityLine.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityLine.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityLine.java\n@@ -5,7 +5,7 @@\n \n import com.github.mikephil.charting.animation.Easing;\n import com.github.mikephil.charting.charts.LineChart;\n-import com.github.mikephil.charting.data.LineData;\n+import com.github.mikephil.charting.data.realm.implementation.RealmLineData;\n import com.github.mikephil.charting.data.realm.implementation.RealmLineDataSet;\n import com.github.mikephil.charting.interfaces.datasets.ILineDataSet;\n import com.github.mikephil.charting.utils.ColorTemplate;\n@@ -67,7 +67,7 @@ private void setData() {\n         dataSets.add(set); // add the dataset\n \n         // create a data object with the dataset list\n-        LineData data = new LineData(result, \"xValue\", dataSets);\n+        RealmLineData data = new RealmLineData(result, \"xValue\", dataSets);\n         styleData(data);\n \n         // set data\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityPie.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityPie.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityPie.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityPie.java\n@@ -10,15 +10,12 @@\n import android.view.WindowManager;\n \n import com.github.mikephil.charting.charts.PieChart;\n-import com.github.mikephil.charting.data.PieData;\n+import com.github.mikephil.charting.data.realm.implementation.RealmPieData;\n import com.github.mikephil.charting.data.realm.implementation.RealmPieDataSet;\n-import com.github.mikephil.charting.interfaces.datasets.IPieDataSet;\n import com.github.mikephil.charting.utils.ColorTemplate;\n import com.xxmassdeveloper.mpchartexample.R;\n import com.xxmassdeveloper.mpchartexample.custom.RealmDemoData;\n \n-import java.util.ArrayList;\n-\n import io.realm.RealmResults;\n \n /**\n@@ -62,11 +59,8 @@ private void setData() {\n         set.setLabel(\"Example market share\");\n         set.setSliceSpace(2);\n \n-        ArrayList<IPieDataSet> dataSets = new ArrayList<IPieDataSet>();\n-        dataSets.add(set); // add the dataset\n-\n         // create a data object with the dataset list\n-        PieData data = new PieData(result, \"xValue\", dataSets);\n+        RealmPieData data = new RealmPieData(result, \"xValue\", set);\n         styleData(data);\n         data.setValueTextColor(Color.WHITE);\n         data.setValueTextSize(12f);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityScatter.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityScatter.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityScatter.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityScatter.java\n@@ -5,7 +5,7 @@\n \n import com.github.mikephil.charting.animation.Easing;\n import com.github.mikephil.charting.charts.ScatterChart;\n-import com.github.mikephil.charting.data.ScatterData;\n+import com.github.mikephil.charting.data.realm.implementation.RealmScatterData;\n import com.github.mikephil.charting.data.realm.implementation.RealmScatterDataSet;\n import com.github.mikephil.charting.interfaces.datasets.IScatterDataSet;\n import com.github.mikephil.charting.utils.ColorTemplate;\n@@ -63,7 +63,7 @@ private void setData() {\n         dataSets.add(set); // add the dataset\n \n         // create a data object with the dataset list\n-        ScatterData data = new ScatterData(result, \"xValue\", dataSets);\n+        RealmScatterData data = new RealmScatterData(result, \"xValue\", dataSets);\n         styleData(data);\n \n         // set data\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmWikiExample.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmWikiExample.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmWikiExample.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmWikiExample.java\n@@ -6,9 +6,9 @@\n import com.github.mikephil.charting.animation.Easing;\n import com.github.mikephil.charting.charts.BarChart;\n import com.github.mikephil.charting.charts.LineChart;\n-import com.github.mikephil.charting.data.LineData;\n import com.github.mikephil.charting.data.realm.implementation.RealmBarData;\n import com.github.mikephil.charting.data.realm.implementation.RealmBarDataSet;\n+import com.github.mikephil.charting.data.realm.implementation.RealmLineData;\n import com.github.mikephil.charting.data.realm.implementation.RealmLineDataSet;\n import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;\n import com.github.mikephil.charting.interfaces.datasets.ILineDataSet;\n@@ -86,7 +86,7 @@ private void setData() {\n         ArrayList<ILineDataSet> dataSets = new ArrayList<ILineDataSet>();\n         dataSets.add(lineDataSet);\n \n-        LineData lineData = new LineData(results, \"playerName\", dataSets);\n+        RealmLineData lineData = new RealmLineData(results, \"playerName\", dataSets);\n         styleData(lineData);\n \n         // set data\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -310,8 +310,8 @@ protected void drawCenterText(Canvas c) {\n             float radiusPercent = mChart.getCenterTextRadiusPercent();\n             if (radiusPercent > 0.0) {\n                 boundingRect.inset(\n-                        (boundingRect.width() - boundingRect.width() * (radiusPercent / 100.f)) / 2.f,\n-                        (boundingRect.height() - boundingRect.height() * (radiusPercent / 100.f)) / 2.f\n+                        (boundingRect.width() - boundingRect.width() * radiusPercent) / 2.f,\n+                        (boundingRect.height() - boundingRect.height() * radiusPercent) / 2.f\n                 );\n             }\n ",
    "output": "Fixes in example project"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/ScatterData.java b/MPChartLib/src/com/github/mikephil/charting/data/ScatterData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ScatterData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ScatterData.java\n@@ -1,21 +1,13 @@\n \n package com.github.mikephil.charting.data;\n \n-import com.github.mikephil.charting.data.realm.base.RealmUtils;\n import com.github.mikephil.charting.interfaces.datasets.IScatterDataSet;\n \n import java.util.ArrayList;\n import java.util.List;\n \n-import io.realm.RealmObject;\n-import io.realm.RealmResults;\n-\n public class ScatterData extends BarLineScatterCandleBubbleData<IScatterDataSet> {\n \n-    public ScatterData(RealmResults<? extends RealmObject> result, String xValuesField, List<IScatterDataSet> dataSets) {\n-        super(RealmUtils.toXVals(result, xValuesField), dataSets);\n-    }\n-\n     public ScatterData() {\n         super();\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterData.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterData.java\n@@ -0,0 +1,20 @@\n+package com.github.mikephil.charting.data.realm.implementation;\n+\n+import com.github.mikephil.charting.data.ScatterData;\n+import com.github.mikephil.charting.data.realm.base.RealmUtils;\n+import com.github.mikephil.charting.interfaces.datasets.IScatterDataSet;\n+\n+import java.util.List;\n+\n+import io.realm.RealmObject;\n+import io.realm.RealmResults;\n+\n+/**\n+ * Created by Philipp Jahoda on 19/12/15.\n+ */\n+public class RealmScatterData extends ScatterData {\n+\n+    public RealmScatterData(RealmResults<? extends RealmObject> result, String xValuesField, List<IScatterDataSet> dataSets) {\n+        super(RealmUtils.toXVals(result, xValuesField), dataSets);\n+    }\n+}",
    "output": "Minor fixes on realm model"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmMainActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmMainActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmMainActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmMainActivity.java\n@@ -42,6 +42,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         objects.add(new ContentItem(\"Bubble Chart\", \"Creating a BubbleChart with Realm.io database\"));\n         objects.add(new ContentItem(\"Pie Chart\", \"Creating a PieChart with Realm.io database\"));\n         objects.add(new ContentItem(\"Radar Chart\", \"Creating a RadarChart with Realm.io database\"));\n+        objects.add(new ContentItem(\"Realm Wiki\", \"This is the code related to the wiki entry about realm.io on the MPAndroidChart github page.\"));\n \n         MyAdapter adapter = new MyAdapter(this, objects);\n \n@@ -89,6 +90,10 @@ public void onItemClick(AdapterView<?> av, View v, int pos, long arg3) {\n                 i = new Intent(this, RealmDatabaseActivityRadar.class);\n                 startActivity(i);\n                 break;\n+            case 8:\n+                i = new Intent(this, RealmWikiExample.class);\n+                startActivity(i);\n+                break;\n         }\n     }\n \n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmWikiExample.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmWikiExample.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmWikiExample.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmWikiExample.java\n@@ -0,0 +1,111 @@\n+package com.xxmassdeveloper.mpchartexample.realm;\n+\n+import android.os.Bundle;\n+import android.view.WindowManager;\n+\n+import com.github.mikephil.charting.animation.Easing;\n+import com.github.mikephil.charting.charts.BarChart;\n+import com.github.mikephil.charting.charts.LineChart;\n+import com.github.mikephil.charting.data.BarData;\n+import com.github.mikephil.charting.data.LineData;\n+import com.github.mikephil.charting.data.realm.implementation.RealmBarDataSet;\n+import com.github.mikephil.charting.data.realm.implementation.RealmLineDataSet;\n+import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;\n+import com.github.mikephil.charting.interfaces.datasets.ILineDataSet;\n+import com.github.mikephil.charting.utils.ColorTemplate;\n+import com.xxmassdeveloper.mpchartexample.R;\n+\n+import java.util.ArrayList;\n+\n+import io.realm.RealmResults;\n+\n+/**\n+ * Created by Philipp Jahoda on 18/12/15.\n+ */\n+public class RealmWikiExample extends RealmBaseActivity {\n+\n+    private LineChart lineChart;\n+    private BarChart barChart;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,\n+                WindowManager.LayoutParams.FLAG_FULLSCREEN);\n+        setContentView(R.layout.activity_realm_wiki);\n+\n+        lineChart = (LineChart) findViewById(R.id.lineChart);\n+        barChart = (BarChart) findViewById(R.id.barChart);\n+        setup(lineChart);\n+        setup(barChart);\n+\n+        lineChart.getAxisLeft().setDrawGridLines(false);\n+        lineChart.getXAxis().setDrawGridLines(false);\n+        barChart.getAxisLeft().setDrawGridLines(false);\n+        barChart.getXAxis().setDrawGridLines(false);\n+    }\n+\n+    @Override\n+    protected void onResume() {\n+        super.onResume(); // setup realm\n+\n+        mRealm.beginTransaction();\n+\n+        // write some demo-data into the realm.io database\n+        Score score1 = new Score(100f, 0, \"Peter\");\n+        mRealm.copyToRealm(score1);\n+        Score score2 = new Score(110f, 1, \"Lisa\");\n+        mRealm.copyToRealm(score2);\n+        Score score3 = new Score(130f, 2, \"Dennis\");\n+        mRealm.copyToRealm(score3);\n+        Score score4 = new Score(70f, 3, \"Luke\");\n+        mRealm.copyToRealm(score4);\n+        Score score5 = new Score(80f, 4, \"Sarah\");\n+        mRealm.copyToRealm(score5);\n+\n+        mRealm.commitTransaction();\n+\n+        // add data to the chart\n+        setData();\n+    }\n+\n+    private void setData() {\n+\n+        // LINE-CHART\n+        RealmResults<Score> results = mRealm.allObjects(Score.class);\n+\n+        RealmLineDataSet<Score> lineDataSet = new RealmLineDataSet<Score>(results, \"totalScore\", \"scoreNr\");\n+        lineDataSet.setDrawCubic(false);\n+        lineDataSet.setLabel(\"Realm LineDataSet\");\n+        lineDataSet.setDrawCircleHole(false);\n+        lineDataSet.setColor(ColorTemplate.rgb(\"#FF5722\"));\n+        lineDataSet.setCircleColor(ColorTemplate.rgb(\"#FF5722\"));\n+        lineDataSet.setLineWidth(1.8f);\n+        lineDataSet.setCircleSize(3.6f);\n+\n+        ArrayList<ILineDataSet> dataSets = new ArrayList<ILineDataSet>();\n+        dataSets.add(lineDataSet);\n+\n+        LineData lineData = new LineData(results, \"playerName\", dataSets);\n+        styleData(lineData);\n+\n+        // set data\n+        lineChart.setData(lineData);\n+        lineChart.animateY(1400, Easing.EasingOption.EaseInOutQuart);\n+\n+\n+        // BAR-CHART\n+        RealmBarDataSet<Score> barDataSet = new RealmBarDataSet<Score>(results, \"totalScore\", \"scoreNr\");\n+        barDataSet.setColors(new int[]{ColorTemplate.rgb(\"#FF5722\"), ColorTemplate.rgb(\"#03A9F4\")});\n+        barDataSet.setLabel(\"Realm BarDataSet\");\n+\n+        ArrayList<IBarDataSet> barDataSets = new ArrayList<IBarDataSet>();\n+        barDataSets.add(barDataSet);\n+\n+        BarData barData = new BarData(results, \"playerName\", barDataSets);\n+        styleData(barData);\n+\n+        barChart.setData(barData);\n+        barChart.animateY(1400, Easing.EasingOption.EaseInOutQuart);\n+    }\n+}\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/Score.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/Score.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/Score.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/Score.java\n@@ -0,0 +1,51 @@\n+package com.xxmassdeveloper.mpchartexample.realm;\n+\n+\n+import io.realm.RealmObject;\n+\n+/**\n+ * our data object\n+ */\n+public class Score extends RealmObject {\n+\n+    private float totalScore;\n+\n+    private int scoreNr;\n+\n+    private String playerName;\n+\n+    public Score() {\n+    }\n+\n+    public Score(float totalScore, int scoreNr, String playerName) {\n+        this.scoreNr = scoreNr;\n+        this.playerName = playerName;\n+        this.totalScore = totalScore;\n+    }\n+\n+    // all getters and setters...\n+\n+    public float getTotalScore() {\n+        return totalScore;\n+    }\n+\n+    public void setTotalScore(float totalScore) {\n+        this.totalScore = totalScore;\n+    }\n+\n+    public int getScoreNr() {\n+        return scoreNr;\n+    }\n+\n+    public void setScoreNr(int scoreNr) {\n+        this.scoreNr = scoreNr;\n+    }\n+\n+    public String getPlayerName() {\n+        return playerName;\n+    }\n+\n+    public void setPlayerName(String playerName) {\n+        this.playerName = playerName;\n+    }\n+}\n\\ No newline at end of file",
    "output": "Add realm wiki example code"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -38,11 +38,6 @@ public abstract class ChartData<T extends DataSet<? extends Entry>> {\n \n     protected float mRightAxisMin = 0.0f;\n \n-    /**\n-     * the total sum of all y-values\n-     */\n-    private float mYValueSum = 0f;\n-\n     /**\n      * total number of y-values across all DataSet objects\n      */\n@@ -152,7 +147,6 @@ protected void init() {\n         checkLegal();\n \n         calcMinMax(mLastStart, mLastEnd);\n-        calcYValueSum();\n         calcYValueCount();\n \n         calcXValAverageLength();\n@@ -283,21 +277,6 @@ public void calcMinMax(int start, int end) {\n         }\n     }\n \n-    /**\n-     * calculates the sum of all y-values in all datasets\n-     */\n-    protected void calcYValueSum() {\n-\n-        mYValueSum = 0;\n-\n-        if (mDataSets == null)\n-            return;\n-\n-        for (int i = 0; i < mDataSets.size(); i++) {\n-            mYValueSum += mDataSets.get(i).getYValueSum();\n-        }\n-    }\n-\n     /**\n      * Calculates the total number of y-values across all DataSets the ChartData\n      * represents.\n@@ -333,15 +312,6 @@ public int getDataSetCount() {\n         return mDataSets.size();\n     }\n \n-    /**\n-     * Returns the average value across all entries in this Data object\n-     * (all entries from the DataSets this data object holds)\n-     * @return\n-     */\n-    public float getAverage() {\n-        return (float ) getYValueSum() / (float) getYValCount();\n-    }\n-\n     /**\n      * Returns the smallest y-value the data object contains.\n      *\n@@ -396,16 +366,6 @@ public float getXValAverageLength() {\n         return mXValAverageLength;\n     }\n \n-    /**\n-     * Returns the total y-value sum across all DataSet objects the this object\n-     * represents.\n-     *\n-     * @return\n-     */\n-    public float getYValueSum() {\n-        return mYValueSum;\n-    }\n-\n     /**\n      * Returns the total number of y-values across all DataSet objects the this\n      * object represents.\n@@ -565,7 +525,6 @@ public void addDataSet(T d) {\n             return;\n \n         mYValCount += d.getEntryCount();\n-        mYValueSum += d.getYValueSum();\n \n         if (mDataSets.size() <= 0) {\n \n@@ -642,7 +601,6 @@ public boolean removeDataSet(T d) {\n         if (removed) {\n \n             mYValCount -= d.getEntryCount();\n-            mYValueSum -= d.getYValueSum();\n \n             calcMinMax(mLastStart, mLastEnd);\n         }\n@@ -714,7 +672,6 @@ public void addEntry(Entry e, int dataSetIndex) {\n             }\n \n             mYValCount += 1;\n-            mYValueSum += val;\n \n             handleEmptyAxis(getFirstLeft(), getFirstRight());\n \n@@ -745,7 +702,6 @@ public boolean removeEntry(Entry e, int dataSetIndex) {\n             float val = e.getVal();\n \n             mYValCount -= 1;\n-            mYValueSum -= val;\n \n             calcMinMax(mLastStart, mLastEnd);\n         }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -44,11 +44,6 @@ public abstract class DataSet<T extends Entry> {\n      */\n     protected float mYMin = 0.0f;\n \n-    /**\n-     * the total sum of all y-values\n-     */\n-    private float mYValueSum = 0f;\n-\n     /**\n      * the last start value used for calcMinMax\n      */\n@@ -126,15 +121,13 @@ public DataSet(List<T> yVals, String label) {\n         mColors.add(Color.rgb(140, 234, 255));\n \n         calcMinMax(mLastStart, mLastEnd);\n-        calcYValueSum();\n     }\n \n     /**\n      * Use this method to tell the data set that the underlying data has changed\n      */\n     public void notifyDataSetChanged() {\n         calcMinMax(mLastStart, mLastEnd);\n-        calcYValueSum();\n     }\n \n     /**\n@@ -179,29 +172,6 @@ protected void calcMinMax(int start, int end) {\n         }\n     }\n \n-    /**\n-     * calculates the sum of all y-values\n-     */\n-    private void calcYValueSum() {\n-\n-        mYValueSum = 0;\n-\n-        for (int i = 0; i < mYVals.size(); i++) {\n-            Entry e = mYVals.get(i);\n-            if (e != null)\n-                mYValueSum += e.getVal();\n-        }\n-    }\n-\n-    /**\n-     * Returns the average value across all entries in this DataSet.\n-     *\n-     * @return\n-     */\n-    public float getAverage() {\n-        return (float) getYValueSum() / (float) getValueCount();\n-    }\n-\n     /**\n      * returns the number of y-values this DataSet represents\n      *\n@@ -365,15 +335,6 @@ public List<T> getYVals() {\n         return mYVals;\n     }\n \n-    /**\n-     * gets the sum of all y-values\n-     *\n-     * @return\n-     */\n-    public float getYValueSum() {\n-        return mYValueSum;\n-    }\n-\n     /**\n      * returns the minimum y-value this DataSet holds\n      *\n@@ -556,8 +517,6 @@ public void addEntry(Entry e) {\n                 mYMin = val;\n         }\n \n-        mYValueSum += val;\n-\n         // add the entry\n         mYVals.add((T) e);\n     }\n@@ -592,8 +551,6 @@ public void addEntryOrdered(Entry e) {\n                 mYMin = val;\n         }\n \n-        mYValueSum += val;\n-\n         if (mYVals.size() > 0 && mYVals.get(mYVals.size() - 1).getXIndex() > e.getXIndex()) {\n             int closestIndex = getEntryIndex(e.getXIndex(), Rounding.UP);\n             mYVals.add(closestIndex, (T) e);\n@@ -622,7 +579,6 @@ public boolean removeEntry(T e) {\n         if (removed) {\n \n             float val = e.getVal();\n-            mYValueSum -= val;\n \n             calcMinMax(mLastStart, mLastEnd);\n         }\n@@ -657,7 +613,6 @@ public boolean removeFirst() {\n         if (removed) {\n \n             float val = entry.getVal();\n-            mYValueSum -= val;\n \n             calcMinMax(mLastStart, mLastEnd);\n         }\n@@ -683,7 +638,6 @@ public boolean removeLast() {\n         if (removed) {\n \n             float val = entry.getVal();\n-            mYValueSum -= val;\n \n             calcMinMax(mLastStart, mLastEnd);\n         }",
    "output": "Fix merge issues"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n@@ -92,7 +92,7 @@ protected void calcMinMax() {\n \t@Override\n \tpublic Highlight getHighlightByTouchPoint(float x, float y) {\n \n-\t\tif (mDataNotSet || mData == null) {\n+\t\tif (mData == null) {\n \t\t\tLog.e(LOG_TAG, \"Can't select by touch. No data set.\");\n \t\t\treturn null;\n \t\t} else\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -188,7 +188,7 @@ protected void init() {\n     protected void onDraw(Canvas canvas) {\n         super.onDraw(canvas);\n \n-        if (mDataNotSet)\n+        if (mData == null)\n             return;\n \n         long starttime = System.currentTimeMillis();\n@@ -315,7 +315,7 @@ protected void prepareOffsetMatrix() {\n     @Override\n     public void notifyDataSetChanged() {\n \n-        if (mDataNotSet) {\n+        if (mData == null) {\n             if (mLogEnabled)\n                 Log.i(LOG_TAG, \"Preparing... DATA NOT SET.\");\n             return;\n@@ -653,7 +653,7 @@ public Transformer getTransformer(AxisDependency which) {\n     public boolean onTouchEvent(MotionEvent event) {\n         super.onTouchEvent(event);\n \n-        if (mChartTouchListener == null || mDataNotSet)\n+        if (mChartTouchListener == null || mData == null)\n             return false;\n \n         // check if touch gestures are enabled\n@@ -1154,7 +1154,7 @@ public void setMinOffset(float minOffset) {\n      */\n     public Highlight getHighlightByTouchPoint(float x, float y) {\n \n-        if (mDataNotSet || mData == null) {\n+        if (mData == null) {\n             Log.e(LOG_TAG, \"Can't select by touch. No data set.\");\n             return null;\n         } else\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -116,11 +116,6 @@ public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entr\n      */\n     protected String mDescription = \"Description\";\n \n-    /**\n-     * flag that indicates if the chart has been fed with data yet\n-     */\n-    protected boolean mDataNotSet = true;\n-\n     /**\n      * the number of x-values the chart displays\n      */\n@@ -309,7 +304,6 @@ public void setData(T data) {\n         }\n \n         // LET THE CHART KNOW THERE IS DATA\n-        mDataNotSet = false;\n         mOffsetsCalculated = false;\n         mData = data;\n \n@@ -334,7 +328,6 @@ public void setData(T data) {\n      */\n     public void clear() {\n         mData = null;\n-        mDataNotSet = true;\n         mIndicesToHighlight = null;\n         invalidate();\n     }\n@@ -420,11 +413,7 @@ protected void calculateFormatter(float min, float max) {\n     protected void onDraw(Canvas canvas) {\n         // super.onDraw(canvas);\n \n-        if (mDataNotSet || mData == null || mData.getYValCount() <= 0) { // check\n-            // if\n-            // there\n-            // is\n-            // data\n+        if (mData == null) {\n \n             // if no data, inform the user\n             canvas.drawText(mNoDataText, getWidth() / 2, getHeight() / 2, mInfoPaint);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n@@ -220,7 +220,7 @@ public PointF getPosition(Entry e, AxisDependency axis) {\n \t@Override\n \tpublic Highlight getHighlightByTouchPoint(float x, float y) {\n \n-\t\tif (mDataNotSet || mData == null) {\n+\t\tif (mData == null) {\n \t\t\tLog.e(LOG_TAG, \"Can't select by touch. No data set.\");\n \t\t\treturn null;\n \t\t} else\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -113,7 +113,7 @@ protected void init() {\n     protected void onDraw(Canvas canvas) {\n         super.onDraw(canvas);\n \n-        if (mDataNotSet)\n+        if (mData == null)\n             return;\n \n         mRenderer.drawData(canvas);\n@@ -137,7 +137,7 @@ public void calculateOffsets() {\n         super.calculateOffsets();\n \n         // prevent nullpointer when no data set\n-        if (mDataNotSet)\n+        if (mData == null)\n             return;\n \n         float diameter = getDiameter();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -87,7 +87,7 @@ public void computeScroll() {\n \n     @Override\n     public void notifyDataSetChanged() {\n-        if (mDataNotSet)\n+        if (mData == null)\n             return;\n \n         calcMinMax();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -161,7 +161,7 @@ protected float[] getMarkerPosition(Entry e, Highlight highlight) {\n \n     @Override\n     public void notifyDataSetChanged() {\n-        if (mDataNotSet)\n+        if (mData == null)\n             return;\n \n         calcMinMax();\n@@ -183,7 +183,7 @@ public void notifyDataSetChanged() {\n     protected void onDraw(Canvas canvas) {\n         super.onDraw(canvas);\n \n-        if (mDataNotSet)\n+        if (mData == null)\n             return;\n \n         mXAxisRenderer.renderAxisLabels(canvas);",
    "output": "Merge pull request #1290 from danielgindi/datanotset\n\nRemoved ambiguity of mDataNotSet"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -294,7 +294,7 @@ protected void calcYValueSum() {\n             return;\n \n         for (int i = 0; i < mDataSets.size(); i++) {\n-            mYValueSum += Math.abs(mDataSets.get(i).getYValueSum());\n+            mYValueSum += mDataSets.get(i).getYValueSum();\n         }\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -189,7 +189,7 @@ private void calcYValueSum() {\n         for (int i = 0; i < mYVals.size(); i++) {\n             Entry e = mYVals.get(i);\n             if (e != null)\n-                mYValueSum += Math.abs(e.getVal());\n+                mYValueSum += e.getVal();\n         }\n     }\n ",
    "output": "Merge pull request #1292 from danielgindi/yvaluecount-fix\n\ncalcYValueSum should not be ABS"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -311,8 +311,10 @@ protected void drawCenterText(Canvas c) {\n \n             float radiusPercent = mChart.getCenterTextRadiusPercent();\n             if (radiusPercent > 0.0) {\n-                boundingRect.inset((boundingRect.width() - boundingRect.width() * radiusPercent) / 2.f,\n-                        (boundingRect.height() - boundingRect.height() * radiusPercent) / 2.f);\n+                boundingRect.inset(\n+                        (boundingRect.width() - boundingRect.width() * (radiusPercent / 100.f)) / 2.f,\n+                        (boundingRect.height() - boundingRect.height() * (radiusPercent / 100.f)) / 2.f\n+                );\n             }\n \n             if (!centerText.equals(mCenterTextLastValue) || !boundingRect.equals(mCenterTextLastBounds)) {",
    "output": "Merge pull request #1293 from danielgindi/pie-center-text-fix\n\nFixed bounding rect for pie center text"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -311,8 +311,10 @@ protected void drawCenterText(Canvas c) {\n \n             float radiusPercent = mChart.getCenterTextRadiusPercent();\n             if (radiusPercent > 0.0) {\n-                boundingRect.inset((boundingRect.width() - boundingRect.width() * radiusPercent) / 2.f,\n-                        (boundingRect.height() - boundingRect.height() * radiusPercent) / 2.f);\n+                boundingRect.inset(\n+                        (boundingRect.width() - boundingRect.width() * (radiusPercent / 100.f)) / 2.f,\n+                        (boundingRect.height() - boundingRect.height() * (radiusPercent / 100.f)) / 2.f\n+                );\n             }\n \n             if (!centerText.equals(mCenterTextLastValue) || !boundingRect.equals(mCenterTextLastBounds)) {",
    "output": "Fixed bounding rect for pie center text\n\nIt was \"insetting\" by a factor of 100,\nbecause of wrong perception of the percentage property."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -294,7 +294,7 @@ protected void calcYValueSum() {\n             return;\n \n         for (int i = 0; i < mDataSets.size(); i++) {\n-            mYValueSum += Math.abs(mDataSets.get(i).getYValueSum());\n+            mYValueSum += mDataSets.get(i).getYValueSum();\n         }\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -189,7 +189,7 @@ private void calcYValueSum() {\n         for (int i = 0; i < mYVals.size(); i++) {\n             Entry e = mYVals.get(i);\n             if (e != null)\n-                mYValueSum += Math.abs(e.getVal());\n+                mYValueSum += e.getVal();\n         }\n     }\n ",
    "output": "calcYValueSum should not be ABS"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n@@ -49,6 +49,15 @@ public void prepareMatrixValuePx(float xChartMin, float deltaX, float deltaY, fl\n         float scaleX = (float) ((mViewPortHandler.contentWidth()) / deltaX);\n         float scaleY = (float) ((mViewPortHandler.contentHeight()) / deltaY);\n \n+        if (Float.isInfinite(scaleX))\n+        {\n+            scaleX = 0;\n+        }\n+        if (Float.isInfinite(scaleY))\n+        {\n+            scaleY = 0;\n+        }\n+\n         // setup all matrices\n         mMatrixValueToPx.reset();\n         mMatrixValueToPx.postTranslate(-xChartMin, -yChartMin);",
    "output": "Prevent the matrix from reaching invalid values\n\nhttps://github.com/danielgindi/ios-charts/commit/9942aee9c424ba027e1e62079232d3dc5dcdf772"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n@@ -92,7 +92,7 @@ protected void calcMinMax() {\n \t@Override\n \tpublic Highlight getHighlightByTouchPoint(float x, float y) {\n \n-\t\tif (mDataNotSet || mData == null) {\n+\t\tif (mData == null) {\n \t\t\tLog.e(LOG_TAG, \"Can't select by touch. No data set.\");\n \t\t\treturn null;\n \t\t} else\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -188,7 +188,7 @@ protected void init() {\n     protected void onDraw(Canvas canvas) {\n         super.onDraw(canvas);\n \n-        if (mDataNotSet)\n+        if (mData == null)\n             return;\n \n         long starttime = System.currentTimeMillis();\n@@ -315,7 +315,7 @@ protected void prepareOffsetMatrix() {\n     @Override\n     public void notifyDataSetChanged() {\n \n-        if (mDataNotSet) {\n+        if (mData == null) {\n             if (mLogEnabled)\n                 Log.i(LOG_TAG, \"Preparing... DATA NOT SET.\");\n             return;\n@@ -653,7 +653,7 @@ public Transformer getTransformer(AxisDependency which) {\n     public boolean onTouchEvent(MotionEvent event) {\n         super.onTouchEvent(event);\n \n-        if (mChartTouchListener == null || mDataNotSet)\n+        if (mChartTouchListener == null || mData == null)\n             return false;\n \n         // check if touch gestures are enabled\n@@ -1154,7 +1154,7 @@ public void setMinOffset(float minOffset) {\n      */\n     public Highlight getHighlightByTouchPoint(float x, float y) {\n \n-        if (mDataNotSet || mData == null) {\n+        if (mData == null) {\n             Log.e(LOG_TAG, \"Can't select by touch. No data set.\");\n             return null;\n         } else\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -116,11 +116,6 @@ public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entr\n      */\n     protected String mDescription = \"Description\";\n \n-    /**\n-     * flag that indicates if the chart has been fed with data yet\n-     */\n-    protected boolean mDataNotSet = true;\n-\n     /**\n      * the number of x-values the chart displays\n      */\n@@ -309,7 +304,6 @@ public void setData(T data) {\n         }\n \n         // LET THE CHART KNOW THERE IS DATA\n-        mDataNotSet = false;\n         mOffsetsCalculated = false;\n         mData = data;\n \n@@ -334,7 +328,6 @@ public void setData(T data) {\n      */\n     public void clear() {\n         mData = null;\n-        mDataNotSet = true;\n         mIndicesToHighlight = null;\n         invalidate();\n     }\n@@ -420,11 +413,7 @@ protected void calculateFormatter(float min, float max) {\n     protected void onDraw(Canvas canvas) {\n         // super.onDraw(canvas);\n \n-        if (mDataNotSet || mData == null || mData.getYValCount() <= 0) { // check\n-            // if\n-            // there\n-            // is\n-            // data\n+        if (mData == null) {\n \n             // if no data, inform the user\n             canvas.drawText(mNoDataText, getWidth() / 2, getHeight() / 2, mInfoPaint);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n@@ -220,7 +220,7 @@ public PointF getPosition(Entry e, AxisDependency axis) {\n \t@Override\n \tpublic Highlight getHighlightByTouchPoint(float x, float y) {\n \n-\t\tif (mDataNotSet || mData == null) {\n+\t\tif (mData == null) {\n \t\t\tLog.e(LOG_TAG, \"Can't select by touch. No data set.\");\n \t\t\treturn null;\n \t\t} else\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -113,7 +113,7 @@ protected void init() {\n     protected void onDraw(Canvas canvas) {\n         super.onDraw(canvas);\n \n-        if (mDataNotSet)\n+        if (mData == null)\n             return;\n \n         mRenderer.drawData(canvas);\n@@ -137,7 +137,7 @@ public void calculateOffsets() {\n         super.calculateOffsets();\n \n         // prevent nullpointer when no data set\n-        if (mDataNotSet)\n+        if (mData == null)\n             return;\n \n         float diameter = getDiameter();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -87,7 +87,7 @@ public void computeScroll() {\n \n     @Override\n     public void notifyDataSetChanged() {\n-        if (mDataNotSet)\n+        if (mData == null)\n             return;\n \n         calcMinMax();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -161,7 +161,7 @@ protected float[] getMarkerPosition(Entry e, Highlight highlight) {\n \n     @Override\n     public void notifyDataSetChanged() {\n-        if (mDataNotSet)\n+        if (mData == null)\n             return;\n \n         calcMinMax();\n@@ -183,7 +183,7 @@ public void notifyDataSetChanged() {\n     protected void onDraw(Canvas canvas) {\n         super.onDraw(canvas);\n \n-        if (mDataNotSet)\n+        if (mData == null)\n             return;\n \n         mXAxisRenderer.renderAxisLabels(canvas);",
    "output": "Removed ambiguity of mDataNotSet\n\nWe can just check for mData being null,\nknowing that this is the situation defined as \"no data\""
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -410,7 +410,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             else\n                 angle = rotationAngle + absoluteAngles[xIndex - 1];\n \n-            angle *= mAnimator.getPhaseY();\n+            angle *= mAnimator.getPhaseX();\n \n             float sliceDegrees = drawAngles[xIndex];\n ",
    "output": "Merge pull request #1289 from danielgindi/pie-highlight-fix\n\nFixed pie-chart highlight position while animating on X"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -410,7 +410,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             else\n                 angle = rotationAngle + absoluteAngles[xIndex - 1];\n \n-            angle *= mAnimator.getPhaseY();\n+            angle *= mAnimator.getPhaseX();\n \n             float sliceDegrees = drawAngles[xIndex];\n ",
    "output": "Fixed pie-chart highlight position while animating on X"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityRadar.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityRadar.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityRadar.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityRadar.java\n@@ -1,5 +1,6 @@\n package com.xxmassdeveloper.mpchartexample.realm;\n \n+import android.graphics.Color;\n import android.os.Bundle;\n import android.view.WindowManager;\n \n@@ -31,6 +32,11 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         mChart = (RadarChart) findViewById(R.id.chart1);\n         setup(mChart);\n+\n+        mChart.getYAxis().setEnabled(false);\n+        mChart.setWebAlpha(180);\n+        mChart.setWebColorInner(Color.DKGRAY);\n+        mChart.setWebColor(Color.GRAY);\n     }\n \n     @Override\n@@ -50,15 +56,18 @@ private void setData() {\n \n         //RealmBarDataSet<RealmDemoData> set = new RealmBarDataSet<RealmDemoData>(result, \"stackValues\", \"xIndex\"); // normal entries\n         RealmRadarDataSet<RealmDemoData> set = new RealmRadarDataSet<RealmDemoData>(result, \"value\", \"xIndex\"); // stacked entries\n-        set.setValueTextSize(9f);\n-        set.setColors(ColorTemplate.VORDIPLOM_COLORS);\n         set.setLabel(\"Realm RadarDataSet\");\n+        set.setDrawFilled(true);\n+        set.setColor(ColorTemplate.rgb(\"#009688\"));\n+        set.setFillColor(ColorTemplate.rgb(\"#009688\"));\n+        set.setFillAlpha(130);\n+        set.setLineWidth(2f);\n \n         ArrayList<IRadarDataSet> dataSets = new ArrayList<IRadarDataSet>();\n         dataSets.add(set); // add the dataset\n \n         // create a data object with the dataset list\n-        RadarData data = new RadarData(result, \"xValue\", dataSets);\n+        RadarData data = new RadarData(new String[] {\"2013\", \"2014\", \"2015\", \"2016\", \"2017\", \"2018\", \"2019\"}, dataSets);\n         styleData(data);\n \n         // set data",
    "output": "More example project styling"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityBubble.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityBubble.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityBubble.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityBubble.java\n@@ -34,14 +34,16 @@ protected void onCreate(Bundle savedInstanceState) {\n         setup(mChart);\n \n         mChart.getXAxis().setDrawGridLines(false);\n+        mChart.getAxisLeft().setDrawGridLines(false);\n+        mChart.setPinchZoom(true);\n     }\n \n     @Override\n     protected void onResume() {\n         super.onResume(); // setup realm\n \n         // write some demo-data into the realm.io database\n-        writeToDBBubble(12);\n+        writeToDBBubble(10);\n \n         // add data to the chart\n         setData();\n@@ -53,7 +55,7 @@ private void setData() {\n \n         RealmBubbleDataSet<RealmDemoData> set = new RealmBubbleDataSet<RealmDemoData>(result, \"value\", \"xIndex\", \"bubbleSize\");\n         set.setLabel(\"Realm BubbleDataSet\");\n-        set.setColors(ColorTemplate.COLORFUL_COLORS);\n+        set.setColors(ColorTemplate.COLORFUL_COLORS, 110);\n \n         ArrayList<IBubbleDataSet> dataSets = new ArrayList<IBubbleDataSet>();\n         dataSets.add(set); // add the dataset\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java\n@@ -44,7 +44,7 @@ public void calcMinMax(int start, int end) {\n \n         int endValue;\n \n-        if (end == 0)\n+        if (end == 0 || end >= mYVals.size())\n             endValue = mYVals.size() - 1;\n         else\n             endValue = end;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java\n@@ -53,7 +53,7 @@ public void calcMinMax(int start, int end) {\n \n         int endValue;\n \n-        if (end == 0)\n+        if (end == 0 || end >= mValues.size())\n             endValue = mValues.size() - 1;\n         else\n             endValue = end;",
    "output": "Fix bug in candledataset"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java\n@@ -95,7 +95,7 @@ public BaseDataSet(String label) {\n      * Use this method to tell the data set that the underlying data has changed.\n      */\n     public void notifyDataSetChanged() {\n-        calcMinMax( 0, getEntryCount()-1);\n+        calcMinMax(0, getEntryCount() - 1);\n     }\n \n \n@@ -191,6 +191,28 @@ public void setColor(int color) {\n         mColors.add(color);\n     }\n \n+    /**\n+     * Sets a color with a specific alpha value.\n+     *\n+     * @param color\n+     * @param alpha from 0-255\n+     */\n+    public void setColor(int color, int alpha) {\n+        setColor(Color.argb(alpha, Color.red(color), Color.green(color), Color.blue(color)));\n+    }\n+\n+    /**\n+     * Sets colors with a specific alpha value.\n+     *\n+     * @param colors\n+     * @param alpha\n+     */\n+    public void setColors(int[] colors, int alpha) {\n+        for (int color : colors) {\n+            addColor(Color.argb(alpha, Color.red(color), Color.green(color), Color.blue(color)));\n+        }\n+    }\n+\n     /**\n      * Resets all colors of this DataSet and recreates the colors array.\n      */\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java\n@@ -33,16 +33,6 @@ public float getHighlightCircleWidth() {\n         return mHighlightCircleWidth;\n     }\n \n-    /**\n-     * Sets a color with a specific alpha value.\n-     *\n-     * @param color\n-     * @param alpha from 0-255\n-     */\n-    public void setColor(int color, int alpha) {\n-        super.setColor(Color.argb(alpha, Color.red(color), Color.green(color), Color.blue(color)));\n-    }\n-\n     @Override\n     public void calcMinMax(int start, int end) {\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java\n@@ -1,5 +1,7 @@\n package com.github.mikephil.charting.data.realm.implementation;\n \n+import android.graphics.Color;\n+\n import com.github.mikephil.charting.data.BubbleEntry;\n import com.github.mikephil.charting.data.realm.base.RealmBarLineScatterCandleBubbleDataSet;\n import com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet;",
    "output": "Add feature to allow setting colors with alpha value."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java\n@@ -178,4 +178,27 @@ protected void writeToDBBubble(int objectCount) {\n \n         mRealm.commitTransaction();\n     }\n+\n+    protected void writeToDBPie() {\n+\n+        mRealm.beginTransaction();\n+\n+        mRealm.clear(RealmDemoData.class);\n+\n+        float value1 = 15f + (float) (Math.random() * 8f);\n+        float value2 = 15f + (float) (Math.random() * 8f);\n+        float value3 = 15f + (float) (Math.random() * 8f);\n+        float value4 = 15f + (float) (Math.random() * 8f);\n+        float value5 = 100f - value1 - value2 - value3 - value4;\n+\n+        float[] values = new float[] { value1, value2, value3, value4, value5 };\n+        String[] xValues = new String[]{ \"iOS\", \"Android\", \"WP 10\", \"BlackBerry\", \"Other\"};\n+\n+        for (int i = 0; i < values.length; i++) {\n+            RealmDemoData d = new RealmDemoData(values[i], i, xValues[i]);\n+            mRealm.copyToRealm(d);\n+        }\n+\n+        mRealm.commitTransaction();\n+    }\n }\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityBubble.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityBubble.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityBubble.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityBubble.java\n@@ -8,6 +8,7 @@\n import com.github.mikephil.charting.data.BubbleData;\n import com.github.mikephil.charting.data.realm.implementation.RealmBubbleDataSet;\n import com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet;\n+import com.github.mikephil.charting.utils.ColorTemplate;\n import com.xxmassdeveloper.mpchartexample.R;\n import com.xxmassdeveloper.mpchartexample.custom.RealmDemoData;\n \n@@ -31,14 +32,16 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         mChart = (BubbleChart) findViewById(R.id.chart1);\n         setup(mChart);\n+\n+        mChart.getXAxis().setDrawGridLines(false);\n     }\n \n     @Override\n     protected void onResume() {\n         super.onResume(); // setup realm\n \n         // write some demo-data into the realm.io database\n-        writeToDBBubble(15);\n+        writeToDBBubble(12);\n \n         // add data to the chart\n         setData();\n@@ -50,6 +53,7 @@ private void setData() {\n \n         RealmBubbleDataSet<RealmDemoData> set = new RealmBubbleDataSet<RealmDemoData>(result, \"value\", \"xIndex\", \"bubbleSize\");\n         set.setLabel(\"Realm BubbleDataSet\");\n+        set.setColors(ColorTemplate.COLORFUL_COLORS);\n \n         ArrayList<IBubbleDataSet> dataSets = new ArrayList<IBubbleDataSet>();\n         dataSets.add(set); // add the dataset\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityCandle.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityCandle.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityCandle.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityCandle.java\n@@ -43,7 +43,7 @@ protected void onResume() {\n         super.onResume(); // setup realm\n \n         // write some demo-data into the realm.io database\n-        writeToDBCandle(200);\n+        writeToDBCandle(50);\n \n         // add data to the chart\n         setData();\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityPie.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityPie.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityPie.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityPie.java\n@@ -46,7 +46,7 @@ protected void onResume() {\n         super.onResume(); // setup realm\n \n         // write some demo-data into the realm.io database\n-        writeToDB(5);\n+        writeToDBPie();\n \n         // add data to the chart\n         setData();\n@@ -58,9 +58,8 @@ private void setData() {\n \n         //RealmBarDataSet<RealmDemoData> set = new RealmBarDataSet<RealmDemoData>(result, \"stackValues\", \"xIndex\"); // normal entries\n         RealmPieDataSet<RealmDemoData> set = new RealmPieDataSet<RealmDemoData>(result, \"value\", \"xIndex\"); // stacked entries\n-        set.setValueTextSize(9f);\n         set.setColors(ColorTemplate.VORDIPLOM_COLORS);\n-        set.setLabel(\"Realm PieDataSet\");\n+        set.setLabel(\"Example market share\");\n         set.setSliceSpace(2);\n \n         ArrayList<IPieDataSet> dataSets = new ArrayList<IPieDataSet>();\n@@ -69,6 +68,8 @@ private void setData() {\n         // create a data object with the dataset list\n         PieData data = new PieData(result, \"xValue\", dataSets);\n         styleData(data);\n+        data.setValueTextColor(Color.WHITE);\n+        data.setValueTextSize(12f);\n \n         // set data\n         mChart.setData(data);",
    "output": "example styling"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -9,6 +9,7 @@\n import com.github.mikephil.charting.components.Legend;\n import com.github.mikephil.charting.data.ChartData;\n import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;\n+import com.github.mikephil.charting.interfaces.datasets.ICandleDataSet;\n import com.github.mikephil.charting.interfaces.datasets.IDataSet;\n import com.github.mikephil.charting.interfaces.datasets.IPieDataSet;\n import com.github.mikephil.charting.utils.ColorTemplate;\n@@ -124,6 +125,13 @@ public void computeLegend(ChartData<?> data) {\n                         labels.add(pds.getLabel());\n                     }\n \n+                } else if(dataSet instanceof ICandleDataSet && ((ICandleDataSet) dataSet).getDecreasingColor() != ColorTemplate.COLOR_NONE) {\n+\n+                    colors.add(((ICandleDataSet) dataSet).getDecreasingColor());\n+                    colors.add(((ICandleDataSet) dataSet).getIncreasingColor());\n+                    labels.add(null);\n+                    labels.add(dataSet.getLabel());\n+\n                 } else { // all others\n \n                     for (int j = 0; j < clrs.size() && j < entryCount; j++) {",
    "output": "Fix issue in legend renderer concerning CandleStickChart legend"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityBubble.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityBubble.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityBubble.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityBubble.java\n@@ -5,13 +5,9 @@\n \n import com.github.mikephil.charting.animation.Easing;\n import com.github.mikephil.charting.charts.BubbleChart;\n-import com.github.mikephil.charting.charts.LineChart;\n import com.github.mikephil.charting.data.BubbleData;\n-import com.github.mikephil.charting.data.LineData;\n import com.github.mikephil.charting.data.realm.implementation.RealmBubbleDataSet;\n-import com.github.mikephil.charting.data.realm.implementation.RealmLineDataSet;\n import com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet;\n-import com.github.mikephil.charting.interfaces.datasets.ILineDataSet;\n import com.xxmassdeveloper.mpchartexample.R;\n import com.xxmassdeveloper.mpchartexample.custom.RealmDemoData;\n \n@@ -53,14 +49,14 @@ private void setData() {\n         RealmResults<RealmDemoData> result = mRealm.allObjects(RealmDemoData.class);\n \n         RealmBubbleDataSet<RealmDemoData> set = new RealmBubbleDataSet<RealmDemoData>(result, \"value\", \"xIndex\", \"bubbleSize\");\n-        set.setValueTextSize(9f);\n         set.setLabel(\"Realm BubbleDataSet\");\n \n         ArrayList<IBubbleDataSet> dataSets = new ArrayList<IBubbleDataSet>();\n         dataSets.add(set); // add the dataset\n \n         // create a data object with the dataset list\n         BubbleData data = new BubbleData(result, \"xValue\", dataSets);\n+        styleData(data);\n \n         // set data\n         mChart.setData(data);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityCandle.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityCandle.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityCandle.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityCandle.java\n@@ -1,17 +1,15 @@\n package com.xxmassdeveloper.mpchartexample.realm;\n \n+import android.graphics.Color;\n+import android.graphics.Paint;\n import android.os.Bundle;\n import android.view.WindowManager;\n \n import com.github.mikephil.charting.animation.Easing;\n import com.github.mikephil.charting.charts.CandleStickChart;\n-import com.github.mikephil.charting.charts.ScatterChart;\n import com.github.mikephil.charting.data.CandleData;\n-import com.github.mikephil.charting.data.ScatterData;\n import com.github.mikephil.charting.data.realm.implementation.RealmCandleDataSet;\n-import com.github.mikephil.charting.data.realm.implementation.RealmScatterDataSet;\n import com.github.mikephil.charting.interfaces.datasets.ICandleDataSet;\n-import com.github.mikephil.charting.interfaces.datasets.IScatterDataSet;\n import com.xxmassdeveloper.mpchartexample.R;\n import com.xxmassdeveloper.mpchartexample.custom.RealmDemoData;\n \n@@ -35,6 +33,9 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         mChart = (CandleStickChart) findViewById(R.id.chart1);\n         setup(mChart);\n+\n+        mChart.getAxisLeft().setDrawGridLines(false);\n+        mChart.getXAxis().setDrawGridLines(false);\n     }\n \n     @Override\n@@ -53,14 +54,20 @@ private void setData() {\n         RealmResults<RealmDemoData> result = mRealm.allObjects(RealmDemoData.class);\n \n         RealmCandleDataSet<RealmDemoData> set = new RealmCandleDataSet<RealmDemoData>(result, \"high\", \"low\", \"open\", \"close\", \"xIndex\");\n-        set.setValueTextSize(9f);\n         set.setLabel(\"Realm Realm CandleDataSet\");\n+        set.setShadowColor(Color.DKGRAY);\n+        set.setShadowWidth(0.7f);\n+        set.setDecreasingColor(Color.RED);\n+        set.setDecreasingPaintStyle(Paint.Style.STROKE);\n+        set.setIncreasingColor(Color.rgb(122, 242, 84));\n+        set.setIncreasingPaintStyle(Paint.Style.FILL);\n \n         ArrayList<ICandleDataSet> dataSets = new ArrayList<ICandleDataSet>();\n         dataSets.add(set); // add the dataset\n \n         // create a data object with the dataset list\n         CandleData data = new CandleData(result, \"xValue\", dataSets);\n+        styleData(data);\n \n         // set data\n         mChart.setData(data);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityPie.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityPie.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityPie.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityPie.java\n@@ -9,7 +9,6 @@\n import android.text.style.StyleSpan;\n import android.view.WindowManager;\n \n-import com.github.mikephil.charting.animation.Easing;\n import com.github.mikephil.charting.charts.PieChart;\n import com.github.mikephil.charting.data.PieData;\n import com.github.mikephil.charting.data.realm.implementation.RealmPieDataSet;\n@@ -69,6 +68,7 @@ private void setData() {\n \n         // create a data object with the dataset list\n         PieData data = new PieData(result, \"xValue\", dataSets);\n+        styleData(data);\n \n         // set data\n         mChart.setData(data);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityRadar.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityRadar.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityRadar.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityRadar.java\n@@ -59,6 +59,7 @@ private void setData() {\n \n         // create a data object with the dataset list\n         RadarData data = new RadarData(result, \"xValue\", dataSets);\n+        styleData(data);\n \n         // set data\n         mChart.setData(data);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityScatter.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityScatter.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityScatter.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityScatter.java\n@@ -8,6 +8,7 @@\n import com.github.mikephil.charting.data.ScatterData;\n import com.github.mikephil.charting.data.realm.implementation.RealmScatterDataSet;\n import com.github.mikephil.charting.interfaces.datasets.IScatterDataSet;\n+import com.github.mikephil.charting.utils.ColorTemplate;\n import com.xxmassdeveloper.mpchartexample.R;\n import com.xxmassdeveloper.mpchartexample.custom.RealmDemoData;\n \n@@ -31,14 +32,18 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         mChart = (ScatterChart) findViewById(R.id.chart1);\n         setup(mChart);\n+\n+        mChart.getAxisLeft().setDrawGridLines(false);\n+        mChart.getXAxis().setDrawGridLines(false);\n+        mChart.setPinchZoom(true);\n     }\n \n     @Override\n     protected void onResume() {\n         super.onResume(); // setup realm\n \n         // write some demo-data into the realm.io database\n-        writeToDB(200);\n+        writeToDB(45);\n \n         // add data to the chart\n         setData();\n@@ -49,14 +54,17 @@ private void setData() {\n         RealmResults<RealmDemoData> result = mRealm.allObjects(RealmDemoData.class);\n \n         RealmScatterDataSet<RealmDemoData> set = new RealmScatterDataSet<RealmDemoData>(result, \"value\", \"xIndex\");\n-        set.setValueTextSize(9f);\n         set.setLabel(\"Realm ScatterDataSet\");\n+        set.setScatterShapeSize(9f);\n+        set.setColor(ColorTemplate.rgb(\"#CDDC39\"));\n+        set.setScatterShape(ScatterChart.ScatterShape.CIRCLE);\n \n         ArrayList<IScatterDataSet> dataSets = new ArrayList<IScatterDataSet>();\n         dataSets.add(set); // add the dataset\n \n         // create a data object with the dataset list\n         ScatterData data = new ScatterData(result, \"xValue\", dataSets);\n+        styleData(data);\n \n         // set data\n         mChart.setData(data);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmMainActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmMainActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmMainActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmMainActivity.java\n@@ -1,7 +1,10 @@\n package com.xxmassdeveloper.mpchartexample.realm;\n \n import android.content.Intent;\n+import android.net.Uri;\n import android.os.Bundle;\n+import android.view.Menu;\n+import android.view.MenuItem;\n import android.view.View;\n import android.view.WindowManager;\n import android.widget.AdapterView;\n@@ -88,4 +91,20 @@ public void onItemClick(AdapterView<?> av, View v, int pos, long arg3) {\n                 break;\n         }\n     }\n+\n+    @Override\n+    public boolean onCreateOptionsMenu(Menu menu) {\n+        getMenuInflater().inflate(R.menu.realm, menu);\n+        return true;\n+    }\n+\n+    @Override\n+    public boolean onOptionsItemSelected(MenuItem item) {\n+\n+        Intent i = new Intent(Intent.ACTION_VIEW);\n+        i.setData(Uri.parse(\"https://realm.io\"));\n+        startActivity(i);\n+\n+        return super.onOptionsItemSelected(item);\n+    }\n }",
    "output": "Extend example project"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java\n@@ -9,6 +9,7 @@\n import com.github.mikephil.charting.components.YAxis;\n import com.github.mikephil.charting.data.ChartData;\n import com.github.mikephil.charting.formatter.DefaultYAxisValueFormatter;\n+import com.github.mikephil.charting.formatter.PercentFormatter;\n import com.xxmassdeveloper.mpchartexample.custom.MyValueFormatter;\n import com.xxmassdeveloper.mpchartexample.custom.MyYAxisValueFormatter;\n import com.xxmassdeveloper.mpchartexample.custom.RealmDemoData;\n@@ -56,7 +57,7 @@ protected void setup(Chart<?> chart) {\n             leftAxis.setTypeface(mTf);\n             leftAxis.setTextSize(8f);\n             leftAxis.setTextColor(Color.DKGRAY);\n-            leftAxis.setValueFormatter(new MyYAxisValueFormatter());\n+            leftAxis.setValueFormatter(new PercentFormatter());\n \n             XAxis xAxis = mChart.getXAxis();\n             xAxis.setTypeface(mTf);\n@@ -72,7 +73,7 @@ protected void styleData(ChartData data) {\n         data.setValueTypeface(mTf);\n         data.setValueTextSize(8f);\n         data.setValueTextColor(Color.DKGRAY);\n-        data.setValueFormatter(new MyValueFormatter());\n+        data.setValueFormatter(new PercentFormatter());\n     }\n \n     @Override\n@@ -121,10 +122,9 @@ protected void writeToDBStack(int objectCount) {\n \n         for (int i = 0; i < objectCount; i++) {\n \n-            float val1 = 20f + (float) (Math.random() * 50.0);\n-            float val2 = 20f + (float) (Math.random() * 50.0);\n-            float val3 = 20f + (float) (Math.random() * 50.0);\n-            float[] stack = new float[]{val1, val2, val3};\n+            float val1 = 34f + (float) (Math.random() * 12.0f);\n+            float val2 = 34f + (float) (Math.random() * 12.0f);\n+            float[] stack = new float[]{val1, val2, 100 - val1 - val2};\n \n             RealmDemoData d = new RealmDemoData(stack, i, \"\" + i);\n             mRealm.copyToRealm(d);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityHorizontalBar.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityHorizontalBar.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityHorizontalBar.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityHorizontalBar.java\n@@ -1,5 +1,6 @@\n package com.xxmassdeveloper.mpchartexample.realm;\n \n+import android.graphics.Color;\n import android.os.Bundle;\n import android.view.WindowManager;\n \n@@ -33,14 +34,17 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         mChart = (HorizontalBarChart) findViewById(R.id.chart1);\n         setup(mChart);\n+\n+        mChart.getAxisLeft().setStartAtZero(true);\n+        mChart.setDrawValueAboveBar(false);\n     }\n \n     @Override\n     protected void onResume() {\n         super.onResume(); // setup realm\n \n         // write some demo-data into the realm.io database\n-        writeToDBStack(100);\n+        writeToDBStack(50);\n \n         // add data to the chart\n         setData();\n@@ -52,31 +56,20 @@ private void setData() {\n \n         //RealmBarDataSet<RealmDemoData> set = new RealmBarDataSet<RealmDemoData>(result, \"stackValues\", \"xIndex\"); // normal entries\n         RealmBarDataSet<RealmDemoData> set = new RealmBarDataSet<RealmDemoData>(result, \"stackValues\", \"xIndex\", \"floatValue\"); // stacked entries\n-        set.setValueTextSize(9f);\n-        set.setColors(getColors(set.getStackSize()));\n-        set.setLabel(\"Realm BarDataSet\");\n-        set.setStackLabels(new String[]{\"Births\", \"Divorces\", \"Marriages\"});\n+        set.setColors(new int[]{ColorTemplate.rgb(\"#8BC34A\"), ColorTemplate.rgb(\"#FFC107\"), ColorTemplate.rgb(\"#9E9E9E\")});\n+        set.setLabel(\"Mobile OS distribution\");\n+        set.setStackLabels(new String[]{\"iOS\", \"Android\", \"Other\"});\n \n         ArrayList<IBarDataSet> dataSets = new ArrayList<IBarDataSet>();\n         dataSets.add(set); // add the dataset\n \n         // create a data object with the dataset list\n         BarData data = new BarData(result, \"xValue\", dataSets);\n+        styleData(data);\n+        data.setValueTextColor(Color.WHITE);\n \n         // set data\n         mChart.setData(data);\n         mChart.animateY(1400, Easing.EasingOption.EaseInOutQuart);\n     }\n-\n-    private int[] getColors(int stacksize) {\n-\n-        // have as many colors as stack-values per entry\n-        int[] colors = new int[stacksize];\n-\n-        for (int i = 0; i < stacksize; i++) {\n-            colors[i] = ColorTemplate.VORDIPLOM_COLORS[i];\n-        }\n-\n-        return colors;\n-    }\n }\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityLine.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityLine.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityLine.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityLine.java\n@@ -35,7 +35,7 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         mChart.getAxisLeft().setAxisMaxValue(150f);\n         mChart.getAxisLeft().setAxisMinValue(0f);\n-        mChart.getAxisRight().setDrawGridLines(false);\n+        mChart.getAxisLeft().setDrawGridLines(false);\n         mChart.getXAxis().setDrawGridLines(false);\n     }\n ",
    "output": "Improve example project"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java\n@@ -1,12 +1,16 @@\n package com.xxmassdeveloper.mpchartexample.realm;\n \n+import android.graphics.Color;\n import android.graphics.Typeface;\n \n import com.github.mikephil.charting.charts.BarLineChartBase;\n import com.github.mikephil.charting.charts.Chart;\n import com.github.mikephil.charting.components.XAxis;\n import com.github.mikephil.charting.components.YAxis;\n-import com.github.mikephil.charting.data.CandleEntry;\n+import com.github.mikephil.charting.data.ChartData;\n+import com.github.mikephil.charting.formatter.DefaultYAxisValueFormatter;\n+import com.xxmassdeveloper.mpchartexample.custom.MyValueFormatter;\n+import com.xxmassdeveloper.mpchartexample.custom.MyYAxisValueFormatter;\n import com.xxmassdeveloper.mpchartexample.custom.RealmDemoData;\n import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n \n@@ -20,8 +24,12 @@ public abstract class RealmBaseActivity extends DemoBase {\n \n     protected Realm mRealm;\n \n+    protected Typeface mTf;\n+\n     protected void setup(Chart<?> chart) {\n \n+        mTf = Typeface.createFromAsset(getAssets(), \"OpenSans-Regular.ttf\");\n+\n         // no description text\n         chart.setDescription(\"\");\n         chart.setNoDataTextDescription(\"You need to provide data for the chart.\");\n@@ -33,8 +41,6 @@ protected void setup(Chart<?> chart) {\n \n             BarLineChartBase mChart = (BarLineChartBase) chart;\n \n-            Typeface tf = Typeface.createFromAsset(getAssets(), \"OpenSans-Regular.ttf\");\n-\n             mChart.setDrawGridBackground(false);\n \n             // enable scaling and dragging\n@@ -47,15 +53,28 @@ protected void setup(Chart<?> chart) {\n             YAxis leftAxis = mChart.getAxisLeft();\n             leftAxis.removeAllLimitLines(); // reset all limit lines to avoid overlapping lines\n             leftAxis.setStartAtZero(false);\n-            leftAxis.setTypeface(tf);\n+            leftAxis.setTypeface(mTf);\n+            leftAxis.setTextSize(8f);\n+            leftAxis.setTextColor(Color.DKGRAY);\n+            leftAxis.setValueFormatter(new MyYAxisValueFormatter());\n \n-            mChart.getXAxis().setTypeface(tf);\n-            mChart.getXAxis().setPosition(XAxis.XAxisPosition.BOTTOM);\n+            XAxis xAxis = mChart.getXAxis();\n+            xAxis.setTypeface(mTf);\n+            xAxis.setPosition(XAxis.XAxisPosition.BOTTOM);\n+            xAxis.setTextSize(8f);\n+            xAxis.setTextColor(Color.DKGRAY);\n \n             mChart.getAxisRight().setEnabled(false);\n         }\n     }\n \n+    protected void styleData(ChartData data) {\n+        data.setValueTypeface(mTf);\n+        data.setValueTextSize(8f);\n+        data.setValueTextColor(Color.DKGRAY);\n+        data.setValueFormatter(new MyValueFormatter());\n+    }\n+\n     @Override\n     protected void onResume() {\n         super.onResume();\n@@ -85,7 +104,7 @@ protected void writeToDB(int objectCount) {\n \n         for (int i = 0; i < objectCount; i++) {\n \n-            float value = 30f + (float) (Math.random() * 100.0);\n+            float value = 40f + (float) (Math.random() * 60f);\n \n             RealmDemoData d = new RealmDemoData(value, i, \"\" + i);\n             mRealm.copyToRealm(d);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityBar.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityBar.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityBar.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityBar.java\n@@ -39,7 +39,7 @@ protected void onResume() {\n         super.onResume(); // setup realm\n \n         // write some demo-data into the realm.io database\n-        writeToDBStack(200);\n+        writeToDB(20);\n \n         // add data to the chart\n         setData();\n@@ -50,32 +50,19 @@ private void setData() {\n         RealmResults<RealmDemoData> result = mRealm.allObjects(RealmDemoData.class);\n \n         //RealmBarDataSet<RealmDemoData> set = new RealmBarDataSet<RealmDemoData>(result, \"stackValues\", \"xIndex\"); // normal entries\n-        RealmBarDataSet<RealmDemoData> set = new RealmBarDataSet<RealmDemoData>(result, \"stackValues\", \"xIndex\", \"floatValue\"); // stacked entries\n-        set.setValueTextSize(9f);\n-        set.setColors(getColors(set.getStackSize()));\n+        RealmBarDataSet<RealmDemoData> set = new RealmBarDataSet<RealmDemoData>(result, \"value\", \"xIndex\"); // stacked entries\n+        set.setColors(new int[] {ColorTemplate.rgb(\"#FF5722\"), ColorTemplate.rgb(\"#03A9F4\")});\n         set.setLabel(\"Realm BarDataSet\");\n-        set.setStackLabels(new String[]{\"Births\", \"Divorces\", \"Marriages\"});\n \n         ArrayList<IBarDataSet> dataSets = new ArrayList<IBarDataSet>();\n         dataSets.add(set); // add the dataset\n \n         // create a data object with the dataset list\n         BarData data = new BarData(result, \"xValue\", dataSets);\n+        styleData(data);\n \n         // set data\n         mChart.setData(data);\n         mChart.animateY(1400, Easing.EasingOption.EaseInOutQuart);\n     }\n-\n-    private int[] getColors(int stacksize) {\n-\n-        // have as many colors as stack-values per entry\n-        int[] colors = new int[stacksize];\n-\n-        for (int i = 0; i < stacksize; i++) {\n-            colors[i] = ColorTemplate.VORDIPLOM_COLORS[i];\n-        }\n-\n-        return colors;\n-    }\n }\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityLine.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityLine.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityLine.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityLine.java\n@@ -8,6 +8,7 @@\n import com.github.mikephil.charting.data.LineData;\n import com.github.mikephil.charting.data.realm.implementation.RealmLineDataSet;\n import com.github.mikephil.charting.interfaces.datasets.ILineDataSet;\n+import com.github.mikephil.charting.utils.ColorTemplate;\n import com.xxmassdeveloper.mpchartexample.R;\n import com.xxmassdeveloper.mpchartexample.custom.RealmDemoData;\n \n@@ -31,14 +32,19 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         mChart = (LineChart) findViewById(R.id.chart1);\n         setup(mChart);\n+\n+        mChart.getAxisLeft().setAxisMaxValue(150f);\n+        mChart.getAxisLeft().setAxisMinValue(0f);\n+        mChart.getAxisRight().setDrawGridLines(false);\n+        mChart.getXAxis().setDrawGridLines(false);\n     }\n \n     @Override\n     protected void onResume() {\n         super.onResume(); // setup realm\n \n         // write some demo-data into the realm.io database\n-        writeToDB(200);\n+        writeToDB(40);\n \n         // add data to the chart\n         setData();\n@@ -49,16 +55,20 @@ private void setData() {\n         RealmResults<RealmDemoData> result = mRealm.allObjects(RealmDemoData.class);\n \n         RealmLineDataSet<RealmDemoData> set = new RealmLineDataSet<RealmDemoData>(result, \"value\", \"xIndex\");\n-        set.setValueTextSize(9f);\n         set.setDrawCubic(false);\n         set.setLabel(\"Realm LineDataSet\");\n         set.setDrawCircleHole(false);\n+        set.setColor(ColorTemplate.rgb(\"#FF5722\"));\n+        set.setCircleColor(ColorTemplate.rgb(\"#FF5722\"));\n+        set.setLineWidth(1.8f);\n+        set.setCircleSize(3.6f);\n \n         ArrayList<ILineDataSet> dataSets = new ArrayList<ILineDataSet>();\n         dataSets.add(set); // add the dataset\n \n         // create a data object with the dataset list\n         LineData data = new LineData(result, \"xValue\", dataSets);\n+        styleData(data);\n \n         // set data\n         mChart.setData(data);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java b/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java\n@@ -58,8 +58,8 @@ public class ColorTemplate {\n      * @param hex\n      * @return\n      */\n-    public int rgb(String hex) {\n-        int color = (int) Long.parseLong(hex, 16);\n+    public static int rgb(String hex) {\n+        int color = (int) Long.parseLong(hex.replace(\"#\", \"\"), 16);\n         int r = (color >> 16) & 0xFF;\n         int g = (color >> 8) & 0xFF;\n         int b = (color >> 0) & 0xFF;",
    "output": "Work on example project styling"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java b/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java\n@@ -11,7 +11,7 @@\n  * Class that holds predefined color integer arrays (e.g.\n  * ColorTemplate.VORDIPLOM_COLORS) and convenience methods for loading colors\n  * from resources.\n- * \n+ *\n  * @author Philipp Jahoda\n  */\n public class ColorTemplate {\n@@ -52,9 +52,23 @@ public class ColorTemplate {\n             Color.rgb(140, 234, 255), Color.rgb(255, 140, 157)\n     };\n \n+    /**\n+     * Converts the given hex-color-string to rgb.\n+     *\n+     * @param hex\n+     * @return\n+     */\n+    public int rgb(String hex) {\n+        int color = (int) Long.parseLong(hex, 16);\n+        int r = (color >> 16) & 0xFF;\n+        int g = (color >> 8) & 0xFF;\n+        int b = (color >> 0) & 0xFF;\n+        return Color.rgb(r, g, b);\n+    }\n+\n     /**\n      * Returns the Android ICS holo blue light color.\n-     * \n+     *\n      * @return\n      */\n     public static int getHoloBlue() {\n@@ -64,7 +78,7 @@ public static int getHoloBlue() {\n     /**\n      * turn an array of resource-colors (contains resource-id integers) into an\n      * array list of actual color integers\n-     * \n+     *\n      * @param r\n      * @param colors an integer array of resource id's of colors\n      * @return\n@@ -83,7 +97,7 @@ public static List<Integer> createColors(Resources r, int[] colors) {\n     /**\n      * Turns an array of colors (integer color values) into an ArrayList of\n      * colors.\n-     * \n+     *\n      * @param colors\n      * @return\n      */",
    "output": "Add feature to convert hex string to rgb color"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/ContentItem.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/ContentItem.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/ContentItem.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/ContentItem.java\n@@ -7,6 +7,7 @@ public class ContentItem {\n \n     String name;\n     String desc;\n+    boolean isNew = false;\n \n     public ContentItem(String n, String d) {\n         name = n;\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n@@ -121,9 +121,12 @@ protected void onCreate(Bundle savedInstanceState) {\n         objects.add(new ContentItem(\n                 \"Chart in ScrollView\",\n                 \"This demonstrates how to use a chart inside a ScrollView.\"));\n-        objects.add(new ContentItem(\n+\n+        ContentItem realm = new ContentItem(\n                 \"Realm.io Database\",\n-                \"This demonstrates how to use this library with Realm.io mobile database.\"));\n+                \"This demonstrates how to use this library with Realm.io mobile database.\");\n+        realm.isNew = true;\n+        objects.add(realm);\n \n         MyAdapter adapter = new MyAdapter(this, objects);\n \n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MyAdapter.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MyAdapter.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MyAdapter.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MyAdapter.java\n@@ -34,6 +34,7 @@ public View getView(int position, View convertView, ViewGroup parent) {\n             convertView = LayoutInflater.from(getContext()).inflate(R.layout.list_item, null);\n             holder.tvName = (TextView) convertView.findViewById(R.id.tvName);\n             holder.tvDesc = (TextView) convertView.findViewById(R.id.tvDesc);\n+            holder.tvNew = (TextView) convertView.findViewById(R.id.tvNew);\n \n             convertView.setTag(holder);\n \n@@ -44,11 +45,17 @@ public View getView(int position, View convertView, ViewGroup parent) {\n         holder.tvName.setText(c.name);\n         holder.tvDesc.setText(c.desc);\n \n+        if(c.isNew)\n+            holder.tvNew.setVisibility(View.VISIBLE);\n+        else\n+            holder.tvNew.setVisibility(View.GONE);\n+\n         return convertView;\n     }\n \n     private class ViewHolder {\n \n         TextView tvName, tvDesc;\n+        TextView tvNew;\n     }\n }",
    "output": "Further extend example project"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java\n@@ -64,7 +64,7 @@ public void calcMinMax(int start, int end) {\n \n         // need chart width to guess this properly\n \n-        for (int i = start; i <= endValue; i++) {\n+        for (int i = start; i < endValue; i++) {\n \n             final BubbleEntry entry = mYVals.get(i);\n ",
    "output": "Fix BubbleDataSet bug."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n@@ -71,13 +71,13 @@ public RealmBaseDataSet(RealmResults<T> results, String yValuesField, String xIn\n     @Override\n     public float getYMin() {\n         //return results.min(mValuesField).floatValue();\n-        return -50;\n+        return mYMin;\n     }\n \n     @Override\n     public float getYMax() {\n         //return results.max(mValuesField).floatValue();\n-        return 200;\n+        return mYMax;\n     }\n \n     @Override\n@@ -88,7 +88,42 @@ public int getEntryCount() {\n     @Override\n     public void calcMinMax(int start, int end) {\n \n+        if (mValues == null)\n+            return;\n+\n+        final int yValCount = mValues.size();\n+\n+        if (yValCount == 0)\n+            return;\n+\n+        int endValue;\n+\n+        if (end == 0 || end >= yValCount)\n+            endValue = yValCount - 1;\n+        else\n+            endValue = end;\n+\n+        mYMin = Float.MAX_VALUE;\n+        mYMax = -Float.MAX_VALUE;\n+\n+        for (int i = start; i <= endValue; i++) {\n \n+            S e = mValues.get(i);\n+\n+            if (e != null && !Float.isNaN(e.getVal())) {\n+\n+                if (e.getVal() < mYMin)\n+                    mYMin = e.getVal();\n+\n+                if (e.getVal() > mYMax)\n+                    mYMax = e.getVal();\n+            }\n+        }\n+\n+        if (mYMin == Float.MAX_VALUE) {\n+            mYMin = 0.f;\n+            mYMax = 0.f;\n+        }\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java\n@@ -103,7 +103,52 @@ public void build(RealmResults<T> results) {\n     @Override\n     public void calcMinMax(int start, int end) {\n \n-        // TODO: implement this\n+        if (mValues == null)\n+            return;\n+\n+        final int yValCount = mValues.size();\n+\n+        if (yValCount == 0)\n+            return;\n+\n+        int endValue;\n+\n+        if (end == 0 || end >= yValCount)\n+            endValue = yValCount - 1;\n+        else\n+            endValue = end;\n+\n+        mYMin = Float.MAX_VALUE;\n+        mYMax = -Float.MAX_VALUE;\n+\n+        for (int i = start; i <= endValue; i++) {\n+\n+            BarEntry e = mValues.get(i);\n+\n+            if (e != null && !Float.isNaN(e.getVal())) {\n+\n+                if (e.getVals() == null) {\n+\n+                    if (e.getVal() < mYMin)\n+                        mYMin = e.getVal();\n+\n+                    if (e.getVal() > mYMax)\n+                        mYMax = e.getVal();\n+                } else {\n+\n+                    if (-e.getNegativeSum() < mYMin)\n+                        mYMin = -e.getNegativeSum();\n+\n+                    if (e.getPositiveSum() > mYMax)\n+                        mYMax = e.getPositiveSum();\n+                }\n+            }\n+        }\n+\n+        if (mYMin == Float.MAX_VALUE) {\n+            mYMin = 0.f;\n+            mYMax = 0.f;\n+        }\n     }\n \n     private void calcStackSize() {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java\n@@ -40,22 +40,91 @@ public void build(RealmResults<T> results) {\n     @Override\n     public void calcMinMax(int start, int end) {\n \n-        // TODO: implement this\n+        if (mValues == null)\n+            return;\n+\n+        if (mValues.size() == 0)\n+            return;\n+\n+        int endValue;\n+\n+        if (end == 0)\n+            endValue = mValues.size() - 1;\n+        else\n+            endValue = end;\n+\n+        mYMin = yMin(mValues.get(start));\n+        mYMax = yMax(mValues.get(start));\n+\n+        // need chart width to guess this properly\n+\n+        for (int i = start; i <= endValue; i++) {\n+\n+            final BubbleEntry entry = mValues.get(i);\n+\n+            final float ymin = yMin(entry);\n+            final float ymax = yMax(entry);\n+\n+            if (ymin < mYMin) {\n+                mYMin = ymin;\n+            }\n+\n+            if (ymax > mYMax) {\n+                mYMax = ymax;\n+            }\n+\n+            final float xmin = xMin(entry);\n+            final float xmax = xMax(entry);\n+\n+            if (xmin < mXMin) {\n+                mXMin = xmin;\n+            }\n+\n+            if (xmax > mXMax) {\n+                mXMax = xmax;\n+            }\n+\n+            final float size = largestSize(entry);\n+\n+            if (size > mMaxSize) {\n+                mMaxSize = size;\n+            }\n+        }\n     }\n \n     @Override\n     public float getXMax() {\n-        return 0;\n+        return mXMax;\n     }\n \n     @Override\n     public float getXMin() {\n-        return 0;\n+        return mXMin;\n     }\n \n     @Override\n     public float getMaxSize() {\n-        return 0;\n+        return mMaxSize;\n+    }\n+\n+    private float yMin(BubbleEntry entry) {\n+        return entry.getVal();\n+    }\n+\n+    private float yMax(BubbleEntry entry) {\n+        return entry.getVal();\n+    }\n+\n+    private float xMin(BubbleEntry entry) {\n+        return (float) entry.getXIndex();\n+    }\n+\n+    private float xMax(BubbleEntry entry) {\n+        return (float) entry.getXIndex();\n+    }\n+\n+    private float largestSize(BubbleEntry entry) {\n+        return entry.getSize();\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n@@ -84,7 +84,32 @@ public void build(RealmResults<T> results) {\n     @Override\n     public void calcMinMax(int start, int end) {\n \n-        // TODO: implement this\n+        if (mValues == null)\n+            return;\n+\n+        if (mValues.size() == 0)\n+            return;\n+\n+        int endValue;\n+\n+        if (end == 0 || end >= mValues.size())\n+            endValue = mValues.size() - 1;\n+        else\n+            endValue = end;\n+\n+        mYMin = Float.MAX_VALUE;\n+        mYMax = -Float.MAX_VALUE;\n+\n+        for (int i = start; i <= endValue; i++) {\n+\n+            CandleEntry e = mValues.get(i);\n+\n+            if (e.getLow() < mYMin)\n+                mYMin = e.getLow();\n+\n+            if (e.getHigh() > mYMax)\n+                mYMax = e.getHigh();\n+        }\n     }\n \n     /**",
    "output": "Implement calcMinMax for all datasets"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n@@ -25,6 +25,16 @@ public abstract class RealmBaseDataSet<T extends RealmObject, S extends Entry> e\n      */\n     protected List<S> mValues;\n \n+    /**\n+     * maximum y-value in the y-value array\n+     */\n+    protected float mYMax = 0.0f;\n+\n+    /**\n+     * the minimum y-value in the y-value array\n+     */\n+    protected float mYMin = 0.0f;\n+\n     /**\n      * fieldname of the column that contains the y-values of this dataset\n      */\n@@ -162,12 +172,48 @@ public float getYValForXIndex(int xIndex) {\n \n     @Override\n     public boolean addEntry(S e) {\n-        return false;\n+\n+        if (e == null)\n+            return false;\n+\n+        float val = e.getVal();\n+\n+        if (mValues == null) {\n+            mValues = new ArrayList<S>();\n+        }\n+\n+        if (mValues.size() == 0) {\n+            mYMax = val;\n+            mYMin = val;\n+        } else {\n+            if (mYMax < val)\n+                mYMax = val;\n+            if (mYMin > val)\n+                mYMin = val;\n+        }\n+\n+        // add the entry\n+        mValues.add(e);\n+        return true;\n     }\n \n     @Override\n     public boolean removeEntry(S e) {\n-        return false;\n+\n+        if (e == null)\n+            return false;\n+\n+        if (mValues == null)\n+            return false;\n+\n+        // remove the entry\n+        boolean removed = mValues.remove(e);\n+\n+        if (removed) {\n+            calcMinMax(0, mValues.size());\n+        }\n+\n+        return removed;\n     }\n \n     /**",
    "output": "Implement feature to add & remove entries"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -1259,7 +1259,7 @@ public int getLowestVisibleXIndex() {\n                 mViewPortHandler.contentLeft(), mViewPortHandler.contentBottom()\n         };\n         getTransformer(AxisDependency.LEFT).pixelsToValue(pts);\n-        return (pts[0] <= 0) ? 0 : (int) Math.round(pts[0] + 1.0f);\n+        return (pts[0] <= 0) ? 0 : (int) (pts[0] + 1.0f);\n     }\n \n     /**\n@@ -1274,9 +1274,7 @@ public int getHighestVisibleXIndex() {\n                 mViewPortHandler.contentRight(), mViewPortHandler.contentBottom()\n         };\n         getTransformer(AxisDependency.LEFT).pixelsToValue(pts);\n-        return (Math.round(pts[0]) >= mData.getXValCount()) ? \n-                mData.getXValCount() - 1 : \n-                (int) Math.round(pts[0]);\n+        return (pts[0] >= mData.getXValCount()) ? mData.getXValCount() - 1 : (int) pts[0];\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -403,7 +403,7 @@ public T getEntryForIndex(int index) {\n     }\n \n     @Override\n-    public int getEntryIndex(int x, Rounding rounding) {\n+    public int getEntryIndex(int xIndex, Rounding rounding) {\n \n         int low = 0;\n         int high = mYVals.size() - 1;\n@@ -412,14 +412,14 @@ public int getEntryIndex(int x, Rounding rounding) {\n         while (low <= high) {\n             int m = (high + low) / 2;\n \n-            if (x == mYVals.get(m).getXIndex()) {\n-                while (m > 0 && mYVals.get(m - 1).getXIndex() == x)\n+            if (xIndex == mYVals.get(m).getXIndex()) {\n+                while (m > 0 && mYVals.get(m - 1).getXIndex() == xIndex)\n                     m--;\n \n                 return m;\n             }\n \n-            if (x > mYVals.get(m).getXIndex())\n+            if (xIndex > mYVals.get(m).getXIndex())\n                 low = m + 1;\n             else\n                 high = m - 1;\n@@ -430,11 +430,11 @@ public int getEntryIndex(int x, Rounding rounding) {\n         if (closest != -1) {\n             int closestXIndex = mYVals.get(closest).getXIndex();\n             if (rounding == Rounding.UP) {\n-                if (closestXIndex < x && closest < mYVals.size() - 1) {\n+                if (closestXIndex < xIndex && closest < mYVals.size() - 1) {\n                     ++closest;\n                 }\n             } else if (rounding == Rounding.DOWN) {\n-                if (closestXIndex > x && closest > 0) {\n+                if (closestXIndex > xIndex && closest > 0) {\n                     --closest;\n                 }\n             }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -140,7 +140,8 @@ protected void drawCubic(Canvas c, ILineDataSet dataSet) {\n         Entry entryFrom = dataSet.getEntryForXIndex((mMinX < 0) ? 0 : mMinX, DataSet.Rounding.DOWN);\n         Entry entryTo = dataSet.getEntryForXIndex(mMaxX, DataSet.Rounding.UP);\n \n-        int minx = Math.max(dataSet.getEntryIndex(entryFrom), 0);\n+        int diff = (entryFrom == entryTo) ? 1 : 0;\n+        int minx = Math.max(dataSet.getEntryIndex(entryFrom) - diff, 0);\n         int maxx = Math.min(dataSet.getEntryIndex(entryTo) + 1, entryCount);\n \n         float phaseX = mAnimator.getPhaseX();",
    "output": "Merge master"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -1259,7 +1259,7 @@ public int getLowestVisibleXIndex() {\n                 mViewPortHandler.contentLeft(), mViewPortHandler.contentBottom()\n         };\n         getTransformer(AxisDependency.LEFT).pixelsToValue(pts);\n-        return (pts[0] <= 0) ? 0 : (int) (pts[0] + 1);\n+        return (pts[0] <= 0) ? 0 : (int) Math.round(pts[0] + 1.0f);\n     }\n \n     /**\n@@ -1274,7 +1274,9 @@ public int getHighestVisibleXIndex() {\n                 mViewPortHandler.contentRight(), mViewPortHandler.contentBottom()\n         };\n         getTransformer(AxisDependency.LEFT).pixelsToValue(pts);\n-        return (pts[0] >= mData.getXValCount()) ? mData.getXValCount() - 1 : (int) pts[0];\n+        return (Math.round(pts[0]) >= mData.getXValCount()) ? \n+                mData.getXValCount() - 1 : \n+                (int) Math.round(pts[0]);\n     }\n \n     /**",
    "output": "Merge"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -88,6 +88,8 @@ public class PieChart extends PieRadarChartBase<PieData> {\n \n     private float mCenterTextRadiusPercent = 1.f;\n \n+    protected float mMaxAngle = 360f;\n+\n     public PieChart(Context context) {\n         super(context);\n     }\n@@ -256,7 +258,7 @@ public boolean needsHighlight(int xIndex, int dataSetIndex) {\n      * @return\n      */\n     private float calcAngle(float value) {\n-        return value / mData.getYValueSum() * 360f;\n+        return value / mData.getYValueSum() * mMaxAngle;\n     }\n \n     @Override\n@@ -615,6 +617,26 @@ public float getCenterTextRadiusPercent() {\n         return mCenterTextRadiusPercent;\n     }\n \n+    public float getMaxAngle() {\n+        return mMaxAngle;\n+    }\n+\n+    /**\n+     * Sets the max angle that is used for calculating the pie-circle. 360f means\n+     * it's a full PieChart, 180f results in a half-pie-chart. Default: 360f\n+     *\n+     * @param maxangle min 90, max 360\n+     */\n+    public void setMaxAngle(float maxangle) {\n+\n+        if (maxangle > 360)\n+            maxangle = 360f;\n+\n+        if (maxangle < 90)\n+            maxangle = 90f;\n+\n+        this.mMaxAngle = maxangle;\n+    }\n \n     @Override\n     protected void onDetachedFromWindow() {",
    "output": "Added feature to set custom angle for PieChart (#989)"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -1259,7 +1259,7 @@ public int getLowestVisibleXIndex() {\n                 mViewPortHandler.contentLeft(), mViewPortHandler.contentBottom()\n         };\n         getTransformer(AxisDependency.LEFT).pixelsToValue(pts);\n-        return (pts[0] <= 0) ? 0 : (int) (pts[0] + 1);\n+        return (pts[0] <= 0) ? 0 : (int) Math.round(pts[0] + 1.0f);\n     }\n \n     /**\n@@ -1274,7 +1274,9 @@ public int getHighestVisibleXIndex() {\n                 mViewPortHandler.contentRight(), mViewPortHandler.contentBottom()\n         };\n         getTransformer(AxisDependency.LEFT).pixelsToValue(pts);\n-        return (pts[0] >= mData.getXValCount()) ? mData.getXValCount() - 1 : (int) pts[0];\n+        return (Math.round(pts[0]) >= mData.getXValCount()) ? \n+                mData.getXValCount() - 1 : \n+                (int) Math.round(pts[0]);\n     }\n \n     /**",
    "output": "Merge pull request #1234 from danielgindi/master\n\nFix for rounding error at the edges"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -1259,7 +1259,7 @@ public int getLowestVisibleXIndex() {\n                 mViewPortHandler.contentLeft(), mViewPortHandler.contentBottom()\n         };\n         getTransformer(AxisDependency.LEFT).pixelsToValue(pts);\n-        return (pts[0] <= 0) ? 0 : (int) (pts[0] + 1);\n+        return (pts[0] <= 0) ? 0 : (int) Math.round(pts[0] + 1.0f);\n     }\n \n     /**\n@@ -1274,7 +1274,9 @@ public int getHighestVisibleXIndex() {\n                 mViewPortHandler.contentRight(), mViewPortHandler.contentBottom()\n         };\n         getTransformer(AxisDependency.LEFT).pixelsToValue(pts);\n-        return (pts[0] >= mData.getXValCount()) ? mData.getXValCount() - 1 : (int) pts[0];\n+        return (Math.round(pts[0]) >= mData.getXValCount()) ? \n+                mData.getXValCount() - 1 : \n+                (int) Math.round(pts[0]);\n     }\n \n     /**",
    "output": "Fix for rounding error at the edges\n\nRelated to: https://github.com/danielgindi/ios-charts/pull/558"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -241,8 +241,23 @@ public float getYValForXIndex(int xIndex) {\n      * @return\n      */\n     public T getEntryForXIndex(int x) {\n+        return getEntryForXIndex(x, Rounding.CLOSEST);\n+    }\n \n-        int index = getEntryIndex(x);\n+    /**\n+     * Returns the first Entry object found at the given xIndex with binary\n+     * search. If the no Entry at the specified x-index is found, this method\n+     * returns the index as determined by the given rounding mode. Returns null\n+     * if no Entry object at that index. INFORMATION: This method does\n+     * calculations at runtime. Do not over-use in performance critical\n+     * situations.\n+     *\n+     * @param x\n+     * @return\n+     */\n+    public T getEntryForXIndex(int x, Rounding rounding) {\n+\n+        int index = getEntryIndex(x, rounding);\n         if (index > -1)\n             return mYVals.get(index);\n         return null;\n@@ -251,14 +266,14 @@ public T getEntryForXIndex(int x) {\n     /**\n      * Returns the first Entry index found at the given xIndex with binary\n      * search. If the no Entry at the specified x-index is found, this method\n-     * returns the index at the closest x-index. Returns -1 if no Entry object\n-     * at that index. INFORMATION: This method does calculations at runtime. Do\n-     * not over-use in performance critical situations.\n+     * returns the index as determined by the given rounding mode. Returns -1 if\n+     * no Entry object at that index. INFORMATION: This method does calculations\n+     * at runtime. Do not over-use in performance critical situations.\n      *\n      * @param x\n      * @return\n      */\n-    public int getEntryIndex(int x) {\n+    public int getEntryIndex(int x, Rounding rounding) {\n \n         int low = 0;\n         int high = mYVals.size() - 1;\n@@ -282,6 +297,19 @@ public int getEntryIndex(int x) {\n             closest = m;\n         }\n \n+        if (closest != -1) {\n+            int closestXIndex = mYVals.get(closest).getXIndex();\n+            if (rounding == Rounding.UP) {\n+                if (closestXIndex < x && closest < mYVals.size() - 1) {\n+                    ++closest;\n+                }\n+            } else if (rounding == Rounding.DOWN) {\n+                if (closestXIndex > x && closest > 0) {\n+                    --closest;\n+                }\n+            }\n+        }\n+\n         return closest;\n     }\n \n@@ -567,9 +595,7 @@ public void addEntryOrdered(Entry e) {\n         mYValueSum += val;\n \n         if (mYVals.size() > 0 && mYVals.get(mYVals.size() - 1).getXIndex() > e.getXIndex()) {\n-            int closestIndex = getEntryIndex(e.getXIndex());\n-            if (mYVals.get(closestIndex).getXIndex() < e.getXIndex())\n-                closestIndex++;\n+            int closestIndex = getEntryIndex(e.getXIndex(), Rounding.UP);\n             mYVals.add(closestIndex, (T) e);\n             return;\n         }\n@@ -923,4 +949,15 @@ public void clear() {\n         mLastEnd = 0;\n         notifyDataSetChanged();\n     }\n+\n+    /**\n+     * Determines how to round DataSet index values for\n+     * {@link DataSet#getEntryIndex(int, Rounding)} DataSet.getEntryIndex()}\n+     * when an exact x-index is not found.\n+     */\n+    public enum Rounding {\n+        UP,\n+        DOWN,\n+        CLOSEST,\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -1,4 +1,3 @@\n-\n package com.github.mikephil.charting.renderer;\n \n import android.graphics.Bitmap;\n@@ -11,6 +10,7 @@\n import com.github.mikephil.charting.buffer.CircleBuffer;\n import com.github.mikephil.charting.buffer.LineBuffer;\n import com.github.mikephil.charting.charts.LineChart;\n+import com.github.mikephil.charting.data.DataSet;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.LineData;\n import com.github.mikephil.charting.data.LineDataSet;\n@@ -138,13 +138,11 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n \n         Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n \n-        Entry entryFrom = dataSet.getEntryForXIndex(mMinX);\n-        Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n+        Entry entryFrom = dataSet.getEntryForXIndex((mMinX < 0) ? 0 : mMinX, DataSet.Rounding.DOWN);\n+        Entry entryTo = dataSet.getEntryForXIndex(mMaxX, DataSet.Rounding.UP);\n \n-        int diff = (entryFrom == entryTo) ? 1 : 0;\n-        int minx = Math.max(dataSet.getEntryPosition(entryFrom) - diff, 0);\n-        int maxx = Math.min(Math.max(\n-                minx + 2, dataSet.getEntryPosition(entryTo) + 1), entries.size());\n+        int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n+        int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n \n         float phaseX = mAnimator.getPhaseX();\n         float phaseY = mAnimator.getPhaseY();\n@@ -284,13 +282,11 @@ protected void drawLinear(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n             canvas = c;\n         }\n \n-        Entry entryFrom = dataSet.getEntryForXIndex(mMinX);\n-        Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n+        Entry entryFrom = dataSet.getEntryForXIndex((mMinX < 0) ? 0 : mMinX, DataSet.Rounding.DOWN);\n+        Entry entryTo = dataSet.getEntryForXIndex(mMaxX, DataSet.Rounding.UP);\n \n-        int diff = (entryFrom == entryTo) ? 1 : 0;\n-        int minx = Math.max(dataSet.getEntryPosition(entryFrom) - diff, 0);\n-        int maxx = Math.min(Math.max(\n-                minx + 2, dataSet.getEntryPosition(entryTo) + 1), entries.size());\n+        int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n+        int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n \n         int range = (maxx - minx) * 4 - 4;\n \n@@ -436,13 +432,11 @@ public void drawValues(Canvas c) {\n \n                 List<Entry> entries = dataSet.getYVals();\n \n-                Entry entryFrom = dataSet.getEntryForXIndex(mMinX);\n-                Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n+                Entry entryFrom = dataSet.getEntryForXIndex((mMinX < 0) ? 0 : mMinX, DataSet.Rounding.DOWN);\n+                Entry entryTo = dataSet.getEntryForXIndex(mMaxX, DataSet.Rounding.UP);\n \n-                int diff = (entryFrom == entryTo) ? 1 : 0;\n-                int minx = Math.max(dataSet.getEntryPosition(entryFrom) - diff, 0);\n-                int maxx = Math.min(Math.max(\n-                        minx + 2, dataSet.getEntryPosition(entryTo) + 1), entries.size());\n+                int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n+                int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n \n                 float[] positions = trans.generateTransformedValuesLine(\n                         entries, mAnimator.getPhaseX(), mAnimator.getPhaseY(), minx, maxx);\n@@ -494,13 +488,11 @@ protected void drawCircles(Canvas c) {\n             Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n             List<Entry> entries = dataSet.getYVals();\n \n-            Entry entryFrom = dataSet.getEntryForXIndex((mMinX < 0) ? 0 : mMinX);\n-            Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n+            Entry entryFrom = dataSet.getEntryForXIndex((mMinX < 0) ? 0 : mMinX, DataSet.Rounding.DOWN);\n+            Entry entryTo = dataSet.getEntryForXIndex(mMaxX, DataSet.Rounding.UP);\n \n-            int diff = (entryFrom == entryTo) ? 1 : 0;\n-            int minx = Math.max(dataSet.getEntryPosition(entryFrom) - diff, 0);\n-            int maxx = Math.min(Math.max(\n-                    minx + 2, dataSet.getEntryPosition(entryTo) + 1), entries.size());\n+            int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n+            int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n \n             CircleBuffer buffer = mCircleBuffers[i];\n             buffer.setPhases(phaseX, phaseY);",
    "output": "Merge pull request #1230 from cdeange/master\n\nFixed rounding issue with LineChartRenderer"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -241,8 +241,23 @@ public float getYValForXIndex(int xIndex) {\n      * @return\n      */\n     public T getEntryForXIndex(int x) {\n+        return getEntryForXIndex(x, Rounding.CLOSEST);\n+    }\n \n-        int index = getEntryIndex(x);\n+    /**\n+     * Returns the first Entry object found at the given xIndex with binary\n+     * search. If the no Entry at the specified x-index is found, this method\n+     * returns the index as determined by the given rounding mode. Returns null\n+     * if no Entry object at that index. INFORMATION: This method does\n+     * calculations at runtime. Do not over-use in performance critical\n+     * situations.\n+     *\n+     * @param x\n+     * @return\n+     */\n+    public T getEntryForXIndex(int x, Rounding rounding) {\n+\n+        int index = getEntryIndex(x, rounding);\n         if (index > -1)\n             return mYVals.get(index);\n         return null;\n@@ -251,14 +266,14 @@ public T getEntryForXIndex(int x) {\n     /**\n      * Returns the first Entry index found at the given xIndex with binary\n      * search. If the no Entry at the specified x-index is found, this method\n-     * returns the index at the closest x-index. Returns -1 if no Entry object\n-     * at that index. INFORMATION: This method does calculations at runtime. Do\n-     * not over-use in performance critical situations.\n+     * returns the index as determined by the given rounding mode. Returns -1 if\n+     * no Entry object at that index. INFORMATION: This method does calculations\n+     * at runtime. Do not over-use in performance critical situations.\n      *\n      * @param x\n      * @return\n      */\n-    public int getEntryIndex(int x) {\n+    public int getEntryIndex(int x, Rounding rounding) {\n \n         int low = 0;\n         int high = mYVals.size() - 1;\n@@ -282,6 +297,19 @@ public int getEntryIndex(int x) {\n             closest = m;\n         }\n \n+        if (closest != -1) {\n+            int closestXIndex = mYVals.get(closest).getXIndex();\n+            if (rounding == Rounding.UP) {\n+                if (closestXIndex < x && closest < mYVals.size() - 1) {\n+                    ++closest;\n+                }\n+            } else if (rounding == Rounding.DOWN) {\n+                if (closestXIndex > x && closest > 0) {\n+                    --closest;\n+                }\n+            }\n+        }\n+\n         return closest;\n     }\n \n@@ -567,9 +595,7 @@ public void addEntryOrdered(Entry e) {\n         mYValueSum += val;\n \n         if (mYVals.size() > 0 && mYVals.get(mYVals.size() - 1).getXIndex() > e.getXIndex()) {\n-            int closestIndex = getEntryIndex(e.getXIndex());\n-            if (mYVals.get(closestIndex).getXIndex() < e.getXIndex())\n-                closestIndex++;\n+            int closestIndex = getEntryIndex(e.getXIndex(), Rounding.UP);\n             mYVals.add(closestIndex, (T) e);\n             return;\n         }\n@@ -923,4 +949,15 @@ public void clear() {\n         mLastEnd = 0;\n         notifyDataSetChanged();\n     }\n+\n+    /**\n+     * Determines how to round DataSet index values for\n+     * {@link DataSet#getEntryIndex(int, Rounding)} DataSet.getEntryIndex()}\n+     * when an exact x-index is not found.\n+     */\n+    public enum Rounding {\n+        UP,\n+        DOWN,\n+        CLOSEST,\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -1,4 +1,3 @@\n-\n package com.github.mikephil.charting.renderer;\n \n import android.graphics.Bitmap;\n@@ -11,6 +10,7 @@\n import com.github.mikephil.charting.buffer.CircleBuffer;\n import com.github.mikephil.charting.buffer.LineBuffer;\n import com.github.mikephil.charting.charts.LineChart;\n+import com.github.mikephil.charting.data.DataSet;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.LineData;\n import com.github.mikephil.charting.data.LineDataSet;\n@@ -138,13 +138,11 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n \n         Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n \n-        Entry entryFrom = dataSet.getEntryForXIndex(mMinX);\n-        Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n+        Entry entryFrom = dataSet.getEntryForXIndex((mMinX < 0) ? 0 : mMinX, DataSet.Rounding.DOWN);\n+        Entry entryTo = dataSet.getEntryForXIndex(mMaxX, DataSet.Rounding.UP);\n \n-        int diff = (entryFrom == entryTo) ? 1 : 0;\n-        int minx = Math.max(dataSet.getEntryPosition(entryFrom) - diff, 0);\n-        int maxx = Math.min(Math.max(\n-                minx + 2, dataSet.getEntryPosition(entryTo) + 1), entries.size());\n+        int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n+        int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n \n         float phaseX = mAnimator.getPhaseX();\n         float phaseY = mAnimator.getPhaseY();\n@@ -284,13 +282,11 @@ protected void drawLinear(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n             canvas = c;\n         }\n \n-        Entry entryFrom = dataSet.getEntryForXIndex(mMinX);\n-        Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n+        Entry entryFrom = dataSet.getEntryForXIndex((mMinX < 0) ? 0 : mMinX, DataSet.Rounding.DOWN);\n+        Entry entryTo = dataSet.getEntryForXIndex(mMaxX, DataSet.Rounding.UP);\n \n-        int diff = (entryFrom == entryTo) ? 1 : 0;\n-        int minx = Math.max(dataSet.getEntryPosition(entryFrom) - diff, 0);\n-        int maxx = Math.min(Math.max(\n-                minx + 2, dataSet.getEntryPosition(entryTo) + 1), entries.size());\n+        int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n+        int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n \n         int range = (maxx - minx) * 4 - 4;\n \n@@ -436,13 +432,11 @@ public void drawValues(Canvas c) {\n \n                 List<Entry> entries = dataSet.getYVals();\n \n-                Entry entryFrom = dataSet.getEntryForXIndex(mMinX);\n-                Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n+                Entry entryFrom = dataSet.getEntryForXIndex((mMinX < 0) ? 0 : mMinX, DataSet.Rounding.DOWN);\n+                Entry entryTo = dataSet.getEntryForXIndex(mMaxX, DataSet.Rounding.UP);\n \n-                int diff = (entryFrom == entryTo) ? 1 : 0;\n-                int minx = Math.max(dataSet.getEntryPosition(entryFrom) - diff, 0);\n-                int maxx = Math.min(Math.max(\n-                        minx + 2, dataSet.getEntryPosition(entryTo) + 1), entries.size());\n+                int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n+                int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n \n                 float[] positions = trans.generateTransformedValuesLine(\n                         entries, mAnimator.getPhaseX(), mAnimator.getPhaseY(), minx, maxx);\n@@ -494,13 +488,11 @@ protected void drawCircles(Canvas c) {\n             Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n             List<Entry> entries = dataSet.getYVals();\n \n-            Entry entryFrom = dataSet.getEntryForXIndex((mMinX < 0) ? 0 : mMinX);\n-            Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n+            Entry entryFrom = dataSet.getEntryForXIndex((mMinX < 0) ? 0 : mMinX, DataSet.Rounding.DOWN);\n+            Entry entryTo = dataSet.getEntryForXIndex(mMaxX, DataSet.Rounding.UP);\n \n-            int diff = (entryFrom == entryTo) ? 1 : 0;\n-            int minx = Math.max(dataSet.getEntryPosition(entryFrom) - diff, 0);\n-            int maxx = Math.min(Math.max(\n-                    minx + 2, dataSet.getEntryPosition(entryTo) + 1), entries.size());\n+            int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n+            int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n \n             CircleBuffer buffer = mCircleBuffers[i];\n             buffer.setPhases(phaseX, phaseY);",
    "output": "Fixed rounding issue with LineChartRenderer"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/BubbleData.java b/MPChartLib/src/com/github/mikephil/charting/data/BubbleData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/BubbleData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/BubbleData.java\n@@ -6,8 +6,15 @@\n import java.util.ArrayList;\n import java.util.List;\n \n+import io.realm.RealmObject;\n+import io.realm.RealmResults;\n+\n public class BubbleData extends BarLineScatterCandleBubbleData<IBubbleDataSet> {\n \n+    public BubbleData(RealmResults<? extends RealmObject> result, String xValuesField, List<IBubbleDataSet> dataSets) {\n+        super(toXVals(result, xValuesField), dataSets);\n+    }\n+\n     public BubbleData() {\n         super();\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/CandleData.java b/MPChartLib/src/com/github/mikephil/charting/data/CandleData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/CandleData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/CandleData.java\n@@ -5,8 +5,15 @@\n import java.util.ArrayList;\n import java.util.List;\n \n+import io.realm.RealmObject;\n+import io.realm.RealmResults;\n+\n public class CandleData extends BarLineScatterCandleBubbleData<ICandleDataSet> {\n \n+    public CandleData(RealmResults<? extends RealmObject> result, String xValuesField, List<ICandleDataSet> dataSets) {\n+        super(toXVals(result, xValuesField), dataSets);\n+    }\n+\n     public CandleData() {\n         super();\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/PieData.java b/MPChartLib/src/com/github/mikephil/charting/data/PieData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/PieData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/PieData.java\n@@ -6,6 +6,9 @@\n import java.util.ArrayList;\n import java.util.List;\n \n+import io.realm.RealmObject;\n+import io.realm.RealmResults;\n+\n /**\n  * A PieData object can only represent one DataSet. Unlike all other charts, the\n  * legend labels of the PieChart are created from the x-values array, and not\n@@ -16,6 +19,10 @@\n  */\n public class PieData extends ChartData<IPieDataSet> {\n \n+    public PieData(RealmResults<? extends RealmObject> result, String xValuesField, List<IPieDataSet> dataSets) {\n+        super(toXVals(result, xValuesField), dataSets);\n+    }\n+\n     public PieData() {\n         super();\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/RadarData.java b/MPChartLib/src/com/github/mikephil/charting/data/RadarData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/RadarData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/RadarData.java\n@@ -6,13 +6,20 @@\n import java.util.ArrayList;\n import java.util.List;\n \n+import io.realm.RealmObject;\n+import io.realm.RealmResults;\n+\n /**\n  * Data container for the RadarChart.\n  *\n  * @author Philipp Jahoda\n  */\n public class RadarData extends ChartData<IRadarDataSet> {\n \n+    public RadarData(RealmResults<? extends RealmObject> result, String xValuesField, List<IRadarDataSet> dataSets) {\n+        super(toXVals(result, xValuesField), dataSets);\n+    }\n+\n     public RadarData() {\n         super();\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/ScatterData.java b/MPChartLib/src/com/github/mikephil/charting/data/ScatterData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ScatterData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ScatterData.java\n@@ -6,8 +6,15 @@\n import java.util.ArrayList;\n import java.util.List;\n \n+import io.realm.RealmObject;\n+import io.realm.RealmResults;\n+\n public class ScatterData extends BarLineScatterCandleBubbleData<IScatterDataSet> {\n \n+    public ScatterData(RealmResults<? extends RealmObject> result, String xValuesField, List<IScatterDataSet> dataSets) {\n+        super(toXVals(result, xValuesField), dataSets);\n+    }\n+\n     public ScatterData() {\n         super();\n     }",
    "output": "Implement constructors to support realm-xvalues"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivityBar.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivityBar.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivityBar.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivityBar.java\n@@ -45,7 +45,7 @@ protected void onResume() {\n         super.onResume(); // setup realm\n \n         // write some demo-data into the realm.io database\n-        writeToDBStack(4);\n+        writeToDBStack(200);\n \n         // add data to the chart\n         setData();\n@@ -55,13 +55,12 @@ private void setData() {\n \n         RealmResults<RealmDemoData> result = mRealm.allObjects(RealmDemoData.class);\n \n-        RealmBarDataSet<RealmDemoData> set = new RealmBarDataSet<RealmDemoData>(result, \"stackValues\", \"xIndex\");\n-        System.out.println(\"Act: \" + set.getStackSize());\n+        //RealmBarDataSet<RealmDemoData> set = new RealmBarDataSet<RealmDemoData>(result, \"stackValues\", \"xIndex\"); // normal entries\n+        RealmBarDataSet<RealmDemoData> set = new RealmBarDataSet<RealmDemoData>(result, \"stackValues\", \"xIndex\", \"floatValue\"); // stacked entries\n         set.setValueTextSize(9f);\n         set.setColors(getColors(set.getStackSize()));\n         set.setLabel(\"Realm BarDataSet\");\n         set.setStackLabels(new String[]{\"Births\", \"Divorces\", \"Marriages\"});\n-        System.out.println(\"Act: \" + set.getStackSize());\n \n         ArrayList<IBarDataSet> dataSets = new ArrayList<IBarDataSet>();\n         dataSets.add(set); // add the dataset\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmFloat.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmFloat.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmFloat.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmFloat.java\n@@ -7,21 +7,21 @@\n  */\n public class RealmFloat extends RealmObject {\n \n-    private float value;\n+    private float floatValue;\n \n     public RealmFloat() {\n \n     }\n \n-    public RealmFloat(float value) {\n-        this.value = value;\n+    public RealmFloat(float floatValue) {\n+        this.floatValue = floatValue;\n     }\n \n-    public float getValue() {\n-        return value;\n+    public float getFloatValue() {\n+        return floatValue;\n     }\n \n-    public void setValue(float value) {\n-        this.value = value;\n+    public void setFloatValue(float value) {\n+        this.floatValue = value;\n     }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java\n@@ -16,6 +16,8 @@\n  */\n public class RealmBarDataSet<T extends RealmObject> extends RealmBarLineScatterCandleBubbleDataSet<T, BarEntry> implements IBarDataSet {\n \n+    private String mStackValueFieldName;\n+\n     /**\n      * space indicator between the bars 0.1f == 10 %\n      */\n@@ -47,12 +49,25 @@ public class RealmBarDataSet<T extends RealmObject> extends RealmBarLineScatterC\n     public RealmBarDataSet(RealmResults<T> results, String yValuesField, String xIndexField) {\n         super(results, yValuesField, xIndexField);\n         mHighLightColor = Color.rgb(0, 0, 0);\n-        calcStackSize();\n+        buildData(this.results);\n     }\n \n-    @Override\n-    public void build(RealmResults<T> results) {\n+    /**\n+     * Constructor for supporting stacked values.\n+     *\n+     * @param results\n+     * @param yValuesField\n+     * @param xIndexField\n+     * @param stackValueFieldName\n+     */\n+    public RealmBarDataSet(RealmResults<T> results, String yValuesField, String xIndexField, String stackValueFieldName) {\n+        super(results, yValuesField, xIndexField);\n+        this.mStackValueFieldName = stackValueFieldName;\n+        mHighLightColor = Color.rgb(0, 0, 0);\n+        buildData(this.results);\n+    }\n \n+    private void buildData(RealmResults<T> results) {\n         for (T realmObject : results) {\n \n             DynamicRealmObject dynamicObject = new DynamicRealmObject(realmObject);\n@@ -62,14 +77,14 @@ public void build(RealmResults<T> results) {\n                 float value = dynamicObject.getFloat(mValuesField);\n                 mValues.add(new BarEntry(value, dynamicObject.getInt(mIndexField)));\n \n-            } catch(IllegalArgumentException e) {\n+            } catch (IllegalArgumentException e) {\n \n                 DynamicRealmList list = dynamicObject.getList(mValuesField);\n-                float [] values = new float[list.size()];\n+                float[] values = new float[list.size()];\n \n                 int i = 0;\n-                for(DynamicRealmObject o : list) {\n-                    values[i] = o.getFloat(\"value\");\n+                for (DynamicRealmObject o : list) {\n+                    values[i] = o.getFloat(mStackValueFieldName);\n                     i++;\n                 }\n \n@@ -80,6 +95,11 @@ public void build(RealmResults<T> results) {\n         calcStackSize();\n     }\n \n+    @Override\n+    public void build(RealmResults<T> results) {\n+        // TODO: make this cleaner\n+    }\n+\n     @Override\n     public void calcMinMax(int start, int end) {\n ",
    "output": "Bugfixing concerning stacked bars"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivityBar.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivityBar.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivityBar.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivityBar.java\n@@ -45,7 +45,7 @@ protected void onResume() {\n         super.onResume(); // setup realm\n \n         // write some demo-data into the realm.io database\n-        writeToDBStack(200);\n+        writeToDBStack(4);\n \n         // add data to the chart\n         setData();\n@@ -56,12 +56,12 @@ private void setData() {\n         RealmResults<RealmDemoData> result = mRealm.allObjects(RealmDemoData.class);\n \n         RealmBarDataSet<RealmDemoData> set = new RealmBarDataSet<RealmDemoData>(result, \"stackValues\", \"xIndex\");\n+        System.out.println(\"Act: \" + set.getStackSize());\n         set.setValueTextSize(9f);\n         set.setColors(getColors(set.getStackSize()));\n         set.setLabel(\"Realm BarDataSet\");\n         set.setStackLabels(new String[]{\"Births\", \"Divorces\", \"Marriages\"});\n-\n-        System.out.println(\"Stacksize: \" + set.getStackSize());\n+        System.out.println(\"Act: \" + set.getStackSize());\n \n         ArrayList<IBarDataSet> dataSets = new ArrayList<IBarDataSet>();\n         dataSets.add(set); // add the dataset\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n@@ -45,7 +45,7 @@ public RealmBaseDataSet(RealmResults<T> results, String yValuesField, String xIn\n         this.results = results;\n         this.mValuesField = yValuesField;\n         this.mIndexField = xIndexField;\n-        mValues = new ArrayList<S>();\n+        this.mValues = new ArrayList<S>();\n         this.results.sort(mIndexField, true);\n \n         build(this.results);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java\n@@ -6,7 +6,6 @@\n import com.github.mikephil.charting.data.realm.base.RealmBarLineScatterCandleBubbleDataSet;\n import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;\n \n-import io.realm.RealmList;\n import io.realm.RealmObject;\n import io.realm.RealmResults;\n import io.realm.dynamic.DynamicRealmList;\n@@ -47,6 +46,8 @@ public class RealmBarDataSet<T extends RealmObject> extends RealmBarLineScatterC\n \n     public RealmBarDataSet(RealmResults<T> results, String yValuesField, String xIndexField) {\n         super(results, yValuesField, xIndexField);\n+        mHighLightColor = Color.rgb(0, 0, 0);\n+        calcStackSize();\n     }\n \n     @Override\n@@ -69,14 +70,14 @@ public void build(RealmResults<T> results) {\n                 int i = 0;\n                 for(DynamicRealmObject o : list) {\n                     values[i] = o.getFloat(\"value\");\n-                    System.out.println(\"Value: \" + values[i]);\n                     i++;\n                 }\n-                mValues.add(new BarEntry(values, dynamicObject.getInt(mIndexField)));\n \n-                mStackSize = Math.max(mStackSize, values.length);\n+                mValues.add(new BarEntry(values, dynamicObject.getInt(mIndexField)));\n             }\n         }\n+\n+        calcStackSize();\n     }\n \n     @Override\n@@ -85,6 +86,17 @@ public void calcMinMax(int start, int end) {\n         // TODO: implement this\n     }\n \n+    private void calcStackSize() {\n+\n+        for (int i = 0; i < mValues.size(); i++) {\n+\n+            float[] vals = mValues.get(i).getVals();\n+\n+            if (vals != null && vals.length > mStackSize)\n+                mStackSize = vals.length;\n+        }\n+    }\n+\n     @Override\n     public int getStackSize() {\n         return mStackSize;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -8,9 +8,9 @@\n \n import com.github.mikephil.charting.components.Legend;\n import com.github.mikephil.charting.data.ChartData;\n-import com.github.mikephil.charting.data.PieDataSet;\n import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;\n import com.github.mikephil.charting.interfaces.datasets.IDataSet;\n+import com.github.mikephil.charting.interfaces.datasets.IPieDataSet;\n import com.github.mikephil.charting.utils.ColorTemplate;\n import com.github.mikephil.charting.utils.FSize;\n import com.github.mikephil.charting.utils.Utils;\n@@ -107,10 +107,10 @@ public void computeLegend(ChartData<?> data) {\n                         labels.add(bds.getLabel());\n                     }\n \n-                } else if (dataSet instanceof PieDataSet) {\n+                } else if (dataSet instanceof IPieDataSet) {\n \n                     List<String> xVals = data.getXVals();\n-                    PieDataSet pds = (PieDataSet) dataSet;\n+                    IPieDataSet pds = (IPieDataSet) dataSet;\n \n                     for (int j = 0; j < clrs.size() && j < entryCount && j < xVals.size(); j++) {\n ",
    "output": "Work on supporting stacked entries via realm"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n@@ -161,6 +161,14 @@ public List<S> getValues() {\n         return mValues;\n     }\n \n+    /**\n+     * Clears all values from the DataSet.\n+     */\n+    public void clearValues() {\n+        mValues.clear();\n+        notifyDataSetChanged();\n+    }\n+\n     public RealmResults<T> getResults() {\n         return results;\n     }",
    "output": "Add cler method"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java\n@@ -1,12 +1,14 @@\n package com.github.mikephil.charting.data;\n \n+import android.content.Context;\n import android.graphics.Color;\n import android.graphics.Typeface;\n \n import com.github.mikephil.charting.components.YAxis;\n import com.github.mikephil.charting.formatter.DefaultValueFormatter;\n import com.github.mikephil.charting.formatter.ValueFormatter;\n import com.github.mikephil.charting.interfaces.datasets.IDataSet;\n+import com.github.mikephil.charting.utils.ColorTemplate;\n import com.github.mikephil.charting.utils.Utils;\n \n import java.util.ArrayList;\n@@ -98,7 +100,7 @@ public void notifyDataSetChanged() {\n \n \n     /**\n-     * ###### ###### COLOR RELATED METHODS ##### ######\n+     * ###### ###### COLOR GETTING RELATED METHODS ##### ######\n      */\n \n     @Override\n@@ -116,6 +118,86 @@ public int getColor(int index) {\n         return mColors.get(index % mColors.size());\n     }\n \n+    /**\n+     * ###### ###### COLOR SETTING RELATED METHODS ##### ######\n+     */\n+\n+    /**\n+     * Sets the colors that should be used fore this DataSet. Colors are reused\n+     * as soon as the number of Entries the DataSet represents is higher than\n+     * the size of the colors array. If you are using colors from the resources,\n+     * make sure that the colors are already prepared (by calling\n+     * getResources().getColor(...)) before adding them to the DataSet.\n+     *\n+     * @param colors\n+     */\n+    public void setColors(List<Integer> colors) {\n+        this.mColors = colors;\n+    }\n+\n+    /**\n+     * Sets the colors that should be used fore this DataSet. Colors are reused\n+     * as soon as the number of Entries the DataSet represents is higher than\n+     * the size of the colors array. If you are using colors from the resources,\n+     * make sure that the colors are already prepared (by calling\n+     * getResources().getColor(...)) before adding them to the DataSet.\n+     *\n+     * @param colors\n+     */\n+    public void setColors(int[] colors) {\n+        this.mColors = ColorTemplate.createColors(colors);\n+    }\n+\n+    /**\n+     * Sets the colors that should be used fore this DataSet. Colors are reused\n+     * as soon as the number of Entries the DataSet represents is higher than\n+     * the size of the colors array. You can use\n+     * \"new int[] { R.color.red, R.color.green, ... }\" to provide colors for\n+     * this method. Internally, the colors are resolved using\n+     * getResources().getColor(...)\n+     *\n+     * @param colors\n+     */\n+    public void setColors(int[] colors, Context c) {\n+\n+        List<Integer> clrs = new ArrayList<Integer>();\n+\n+        for (int color : colors) {\n+            clrs.add(c.getResources().getColor(color));\n+        }\n+\n+        mColors = clrs;\n+    }\n+\n+    /**\n+     * Adds a new color to the colors array of the DataSet.\n+     *\n+     * @param color\n+     */\n+    public void addColor(int color) {\n+        if (mColors == null)\n+            mColors = new ArrayList<Integer>();\n+        mColors.add(color);\n+    }\n+\n+    /**\n+     * Sets the one and ONLY color that should be used for this DataSet.\n+     * Internally, this recreates the colors array and adds the specified color.\n+     *\n+     * @param color\n+     */\n+    public void setColor(int color) {\n+        resetColors();\n+        mColors.add(color);\n+    }\n+\n+    /**\n+     * Resets all colors of this DataSet and recreates the colors array.\n+     */\n+    public void resetColors() {\n+        mColors = new ArrayList<Integer>();\n+    }\n+\n     /** ###### ###### OTHER STYLING RELATED METHODS ##### ###### */\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -1,11 +1,6 @@\n \n package com.github.mikephil.charting.data;\n \n-import android.content.Context;\n-import android.graphics.Color;\n-\n-import com.github.mikephil.charting.utils.ColorTemplate;\n-\n import java.util.ArrayList;\n import java.util.List;\n \n@@ -291,84 +286,6 @@ public boolean removeLast() {\n         return removed;\n     }\n \n-    /** BELOW THIS COLOR HANDLING */\n-\n-    /**\n-     * Sets the colors that should be used fore this DataSet. Colors are reused\n-     * as soon as the number of Entries the DataSet represents is higher than\n-     * the size of the colors array. If you are using colors from the resources,\n-     * make sure that the colors are already prepared (by calling\n-     * getResources().getColor(...)) before adding them to the DataSet.\n-     *\n-     * @param colors\n-     */\n-    public void setColors(List<Integer> colors) {\n-        this.mColors = colors;\n-    }\n-\n-    /**\n-     * Sets the colors that should be used fore this DataSet. Colors are reused\n-     * as soon as the number of Entries the DataSet represents is higher than\n-     * the size of the colors array. If you are using colors from the resources,\n-     * make sure that the colors are already prepared (by calling\n-     * getResources().getColor(...)) before adding them to the DataSet.\n-     *\n-     * @param colors\n-     */\n-    public void setColors(int[] colors) {\n-        this.mColors = ColorTemplate.createColors(colors);\n-    }\n-\n-    /**\n-     * Sets the colors that should be used fore this DataSet. Colors are reused\n-     * as soon as the number of Entries the DataSet represents is higher than\n-     * the size of the colors array. You can use\n-     * \"new int[] { R.color.red, R.color.green, ... }\" to provide colors for\n-     * this method. Internally, the colors are resolved using\n-     * getResources().getColor(...)\n-     *\n-     * @param colors\n-     */\n-    public void setColors(int[] colors, Context c) {\n-\n-        List<Integer> clrs = new ArrayList<Integer>();\n-\n-        for (int color : colors) {\n-            clrs.add(c.getResources().getColor(color));\n-        }\n-\n-        mColors = clrs;\n-    }\n-\n-    /**\n-     * Adds a new color to the colors array of the DataSet.\n-     *\n-     * @param color\n-     */\n-    public void addColor(int color) {\n-        if (mColors == null)\n-            mColors = new ArrayList<Integer>();\n-        mColors.add(color);\n-    }\n-\n-    /**\n-     * Sets the one and ONLY color that should be used for this DataSet.\n-     * Internally, this recreates the colors array and adds the specified color.\n-     *\n-     * @param color\n-     */\n-    public void setColor(int color) {\n-        resetColors();\n-        mColors.add(color);\n-    }\n-\n-    /**\n-     * Resets all colors of this DataSet and recreates the colors array.\n-     */\n-    public void resetColors() {\n-        mColors = new ArrayList<Integer>();\n-    }\n-\n     /**\n      * Removes all values from this DataSet and recalculates min and max value.\n      */",
    "output": "Move color related methods to BaseDataSet"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n@@ -49,6 +49,7 @@ public RealmBaseDataSet(RealmResults<T> results, String yValuesField, String xIn\n         this.results.sort(mIndexField, true);\n \n         build(this.results);\n+        calcMinMax(0, results.size());\n     }\n \n     /**\n@@ -76,6 +77,7 @@ public int getEntryCount() {\n     @Override\n     public void calcMinMax(int start, int end) {\n \n+\n     }\n \n     @Override\n@@ -149,10 +151,29 @@ public boolean removeEntry(S e) {\n         return false;\n     }\n \n+    /**\n+     * Returns the List of values that has been extracted from the RealmResults\n+     * using the provided fieldnames.\n+     *\n+     * @return\n+     */\n+    public List<S> getValues() {\n+        return mValues;\n+    }\n+\n+    public RealmResults<T> getResults() {\n+        return results;\n+    }\n+\n     public String getValuesField() {\n         return mValuesField;\n     }\n \n+    /**\n+     * Sets the field name that is used for getting the y-values out of the RealmResultSet.\n+     *\n+     * @param yValuesField\n+     */\n     public void setValuesField(String yValuesField) {\n         this.mValuesField = yValuesField;\n     }\n@@ -161,6 +182,11 @@ public String getIndexField() {\n         return mIndexField;\n     }\n \n+    /**\n+     * Sets the field name that is used for getting the x-indices out of the RealmResultSet.\n+     *\n+     * @param xIndexField\n+     */\n     public void setIndexField(String xIndexField) {\n         this.mIndexField = xIndexField;\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n@@ -22,7 +22,6 @@ public class RealmCandleDataSet<T extends RealmObject> extends RealmLineScatterC\n     private String mOpenField;\n     private String mCloseField;\n \n-\n     /**\n      * the width of the shadow of the candle\n      */",
    "output": "Add documentation"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java\n@@ -6,23 +6,15 @@\n \n import com.github.mikephil.charting.animation.Easing;\n import com.github.mikephil.charting.charts.BarChart;\n-import com.github.mikephil.charting.charts.LineChart;\n import com.github.mikephil.charting.components.YAxis;\n import com.github.mikephil.charting.data.BarData;\n-import com.github.mikephil.charting.data.Entry;\n-import com.github.mikephil.charting.data.LineData;\n-import com.github.mikephil.charting.data.realm.RealmBarDataSet;\n-import com.github.mikephil.charting.data.realm.RealmLineDataSet;\n+import com.github.mikephil.charting.data.realm.implementation.RealmBarDataSet;\n import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;\n-import com.github.mikephil.charting.interfaces.datasets.ILineDataSet;\n import com.xxmassdeveloper.mpchartexample.custom.RealmDemoData;\n-import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n import com.xxmassdeveloper.mpchartexample.notimportant.RealmBaseActivity;\n \n import java.util.ArrayList;\n \n-import io.realm.Realm;\n-import io.realm.RealmConfiguration;\n import io.realm.RealmResults;\n \n /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBarLineScatterCandleBubbleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBarLineScatterCandleBubbleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBarLineScatterCandleBubbleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBarLineScatterCandleBubbleDataSet.java\n@@ -1,4 +1,4 @@\n-package com.github.mikephil.charting.data.realm;\n+package com.github.mikephil.charting.data.realm.base;\n \n import android.graphics.Color;\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java\n@@ -1,4 +1,4 @@\n-package com.github.mikephil.charting.data.realm;\n+package com.github.mikephil.charting.data.realm.base;\n \n import com.github.mikephil.charting.data.BaseDataSet;\n import com.github.mikephil.charting.data.Entry;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineRadarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineRadarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineRadarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineRadarDataSet.java\n@@ -1,4 +1,4 @@\n-package com.github.mikephil.charting.data.realm;\n+package com.github.mikephil.charting.data.realm.base;\n \n import android.graphics.Color;\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineScatterCandleRadarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineScatterCandleRadarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineScatterCandleRadarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineScatterCandleRadarDataSet.java\n@@ -1,4 +1,4 @@\n-package com.github.mikephil.charting.data.realm;\n+package com.github.mikephil.charting.data.realm.base;\n \n import android.graphics.DashPathEffect;\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java\n@@ -1,8 +1,9 @@\n-package com.github.mikephil.charting.data.realm;\n+package com.github.mikephil.charting.data.realm.implementation;\n \n import android.graphics.Color;\n \n import com.github.mikephil.charting.data.BarEntry;\n+import com.github.mikephil.charting.data.realm.base.RealmBarLineScatterCandleBubbleDataSet;\n import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;\n \n import io.realm.RealmObject;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBubbleDataSet.java\n@@ -1,6 +1,7 @@\n-package com.github.mikephil.charting.data.realm;\n+package com.github.mikephil.charting.data.realm.implementation;\n \n import com.github.mikephil.charting.data.BubbleEntry;\n+import com.github.mikephil.charting.data.realm.base.RealmBarLineScatterCandleBubbleDataSet;\n import com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet;\n \n import io.realm.RealmObject;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmCandleDataSet.java\n@@ -1,9 +1,10 @@\n-package com.github.mikephil.charting.data.realm;\n+package com.github.mikephil.charting.data.realm.implementation;\n \n import android.graphics.Color;\n import android.graphics.Paint;\n \n import com.github.mikephil.charting.data.CandleEntry;\n+import com.github.mikephil.charting.data.realm.base.RealmLineScatterCandleRadarDataSet;\n import com.github.mikephil.charting.interfaces.datasets.ICandleDataSet;\n \n import io.realm.RealmObject;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmLineDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmLineDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmLineDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmLineDataSet.java\n@@ -1,9 +1,10 @@\n-package com.github.mikephil.charting.data.realm;\n+package com.github.mikephil.charting.data.realm.implementation;\n \n import android.graphics.Color;\n import android.graphics.DashPathEffect;\n \n import com.github.mikephil.charting.data.Entry;\n+import com.github.mikephil.charting.data.realm.base.RealmLineRadarDataSet;\n import com.github.mikephil.charting.formatter.DefaultFillFormatter;\n import com.github.mikephil.charting.formatter.FillFormatter;\n import com.github.mikephil.charting.interfaces.datasets.ILineDataSet;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmPieDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmPieDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmPieDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmPieDataSet.java\n@@ -1,6 +1,7 @@\n-package com.github.mikephil.charting.data.realm;\n+package com.github.mikephil.charting.data.realm.implementation;\n \n import com.github.mikephil.charting.data.Entry;\n+import com.github.mikephil.charting.data.realm.base.RealmBaseDataSet;\n import com.github.mikephil.charting.interfaces.datasets.IPieDataSet;\n \n import io.realm.RealmObject;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmRadarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmRadarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmRadarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmRadarDataSet.java\n@@ -1,6 +1,7 @@\n-package com.github.mikephil.charting.data.realm;\n+package com.github.mikephil.charting.data.realm.implementation;\n \n import com.github.mikephil.charting.data.Entry;\n+import com.github.mikephil.charting.data.realm.base.RealmLineRadarDataSet;\n import com.github.mikephil.charting.interfaces.datasets.IRadarDataSet;\n \n import io.realm.RealmObject;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterDataSet.java\n@@ -1,7 +1,8 @@\n-package com.github.mikephil.charting.data.realm;\n+package com.github.mikephil.charting.data.realm.implementation;\n \n import com.github.mikephil.charting.charts.ScatterChart;\n import com.github.mikephil.charting.data.Entry;\n+import com.github.mikephil.charting.data.realm.base.RealmLineScatterCandleRadarDataSet;\n import com.github.mikephil.charting.interfaces.datasets.IScatterDataSet;\n \n import io.realm.RealmObject;",
    "output": "Package refactoring"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBarDataSet.java\n@@ -12,7 +12,7 @@\n /**\n  * Created by Philipp Jahoda on 07/11/15.\n  */\n-public class RealmBarDataSet<T extends RealmObject> extends RealmBaseDataSet<T, BarEntry> implements IBarDataSet {\n+public class RealmBarDataSet<T extends RealmObject> extends RealmBarLineScatterCandleBubbleDataSet<T, BarEntry> implements IBarDataSet {\n \n     public RealmBarDataSet(RealmResults<T> results, String yValuesField, String xIndexField) {\n         super(results, yValuesField, xIndexField);\n@@ -58,8 +58,4 @@ public String[] getStackLabels() {\n         return null;\n     }\n \n-    @Override\n-    public int getHighLightColor() {\n-        return Color.BLACK;\n-    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBarLineScatterCandleBubbleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBarLineScatterCandleBubbleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBarLineScatterCandleBubbleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBarLineScatterCandleBubbleDataSet.java\n@@ -0,0 +1,45 @@\n+package com.github.mikephil.charting.data.realm;\n+\n+import android.graphics.Color;\n+\n+import com.github.mikephil.charting.data.Entry;\n+import com.github.mikephil.charting.interfaces.datasets.IBarLineScatterCandleBubbleDataSet;\n+\n+import io.realm.RealmObject;\n+import io.realm.RealmResults;\n+\n+/**\n+ * Created by Philipp Jahoda on 08/11/15.\n+ */\n+public abstract class RealmBarLineScatterCandleBubbleDataSet<T extends RealmObject, S extends Entry> extends RealmBaseDataSet<T, S> implements IBarLineScatterCandleBubbleDataSet<S> {\n+\n+    /** default highlight color */\n+    protected int mHighLightColor = Color.rgb(255, 187, 115);\n+\n+    /**\n+     * Constructor that takes the realm RealmResults, sorts & stores them.\n+     *\n+     * @param results\n+     * @param yValuesField\n+     * @param xIndexField\n+     */\n+    public RealmBarLineScatterCandleBubbleDataSet(RealmResults<T> results, String yValuesField, String xIndexField) {\n+        super(results, yValuesField, xIndexField);\n+    }\n+\n+    /**\n+     * Sets the color that is used for drawing the highlight indicators. Dont\n+     * forget to resolve the color using getResources().getColor(...) or\n+     * Color.rgb(...).\n+     *\n+     * @param color\n+     */\n+    public void setHighLightColor(int color) {\n+        mHighLightColor = color;\n+    }\n+\n+    @Override\n+    public int getHighLightColor() {\n+        return mHighLightColor;\n+    }\n+}\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBubbleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBubbleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBubbleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBubbleDataSet.java\n@@ -10,7 +10,7 @@\n /**\n  * Created by Philipp Jahoda on 07/11/15.\n  */\n-public class RealmBubbleDataSet<T extends RealmObject> extends RealmBaseDataSet<T, BubbleEntry> implements IBubbleDataSet {\n+public class RealmBubbleDataSet<T extends RealmObject> extends RealmBarLineScatterCandleBubbleDataSet<T, BubbleEntry> implements IBubbleDataSet {\n \n     private String mSizeField;\n \n@@ -54,9 +54,13 @@ public float getHighlightCircleWidth() {\n         return 0;\n     }\n \n-    @Override\n-    public int getHighLightColor() {\n-        return 0;\n+    /**\n+     * Sets the database fieldname for the bubble size.\n+     *\n+     * @param sizeField\n+     */\n+    public void setSizeField(String sizeField) {\n+        this.mSizeField = sizeField;\n     }\n \n     /**",
    "output": "Add abstract RealmBarLineScatterCandleBubbleDataSet"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/BarData.java b/MPChartLib/src/com/github/mikephil/charting/data/BarData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/BarData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/BarData.java\n@@ -2,10 +2,14 @@\n package com.github.mikephil.charting.data;\n \n import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;\n+import com.github.mikephil.charting.interfaces.datasets.ILineDataSet;\n \n import java.util.ArrayList;\n import java.util.List;\n \n+import io.realm.RealmObject;\n+import io.realm.RealmResults;\n+\n /**\n  * Data object that represents all data for the BarChart.\n  * \n@@ -21,6 +25,10 @@ public class BarData extends BarLineScatterCandleBubbleData<IBarDataSet> {\n     // */\n     // private float mMaximumBarWidth = 100f;\n \n+    public BarData(RealmResults<? extends RealmObject> result, String xValuesField, List<IBarDataSet> dataSets) {\n+        super(toXVals(result, xValuesField), dataSets);\n+    }\n+\n     public BarData() {\n         super();\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -13,6 +13,10 @@\n import java.util.Arrays;\n import java.util.List;\n \n+import io.realm.RealmObject;\n+import io.realm.RealmResults;\n+import io.realm.dynamic.DynamicRealmObject;\n+\n /**\n  * Class that holds all relevant data that represents the chart. That involves\n  * at least one (or more) DataSets, and an array of x-values.\n@@ -951,4 +955,17 @@ public boolean contains(T dataSet) {\n \n         return false;\n     }\n+\n+    protected static List<String> toXVals(RealmResults<? extends RealmObject> result, String xValuesField) {\n+\n+        List<String> xVals = new ArrayList<>();\n+\n+        for (RealmObject object : result) {\n+\n+            DynamicRealmObject dynamicObject = new DynamicRealmObject(object);\n+            xVals.add(dynamicObject.getString(xValuesField));\n+        }\n+\n+        return xVals;\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/LineData.java b/MPChartLib/src/com/github/mikephil/charting/data/LineData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/LineData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/LineData.java\n@@ -8,7 +8,6 @@\n \n import io.realm.RealmObject;\n import io.realm.RealmResults;\n-import io.realm.dynamic.DynamicRealmObject;\n \n /**\n  * Data object that encapsulates all data associated with a LineChart.\n@@ -54,17 +53,4 @@ private static List<ILineDataSet> toList(ILineDataSet dataSet) {\n         sets.add(dataSet);\n         return sets;\n     }\n-\n-    private static List<String> toXVals(RealmResults<? extends RealmObject> result, String xValuesField) {\n-\n-        List<String> xVals = new ArrayList<>();\n-\n-        for (RealmObject object : result) {\n-\n-            DynamicRealmObject dynamicObject = new DynamicRealmObject(object);\n-            xVals.add(dynamicObject.getString(xValuesField));\n-        }\n-\n-        return xVals;\n-    }\n }",
    "output": "Add realm x-values support for BarData"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBarDataSet.java\n@@ -1,7 +1,61 @@\n package com.github.mikephil.charting.data.realm;\n \n+import android.graphics.Color;\n+\n+import com.github.mikephil.charting.data.BarEntry;\n+import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;\n+\n+import io.realm.RealmObject;\n+import io.realm.RealmResults;\n+import io.realm.dynamic.DynamicRealmObject;\n+\n /**\n- * Created by philipp on 07/11/15.\n+ * Created by Philipp Jahoda on 07/11/15.\n  */\n-public class RealmBarDataSet {\n+public class RealmBarDataSet<T extends RealmObject> extends RealmBaseDataSet<T, BarEntry> implements IBarDataSet {\n+\n+    public RealmBarDataSet(RealmResults<T> results, String yValuesField, String xIndexField) {\n+        super(results, yValuesField, xIndexField);\n+\n+        for (T object : this.results) {\n+\n+            DynamicRealmObject dynamicObject = new DynamicRealmObject(object);\n+            mValues.add(new BarEntry(dynamicObject.getFloat(yValuesField), dynamicObject.getInt(xIndexField)));\n+        }\n+    }\n+\n+    @Override\n+    public float getBarSpace() {\n+        return 0;\n+    }\n+\n+    @Override\n+    public boolean isStacked() {\n+        return false;\n+    }\n+\n+    @Override\n+    public int getStackSize() {\n+        return 0;\n+    }\n+\n+    @Override\n+    public int getBarShadowColor() {\n+        return Color.BLACK;\n+    }\n+\n+    @Override\n+    public int getHighLightAlpha() {\n+        return 0;\n+    }\n+\n+    @Override\n+    public String[] getStackLabels() {\n+        return new String[0];\n+    }\n+\n+    @Override\n+    public int getHighLightColor() {\n+        return 0;\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBaseDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBaseDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBaseDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBaseDataSet.java\n@@ -8,29 +8,35 @@\n \n import io.realm.RealmObject;\n import io.realm.RealmResults;\n-import io.realm.dynamic.DynamicRealmObject;\n \n /**\n  * Created by Philipp Jahoda on 06/11/15.\n  */\n-public abstract class RealmBaseDataSet<T extends RealmObject> extends BaseDataSet<Entry> {\n+public abstract class RealmBaseDataSet<T extends RealmObject, S extends Entry> extends BaseDataSet<S> {\n+\n+    /**\n+     * a list of queried realm objects\n+     */\n+    protected RealmResults<T> results;\n+\n+    protected List<S> mValues;\n \n-    protected List<Entry> mValues;\n     private String yValuesField;\n     private String xIndexField;\n \n+    /**\n+     * Constructor that takes the realm RealmResults, sorts & stores them.\n+     *\n+     * @param results\n+     * @param yValuesField\n+     * @param xIndexField\n+     */\n     public RealmBaseDataSet(RealmResults<T> results, String yValuesField, String xIndexField) {\n+        this.results = results;\n         this.yValuesField = yValuesField;\n         this.xIndexField = xIndexField;\n-        mValues = new ArrayList<Entry>();\n-\n-        results.sort(xIndexField, true);\n-\n-        for (T object : results) {\n-\n-            DynamicRealmObject dynamicObject = new DynamicRealmObject(object);\n-            mValues.add(new Entry(dynamicObject.getFloat(yValuesField), dynamicObject.getInt(xIndexField)));\n-        }\n+        mValues = new ArrayList<S>();\n+        this.results.sort(xIndexField, true);\n     }\n \n     @Override\n@@ -56,7 +62,7 @@ public void calcMinMax(int start, int end) {\n     }\n \n     @Override\n-    public Entry getEntryForXIndex(int xIndex) {\n+    public S getEntryForXIndex(int xIndex) {\n         //DynamicRealmObject o = new DynamicRealmObject(results.where().equalTo(xIndexField, xIndex).findFirst());\n         //return new Entry(o.getFloat(yValuesField), o.getInt(xIndexField));\n         int index = getEntryIndex(xIndex);\n@@ -66,7 +72,7 @@ public Entry getEntryForXIndex(int xIndex) {\n     }\n \n     @Override\n-    public Entry getEntryForIndex(int index) {\n+    public S getEntryForIndex(int index) {\n         //DynamicRealmObject o = new DynamicRealmObject(results.get(index));\n         //return new Entry(o.getFloat(yValuesField), o.getInt(xIndexField));\n         return mValues.get(index);\n@@ -101,7 +107,7 @@ public int getEntryIndex(int xIndex) {\n     }\n \n     @Override\n-    public int getEntryIndex(Entry e) {\n+    public int getEntryIndex(S e) {\n         return mValues.indexOf(e);\n     }\n \n@@ -117,12 +123,12 @@ public float getYValForXIndex(int xIndex) {\n     }\n \n     @Override\n-    public boolean addEntry(Entry e) {\n+    public boolean addEntry(S e) {\n         return false;\n     }\n \n     @Override\n-    public boolean removeEntry(Entry e) {\n+    public boolean removeEntry(S e) {\n         return false;\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java\n@@ -19,12 +19,18 @@\n /**\n  * Created by Philipp Jahoda on 21/10/15.\n  */\n-public class RealmLineDataSet<T extends RealmObject> extends RealmBaseDataSet<T> implements ILineDataSet {\n+public class RealmLineDataSet<T extends RealmObject> extends RealmBaseDataSet<T, Entry> implements ILineDataSet {\n \n     private FillFormatter mFillFormatter = new DefaultFillFormatter();\n \n     public RealmLineDataSet(RealmResults<T> result, String yValuesField, String xIndexField) {\n         super(result, yValuesField, xIndexField);\n+\n+        for (T object : this.results) {\n+\n+            DynamicRealmObject dynamicObject = new DynamicRealmObject(object);\n+            mValues.add(new Entry(dynamicObject.getFloat(yValuesField), dynamicObject.getInt(xIndexField)));\n+        }\n     }\n \n     @Override",
    "output": "Implement 1st version of RealmBarDataSet"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -605,8 +605,12 @@ public void addEntry(Entry e, int dataSetIndex) {\n \n         if (mDataSets.size() > dataSetIndex && dataSetIndex >= 0) {\n \n-            float val = e.getVal();\n             IDataSet set = mDataSets.get(dataSetIndex);\n+            // add the entry to the dataset\n+            if(!set.addEntry(e))\n+                return;\n+\n+            float val = e.getVal();\n \n             if (mYValCount == 0) {\n                 mYMin = val;\n@@ -645,8 +649,6 @@ public void addEntry(Entry e, int dataSetIndex) {\n \n             handleEmptyAxis(getFirstLeft(), getFirstRight());\n \n-            // add the entry to the dataset\n-            set.addEntry(e);\n         } else {\n             Log.e(\"addEntry\", \"Cannot add Entry because dataSetIndex too high or too low.\");\n         }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -378,10 +378,10 @@ public void clear() {\n     }\n \n     @Override\n-    public void addEntry(T e) {\n+    public boolean addEntry(T e) {\n \n         if (e == null)\n-            return;\n+            return false;\n \n         float val = e.getVal();\n \n@@ -402,6 +402,7 @@ public void addEntry(T e) {\n \n         // add the entry\n         yVals.add(e);\n+        return true;\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBaseDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBaseDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBaseDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBaseDataSet.java\n@@ -117,8 +117,8 @@ public float getYValForXIndex(int xIndex) {\n     }\n \n     @Override\n-    public void addEntry(Entry e) {\n-\n+    public boolean addEntry(Entry e) {\n+        return false;\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/IDataSet.java b/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/IDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/IDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/IDataSet.java\n@@ -105,7 +105,7 @@ public interface IDataSet<T extends Entry> {\n      *\n      * @param e\n      */\n-    void addEntry(T e);\n+    boolean addEntry(T e);\n \n     /**\n      * Removes an Entry from the DataSets entries array. This will also",
    "output": "Change void addEntry(...) to boolean addEntry(...)"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBaseDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBaseDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBaseDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmBaseDataSet.java\n@@ -0,0 +1,89 @@\n+package com.github.mikephil.charting.data.realm;\n+\n+import com.github.mikephil.charting.data.BaseDataSet;\n+import com.github.mikephil.charting.data.Entry;\n+\n+import io.realm.RealmObject;\n+import io.realm.RealmResults;\n+import io.realm.dynamic.DynamicRealmObject;\n+\n+/**\n+ * Created by Philipp Jahoda on 06/11/15.\n+ */\n+public abstract class RealmBaseDataSet<T extends RealmObject> extends BaseDataSet<Entry> {\n+\n+    private RealmResults<T> results;\n+    private String yValuesField;\n+    private String xIndexField;\n+\n+    public RealmBaseDataSet(RealmResults<T> results, String yValuesField, String xIndexField) {\n+        this.results = results;\n+        this.yValuesField = yValuesField;\n+        this.xIndexField = xIndexField;\n+\n+        this.results.sort(xIndexField, true);\n+\n+        for (T object : results) {\n+\n+            DynamicRealmObject dynamicObject = new DynamicRealmObject(object);\n+            //mValues.add(new Entry(dynamicObject.getFloat(yValuesField), dynamicObject.getInt(xIndexField)));\n+        }\n+    }\n+\n+    @Override\n+    public float getYMin() {\n+        return results.min(yValuesField).floatValue();\n+    }\n+\n+    @Override\n+    public float getYMax() {\n+        return results.max(yValuesField).floatValue();\n+    }\n+\n+    @Override\n+    public int getEntryCount() {\n+        return results.size();\n+    }\n+\n+    @Override\n+    public void calcMinMax(int start, int end) {\n+\n+    }\n+\n+    @Override\n+    public Entry getEntryForXIndex(int xIndex) {\n+\n+        DynamicRealmObject o = new DynamicRealmObject(results.where().equalTo(xIndexField, xIndex).findFirst());\n+        return new Entry(o.getFloat(yValuesField), o.getInt(xIndexField));\n+    }\n+\n+    @Override\n+    public Entry getEntryForIndex(int index) {\n+        return null;\n+    }\n+\n+    @Override\n+    public int getEntryIndex(int xIndex) {\n+        return 0;\n+    }\n+\n+    @Override\n+    public int getEntryIndex(Entry e) {\n+        return 0;\n+    }\n+\n+    @Override\n+    public float getYValForXIndex(int xIndex) {\n+        return new DynamicRealmObject(results.where().greaterThanOrEqualTo(xIndexField, xIndex).findFirst()).getFloat(yValuesField);\n+    }\n+\n+    @Override\n+    public void addEntry(Entry e) {\n+\n+    }\n+\n+    @Override\n+    public boolean removeEntry(Entry e) {\n+        return false;\n+    }\n+}\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java\n@@ -3,7 +3,6 @@\n import android.graphics.Color;\n import android.graphics.DashPathEffect;\n \n-import com.github.mikephil.charting.data.BaseDataSet;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.formatter.DefaultFillFormatter;\n import com.github.mikephil.charting.formatter.FillFormatter;\n@@ -14,43 +13,23 @@\n \n import io.realm.RealmObject;\n import io.realm.RealmResults;\n-import io.realm.dynamic.DynamicRealmObject;\n \n /**\n  * Created by Philipp Jahoda on 21/10/15.\n  */\n-public class RealmLineDataSet<T extends RealmObject> extends BaseDataSet<Entry> implements ILineDataSet {\n+public class RealmLineDataSet<T extends RealmObject> extends RealmBaseDataSet implements ILineDataSet {\n \n     private List<Entry> mValues = new ArrayList<>();\n \n     private FillFormatter mFillFormatter = new DefaultFillFormatter();\n \n-    private RealmResults<T> results;\n-    private String yValuesField;\n-    private String xIndexField;\n-\n     public RealmLineDataSet(RealmResults<T> result, String yValuesField, String xIndexField) {\n-        super(\"\");\n-        this.results = result;\n-        this.yValuesField = yValuesField;\n-        this.xIndexField = xIndexField;\n-\n-        results.sort(xIndexField, true);\n-\n-        for (T object : results) {\n-\n-            DynamicRealmObject dynamicObject = new DynamicRealmObject(object);\n-\n-            mValues.add(new Entry(dynamicObject.getFloat(yValuesField), dynamicObject.getInt(xIndexField)));\n-        }\n-\n-        calcMinMax(0, mValues.size());\n+        super(result, yValuesField, xIndexField);\n     }\n \n-\n     @Override\n     public float getCubicIntensity() {\n-        return 0;\n+        return 0.2f;\n     }\n \n     @Override\n@@ -70,12 +49,12 @@ public int getCircleColor(int index) {\n \n     @Override\n     public boolean isDrawCirclesEnabled() {\n-        return true;\n+        return false;\n     }\n \n     @Override\n     public int getCircleHoleColor() {\n-        return Color.BLACK;\n+        return 0;\n     }\n \n     @Override\n@@ -147,61 +126,4 @@ public DashPathEffect getDashPathEffectHighlight() {\n     public int getHighLightColor() {\n         return 0;\n     }\n-\n-    @Override\n-    public float getYMin() {\n-        return results.min(yValuesField).floatValue();\n-    }\n-\n-    @Override\n-    public float getYMax() {\n-        return results.max(yValuesField).floatValue();\n-    }\n-\n-    @Override\n-    public int getEntryCount() {\n-        return results.size();\n-    }\n-\n-    @Override\n-    public void calcMinMax(int start, int end) {\n-\n-    }\n-\n-    @Override\n-    public Entry getEntryForXIndex(int xIndex) {\n-\n-        DynamicRealmObject o = new DynamicRealmObject(results.where().equalTo(xIndexField, xIndex).findFirst());\n-        return new Entry(o.getFloat(yValuesField), o.getInt(xIndexField));\n-    }\n-\n-    @Override\n-    public Entry getEntryForIndex(int index) {\n-        return mValues.get(index);\n-    }\n-\n-    @Override\n-    public int getEntryIndex(int xIndex) {\n-        return 0;\n-    }\n-\n-    @Override\n-    public int getEntryIndex(Entry e) {\n-        return mValues.indexOf(e);\n-    }\n-\n-    @Override\n-    public float getYValForXIndex(int xIndex) {\n-        return new DynamicRealmObject(results.where().greaterThanOrEqualTo(xIndexField, xIndex).findFirst()).getFloat(yValuesField);\n-    }\n-\n-    @Override\n-    public void addEntry(Entry e) {\n-\n-    }\n-\n-    @Override\n-    public boolean removeEntry(Entry e) {\n-        return false;\n-    }\n }",
    "output": "Impleme3nt RealmBaseDataSet"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1522,40 +1522,59 @@ public boolean saveToPath(String title, String pathOnSD) {\n     }\n \n     /**\n-     * Saves the current state of the chart to the gallery as a JPEG image. The\n-     * filename and compression can be set. 0 == maximum compression, 100 = low\n+     * Saves the current state of the chart to the gallery as an image type. The\n+     * compression must be set for JPEG only. 0 == maximum compression, 100 = low\n      * compression (high quality). NOTE: Needs permission WRITE_EXTERNAL_STORAGE\n      *\n      * @param fileName e.g. \"my_image\"\n-     * @param quality  e.g. 50, min = 0, max = 100\n-     * @return returns true if saving was successfull, false if not\n+     * @param subFolderPath e.g. \"ChartPics\"\n+     * @param fileDescription e.g. \"Chart details\"\n+     * @param format e.g. Bitmap.CompressFormat.PNG\n+     * @param quality e.g. 50, min = 0, max = 100\n+     * @return returns true if saving was successful, false if not\n      */\n-    public boolean saveToGallery(String fileName, int quality) {\n-\n+    public boolean saveToGallery(String fileName, String subFolderPath, String fileDescription, Bitmap.CompressFormat format, int quality) {\n         // restrain quality\n         if (quality < 0 || quality > 100)\n             quality = 50;\n \n         long currentTime = System.currentTimeMillis();\n \n         File extBaseDir = Environment.getExternalStorageDirectory();\n-        File file = new File(extBaseDir.getAbsolutePath() + \"/DCIM\");\n+        File file = new File(extBaseDir.getAbsolutePath() + \"/DCIM/\" + subFolderPath);\n         if (!file.exists()) {\n             if (!file.mkdirs()) {\n                 return false;\n             }\n         }\n \n+        String mimeType = \"\";\n+        switch (format) {\n+            case PNG:\n+                mimeType = \"image/png\";\n+                if (!fileName.endsWith(\".png\"))\n+                    fileName += \".png\";\n+                    break;\n+            case WEBP:\n+                mimeType = \"image/webp\";\n+                if (!fileName.endsWith(\".webp\"))\n+                    fileName += \".webp\";\n+                break;\n+            case JPEG:\n+            default:\n+                mimeType = \"image/jpeg\";\n+                if (!(fileName.endsWith(\".jpg\") || fileName.endsWith(\".jpeg\")))\n+                    fileName += \".jpg\";\n+                break;\n+        }\n+\n         String filePath = file.getAbsolutePath() + \"/\" + fileName;\n         FileOutputStream out = null;\n         try {\n             out = new FileOutputStream(filePath);\n \n             Bitmap b = getChartBitmap();\n-\n-            b.compress(Bitmap.CompressFormat.JPEG, quality, out); // control\n-            // the jpeg\n-            // quality\n+            b.compress(format, quality, out);\n \n             out.flush();\n             out.close();\n@@ -1574,14 +1593,26 @@ public boolean saveToGallery(String fileName, int quality) {\n         values.put(Images.Media.TITLE, fileName);\n         values.put(Images.Media.DISPLAY_NAME, fileName);\n         values.put(Images.Media.DATE_ADDED, currentTime);\n-        values.put(Images.Media.MIME_TYPE, \"image/jpeg\");\n-        values.put(Images.Media.DESCRIPTION, \"MPAndroidChart-Library Save\");\n+        values.put(Images.Media.MIME_TYPE, mimeType);\n+        values.put(Images.Media.DESCRIPTION, fileDescription);\n         values.put(Images.Media.ORIENTATION, 0);\n         values.put(Images.Media.DATA, filePath);\n         values.put(Images.Media.SIZE, size);\n \n-        return getContext().getContentResolver().insert(Images.Media.EXTERNAL_CONTENT_URI, values) == null\n-                ? false : true;\n+        return getContext().getContentResolver().insert(Images.Media.EXTERNAL_CONTENT_URI, values) != null;\n+    }\n+\n+    /**\n+     * Saves the current state of the chart to the gallery as a JPEG image. The\n+     * filename and compression can be set. 0 == maximum compression, 100 = low\n+     * compression (high quality). NOTE: Needs permission WRITE_EXTERNAL_STORAGE\n+     *\n+     * @param fileName e.g. \"my_image\"\n+     * @param quality  e.g. 50, min = 0, max = 100\n+     * @return returns true if saving was successful, false if not\n+     */\n+    public boolean saveToGallery(String fileName, int quality) {\n+\t    return saveToGallery(fileName, \"\", \"MPAndroidChart-Library Save\", Bitmap.CompressFormat.JPEG, quality);\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java b/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java\n--- a/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java\n@@ -119,7 +119,7 @@ protected Highlight getStackedHighlight(Highlight old, IBarDataSet set, int xInd\n \t */\n \tprotected int getClosestStackIndex(Range[] ranges, float value) {\n \n-\t\tif (ranges == null)\n+\t\tif (ranges == null || ranges.length == 0)\n \t\t\treturn 0;\n \n \t\tint stackIndex = 0;\n@@ -188,7 +188,7 @@ protected Range[] getRanges(BarEntry entry) {\n \n \t\tfloat[] values = entry.getVals();\n \n-\t\tif (values == null)\n+\t\tif (values == null || values.length == 0)\n \t\t\treturn null;\n \n \t\tfloat negRemain = -entry.getNegativeSum();",
    "output": "Merge master"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1532,40 +1532,59 @@ public boolean saveToPath(String title, String pathOnSD) {\n     }\n \n     /**\n-     * Saves the current state of the chart to the gallery as a JPEG image. The\n-     * filename and compression can be set. 0 == maximum compression, 100 = low\n+     * Saves the current state of the chart to the gallery as an image type. The\n+     * compression must be set for JPEG only. 0 == maximum compression, 100 = low\n      * compression (high quality). NOTE: Needs permission WRITE_EXTERNAL_STORAGE\n      *\n      * @param fileName e.g. \"my_image\"\n-     * @param quality  e.g. 50, min = 0, max = 100\n-     * @return returns true if saving was successfull, false if not\n+     * @param subFolderPath e.g. \"ChartPics\"\n+     * @param fileDescription e.g. \"Chart details\"\n+     * @param format e.g. Bitmap.CompressFormat.PNG\n+     * @param quality e.g. 50, min = 0, max = 100\n+     * @return returns true if saving was successful, false if not\n      */\n-    public boolean saveToGallery(String fileName, int quality) {\n-\n+    public boolean saveToGallery(String fileName, String subFolderPath, String fileDescription, Bitmap.CompressFormat format, int quality) {\n         // restrain quality\n         if (quality < 0 || quality > 100)\n             quality = 50;\n \n         long currentTime = System.currentTimeMillis();\n \n         File extBaseDir = Environment.getExternalStorageDirectory();\n-        File file = new File(extBaseDir.getAbsolutePath() + \"/DCIM\");\n+        File file = new File(extBaseDir.getAbsolutePath() + \"/DCIM/\" + subFolderPath);\n         if (!file.exists()) {\n             if (!file.mkdirs()) {\n                 return false;\n             }\n         }\n \n+        String mimeType = \"\";\n+        switch (format) {\n+            case PNG:\n+                mimeType = \"image/png\";\n+                if (!fileName.endsWith(\".png\"))\n+                    fileName += \".png\";\n+                    break;\n+            case WEBP:\n+                mimeType = \"image/webp\";\n+                if (!fileName.endsWith(\".webp\"))\n+                    fileName += \".webp\";\n+                break;\n+            case JPEG:\n+            default:\n+                mimeType = \"image/jpeg\";\n+                if (!(fileName.endsWith(\".jpg\") || fileName.endsWith(\".jpeg\")))\n+                    fileName += \".jpg\";\n+                break;\n+        }\n+\n         String filePath = file.getAbsolutePath() + \"/\" + fileName;\n         FileOutputStream out = null;\n         try {\n             out = new FileOutputStream(filePath);\n \n             Bitmap b = getChartBitmap();\n-\n-            b.compress(Bitmap.CompressFormat.JPEG, quality, out); // control\n-            // the jpeg\n-            // quality\n+            b.compress(format, quality, out);\n \n             out.flush();\n             out.close();\n@@ -1584,14 +1603,26 @@ public boolean saveToGallery(String fileName, int quality) {\n         values.put(Images.Media.TITLE, fileName);\n         values.put(Images.Media.DISPLAY_NAME, fileName);\n         values.put(Images.Media.DATE_ADDED, currentTime);\n-        values.put(Images.Media.MIME_TYPE, \"image/jpeg\");\n-        values.put(Images.Media.DESCRIPTION, \"MPAndroidChart-Library Save\");\n+        values.put(Images.Media.MIME_TYPE, mimeType);\n+        values.put(Images.Media.DESCRIPTION, fileDescription);\n         values.put(Images.Media.ORIENTATION, 0);\n         values.put(Images.Media.DATA, filePath);\n         values.put(Images.Media.SIZE, size);\n \n-        return getContext().getContentResolver().insert(Images.Media.EXTERNAL_CONTENT_URI, values) == null\n-                ? false : true;\n+        return getContext().getContentResolver().insert(Images.Media.EXTERNAL_CONTENT_URI, values) != null;\n+    }\n+\n+    /**\n+     * Saves the current state of the chart to the gallery as a JPEG image. The\n+     * filename and compression can be set. 0 == maximum compression, 100 = low\n+     * compression (high quality). NOTE: Needs permission WRITE_EXTERNAL_STORAGE\n+     *\n+     * @param fileName e.g. \"my_image\"\n+     * @param quality  e.g. 50, min = 0, max = 100\n+     * @return returns true if saving was successful, false if not\n+     */\n+    public boolean saveToGallery(String fileName, int quality) {\n+\t    return saveToGallery(fileName, \"\", \"MPAndroidChart-Library Save\", Bitmap.CompressFormat.JPEG, quality);\n     }\n \n     /**",
    "output": "Merge PR"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java b/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java\n--- a/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java\n@@ -119,7 +119,7 @@ protected Highlight getStackedHighlight(Highlight old, BarDataSet set, int xInde\n \t */\n \tprotected int getClosestStackIndex(Range[] ranges, float value) {\n \n-\t\tif (ranges == null)\n+\t\tif (ranges == null || ranges.length == 0)\n \t\t\treturn 0;\n \n \t\tint stackIndex = 0;\n@@ -188,7 +188,7 @@ protected Range[] getRanges(BarEntry entry) {\n \n \t\tfloat[] values = entry.getVals();\n \n-\t\tif (values == null)\n+\t\tif (values == null || values.length == 0)\n \t\t\treturn null;\n \n \t\tfloat negRemain = -entry.getNegativeSum();",
    "output": "Fix #1168"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1532,40 +1532,59 @@ public boolean saveToPath(String title, String pathOnSD) {\n     }\n \n     /**\n-     * Saves the current state of the chart to the gallery as a JPEG image. The\n-     * filename and compression can be set. 0 == maximum compression, 100 = low\n+     * Saves the current state of the chart to the gallery as an image type. The\n+     * compression must be set for JPEG only. 0 == maximum compression, 100 = low\n      * compression (high quality). NOTE: Needs permission WRITE_EXTERNAL_STORAGE\n      *\n      * @param fileName e.g. \"my_image\"\n-     * @param quality  e.g. 50, min = 0, max = 100\n-     * @return returns true if saving was successfull, false if not\n+     * @param subFolderPath e.g. \"ChartPics\"\n+     * @param fileDescription e.g. \"Chart details\"\n+     * @param format e.g. Bitmap.CompressFormat.PNG\n+     * @param quality e.g. 50, min = 0, max = 100\n+     * @return returns true if saving was successful, false if not\n      */\n-    public boolean saveToGallery(String fileName, int quality) {\n-\n+    public boolean saveToGallery(String fileName, String subFolderPath, String fileDescription, Bitmap.CompressFormat format, int quality) {\n         // restrain quality\n         if (quality < 0 || quality > 100)\n             quality = 50;\n \n         long currentTime = System.currentTimeMillis();\n \n         File extBaseDir = Environment.getExternalStorageDirectory();\n-        File file = new File(extBaseDir.getAbsolutePath() + \"/DCIM\");\n+        File file = new File(extBaseDir.getAbsolutePath() + \"/DCIM/\" + subFolderPath);\n         if (!file.exists()) {\n             if (!file.mkdirs()) {\n                 return false;\n             }\n         }\n \n+        String mimeType = \"\";\n+        switch (format) {\n+            case PNG:\n+                mimeType = \"image/png\";\n+                if (!fileName.endsWith(\".png\"))\n+                    fileName += \".png\";\n+                    break;\n+            case WEBP:\n+                mimeType = \"image/webp\";\n+                if (!fileName.endsWith(\".webp\"))\n+                    fileName += \".webp\";\n+                break;\n+            case JPEG:\n+            default:\n+                mimeType = \"image/jpeg\";\n+                if (!(fileName.endsWith(\".jpg\") || fileName.endsWith(\".jpeg\")))\n+                    fileName += \".jpg\";\n+                break;\n+        }\n+\n         String filePath = file.getAbsolutePath() + \"/\" + fileName;\n         FileOutputStream out = null;\n         try {\n             out = new FileOutputStream(filePath);\n \n             Bitmap b = getChartBitmap();\n-\n-            b.compress(Bitmap.CompressFormat.JPEG, quality, out); // control\n-            // the jpeg\n-            // quality\n+            b.compress(format, quality, out);\n \n             out.flush();\n             out.close();\n@@ -1584,14 +1603,26 @@ public boolean saveToGallery(String fileName, int quality) {\n         values.put(Images.Media.TITLE, fileName);\n         values.put(Images.Media.DISPLAY_NAME, fileName);\n         values.put(Images.Media.DATE_ADDED, currentTime);\n-        values.put(Images.Media.MIME_TYPE, \"image/jpeg\");\n-        values.put(Images.Media.DESCRIPTION, \"MPAndroidChart-Library Save\");\n+        values.put(Images.Media.MIME_TYPE, mimeType);\n+        values.put(Images.Media.DESCRIPTION, fileDescription);\n         values.put(Images.Media.ORIENTATION, 0);\n         values.put(Images.Media.DATA, filePath);\n         values.put(Images.Media.SIZE, size);\n \n-        return getContext().getContentResolver().insert(Images.Media.EXTERNAL_CONTENT_URI, values) == null\n-                ? false : true;\n+        return getContext().getContentResolver().insert(Images.Media.EXTERNAL_CONTENT_URI, values) != null;\n+    }\n+\n+    /**\n+     * Saves the current state of the chart to the gallery as a JPEG image. The\n+     * filename and compression can be set. 0 == maximum compression, 100 = low\n+     * compression (high quality). NOTE: Needs permission WRITE_EXTERNAL_STORAGE\n+     *\n+     * @param fileName e.g. \"my_image\"\n+     * @param quality  e.g. 50, min = 0, max = 100\n+     * @return returns true if saving was successful, false if not\n+     */\n+    public boolean saveToGallery(String fileName, int quality) {\n+\t    return saveToGallery(fileName, \"\", \"MPAndroidChart-Library Save\", Bitmap.CompressFormat.JPEG, quality);\n     }\n \n     /**",
    "output": "Merge pull request #1179 from Adric/save-options\n\nSet image format and subdirectory when saving to gallery"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1532,40 +1532,59 @@ public boolean saveToPath(String title, String pathOnSD) {\n     }\n \n     /**\n-     * Saves the current state of the chart to the gallery as a JPEG image. The\n-     * filename and compression can be set. 0 == maximum compression, 100 = low\n+     * Saves the current state of the chart to the gallery as an image type. The\n+     * compression must be set for JPEG only. 0 == maximum compression, 100 = low\n      * compression (high quality). NOTE: Needs permission WRITE_EXTERNAL_STORAGE\n      *\n      * @param fileName e.g. \"my_image\"\n-     * @param quality  e.g. 50, min = 0, max = 100\n-     * @return returns true if saving was successfull, false if not\n+     * @param subFolderPath e.g. \"ChartPics\"\n+     * @param fileDescription e.g. \"Chart details\"\n+     * @param format e.g. Bitmap.CompressFormat.PNG\n+     * @param quality e.g. 50, min = 0, max = 100\n+     * @return returns true if saving was successful, false if not\n      */\n-    public boolean saveToGallery(String fileName, int quality) {\n-\n+    public boolean saveToGallery(String fileName, String subFolderPath, String fileDescription, Bitmap.CompressFormat format, int quality) {\n         // restrain quality\n         if (quality < 0 || quality > 100)\n             quality = 50;\n \n         long currentTime = System.currentTimeMillis();\n \n         File extBaseDir = Environment.getExternalStorageDirectory();\n-        File file = new File(extBaseDir.getAbsolutePath() + \"/DCIM\");\n+        File file = new File(extBaseDir.getAbsolutePath() + \"/DCIM/\" + subFolderPath);\n         if (!file.exists()) {\n             if (!file.mkdirs()) {\n                 return false;\n             }\n         }\n \n+        String mimeType = \"\";\n+        switch (format) {\n+            case PNG:\n+                mimeType = \"image/png\";\n+                if (!fileName.endsWith(\".png\"))\n+                    fileName += \".png\";\n+                    break;\n+            case WEBP:\n+                mimeType = \"image/webp\";\n+                if (!fileName.endsWith(\".webp\"))\n+                    fileName += \".webp\";\n+                break;\n+            case JPEG:\n+            default:\n+                mimeType = \"image/jpeg\";\n+                if (!(fileName.endsWith(\".jpg\") || fileName.endsWith(\".jpeg\")))\n+                    fileName += \".jpg\";\n+                break;\n+        }\n+\n         String filePath = file.getAbsolutePath() + \"/\" + fileName;\n         FileOutputStream out = null;\n         try {\n             out = new FileOutputStream(filePath);\n \n             Bitmap b = getChartBitmap();\n-\n-            b.compress(Bitmap.CompressFormat.JPEG, quality, out); // control\n-            // the jpeg\n-            // quality\n+            b.compress(format, quality, out);\n \n             out.flush();\n             out.close();\n@@ -1584,14 +1603,26 @@ public boolean saveToGallery(String fileName, int quality) {\n         values.put(Images.Media.TITLE, fileName);\n         values.put(Images.Media.DISPLAY_NAME, fileName);\n         values.put(Images.Media.DATE_ADDED, currentTime);\n-        values.put(Images.Media.MIME_TYPE, \"image/jpeg\");\n-        values.put(Images.Media.DESCRIPTION, \"MPAndroidChart-Library Save\");\n+        values.put(Images.Media.MIME_TYPE, mimeType);\n+        values.put(Images.Media.DESCRIPTION, fileDescription);\n         values.put(Images.Media.ORIENTATION, 0);\n         values.put(Images.Media.DATA, filePath);\n         values.put(Images.Media.SIZE, size);\n \n-        return getContext().getContentResolver().insert(Images.Media.EXTERNAL_CONTENT_URI, values) == null\n-                ? false : true;\n+        return getContext().getContentResolver().insert(Images.Media.EXTERNAL_CONTENT_URI, values) != null;\n+    }\n+\n+    /**\n+     * Saves the current state of the chart to the gallery as a JPEG image. The\n+     * filename and compression can be set. 0 == maximum compression, 100 = low\n+     * compression (high quality). NOTE: Needs permission WRITE_EXTERNAL_STORAGE\n+     *\n+     * @param fileName e.g. \"my_image\"\n+     * @param quality  e.g. 50, min = 0, max = 100\n+     * @return returns true if saving was successful, false if not\n+     */\n+    public boolean saveToGallery(String fileName, int quality) {\n+\t    return saveToGallery(fileName, \"\", \"MPAndroidChart-Library Save\", Bitmap.CompressFormat.JPEG, quality);\n     }\n \n     /**",
    "output": "Added ability to set image format and subdirectory when saving to gallery"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -103,9 +103,9 @@ public abstract class BarLineChartBase<T extends BarLineScatterCandleBubbleData<\n     protected boolean mDrawBorders = false;\n \n     /**\n-     * Sets the minimum offset (padding) around the chart, defaults to 10\n+     * Sets the minimum offset (padding) around the chart, defaults to 15\n      */\n-    protected float mMinOffset = 10.f;\n+    protected float mMinOffset = 15.f;\n \n     /**\n      * the listener for user drawing on the chart\n@@ -1133,12 +1133,12 @@ public void setBorderColor(int color) {\n         mBorderPaint.setColor(color);\n     }\n \n-    /** Gets the minimum offset (padding) around the chart, defaults to 10.f */\n+    /** Gets the minimum offset (padding) around the chart, defaults to 15.f */\n     public float getMinOffset() {\n         return mMinOffset;\n     }\n \n-    /** Sets the minimum offset (padding) around the chart, defaults to 10.f */\n+    /** Sets the minimum offset (padding) around the chart, defaults to 15.f */\n     public void setMinOffset(float minOffset) {\n         mMinOffset = minOffset;\n     }",
    "output": "Merge master"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -103,9 +103,9 @@ public abstract class BarLineChartBase<T extends BarLineScatterCandleBubbleData<\n     protected boolean mDrawBorders = false;\n \n     /**\n-     * Sets the minimum offset (padding) around the chart, defaults to 10\n+     * Sets the minimum offset (padding) around the chart, defaults to 15\n      */\n-    protected float mMinOffset = 10.f;\n+    protected float mMinOffset = 15.f;\n \n     /**\n      * the listener for user drawing on the chart\n@@ -1133,12 +1133,12 @@ public void setBorderColor(int color) {\n         mBorderPaint.setColor(color);\n     }\n \n-    /** Gets the minimum offset (padding) around the chart, defaults to 10.f */\n+    /** Gets the minimum offset (padding) around the chart, defaults to 15.f */\n     public float getMinOffset() {\n         return mMinOffset;\n     }\n \n-    /** Sets the minimum offset (padding) around the chart, defaults to 10.f */\n+    /** Sets the minimum offset (padding) around the chart, defaults to 15.f */\n     public void setMinOffset(float minOffset) {\n         mMinOffset = minOffset;\n     }",
    "output": "Change default minoffset to 15 (instead of 10)"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -130,15 +130,14 @@ protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n \n         float angle = mChart.getRotationAngle();\n \n-        List<Entry> entries = dataSet.getYVals();\n         float[] drawAngles = mChart.getDrawAngles();\n \n-        for (int j = 0; j < entries.size(); j++) {\n+        for (int j = 0; j < dataSet.getEntryCount(); j++) {\n \n             float newangle = drawAngles[j];\n             float sliceSpace = dataSet.getSliceSpace();\n \n-            Entry e = entries.get(j);\n+            Entry e = dataSet.getEntryForIndex(j);\n \n             // draw only if the value is greater than zero\n             if ((Math.abs(e.getVal()) > 0.000001)) {\n@@ -196,12 +195,12 @@ public void drawValues(Canvas c) {\n             float lineHeight = Utils.calcTextHeight(mValuePaint, \"Q\")\n                     + Utils.convertDpToPixel(4f);\n \n-            List<Entry> entries = dataSet.getYVals();\n+            int entryCount = dataSet.getEntryCount();\n \n             for (int j = 0, maxEntry = Math.min(\n-                    (int) Math.ceil(entries.size() * mAnimator.getPhaseX()), entries.size()); j < maxEntry; j++) {\n+                    (int) Math.ceil(entryCount * mAnimator.getPhaseX()), entryCount); j < maxEntry; j++) {\n \n-                Entry entry = entries.get(j);\n+                Entry entry = dataSet.getEntryForIndex(j);\n \n                 // offset needed to center the drawn text in the slice\n                 float offset = drawAngles[cnt] / 2;\n@@ -458,15 +457,14 @@ protected void drawRoundedSlices(Canvas c) {\n         // calculate the radius of the \"slice-circle\"\n         float circleRadius = (r - (r * mChart.getHoleRadius() / 100f)) / 2f;\n \n-        List<Entry> entries = dataSet.getYVals();\n         float[] drawAngles = mChart.getDrawAngles();\n         float angle = mChart.getRotationAngle();\n \n-        for (int j = 0; j < entries.size(); j++) {\n+        for (int j = 0; j < dataSet.getEntryCount(); j++) {\n \n             float newangle = drawAngles[j];\n \n-            Entry e = entries.get(j);\n+            Entry e = dataSet.getEntryForIndex(j);\n \n             // draw only if the value is greater than zero\n             if ((Math.abs(e.getVal()) > 0.000001)) {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n@@ -16,8 +16,6 @@\n import com.github.mikephil.charting.utils.Utils;\n import com.github.mikephil.charting.utils.ViewPortHandler;\n \n-import java.util.List;\n-\n public class RadarChartRenderer extends LineScatterCandleRadarRenderer {\n \n     protected RadarChart mChart;\n@@ -73,17 +71,15 @@ protected void drawDataSet(Canvas c, IRadarDataSet dataSet) {\n \n         PointF center = mChart.getCenterOffsets();\n \n-        List<Entry> entries = dataSet.getYVals();\n-\n         Path surface = new Path();\n \n         boolean hasMovedToPoint = false;\n \n-        for (int j = 0; j < entries.size(); j++) {\n+        for (int j = 0; j < dataSet.getEntryCount(); j++) {\n \n             mRenderPaint.setColor(dataSet.getColor(j));\n \n-            Entry e = entries.get(j);\n+            Entry e = dataSet.getEntryForIndex(j);\n \n             PointF p = Utils.getPosition(center, (e.getVal() - mChart.getYChartMin()) * factor,\n                     sliceangle * j + mChart.getRotationAngle());\n@@ -139,11 +135,9 @@ public void drawValues(Canvas c) {\n             // apply the text-styling defined by the DataSet\n             applyValueTextStyle(dataSet);\n \n-            List<Entry> entries = dataSet.getYVals();\n-\n-            for (int j = 0; j < entries.size(); j++) {\n+            for (int j = 0; j < dataSet.getEntryCount(); j++) {\n \n-                Entry entry = entries.get(j);\n+                Entry entry = dataSet.getEntryForIndex(j);\n \n                 PointF p = Utils.getPosition(center, (entry.getVal() - mChart.getYChartMin()) * factor,\n                         sliceangle * j + mChart.getRotationAngle());",
    "output": "Remove getYVals() method from Radar- & PieRenderer"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/buffer/ScatterBuffer.java b/MPChartLib/src/com/github/mikephil/charting/buffer/ScatterBuffer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/buffer/ScatterBuffer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/buffer/ScatterBuffer.java\n@@ -2,10 +2,9 @@\n package com.github.mikephil.charting.buffer;\n \n import com.github.mikephil.charting.data.Entry;\n+import com.github.mikephil.charting.interfaces.datasets.IScatterDataSet;\n \n-import java.util.List;\n-\n-public class ScatterBuffer extends AbstractBuffer<Entry> {\n+public class ScatterBuffer extends AbstractBuffer<IScatterDataSet> {\n     \n     public ScatterBuffer(int size) {\n         super(size);\n@@ -17,13 +16,13 @@ protected void addForm(float x, float y) {\n     }\n \n     @Override\n-    public void feed(List<Entry> entries) {\n+    public void feed(IScatterDataSet data) {\n         \n-        float size = entries.size() * phaseX;\n+        float size = data.getEntryCount() * phaseX;\n         \n         for (int i = 0; i < size; i++) {\n \n-            Entry e = entries.get(i);\n+            Entry e = data.getEntryForIndex(i);\n             addForm(e.getXIndex(), e.getVal() * phaseY);\n         }\n         \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n@@ -11,8 +11,8 @@\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.ScatterData;\n import com.github.mikephil.charting.highlight.Highlight;\n-import com.github.mikephil.charting.interfaces.datasets.IScatterDataSet;\n import com.github.mikephil.charting.interfaces.dataprovider.ScatterDataProvider;\n+import com.github.mikephil.charting.interfaces.datasets.IScatterDataSet;\n import com.github.mikephil.charting.utils.Transformer;\n import com.github.mikephil.charting.utils.Utils;\n import com.github.mikephil.charting.utils.ViewPortHandler;\n@@ -26,7 +26,7 @@ public class ScatterChartRenderer extends LineScatterCandleRadarRenderer {\n     protected ScatterBuffer[] mScatterBuffers;\n \n     public ScatterChartRenderer(ScatterDataProvider chart, ChartAnimator animator,\n-            ViewPortHandler viewPortHandler) {\n+                                ViewPortHandler viewPortHandler) {\n         super(animator, viewPortHandler);\n         mChart = chart;\n \n@@ -65,16 +65,14 @@ protected void drawDataSet(Canvas c, IScatterDataSet dataSet) {\n         float phaseX = mAnimator.getPhaseX();\n         float phaseY = mAnimator.getPhaseY();\n \n-        List<Entry> entries = dataSet.getYVals();\n-\n         float shapeHalf = dataSet.getScatterShapeSize() / 2f;\n \n         ScatterShape shape = dataSet.getScatterShape();\n \n         ScatterBuffer buffer = mScatterBuffers[mChart.getScatterData().getIndexOfDataSet(\n                 dataSet)];\n         buffer.setPhases(phaseX, phaseY);\n-        buffer.feed(entries);\n+        buffer.feed(dataSet);\n \n         trans.pointValuesToPixel(buffer.buffer);\n \n@@ -215,10 +213,8 @@ public void drawValues(Canvas c) {\n                 // apply the text-styling defined by the DataSet\n                 applyValueTextStyle(dataSet);\n \n-                List<Entry> entries = dataSet.getYVals();\n-\n                 float[] positions = mChart.getTransformer(dataSet.getAxisDependency())\n-                        .generateTransformedValuesScatter(entries,\n+                        .generateTransformedValuesScatter(dataSet,\n                                 mAnimator.getPhaseY());\n \n                 float shapeSize = dataSet.getScatterShapeSize();\n@@ -233,7 +229,7 @@ public void drawValues(Canvas c) {\n                             || !mViewPortHandler.isInBoundsY(positions[j + 1])))\n                         continue;\n \n-                    Entry entry = entries.get(j / 2);\n+                    Entry entry = dataSet.getEntryForIndex(j / 2);\n \n                     drawValue(c, dataSet.getValueFormatter(), entry.getVal(), entry, i, positions[j],\n                             positions[j + 1] - shapeSize);\n@@ -258,7 +254,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n                 continue;\n \n             int xIndex = indices[i].getXIndex(); // get the\n-                                                 // x-position\n+            // x-position\n \n \n             if (xIndex > mChart.getXChartMax() * mAnimator.getPhaseX())\n@@ -270,7 +266,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n             float y = yVal * mAnimator.getPhaseY();\n \n-            float[] pts = new float[] {\n+            float[] pts = new float[]{\n                     xIndex, y\n             };\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n@@ -10,6 +10,7 @@\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;\n import com.github.mikephil.charting.interfaces.datasets.ILineDataSet;\n+import com.github.mikephil.charting.interfaces.datasets.IScatterDataSet;\n \n import java.util.List;\n \n@@ -89,17 +90,17 @@ public void prepareMatrixOffset(boolean inverted) {\n      * Transforms an List of Entry into a float array containing the x and\n      * y values transformed with all matrices for the SCATTERCHART.\n      *\n-     * @param entries\n+     * @param data\n      * @return\n      */\n-    public float[] generateTransformedValuesScatter(List<? extends Entry> entries,\n+    public float[] generateTransformedValuesScatter(IScatterDataSet data,\n                                                     float phaseY) {\n \n-        float[] valuePoints = new float[entries.size() * 2];\n+        float[] valuePoints = new float[data.getEntryCount() * 2];\n \n         for (int j = 0; j < valuePoints.length; j += 2) {\n \n-            Entry e = entries.get(j / 2);\n+            Entry e = data.getEntryForIndex(j / 2);\n \n             if (e != null) {\n                 valuePoints[j] = e.getXIndex();",
    "output": "Remove getYVals() method ScatterRenderer"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n@@ -65,7 +65,7 @@ protected void drawDataSet(Canvas c, BarDataSet dataSet, int index) {\n         buffer.setDataSet(index);\n         buffer.setInverted(mChart.isInverted(dataSet.getAxisDependency()));\n \n-        buffer.feed(entries);\n+        buffer.feed(dataSet);\n \n         trans.pointValuesToPixel(buffer.buffer);\n \n@@ -121,9 +121,7 @@ public void drawValues(Canvas c) {\n \n                 Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n \n-                List<BarEntry> entries = dataSet.getYVals();\n-\n-                float[] valuePoints = getTransformedValues(trans, entries, i);\n+                float[] valuePoints = getTransformedValues(trans, dataSet, i);\n \n                 // if only single values are drawn (sum)\n                 if (!dataSet.isStacked()) {\n@@ -139,7 +137,7 @@ public void drawValues(Canvas c) {\n                         if (!mViewPortHandler.isInBoundsBottom(valuePoints[j + 1]))\n                             continue;\n \n-                        BarEntry e = entries.get(j / 2);\n+                        BarEntry e = dataSet.getEntryForIndex(j / 2);\n                         float val = e.getVal();\n                         String formattedValue = formatter.getFormattedValue(val, e, i, mViewPortHandler);\n \n@@ -162,7 +160,7 @@ public void drawValues(Canvas c) {\n \n                     for (int j = 0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j += 2) {\n \n-                        BarEntry e = entries.get(j / 2);\n+                        BarEntry e = dataSet.getEntryForIndex(j / 2);\n \n                         float[] vals = e.getVals();\n \n@@ -278,9 +276,9 @@ protected void prepareBarHighlight(float x, float y1, float y2, float barspaceHa\n     }\n \n     @Override\n-    public float[] getTransformedValues(Transformer trans, List<BarEntry> entries,\n+    public float[] getTransformedValues(Transformer trans, IBarDataSet data,\n             int dataSetIndex) {\n-        return trans.generateTransformedValuesHorizontalBarChart(entries, dataSetIndex,\n+        return trans.generateTransformedValuesHorizontalBarChart(data, dataSetIndex,\n                 mChart.getBarData(), mAnimator.getPhaseY());\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n@@ -240,21 +240,21 @@ public float[] generateTransformedValuesBarChart(IBarDataSet data,\n      * Transforms an List of Entry into a float array containing the x and\n      * y values transformed with all matrices for the BARCHART.\n      *\n-     * @param entries\n+     * @param data\n      * @param dataSet the dataset index\n      * @return\n      */\n-    public float[] generateTransformedValuesHorizontalBarChart(List<? extends Entry> entries,\n+    public float[] generateTransformedValuesHorizontalBarChart(IBarDataSet data,\n                                                                int dataSet, BarData bd, float phaseY) {\n \n-        float[] valuePoints = new float[entries.size() * 2];\n+        float[] valuePoints = new float[data.getEntryCount() * 2];\n \n         int setCount = bd.getDataSetCount();\n         float space = bd.getGroupSpace();\n \n         for (int j = 0; j < valuePoints.length; j += 2) {\n \n-            Entry e = entries.get(j / 2);\n+            Entry e = data.getEntryForIndex(j / 2);\n             int i = e.getXIndex();\n \n             // calculate the x-position, depending on datasetcount",
    "output": "Remove getYVals() method HorizontalBarRenderer"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java b/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java\n@@ -2,10 +2,9 @@\n package com.github.mikephil.charting.buffer;\n \n import com.github.mikephil.charting.data.BarEntry;\n+import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;\n \n-import java.util.List;\n-\n-public class BarBuffer extends AbstractBuffer<BarEntry> {\n+public class BarBuffer extends AbstractBuffer<IBarDataSet> {\n \n     protected float mBarSpace = 0f;\n     protected float mGroupSpace = 0f;\n@@ -42,9 +41,9 @@ protected void addBar(float left, float top, float right, float bottom) {\n     }\n \n     @Override\n-    public void feed(List<BarEntry> entries) {\n+    public void feed(IBarDataSet data) {\n \n-        float size = entries.size() * phaseX;\n+        float size = data.getEntryCount() * phaseX;\n \n         int dataSetOffset = (mDataSetCount - 1);\n         float barSpaceHalf = mBarSpace / 2f;\n@@ -53,7 +52,7 @@ public void feed(List<BarEntry> entries) {\n \n         for (int i = 0; i < size; i++) {\n \n-            BarEntry e = entries.get(i);\n+            BarEntry e = data.getEntryForIndex(i);\n \n             // calculate the x-position, depending on datasetcount\n             float x = e.getXIndex() + e.getXIndex() * dataSetOffset + mDataSetIndex\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -12,9 +12,9 @@\n import com.github.mikephil.charting.buffer.BarBuffer;\n import com.github.mikephil.charting.data.BarData;\n import com.github.mikephil.charting.data.BarEntry;\n-import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;\n-import com.github.mikephil.charting.interfaces.dataprovider.BarDataProvider;\n import com.github.mikephil.charting.highlight.Highlight;\n+import com.github.mikephil.charting.interfaces.dataprovider.BarDataProvider;\n+import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;\n import com.github.mikephil.charting.utils.Transformer;\n import com.github.mikephil.charting.utils.Utils;\n import com.github.mikephil.charting.utils.ViewPortHandler;\n@@ -85,16 +85,14 @@ protected void drawDataSet(Canvas c, IBarDataSet dataSet, int index) {\n         float phaseX = mAnimator.getPhaseX();\n         float phaseY = mAnimator.getPhaseY();\n \n-        List<BarEntry> entries = dataSet.getYVals();\n-\n         // initialize the buffer\n         BarBuffer buffer = mBarBuffers[index];\n         buffer.setPhases(phaseX, phaseY);\n         buffer.setBarSpace(dataSet.getBarSpace());\n         buffer.setDataSet(index);\n         buffer.setInverted(mChart.isInverted(dataSet.getAxisDependency()));\n \n-        buffer.feed(entries);\n+        buffer.feed(dataSet);\n \n         trans.pointValuesToPixel(buffer.buffer);\n \n@@ -207,9 +205,7 @@ public void drawValues(Canvas c) {\n \n                 Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n \n-                List<BarEntry> entries = dataSet.getYVals();\n-\n-                float[] valuePoints = getTransformedValues(trans, entries, i);\n+                float[] valuePoints = getTransformedValues(trans, dataSet, i);\n \n                 // if only single values are drawn (sum)\n                 if (!dataSet.isStacked()) {\n@@ -223,7 +219,7 @@ public void drawValues(Canvas c) {\n                                 || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))\n                             continue;\n \n-                        BarEntry entry = entries.get(j / 2);\n+                        BarEntry entry = dataSet.getEntryForIndex(j / 2);\n                         float val = entry.getVal();\n \n                         drawValue(c, dataSet.getValueFormatter(), val, entry, i, valuePoints[j],\n@@ -235,7 +231,7 @@ public void drawValues(Canvas c) {\n \n                     for (int j = 0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j += 2) {\n \n-                        BarEntry entry = entries.get(j / 2);\n+                        BarEntry entry = dataSet.getEntryForIndex(j / 2);\n \n                         float[] vals = entry.getVals();\n \n@@ -384,9 +380,9 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n         }\n     }\n \n-    public float[] getTransformedValues(Transformer trans, List<BarEntry> entries,\n+    public float[] getTransformedValues(Transformer trans, IBarDataSet data,\n             int dataSetIndex) {\n-        return trans.generateTransformedValuesBarChart(entries, dataSetIndex,\n+        return trans.generateTransformedValuesBarChart(data, dataSetIndex,\n                 mChart.getBarData(),\n                 mAnimator.getPhaseY());\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n@@ -8,6 +8,7 @@\n import com.github.mikephil.charting.data.BarData;\n import com.github.mikephil.charting.data.CandleEntry;\n import com.github.mikephil.charting.data.Entry;\n+import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;\n import com.github.mikephil.charting.interfaces.datasets.ILineDataSet;\n \n import java.util.List;\n@@ -202,25 +203,27 @@ public float[] generateTransformedValuesCandle(List<CandleEntry> entries,\n      * Transforms an List of Entry into a float array containing the x and\n      * y values transformed with all matrices for the BARCHART.\n      *\n-     * @param entries\n-     * @param dataSet the dataset index\n+     * @param data\n+     * @param dataSetIndex the dataset index\n+     * @param bd\n+     * @param phaseY\n      * @return\n      */\n-    public float[] generateTransformedValuesBarChart(List<? extends Entry> entries,\n-                                                     int dataSet, BarData bd, float phaseY) {\n+    public float[] generateTransformedValuesBarChart(IBarDataSet data,\n+                                                     int dataSetIndex, BarData bd, float phaseY) {\n \n-        float[] valuePoints = new float[entries.size() * 2];\n+        float[] valuePoints = new float[data.getEntryCount() * 2];\n \n         int setCount = bd.getDataSetCount();\n         float space = bd.getGroupSpace();\n \n         for (int j = 0; j < valuePoints.length; j += 2) {\n \n-            Entry e = entries.get(j / 2);\n+            Entry e = data.getEntryForIndex(j / 2);\n             int i = e.getXIndex();\n \n             // calculate the x-position, depending on datasetcount\n-            float x = e.getXIndex() + i * (setCount - 1) + dataSet + space * i\n+            float x = e.getXIndex() + i * (setCount - 1) + dataSetIndex + space * i\n                     + space / 2f;\n             float y = e.getVal();\n ",
    "output": "Remove getYVals() method BarRenderer"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n@@ -24,6 +24,7 @@\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.PieData;\n import com.github.mikephil.charting.data.PieDataSet;\n+import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IDataSet;\n import com.github.mikephil.charting.listener.OnChartValueSelectedListener;\n import com.github.mikephil.charting.utils.ColorTemplate;\n import com.github.mikephil.charting.highlight.Highlight;\n@@ -116,7 +117,7 @@ public boolean onOptionsItemSelected(MenuItem item) {\n \n         switch (item.getItemId()) {\n             case R.id.actionToggleValues: {\n-                for (DataSet<?> set : mChart.getData().getDataSets())\n+                for (IDataSet<?> set : mChart.getData().getDataSets())\n                     set.setDrawValues(!set.isDrawValuesEnabled());\n \n                 mChart.invalidate();\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java\n@@ -14,10 +14,11 @@\n import com.github.mikephil.charting.components.Legend.LegendPosition;\n import com.github.mikephil.charting.components.XAxis;\n import com.github.mikephil.charting.components.YAxis;\n-import com.github.mikephil.charting.data.DataSet;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.RadarData;\n import com.github.mikephil.charting.data.RadarDataSet;\n+import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IDataSet;\n+import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IRadarDataSet;\n import com.github.mikephil.charting.utils.ColorTemplate;\n import com.xxmassdeveloper.mpchartexample.custom.MyMarkerView;\n import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n@@ -83,14 +84,14 @@ public boolean onOptionsItemSelected(MenuItem item) {\n \n         switch (item.getItemId()) {\n             case R.id.actionToggleValues: {\n-                for (DataSet<?> set : mChart.getData().getDataSets())\n+                for (IDataSet<?> set : mChart.getData().getDataSets())\n                     set.setDrawValues(!set.isDrawValuesEnabled());\n \n                 mChart.invalidate();\n                 break;\n             }\n             case R.id.actionToggleHighlight: {\n-                if(mChart.getData() != null) {\n+                if (mChart.getData() != null) {\n                     mChart.getData().setHighlightEnabled(!mChart.getData().isHighlightEnabled());\n                     mChart.invalidate();\n                 }\n@@ -106,10 +107,10 @@ public boolean onOptionsItemSelected(MenuItem item) {\n             }\n             case R.id.actionToggleFilled: {\n \n-                ArrayList<RadarDataSet> sets = (ArrayList<RadarDataSet>) mChart.getData()\n+                ArrayList<IRadarDataSet> sets = (ArrayList<IRadarDataSet>) mChart.getData()\n                         .getDataSets();\n \n-                for (RadarDataSet set : sets) {\n+                for (IRadarDataSet set : sets) {\n                     if (set.isDrawFilledEnabled())\n                         set.setDrawFilled(false);\n                     else\n@@ -147,7 +148,7 @@ public boolean onOptionsItemSelected(MenuItem item) {\n         return true;\n     }\n \n-    private String[] mParties = new String[] {\n+    private String[] mParties = new String[]{\n             \"Party A\", \"Party B\", \"Party C\", \"Party D\", \"Party E\", \"Party F\", \"Party G\", \"Party H\",\n             \"Party I\"\n     };\n@@ -186,7 +187,7 @@ public void setData() {\n         set2.setDrawFilled(true);\n         set2.setLineWidth(2f);\n \n-        ArrayList<RadarDataSet> sets = new ArrayList<RadarDataSet>();\n+        ArrayList<IRadarDataSet> sets = new ArrayList<IRadarDataSet>();\n         sets.add(set1);\n         sets.add(set2);\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/LineRadarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/LineRadarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/LineRadarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/LineRadarDataSet.java\n@@ -81,13 +81,7 @@ public float getLineWidth() {\n         return mLineWidth;\n     }\n \n-    /**\n-     * Set to true if the DataSet should be drawn filled (surface), and not just\n-     * as a line, disabling this will give great performance boost! default:\n-     * false\n-     * \n-     * @param filled\n-     */\n+    @Override\n     public void setDrawFilled(boolean filled) {\n         mDrawFilled = filled;\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java\n@@ -115,6 +115,11 @@ public boolean isDrawFilledEnabled() {\n         return false;\n     }\n \n+    @Override\n+    public void setDrawFilled(boolean enabled) {\n+\n+    }\n+\n     @Override\n     public boolean isVerticalHighlightIndicatorEnabled() {\n         return false;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/ILineRadarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/ILineRadarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/ILineRadarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/ILineRadarDataSet.java\n@@ -35,4 +35,13 @@ public interface ILineRadarDataSet<T extends Entry> extends ILineScatterCandleRa\n      * @return\n      */\n     boolean isDrawFilledEnabled();\n+\n+    /**\n+     * Set to true if the DataSet should be drawn filled (surface), and not just\n+     * as a line, disabling this will give great performance boost! default:\n+     * false\n+     *\n+     * @param enabled\n+     */\n+    void setDrawFilled(boolean enabled);\n }",
    "output": "Fix compile errors in example project"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -4,7 +4,6 @@\n import android.content.Context;\n import android.graphics.Color;\n \n-import com.github.mikephil.charting.components.YAxis.AxisDependency;\n import com.github.mikephil.charting.utils.ColorTemplate;\n \n import java.util.ArrayList;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java\n@@ -166,12 +166,17 @@ public void calcMinMax(List<Entry> values, int start, int end) {\n     }\n \n     @Override\n-    public Entry getEntryForXIndex(int x) {\n+    public Entry getEntryForXIndex(int xIndex) {\n         return null;\n     }\n \n     @Override\n-    public int getEntryIndex(int x) {\n+    public Entry getEntryForIndex(int index) {\n+        return null;\n+    }\n+\n+    @Override\n+    public int getEntryIndex(int xIndex) {\n         return 0;\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -13,17 +13,16 @@\n import android.text.SpannableString;\n import android.text.StaticLayout;\n import android.text.TextPaint;\n-import android.util.Log;\n \n import com.github.mikephil.charting.animation.ChartAnimator;\n import com.github.mikephil.charting.charts.LineChart;\n import com.github.mikephil.charting.charts.PieChart;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.PieData;\n-import com.github.mikephil.charting.data.PieDataSet;\n+import com.github.mikephil.charting.formatter.ValueFormatter;\n import com.github.mikephil.charting.highlight.Highlight;\n+import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IPieDataSet;\n import com.github.mikephil.charting.utils.Utils;\n-import com.github.mikephil.charting.formatter.ValueFormatter;\n import com.github.mikephil.charting.utils.ViewPortHandler;\n \n import java.util.List;\n@@ -120,14 +119,14 @@ public void drawData(Canvas c) {\n \n         PieData pieData = mChart.getData();\n \n-        for (PieDataSet set : pieData.getDataSets()) {\n+        for (IPieDataSet set : pieData.getDataSets()) {\n \n             if (set.isVisible() && set.getEntryCount() > 0)\n                 drawDataSet(c, set);\n         }\n     }\n \n-    protected void drawDataSet(Canvas c, PieDataSet dataSet) {\n+    protected void drawDataSet(Canvas c, IPieDataSet dataSet) {\n \n         float angle = mChart.getRotationAngle();\n \n@@ -179,14 +178,14 @@ public void drawValues(Canvas c) {\n         r -= off; // offset to keep things inside the chart\n \n         PieData data = mChart.getData();\n-        List<PieDataSet> dataSets = data.getDataSets();\n+        List<IPieDataSet> dataSets = data.getDataSets();\n         boolean drawXVals = mChart.isDrawSliceTextEnabled();\n \n         int cnt = 0;\n \n         for (int i = 0; i < dataSets.size(); i++) {\n \n-            PieDataSet dataSet = dataSets.get(i);\n+            IPieDataSet dataSet = dataSets.get(i);\n \n             if (!dataSet.isDrawValuesEnabled() && !drawXVals)\n                 continue;\n@@ -398,7 +397,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             if (xIndex >= drawAngles.length)\n                 continue;\n \n-            PieDataSet set = mChart.getData()\n+            IPieDataSet set = mChart.getData()\n                     .getDataSetByIndex(indices[i]\n                             .getDataSetIndex());\n \n@@ -448,7 +447,7 @@ protected void drawRoundedSlices(Canvas c) {\n         if (!mChart.isDrawRoundedSlicesEnabled())\n             return;\n \n-        PieDataSet dataSet = mChart.getData().getDataSet();\n+        IPieDataSet dataSet = mChart.getData().getDataSet();\n \n         if (!dataSet.isVisible())\n             return;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n@@ -11,8 +11,8 @@\n import com.github.mikephil.charting.charts.RadarChart;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.RadarData;\n-import com.github.mikephil.charting.data.RadarDataSet;\n import com.github.mikephil.charting.highlight.Highlight;\n+import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IRadarDataSet;\n import com.github.mikephil.charting.utils.Utils;\n import com.github.mikephil.charting.utils.ViewPortHandler;\n \n@@ -56,14 +56,14 @@ public void drawData(Canvas c) {\n \n         RadarData radarData = mChart.getData();\n \n-        for (RadarDataSet set : radarData.getDataSets()) {\n+        for (IRadarDataSet set : radarData.getDataSets()) {\n \n             if (set.isVisible() && set.getEntryCount() > 0)\n                 drawDataSet(c, set);\n         }\n     }\n \n-    protected void drawDataSet(Canvas c, RadarDataSet dataSet) {\n+    protected void drawDataSet(Canvas c, IRadarDataSet dataSet) {\n \n         float sliceangle = mChart.getSliceAngle();\n \n@@ -131,7 +131,7 @@ public void drawValues(Canvas c) {\n \n         for (int i = 0; i < mChart.getData().getDataSetCount(); i++) {\n \n-            RadarDataSet dataSet = mChart.getData().getDataSetByIndex(i);\n+            IRadarDataSet dataSet = mChart.getData().getDataSetByIndex(i);\n \n             if (!dataSet.isDrawValuesEnabled() || dataSet.getEntryCount() == 0)\n                 continue;\n@@ -215,7 +215,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n         for (int i = 0; i < indices.length; i++) {\n \n-            RadarDataSet set = mChart.getData()\n+            IRadarDataSet set = mChart.getData()\n                     .getDataSetByIndex(indices[i]\n                             .getDataSetIndex());\n ",
    "output": "Fix compile errors in Pie- and RadarChartRenderer"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -17,6 +17,7 @@\n import com.github.mikephil.charting.data.PieData;\n import com.github.mikephil.charting.data.PieDataSet;\n import com.github.mikephil.charting.highlight.Highlight;\n+import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IPieDataSet;\n import com.github.mikephil.charting.renderer.PieChartRenderer;\n import com.github.mikephil.charting.utils.Utils;\n \n@@ -200,13 +201,13 @@ private void calcAngles() {\n         mDrawAngles = new float[mData.getYValCount()];\n         mAbsoluteAngles = new float[mData.getYValCount()];\n \n-        List<PieDataSet> dataSets = mData.getDataSets();\n+        List<IPieDataSet> dataSets = mData.getDataSets();\n \n         int cnt = 0;\n \n         for (int i = 0; i < mData.getDataSetCount(); i++) {\n \n-            PieDataSet set = dataSets.get(i);\n+            IPieDataSet set = dataSets.get(i);\n             List<Entry> entries = set.getYVals();\n \n             for (int j = 0; j < entries.size(); j++) {\n@@ -281,7 +282,7 @@ public int getIndexForAngle(float angle) {\n      */\n     public int getDataSetIndexForIndex(int xIndex) {\n \n-        List<? extends DataSet<? extends Entry>> dataSets = mData.getDataSets();\n+        List<IPieDataSet> dataSets = mData.getDataSets();\n \n         for (int i = 0; i < dataSets.size(); i++) {\n             if (dataSets.get(i).getEntryForXIndex(xIndex) != null)\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -18,6 +18,7 @@\n import com.github.mikephil.charting.data.ChartData;\n import com.github.mikephil.charting.data.DataSet;\n import com.github.mikephil.charting.data.Entry;\n+import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IDataSet;\n import com.github.mikephil.charting.listener.PieRadarChartTouchListener;\n import com.github.mikephil.charting.utils.SelectionDetail;\n import com.github.mikephil.charting.utils.Utils;\n@@ -30,7 +31,7 @@\n  * \n  * @author Philipp Jahoda\n  */\n-public abstract class PieRadarChartBase<T extends ChartData<? extends DataSet<? extends Entry>>>\n+public abstract class PieRadarChartBase<T extends ChartData<? extends IDataSet<? extends Entry>>>\n         extends Chart<T> {\n \n     /** holds the normalized version of the current rotation angle of the chart */\n@@ -451,7 +452,7 @@ public List<SelectionDetail> getSelectionDetailsAtIndex(int xIndex) {\n \n         for (int i = 0; i < mData.getDataSetCount(); i++) {\n \n-            DataSet<?> dataSet = mData.getDataSetByIndex(i);\n+            IDataSet<?> dataSet = mData.getDataSetByIndex(i);\n \n             // extract all y-values from all DataSets at the given x-index\n             final float yVal = dataSet.getYValForXIndex(xIndex);",
    "output": "Fix compile errors in PieChart & RadarChart"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/RadarData.java b/MPChartLib/src/com/github/mikephil/charting/data/RadarData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/RadarData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/RadarData.java\n@@ -1,46 +1,48 @@\n \n package com.github.mikephil.charting.data;\n \n+import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IRadarDataSet;\n+\n import java.util.ArrayList;\n import java.util.List;\n \n /**\n  * Data container for the RadarChart.\n- * \n+ *\n  * @author Philipp Jahoda\n  */\n-public class RadarData extends ChartData<RadarDataSet> {\n+public class RadarData extends ChartData<IRadarDataSet> {\n \n     public RadarData() {\n         super();\n     }\n-    \n+\n     public RadarData(List<String> xVals) {\n         super(xVals);\n     }\n-    \n+\n     public RadarData(String[] xVals) {\n         super(xVals);\n     }\n-    \n-    public RadarData(List<String> xVals, List<RadarDataSet> dataSets) {\n+\n+    public RadarData(List<String> xVals, List<IRadarDataSet> dataSets) {\n         super(xVals, dataSets);\n     }\n \n-    public RadarData(String[] xVals, List<RadarDataSet> dataSets) {\n+    public RadarData(String[] xVals, List<IRadarDataSet> dataSets) {\n         super(xVals, dataSets);\n     }\n \n-    public RadarData(List<String> xVals, RadarDataSet dataSet) {\n+    public RadarData(List<String> xVals, IRadarDataSet dataSet) {\n         super(xVals, toList(dataSet));\n     }\n \n-    public RadarData(String[] xVals, RadarDataSet dataSet) {\n+    public RadarData(String[] xVals, IRadarDataSet dataSet) {\n         super(xVals, toList(dataSet));\n     }\n-    \n-    private static List<RadarDataSet> toList(RadarDataSet dataSet) {\n-        List<RadarDataSet> sets = new ArrayList<RadarDataSet>();\n+\n+    private static List<IRadarDataSet> toList(IRadarDataSet dataSet) {\n+        List<IRadarDataSet> sets = new ArrayList<IRadarDataSet>();\n         sets.add(dataSet);\n         return sets;\n     }",
    "output": "Add IRadarDataSet to RadarData object"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/PieData.java b/MPChartLib/src/com/github/mikephil/charting/data/PieData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/PieData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/PieData.java\n@@ -1,7 +1,8 @@\n \n package com.github.mikephil.charting.data;\n \n-import java.nio.channels.FileLock;\n+import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IPieDataSet;\n+\n import java.util.ArrayList;\n import java.util.List;\n \n@@ -10,10 +11,10 @@\n  * legend labels of the PieChart are created from the x-values array, and not\n  * from the DataSet labels. Each PieData object can only represent one\n  * PieDataSet (multiple PieDataSets inside a single PieChart are not possible).\n- * \n+ *\n  * @author Philipp Jahoda\n  */\n-public class PieData extends ChartData<PieDataSet> {\n+public class PieData extends ChartData<IPieDataSet> {\n \n     public PieData() {\n         super();\n@@ -27,26 +28,26 @@ public PieData(String[] xVals) {\n         super(xVals);\n     }\n \n-    public PieData(List<String> xVals, PieDataSet dataSet) {\n+    public PieData(List<String> xVals, IPieDataSet dataSet) {\n         super(xVals, toList(dataSet));\n     }\n \n-    public PieData(String[] xVals, PieDataSet dataSet) {\n+    public PieData(String[] xVals, IPieDataSet dataSet) {\n         super(xVals, toList(dataSet));\n     }\n \n-    private static List<PieDataSet> toList(PieDataSet dataSet) {\n-        List<PieDataSet> sets = new ArrayList<PieDataSet>();\n+    private static List<IPieDataSet> toList(IPieDataSet dataSet) {\n+        List<IPieDataSet> sets = new ArrayList<IPieDataSet>();\n         sets.add(dataSet);\n         return sets;\n     }\n \n     /**\n      * Sets the PieDataSet this data object should represent.\n-     * \n+     *\n      * @param dataSet\n      */\n-    public void setDataSet(PieDataSet dataSet) {\n+    public void setDataSet(IPieDataSet dataSet) {\n         mDataSets.clear();\n         mDataSets.add(dataSet);\n         init();\n@@ -55,31 +56,36 @@ public void setDataSet(PieDataSet dataSet) {\n     /**\n      * Returns the DataSet this PieData object represents. A PieData object can\n      * only contain one DataSet.\n-     * \n+     *\n      * @return\n      */\n-    public PieDataSet getDataSet() {\n+    public IPieDataSet getDataSet() {\n         return mDataSets.get(0);\n     }\n \n     @Override\n-    public PieDataSet getDataSetByIndex(int index) {\n+    public IPieDataSet getDataSetByIndex(int index) {\n         return index == 0 ? getDataSet() : null;\n     }\n \n     @Override\n-    public PieDataSet getDataSetByLabel(String label, boolean ignorecase) {\n+    public IPieDataSet getDataSetByLabel(String label, boolean ignorecase) {\n         return ignorecase ? label.equalsIgnoreCase(mDataSets.get(0).getLabel()) ? mDataSets.get(0)\n                 : null : label.equals(mDataSets.get(0).getLabel()) ? mDataSets.get(0) : null;\n     }\n \n+    /**\n+     * Returns the sum of all values in this PieData object.\n+     *\n+     * @return\n+     */\n     public float getYValueSum() {\n \n         float sum = 0;\n \n         List<Entry> values = getDataSet().getYVals();\n \n-        for(Entry e : values)\n+        for (Entry e : values)\n             sum += e.getVal();\n \n         return sum;",
    "output": "Add IPieDataSet interface to PieData object"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/BarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/BarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/BarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/BarDataSet.java\n@@ -235,11 +235,7 @@ public void setStackLabels(String[] labels) {\n         mStackLabels = labels;\n     }\n \n-    /**\n-     * returns the labels used for the different value-stacks\n-     * \n-     * @return\n-     */\n+    @Override\n     public String[] getStackLabels() {\n         return mStackLabels;\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/PieDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/PieDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/PieDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/PieDataSet.java\n@@ -1,12 +1,13 @@\n \n package com.github.mikephil.charting.data;\n \n+import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IPieDataSet;\n import com.github.mikephil.charting.utils.Utils;\n \n import java.util.ArrayList;\n import java.util.List;\n \n-public class PieDataSet extends DataSet<Entry> {\n+public class PieDataSet extends DataSet<Entry> implements IPieDataSet {\n \n     /** the space in degrees between the chart-slices, default 0f */\n     private float mSliceSpace = 0f;\n@@ -38,7 +39,7 @@ public DataSet<Entry> copy() {\n     /**\n      * sets the space that is left out between the piechart-slices, default: 0°\n      * --> no space, maximum 45, minimum 0 (no space)\n-     * \n+     *\n      * @param degrees\n      */\n     public void setSliceSpace(float degrees) {\n@@ -51,12 +52,7 @@ public void setSliceSpace(float degrees) {\n         mSliceSpace = degrees;\n     }\n \n-    /**\n-     * returns the space that is set to be between the piechart-slices of this\n-     * DataSet, in degrees\n-     * \n-     * @return\n-     */\n+    @Override\n     public float getSliceSpace() {\n         return mSliceSpace;\n     }\n@@ -71,12 +67,7 @@ public void setSelectionShift(float shift) {\n         mShift = Utils.convertDpToPixel(shift);\n     }\n \n-    /**\n-     * returns the distance a highlighted piechart slice is \"shifted\" away from\n-     * the chart-center\n-     * \n-     * @return\n-     */\n+    @Override\n     public float getSelectionShift() {\n         return mShift;\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/RadarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/RadarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/RadarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/RadarDataSet.java\n@@ -1,10 +1,12 @@\n \n package com.github.mikephil.charting.data;\n \n+import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IRadarDataSet;\n+\n import java.util.ArrayList;\n import java.util.List;\n \n-public class RadarDataSet extends LineRadarDataSet<Entry> {\n+public class RadarDataSet extends LineRadarDataSet<Entry> implements IRadarDataSet {\n     \n     public RadarDataSet(List<Entry> yVals, String label) {\n         super(yVals, label);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IBarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IBarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IBarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IBarDataSet.java\n@@ -44,4 +44,13 @@ public interface IBarDataSet extends IBarLineScatterCandleBubbleDataSet<BarEntry\n      * @return\n      */\n     int getHighLightAlpha();\n+\n+\n+    /**\n+     * Returns the labels used for the different value-stacks in the legend.\n+     * This is only relevant for stacked bar entries.\n+     *\n+     * @return\n+     */\n+    String[] getStackLabels();\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IPieDataSet.java b/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IPieDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IPieDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IPieDataSet.java\n@@ -0,0 +1,26 @@\n+package com.github.mikephil.charting.interfaces.datainterfaces.datasets;\n+\n+import com.github.mikephil.charting.data.Entry;\n+\n+/**\n+ * Created by Philipp Jahoda on 03/11/15.\n+ */\n+public interface IPieDataSet extends IDataSet<Entry> {\n+\n+    /**\n+     * Returns the space that is set to be between the piechart-slices of this\n+     * DataSet, in degrees.\n+     *\n+     * @return\n+     */\n+    float getSliceSpace();\n+\n+    /**\n+     * Returns the distance a highlighted piechart slice is \"shifted\" away from\n+     * the chart-center in dp.\n+     *\n+     * @return\n+     */\n+    float getSelectionShift();\n+}\n+\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IRadarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IRadarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IRadarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IRadarDataSet.java\n@@ -0,0 +1,11 @@\n+package com.github.mikephil.charting.interfaces.datainterfaces.datasets;\n+\n+import com.github.mikephil.charting.data.Entry;\n+\n+/**\n+ * Created by Philipp Jahoda on 03/11/15.\n+ */\n+public interface IRadarDataSet extends ILineRadarDataSet<Entry> {\n+\n+\n+}\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -12,6 +12,7 @@\n import com.github.mikephil.charting.data.DataSet;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.PieDataSet;\n+import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBarDataSet;\n import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IDataSet;\n import com.github.mikephil.charting.utils.ColorTemplate;\n import com.github.mikephil.charting.utils.FSize;\n@@ -92,9 +93,9 @@ public void computeLegend(ChartData<?> data) {\n                 int entryCount = dataSet.getEntryCount();\n \n                 // if we have a barchart with stacked bars\n-                if (dataSet instanceof BarDataSet && ((BarDataSet) dataSet).isStacked()) {\n+                if (dataSet instanceof IBarDataSet && ((IBarDataSet) dataSet).isStacked()) {\n \n-                    BarDataSet bds = (BarDataSet) dataSet;\n+                    IBarDataSet bds = (IBarDataSet) dataSet;\n                     String[] sLabels = bds.getStackLabels();\n \n                     for (int j = 0; j < clrs.size() && j < bds.getStackSize(); j++) {",
    "output": "Add IPieDataSet & IRadarDataSet, add getStackLabels to IBarDataSet"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java b/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java\n--- a/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java\n@@ -132,7 +132,7 @@ protected int getClosestStackIndex(Range[] ranges, float value) {\n \t\t\t\tstackIndex++;\n \t\t}\n \n-\t\tint length = ranges.length - 1;\n+\t\tint length = Math.max(ranges.length - 1, 0);\n \n \t\treturn (value > ranges[length].to) ? length : 0;\n \t\t//",
    "output": "Merge master"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java b/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java\n--- a/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java\n@@ -131,7 +131,7 @@ protected int getClosestStackIndex(Range[] ranges, float value) {\n \t\t\t\tstackIndex++;\n \t\t}\n \n-\t\tint length = ranges.length - 1;\n+\t\tint length = Math.max(ranges.length - 1, 0);\n \n \t\treturn (value > ranges[length].to) ? length : 0;\n \t\t//",
    "output": "Fix #1168"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/data/IBarLineScatterCandleBubbleData.java b/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/data/IBarLineScatterCandleBubbleData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/data/IBarLineScatterCandleBubbleData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/data/IBarLineScatterCandleBubbleData.java\n@@ -1,11 +0,0 @@\n-package com.github.mikephil.charting.interfaces.datainterfaces.data;\n-\n-import com.github.mikephil.charting.data.BarLineScatterCandleBubbleDataSet;\n-import com.github.mikephil.charting.data.Entry;\n-import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBarLineScatterCandleBubbleDataSet;\n-\n-/**\n- * Created by Philipp Jahoda on 21/10/15.\n- */\n-public interface IBarLineScatterCandleBubbleData<T extends IBarLineScatterCandleBubbleDataSet<? extends Entry>> extends IChartData {\n-}\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/data/IChartData.java b/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/data/IChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/data/IChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/data/IChartData.java\n@@ -1,45 +0,0 @@\n-package com.github.mikephil.charting.interfaces.datainterfaces.data;\n-\n-import com.github.mikephil.charting.data.DataSet;\n-import com.github.mikephil.charting.data.Entry;\n-import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IDataSet;\n-\n-import java.util.List;\n-\n-/**\n- * Created by Philipp Jahoda on 21/10/15.\n- */\n-public interface IChartData<T extends IDataSet<? extends Entry>> {\n-\n-    /**\n-     * Returns an the array of DataSets this object holds.\n-     *\n-     * @return\n-     */\n-    List<T> getDataSets();\n-\n-    /**\n-     * Returns the DataSet object at the given index.\n-     *\n-     * @param index\n-     * @return\n-     */\n-    T getDataSetByIndex(int index);\n-\n-    /**\n-     * Returns the index of the provided DataSet inside the DataSets array of\n-     * this data object. Returns -1 if the DataSet was not found.\n-     *\n-     * @param dataSet\n-     * @return\n-     */\n-    int getIndexOfDataSet(T dataSet);\n-\n-    /**\n-     * Returns the total number of y-values across all DataSet objects the this\n-     * object represents.\n-     *\n-     * @return\n-     */\n-    int getYValCount();\n-}\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/data/ILineData.java b/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/data/ILineData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/data/ILineData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/data/ILineData.java\n@@ -1,9 +0,0 @@\n-package com.github.mikephil.charting.interfaces.datainterfaces.data;\n-\n-import com.github.mikephil.charting.interfaces.datainterfaces.datasets.ILineDataSet;\n-\n-/**\n- * Created by Philipp Jahoda on 21/10/15.\n- */\n-public interface ILineData<ILineDataSet> extends IBarLineScatterCandleBubbleData {\n-}",
    "output": "Delete data interfaces"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -577,7 +577,7 @@ public void highlightValue(int xIndex, int dataSetIndex) {\n      * @param highlight contains information about which entry should be highlighted\n      */\n     public void highlightValue(Highlight highlight) {\n-        highlightValue(highlight);\n+        highlightValue(highlight, false);\n     }\n \n     /**",
    "output": "Merge pull request #1144 from danielgindi/master\n\nFix missing argument causing an overflow loop"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -577,7 +577,7 @@ public void highlightValue(int xIndex, int dataSetIndex) {\n      * @param highlight contains information about which entry should be highlighted\n      */\n     public void highlightValue(Highlight highlight) {\n-        highlightValue(highlight);\n+        highlightValue(highlight, false);\n     }\n \n     /**",
    "output": "Fix missing argument causing an overflow loop"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -573,24 +573,23 @@ public void highlightValue(int xIndex, int dataSetIndex) {\n \n     /**\n      * Highlights the values represented by the provided Highlight object\n+     * This DOES NOT generate a callback to the OnChartValueSelectedListener.\n      *\n      * @param highlight contains information about which entry should be highlighted\n      */\n     public void highlightValue(Highlight highlight) {\n-        if (highlight == null)\n-            highlightValues(null);\n-        else\n-            highlightValues(new Highlight[]{highlight});\n+        highlightValue(highlight);\n     }\n \n     /**\n      * Highlights the value selected by touch gesture. Unlike\n      * highlightValues(...), this generates a callback to the\n      * OnChartValueSelectedListener.\n      *\n-     * @param high\n+     * @param high - the highlight object\n+     * @param callListener - call the listener\n      */\n-    public void highlightTouch(Highlight high) {\n+    public void highlightValue(Highlight high, boolean callListener) {\n \n         Entry e = null;\n \n@@ -613,7 +612,7 @@ public void highlightTouch(Highlight high) {\n             }\n         }\n \n-        if (mSelectionListener != null) {\n+        if (callListener && mSelectionListener != null) {\n \n             if (!valuesToHighlight())\n                 mSelectionListener.onNothingSelected();\n@@ -626,6 +625,14 @@ public void highlightTouch(Highlight high) {\n         invalidate();\n     }\n \n+    /**\n+     * Deprecated. Calls highlightValue(high, true)\n+     */\n+    @Deprecated\n+    public void highlightTouch(Highlight high) {\n+        highlightValue(high, true);\n+    }\n+\n     /**\n      * Set a new (e.g. custom) ChartTouchListener NOTE: make sure to\n      * setTouchEnabled(true); if you need touch gestures on the chart\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n@@ -105,6 +105,10 @@ protected void calcMinMax() {\n         }\n \n         mDeltaX = Math.abs(mXChartMax - mXChartMin);\n+\n+        if (mDeltaX == 0.f && getLineData() != null && getLineData().getYValCount() > 0) {\n+            mDeltaX = 1.f;\n+        }\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -486,7 +486,8 @@ protected void drawCircles(Canvas c) {\n \n             ILineDataSet dataSet = dataSets.get(i);\n \n-            if (!dataSet.isVisible() || !dataSet.isDrawCirclesEnabled())\n+            if (!dataSet.isVisible() || !dataSet.isDrawCirclesEnabled() ||\n+                    dataSet.getEntryCount() == 0)\n                 continue;\n \n             mCirclePaintInner.setColor(dataSet.getCircleHoleColor());\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererBarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererBarChart.java\n@@ -60,15 +60,16 @@ protected void drawLabels(Canvas c, float pos) {\n                     if (i == mXAxis.getValues().size() - 1) {\n                         float width = Utils.calcTextWidth(mAxisLabelPaint, label);\n \n-                        if (width > mViewPortHandler.offsetRight() * 2\n-                                && position[0] + width > mViewPortHandler.getChartWidth())\n-                            position[0] -= width / 2;\n+                        if (position[0] + width / 2.f > mViewPortHandler.contentRight())\n+                            position[0] = mViewPortHandler.contentRight() - (width / 2.f);\n \n                         // avoid clipping of the first\n                     } else if (i == 0) {\n \n                         float width = Utils.calcTextWidth(mAxisLabelPaint, label);\n-                        position[0] += width / 2;\n+\n+                        if (position[0] - width / 2.f < mViewPortHandler.contentLeft())\n+                            position[0] = mViewPortHandler.contentLeft() + (width / 2.f);\n                     }\n                 }\n ",
    "output": "Merged PRs"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -572,24 +572,23 @@ public void highlightValue(int xIndex, int dataSetIndex) {\n \n     /**\n      * Highlights the values represented by the provided Highlight object\n+     * This DOES NOT generate a callback to the OnChartValueSelectedListener.\n      *\n      * @param highlight contains information about which entry should be highlighted\n      */\n     public void highlightValue(Highlight highlight) {\n-        if (highlight == null)\n-            highlightValues(null);\n-        else\n-            highlightValues(new Highlight[]{highlight});\n+        highlightValue(highlight);\n     }\n \n     /**\n      * Highlights the value selected by touch gesture. Unlike\n      * highlightValues(...), this generates a callback to the\n      * OnChartValueSelectedListener.\n      *\n-     * @param high\n+     * @param high - the highlight object\n+     * @param callListener - call the listener\n      */\n-    public void highlightTouch(Highlight high) {\n+    public void highlightValue(Highlight high, boolean callListener) {\n \n         Entry e = null;\n \n@@ -612,7 +611,7 @@ public void highlightTouch(Highlight high) {\n             }\n         }\n \n-        if (mSelectionListener != null) {\n+        if (callListener && mSelectionListener != null) {\n \n             if (!valuesToHighlight())\n                 mSelectionListener.onNothingSelected();\n@@ -625,6 +624,14 @@ public void highlightTouch(Highlight high) {\n         invalidate();\n     }\n \n+    /**\n+     * Deprecated. Calls highlightValue(high, true)\n+     */\n+    @Deprecated\n+    public void highlightTouch(Highlight high) {\n+        highlightValue(high, true);\n+    }\n+\n     /**\n      * Set a new (e.g. custom) ChartTouchListener NOTE: make sure to\n      * setTouchEnabled(true); if you need touch gestures on the chart",
    "output": "Merge pull request #1143 from danielgindi/highlight-value\n\nMoved highlightTouch logic to highlightValue & deprecated highlightTouch"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererBarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererBarChart.java\n@@ -60,15 +60,16 @@ protected void drawLabels(Canvas c, float pos) {\n                     if (i == mXAxis.getValues().size() - 1) {\n                         float width = Utils.calcTextWidth(mAxisLabelPaint, label);\n \n-                        if (width > mViewPortHandler.offsetRight() * 2\n-                                && position[0] + width > mViewPortHandler.getChartWidth())\n-                            position[0] -= width / 2;\n+                        if (position[0] + width / 2.f > mViewPortHandler.contentRight())\n+                            position[0] = mViewPortHandler.contentRight() - (width / 2.f);\n \n                         // avoid clipping of the first\n                     } else if (i == 0) {\n \n                         float width = Utils.calcTextWidth(mAxisLabelPaint, label);\n-                        position[0] += width / 2;\n+\n+                        if (position[0] - width / 2.f < mViewPortHandler.contentLeft())\n+                            position[0] = mViewPortHandler.contentLeft() + (width / 2.f);\n                     }\n                 }\n ",
    "output": "Merge pull request #1142 from danielgindi/first-last-clipping-fix\n\nFixed the avoidFirstLastClipping feature"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n@@ -102,6 +102,10 @@ protected void calcMinMax() {\n         }\n \n         mDeltaX = Math.abs(mXChartMax - mXChartMin);\n+\n+        if (mDeltaX == 0.f && getLineData() != null && getLineData().getYValCount() > 0) {\n+            mDeltaX = 1.f;\n+        }\n     }\n \n     @Override",
    "output": "Merge pull request #1141 from danielgindi/combined-line-fix\n\nFixed a potential crash in CombinedChart with lineData and only one x…"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -485,7 +485,8 @@ protected void drawCircles(Canvas c) {\n \n             LineDataSet dataSet = dataSets.get(i);\n \n-            if (!dataSet.isVisible() || !dataSet.isDrawCirclesEnabled())\n+            if (!dataSet.isVisible() || !dataSet.isDrawCirclesEnabled() ||\n+                    dataSet.getEntryCount() == 0)\n                 continue;\n \n             mCirclePaintInner.setColor(dataSet.getCircleHoleColor());",
    "output": "Merge pull request #1140 from danielgindi/draw-circles-crash\n\nFixed potential crash when line data is empty"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererBarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererBarChart.java\n@@ -60,15 +60,16 @@ protected void drawLabels(Canvas c, float pos) {\n                     if (i == mXAxis.getValues().size() - 1) {\n                         float width = Utils.calcTextWidth(mAxisLabelPaint, label);\n \n-                        if (width > mViewPortHandler.offsetRight() * 2\n-                                && position[0] + width > mViewPortHandler.getChartWidth())\n-                            position[0] -= width / 2;\n+                        if (position[0] + width / 2.f > mViewPortHandler.contentRight())\n+                            position[0] = mViewPortHandler.contentRight() - (width / 2.f);\n \n                         // avoid clipping of the first\n                     } else if (i == 0) {\n \n                         float width = Utils.calcTextWidth(mAxisLabelPaint, label);\n-                        position[0] += width / 2;\n+\n+                        if (position[0] - width / 2.f < mViewPortHandler.contentLeft())\n+                            position[0] = mViewPortHandler.contentLeft() + (width / 2.f);\n                     }\n                 }\n ",
    "output": "Fixed the avoidFirstLastClipping feature"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -572,24 +572,23 @@ public void highlightValue(int xIndex, int dataSetIndex) {\n \n     /**\n      * Highlights the values represented by the provided Highlight object\n+     * This DOES NOT generate a callback to the OnChartValueSelectedListener.\n      *\n      * @param highlight contains information about which entry should be highlighted\n      */\n     public void highlightValue(Highlight highlight) {\n-        if (highlight == null)\n-            highlightValues(null);\n-        else\n-            highlightValues(new Highlight[]{highlight});\n+        highlightValue(highlight);\n     }\n \n     /**\n      * Highlights the value selected by touch gesture. Unlike\n      * highlightValues(...), this generates a callback to the\n      * OnChartValueSelectedListener.\n      *\n-     * @param high\n+     * @param high - the highlight object\n+     * @param callListener - call the listener\n      */\n-    public void highlightTouch(Highlight high) {\n+    public void highlightValue(Highlight high, boolean callListener) {\n \n         Entry e = null;\n \n@@ -612,7 +611,7 @@ public void highlightTouch(Highlight high) {\n             }\n         }\n \n-        if (mSelectionListener != null) {\n+        if (callListener && mSelectionListener != null) {\n \n             if (!valuesToHighlight())\n                 mSelectionListener.onNothingSelected();\n@@ -625,6 +624,14 @@ public void highlightTouch(Highlight high) {\n         invalidate();\n     }\n \n+    /**\n+     * Deprecated. Calls highlightValue(high, true)\n+     */\n+    @Deprecated\n+    public void highlightTouch(Highlight high) {\n+        highlightValue(high, true);\n+    }\n+\n     /**\n      * Set a new (e.g. custom) ChartTouchListener NOTE: make sure to\n      * setTouchEnabled(true); if you need touch gestures on the chart",
    "output": "Moved highlightTouch logic to highlightValue & deprecated highlightTouch"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -485,7 +485,8 @@ protected void drawCircles(Canvas c) {\n \n             LineDataSet dataSet = dataSets.get(i);\n \n-            if (!dataSet.isVisible() || !dataSet.isDrawCirclesEnabled())\n+            if (!dataSet.isVisible() || !dataSet.isDrawCirclesEnabled() ||\n+                    dataSet.getEntryCount() == 0)\n                 continue;\n \n             mCirclePaintInner.setColor(dataSet.getCircleHoleColor());",
    "output": "Fixed potential crash when line data is empty"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n@@ -102,6 +102,10 @@ protected void calcMinMax() {\n         }\n \n         mDeltaX = Math.abs(mXChartMax - mXChartMin);\n+\n+        if (mDeltaX == 0.f && getLineData() != null && getLineData().getYValCount() > 0) {\n+            mDeltaX = 1.f;\n+        }\n     }\n \n     @Override",
    "output": "Fixed a potential crash in CombinedChart with lineData and only one x-value\n\nDeployed same deltaX fix as in LineChart"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MyMarkerView.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MyMarkerView.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MyMarkerView.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MyMarkerView.java\n@@ -43,13 +43,13 @@ public void refreshContent(Entry e, Highlight highlight) {\n     }\n \n     @Override\n-    public int getXOffset() {\n+    public int getXOffset(float xpos) {\n         // this will center the marker-view horizontally\n         return -(getWidth() / 2);\n     }\n \n     @Override\n-    public int getYOffset() {\n+    public int getYOffset(float ypos) {\n         // this will cause the marker-view to be above the selected value\n         return -getHeight();\n     }\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/StackedBarsMarkerView.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/StackedBarsMarkerView.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/StackedBarsMarkerView.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/StackedBarsMarkerView.java\n@@ -50,13 +50,13 @@ public void refreshContent(Entry e, Highlight highlight) {\n     }\n \n     @Override\n-    public int getXOffset() {\n+    public int getXOffset(float xpos) {\n         // this will center the marker-view horizontally\n         return -(getWidth() / 2);\n     }\n \n     @Override\n-    public int getYOffset() {\n+    public int getYOffset(float ypos) {\n         // this will cause the marker-view to be above the selected value\n         return -getHeight();\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/MarkerView.java b/MPChartLib/src/com/github/mikephil/charting/components/MarkerView.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/MarkerView.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/MarkerView.java\n@@ -17,78 +17,77 @@\n  */\n public abstract class MarkerView extends RelativeLayout {\n \n-\t/**\n-\t * Constructor. Sets up the MarkerView with a custom layout resource.\n-\t *\n-\t * @param context\n-\t * @param layoutResource\n-\t *            the layout resource to use for the MarkerView\n-\t */\n-\tpublic MarkerView(Context context, int layoutResource) {\n-\t\tsuper(context);\n-\t\tsetupLayoutResource(layoutResource);\n-\t}\n+    /**\n+     * Constructor. Sets up the MarkerView with a custom layout resource.\n+     *\n+     * @param context\n+     * @param layoutResource the layout resource to use for the MarkerView\n+     */\n+    public MarkerView(Context context, int layoutResource) {\n+        super(context);\n+        setupLayoutResource(layoutResource);\n+    }\n \n-\t/**\n-\t * Sets the layout resource for a custom MarkerView.\n-\t *\n-\t * @param layoutResource\n-\t */\n-\tprivate void setupLayoutResource(int layoutResource) {\n+    /**\n+     * Sets the layout resource for a custom MarkerView.\n+     *\n+     * @param layoutResource\n+     */\n+    private void setupLayoutResource(int layoutResource) {\n \n-\t\tView inflated = LayoutInflater.from(getContext()).inflate(layoutResource, this);\n+        View inflated = LayoutInflater.from(getContext()).inflate(layoutResource, this);\n \n-\t\tinflated.setLayoutParams(new LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT));\n-\t\tinflated.measure(MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED), MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED));\n+        inflated.setLayoutParams(new LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT));\n+        inflated.measure(MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED), MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED));\n \n-\t\t// measure(getWidth(), getHeight());\n-\t\tinflated.layout(0, 0, inflated.getMeasuredWidth(), inflated.getMeasuredHeight());\n-\t}\n+        // measure(getWidth(), getHeight());\n+        inflated.layout(0, 0, inflated.getMeasuredWidth(), inflated.getMeasuredHeight());\n+    }\n \n-\t/**\n-\t * Draws the MarkerView on the given position on the screen with the given Canvas object.\n-\t *\n-\t * @param canvas\n-\t * @param posx\n-\t * @param posy\n-\t */\n-\tpublic void draw(Canvas canvas, float posx, float posy) {\n+    /**\n+     * Draws the MarkerView on the given position on the screen with the given Canvas object.\n+     *\n+     * @param canvas\n+     * @param posx\n+     * @param posy\n+     */\n+    public void draw(Canvas canvas, float posx, float posy) {\n \n-\t\t// take offsets into consideration\n-\t\tposx += getXOffset();\n-\t\tposy += getYOffset();\n+        // take offsets into consideration\n+        posx += getXOffset(posx);\n+        posy += getYOffset(posy);\n \n-\t\t// translate to the correct position and draw\n-\t\tcanvas.translate(posx, posy);\n-\t\tdraw(canvas);\n-\t\tcanvas.translate(-posx, -posy);\n-\t}\n+        // translate to the correct position and draw\n+        canvas.translate(posx, posy);\n+        draw(canvas);\n+        canvas.translate(-posx, -posy);\n+    }\n \n-\t/**\n-\t * This method enables a specified custom MarkerView to update it's content everytime the MarkerView is redrawn.\n-\t *\n-\t * @param e\n-\t *            The Entry the MarkerView belongs to. This can also be any subclass of Entry, like BarEntry or\n-\t *            CandleEntry, simply cast it at runtime.\n-\t * @param highlight\n-\t *            the highlight object contains information about the highlighted value such as it's dataset-index, the\n-\t *            selected range or stack-index (only stacked bar entries).\n-\t */\n-\tpublic abstract void refreshContent(Entry e, Highlight highlight);\n+    /**\n+     * This method enables a specified custom MarkerView to update it's content everytime the MarkerView is redrawn.\n+     *\n+     * @param e         The Entry the MarkerView belongs to. This can also be any subclass of Entry, like BarEntry or\n+     *                  CandleEntry, simply cast it at runtime.\n+     * @param highlight the highlight object contains information about the highlighted value such as it's dataset-index, the\n+     *                  selected range or stack-index (only stacked bar entries).\n+     */\n+    public abstract void refreshContent(Entry e, Highlight highlight);\n \n-\t/**\n-\t * Use this to return the desired offset you wish the MarkerView to have on the x-axis. By returning -(getWidth() /\n-\t * 2) you will center the MarkerView horizontally.\n-\t *\n-\t * @return\n-\t */\n-\tpublic abstract int getXOffset();\n+    /**\n+     * Use this to return the desired offset you wish the MarkerView to have on the x-axis. By returning -(getWidth() /\n+     * 2) you will center the MarkerView horizontally.\n+     *\n+     * @param xpos the position on the x-axis in pixels where the marker is drawn\n+     * @return\n+     */\n+    public abstract int getXOffset(float xpos);\n \n-\t/**\n-\t * Use this to return the desired position offset you wish the MarkerView to have on the y-axis. By returning\n-\t * -getHeight() you will cause the MarkerView to be above the selected value.\n-\t *\n-\t * @return\n-\t */\n-\tpublic abstract int getYOffset();\n+    /**\n+     * Use this to return the desired position offset you wish the MarkerView to have on the y-axis. By returning\n+     * -getHeight() you will cause the MarkerView to be above the selected value.\n+     *\n+     * @param ypos the position on the y-axis in pixels where the marker is drawn\n+     * @return\n+     */\n+    public abstract int getYOffset(float ypos);\n }",
    "output": "Merge master"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MyMarkerView.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MyMarkerView.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MyMarkerView.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MyMarkerView.java\n@@ -43,13 +43,13 @@ public void refreshContent(Entry e, Highlight highlight) {\n     }\n \n     @Override\n-    public int getXOffset() {\n+    public int getXOffset(float xpos) {\n         // this will center the marker-view horizontally\n         return -(getWidth() / 2);\n     }\n \n     @Override\n-    public int getYOffset() {\n+    public int getYOffset(float ypos) {\n         // this will cause the marker-view to be above the selected value\n         return -getHeight();\n     }\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/StackedBarsMarkerView.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/StackedBarsMarkerView.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/StackedBarsMarkerView.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/StackedBarsMarkerView.java\n@@ -50,13 +50,13 @@ public void refreshContent(Entry e, Highlight highlight) {\n     }\n \n     @Override\n-    public int getXOffset() {\n+    public int getXOffset(float xpos) {\n         // this will center the marker-view horizontally\n         return -(getWidth() / 2);\n     }\n \n     @Override\n-    public int getYOffset() {\n+    public int getYOffset(float ypos) {\n         // this will cause the marker-view to be above the selected value\n         return -getHeight();\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/MarkerView.java b/MPChartLib/src/com/github/mikephil/charting/components/MarkerView.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/MarkerView.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/MarkerView.java\n@@ -17,78 +17,77 @@\n  */\n public abstract class MarkerView extends RelativeLayout {\n \n-\t/**\n-\t * Constructor. Sets up the MarkerView with a custom layout resource.\n-\t *\n-\t * @param context\n-\t * @param layoutResource\n-\t *            the layout resource to use for the MarkerView\n-\t */\n-\tpublic MarkerView(Context context, int layoutResource) {\n-\t\tsuper(context);\n-\t\tsetupLayoutResource(layoutResource);\n-\t}\n+    /**\n+     * Constructor. Sets up the MarkerView with a custom layout resource.\n+     *\n+     * @param context\n+     * @param layoutResource the layout resource to use for the MarkerView\n+     */\n+    public MarkerView(Context context, int layoutResource) {\n+        super(context);\n+        setupLayoutResource(layoutResource);\n+    }\n \n-\t/**\n-\t * Sets the layout resource for a custom MarkerView.\n-\t *\n-\t * @param layoutResource\n-\t */\n-\tprivate void setupLayoutResource(int layoutResource) {\n+    /**\n+     * Sets the layout resource for a custom MarkerView.\n+     *\n+     * @param layoutResource\n+     */\n+    private void setupLayoutResource(int layoutResource) {\n \n-\t\tView inflated = LayoutInflater.from(getContext()).inflate(layoutResource, this);\n+        View inflated = LayoutInflater.from(getContext()).inflate(layoutResource, this);\n \n-\t\tinflated.setLayoutParams(new LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT));\n-\t\tinflated.measure(MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED), MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED));\n+        inflated.setLayoutParams(new LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT));\n+        inflated.measure(MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED), MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED));\n \n-\t\t// measure(getWidth(), getHeight());\n-\t\tinflated.layout(0, 0, inflated.getMeasuredWidth(), inflated.getMeasuredHeight());\n-\t}\n+        // measure(getWidth(), getHeight());\n+        inflated.layout(0, 0, inflated.getMeasuredWidth(), inflated.getMeasuredHeight());\n+    }\n \n-\t/**\n-\t * Draws the MarkerView on the given position on the screen with the given Canvas object.\n-\t *\n-\t * @param canvas\n-\t * @param posx\n-\t * @param posy\n-\t */\n-\tpublic void draw(Canvas canvas, float posx, float posy) {\n+    /**\n+     * Draws the MarkerView on the given position on the screen with the given Canvas object.\n+     *\n+     * @param canvas\n+     * @param posx\n+     * @param posy\n+     */\n+    public void draw(Canvas canvas, float posx, float posy) {\n \n-\t\t// take offsets into consideration\n-\t\tposx += getXOffset();\n-\t\tposy += getYOffset();\n+        // take offsets into consideration\n+        posx += getXOffset(posx);\n+        posy += getYOffset(posy);\n \n-\t\t// translate to the correct position and draw\n-\t\tcanvas.translate(posx, posy);\n-\t\tdraw(canvas);\n-\t\tcanvas.translate(-posx, -posy);\n-\t}\n+        // translate to the correct position and draw\n+        canvas.translate(posx, posy);\n+        draw(canvas);\n+        canvas.translate(-posx, -posy);\n+    }\n \n-\t/**\n-\t * This method enables a specified custom MarkerView to update it's content everytime the MarkerView is redrawn.\n-\t *\n-\t * @param e\n-\t *            The Entry the MarkerView belongs to. This can also be any subclass of Entry, like BarEntry or\n-\t *            CandleEntry, simply cast it at runtime.\n-\t * @param highlight\n-\t *            the highlight object contains information about the highlighted value such as it's dataset-index, the\n-\t *            selected range or stack-index (only stacked bar entries).\n-\t */\n-\tpublic abstract void refreshContent(Entry e, Highlight highlight);\n+    /**\n+     * This method enables a specified custom MarkerView to update it's content everytime the MarkerView is redrawn.\n+     *\n+     * @param e         The Entry the MarkerView belongs to. This can also be any subclass of Entry, like BarEntry or\n+     *                  CandleEntry, simply cast it at runtime.\n+     * @param highlight the highlight object contains information about the highlighted value such as it's dataset-index, the\n+     *                  selected range or stack-index (only stacked bar entries).\n+     */\n+    public abstract void refreshContent(Entry e, Highlight highlight);\n \n-\t/**\n-\t * Use this to return the desired offset you wish the MarkerView to have on the x-axis. By returning -(getWidth() /\n-\t * 2) you will center the MarkerView horizontally.\n-\t *\n-\t * @return\n-\t */\n-\tpublic abstract int getXOffset();\n+    /**\n+     * Use this to return the desired offset you wish the MarkerView to have on the x-axis. By returning -(getWidth() /\n+     * 2) you will center the MarkerView horizontally.\n+     *\n+     * @param xpos the position on the x-axis in pixels where the marker is drawn\n+     * @return\n+     */\n+    public abstract int getXOffset(float xpos);\n \n-\t/**\n-\t * Use this to return the desired position offset you wish the MarkerView to have on the y-axis. By returning\n-\t * -getHeight() you will cause the MarkerView to be above the selected value.\n-\t *\n-\t * @return\n-\t */\n-\tpublic abstract int getYOffset();\n+    /**\n+     * Use this to return the desired position offset you wish the MarkerView to have on the y-axis. By returning\n+     * -getHeight() you will cause the MarkerView to be above the selected value.\n+     *\n+     * @param ypos the position on the y-axis in pixels where the marker is drawn\n+     * @return\n+     */\n+    public abstract int getYOffset(float ypos);\n }",
    "output": "Fix issue #1136"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java\n@@ -17,7 +17,9 @@\n import java.util.ArrayList;\n \n import io.realm.Realm;\n+import io.realm.RealmConfiguration;\n import io.realm.RealmObject;\n+import io.realm.RealmQuery;\n import io.realm.RealmResults;\n \n /**\n@@ -49,7 +51,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart.setScaleEnabled(true);\n \n         // if disabled, scaling can be done on x- and y-axis separately\n-        mChart.setPinchZoom(true);\n+        mChart.setPinchZoom(false);\n \n         Typeface tf = Typeface.createFromAsset(getAssets(), \"OpenSans-Regular.ttf\");\n \n@@ -58,26 +60,63 @@ protected void onCreate(Bundle savedInstanceState) {\n         leftAxis.setAxisMaxValue(220f);\n         leftAxis.setAxisMinValue(-50f);\n         leftAxis.setStartAtZero(false);\n-        leftAxis.enableGridDashedLine(10f, 10f, 0f);\n+        leftAxis.setTypeface(tf);\n+\n+        mChart.getXAxis().setTypeface(tf);\n \n         mChart.getAxisRight().setEnabled(false);\n \n+        // write some demo-data into the realm.io database\n+        writeToDB(400);\n+\n         // add data\n-        setData(45, 100);\n+        setData();\n \n         mChart.animateY(1400, Easing.EasingOption.EaseInOutQuart);\n     }\n \n-    private void setData(int count, float range) {\n+    private void writeToDB(int objectCount) {\n+\n+        RealmConfiguration config = new RealmConfiguration.Builder(this)\n+                .name(\"myrealm.realm\")\n+                .build();\n+\n+        Realm.deleteRealm(config);\n+\n+        Realm.setDefaultConfiguration(config);\n+\n+        Realm realm = Realm.getInstance(config);\n+\n+        realm.beginTransaction();\n+\n+        realm.clear(RealmDemoData.class);\n+\n+        for(int i = 0; i < objectCount; i++) {\n+\n+            RealmDemoData d = new RealmDemoData(30f + (float) (Math.random() * 100.0), i);\n+            realm.copyToRealm(d);\n+        }\n+\n+        realm.commitTransaction();\n+        realm.close();\n+    }\n+\n+    private void setData() {\n+\n+        RealmConfiguration config = new RealmConfiguration.Builder(this)\n+                .name(\"myrealm.realm\")\n+                .build();\n+\n+        Realm realm = Realm.getInstance(config);\n+        RealmResults<RealmDemoData> result = realm.allObjects(RealmDemoData.class);\n \n         ArrayList<String> xVals = new ArrayList<String>();\n-        for (int i = 0; i < count; i++) {\n+        for (int i = 0; i < result.size(); i++) {\n             xVals.add((i) + \"\");\n         }\n \n-        RealmResults<RealmDemoData> result = Realm.getDefaultInstance().allObjects(RealmDemoData.class);\n-\n-        RealmLineDataSet<RealmDemoData> set = new RealmLineDataSet<RealmDemoData>(result);\n+        RealmLineDataSet<RealmDemoData> set = new RealmLineDataSet<RealmDemoData>(result, \"value\", \"xIndex\");\n+        set.setValueTextSize(9f);\n \n         ArrayList<ILineDataSet> dataSets = new ArrayList<ILineDataSet>();\n         dataSets.add(set); // add the dataset\n@@ -87,5 +126,7 @@ private void setData(int count, float range) {\n \n         // set data\n         mChart.setData(data);\n+\n+        realm.close();\n     }\n }\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmDemoData.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmDemoData.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmDemoData.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmDemoData.java\n@@ -2,14 +2,26 @@\n \n \n import io.realm.RealmObject;\n+import io.realm.annotations.Ignore;\n \n public class RealmDemoData extends RealmObject {\n \n     private float value;\n     private int xIndex;\n \n+    private String someStringField;\n+\n     // ofc there could me more fields here...\n \n+    public RealmDemoData() {\n+\n+    }\n+\n+    public RealmDemoData(float value, int xIndex) {\n+        this.value = value;\n+        this.xIndex = xIndex;\n+    }\n+\n     public float getValue() {\n         return value;\n     }\n@@ -25,4 +37,12 @@ public int getxIndex() {\n     public void setxIndex(int xIndex) {\n         this.xIndex = xIndex;\n     }\n+\n+    public String getSomeStringField() {\n+        return someStringField;\n+    }\n+\n+    public void setSomeStringField(String someStringField) {\n+        this.someStringField = someStringField;\n+    }\n }\n\\ No newline at end of file\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n@@ -2,7 +2,6 @@\n package com.xxmassdeveloper.mpchartexample.notimportant;\n \n import android.app.Activity;\n-import android.app.AlertDialog;\n import android.content.Context;\n import android.content.Intent;\n import android.net.Uri;\n@@ -47,14 +46,11 @@\n import com.xxmassdeveloper.mpchartexample.ScrollViewActivity;\n import com.xxmassdeveloper.mpchartexample.StackedBarActivity;\n import com.xxmassdeveloper.mpchartexample.StackedBarActivityNegative;\n-import com.xxmassdeveloper.mpchartexample.custom.RealmDemoData;\n import com.xxmassdeveloper.mpchartexample.fragments.SimpleChartDemo;\n \n import java.util.ArrayList;\n import java.util.List;\n \n-import io.realm.Realm;\n-\n public class MainActivity extends Activity implements OnItemClickListener {\n \n     @Override\n@@ -67,28 +63,6 @@ protected void onCreate(Bundle savedInstanceState) {\n         // initialize the utilities\n         Utils.init(this);\n \n-//        Realm realm = Realm.getInstance(this);\n-//\n-//        realm.beginTransaction();\n-//\n-//        RealmDemoData d1 = realm.createObject(RealmDemoData.class);\n-//        d1.setValue(10f);\n-//        d1.setxIndex(0);\n-//        RealmDemoData d2 = realm.createObject(RealmDemoData.class);\n-//        d1.setValue(20f);\n-//        d1.setxIndex(1);\n-//        RealmDemoData d3 = realm.createObject(RealmDemoData.class);\n-//        d1.setValue(30f);\n-//        d1.setxIndex(2);\n-//        RealmDemoData d4 = realm.createObject(RealmDemoData.class);\n-//        d1.setValue(40f);\n-//        d1.setxIndex(3);\n-//        RealmDemoData d5 = realm.createObject(RealmDemoData.class);\n-//        d1.setValue(50f);\n-//        d1.setxIndex(4);\n-//\n-//        realm.commitTransaction();\n-\n         ArrayList<ContentItem> objects = new ArrayList<ContentItem>();\n \n         objects.add(new ContentItem(\"Line Chart\", \"A simple demonstration of the linechart.\"));\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java\n@@ -16,19 +16,31 @@\n \n import io.realm.RealmObject;\n import io.realm.RealmResults;\n+import io.realm.dynamic.DynamicRealmObject;\n \n /**\n  * Created by Philipp Jahoda on 21/10/15.\n  */\n public class RealmLineDataSet<T extends RealmObject> extends BaseDataSet<Entry> implements ILineDataSet {\n \n     private List<Integer> mColors = new ArrayList<>();\n-\n     private List<Entry> mValues = new ArrayList<>();\n \n-    public RealmLineDataSet(RealmResults<T> result) {\n-        mColors.add(Color.WHITE);\n-        \n+    private FillFormatter mFillFormatter = new DefaultFillFormatter();\n+\n+    public RealmLineDataSet(RealmResults<T> result, String yValuesField, String xIndexField) {\n+        mColors.add(Color.BLACK);\n+\n+        result.sort(xIndexField, true);\n+\n+        for(T object : result) {\n+\n+            DynamicRealmObject dynamicObject = new DynamicRealmObject(object);\n+\n+            mValues.add(new Entry(dynamicObject.getFloat(yValuesField), dynamicObject.getInt(xIndexField)));\n+        }\n+\n+        //calcMinMax(mValues, mLastStart, mLastEnd);\n     }\n \n     @Override\n@@ -43,12 +55,12 @@ public boolean isDrawCubicEnabled() {\n \n     @Override\n     public float getCircleSize() {\n-        return 5f;\n+        return 8f;\n     }\n \n     @Override\n     public int getCircleColor(int index) {\n-        return Color.WHITE;\n+        return Color.BLACK;\n     }\n \n     @Override\n@@ -58,7 +70,7 @@ public boolean isDrawCirclesEnabled() {\n \n     @Override\n     public int getCircleHoleColor() {\n-        return Color.WHITE;\n+        return Color.BLACK;\n     }\n \n     @Override\n@@ -78,7 +90,7 @@ public boolean isDashedLineEnabled() {\n \n     @Override\n     public FillFormatter getFillFormatter() {\n-        return new DefaultFillFormatter();\n+        return mFillFormatter;\n     }\n \n     @Override\n@@ -93,7 +105,7 @@ public int getFillAlpha() {\n \n     @Override\n     public float getLineWidth() {\n-        return 3f;\n+        return 4f;\n     }\n \n     @Override",
    "output": "Worked on example and realm data plotting"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java\n@@ -75,18 +75,9 @@ private void setData(int count, float range) {\n             xVals.add((i) + \"\");\n         }\n \n-        ArrayList<Entry> yVals = new ArrayList<Entry>();\n-\n-        for (int i = 0; i < count; i++) {\n-\n-            float mult = (range + 1);\n-            float val = (float) (Math.random() * mult) + 3;\n-            yVals.add(new Entry(val, i));\n-        }\n-\n         RealmResults<RealmDemoData> result = Realm.getDefaultInstance().allObjects(RealmDemoData.class);\n \n-        RealmLineDataSet set = new RealmLineDataSet(result);\n+        RealmLineDataSet<RealmDemoData> set = new RealmLineDataSet<RealmDemoData>(result);\n \n         ArrayList<ILineDataSet> dataSets = new ArrayList<ILineDataSet>();\n         dataSets.add(set); // add the dataset\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmDemoData.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmDemoData.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmDemoData.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmDemoData.java\n@@ -8,6 +8,8 @@ public class RealmDemoData extends RealmObject {\n     private float value;\n     private int xIndex;\n \n+    // ofc there could me more fields here...\n+\n     public float getValue() {\n         return value;\n     }",
    "output": "Minor changes"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java\n@@ -14,18 +14,20 @@\n import java.util.ArrayList;\n import java.util.List;\n \n+import io.realm.RealmObject;\n+import io.realm.RealmResults;\n+\n /**\n  * Created by Philipp Jahoda on 21/10/15.\n  */\n-public class RealmLineDataSet extends BaseDataSet<Entry> implements ILineDataSet {\n+public class RealmLineDataSet<T extends RealmObject> extends BaseDataSet<Entry> implements ILineDataSet {\n \n     private List<Integer> mColors = new ArrayList<>();\n \n     private List<Entry> mValues = new ArrayList<>();\n \n-    public RealmLineDataSet() {\n+    public RealmLineDataSet(RealmResults<T> result) {\n         mColors.add(Color.WHITE);\n-\n         \n     }\n ",
    "output": "More work on RealmLineDataSet"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java\n@@ -73,6 +73,16 @@ public abstract class BaseDataSet<T extends Entry> implements IDataSet<T> {\n      */\n     protected boolean mVisible = true;\n \n+    @Override\n+    public float getYMin() {\n+        return mYMin;\n+    }\n+\n+    @Override\n+    public float getYMax() {\n+        return mYMax;\n+    }\n+\n \n     @Override\n     public void calcMinMax(List<T> values, int start, int end) {\n@@ -318,4 +328,17 @@ public float getYValForXIndex(int xIndex) {\n         else\n             return Float.NaN;\n     }\n+\n+    @Override\n+    public boolean contains(Entry e) {\n+\n+        List<T> values = getYVals();\n+\n+        for (Entry entry : values) {\n+            if (entry.equals(e))\n+                return true;\n+        }\n+\n+        return false;\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -130,16 +130,6 @@ public List<T> getYVals() {\n         return mYVals;\n     }\n \n-    @Override\n-    public float getYMin() {\n-        return mYMin;\n-    }\n-\n-    @Override\n-    public float getYMax() {\n-        return mYMax;\n-    }\n-\n     /**\n      * The xIndex of an Entry object is provided. This method returns the actual\n      * index in the Entry array of the DataSet. IMPORTANT: This method does\n@@ -392,17 +382,6 @@ public void resetColors() {\n         mColors = new ArrayList<Integer>();\n     }\n \n-    @Override\n-    public boolean contains(Entry e) {\n-\n-        for (Entry entry : mYVals) {\n-            if (entry.equals(e))\n-                return true;\n-        }\n-\n-        return false;\n-    }\n-\n     /**\n      * Removes all values from this DataSet and recalculates min and max value.\n      */\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java\n@@ -1,28 +1,37 @@\n package com.github.mikephil.charting.data.realm;\n \n+import android.graphics.Color;\n import android.graphics.DashPathEffect;\n \n import com.github.mikephil.charting.components.YAxis;\n import com.github.mikephil.charting.data.BaseDataSet;\n import com.github.mikephil.charting.data.DataSet;\n import com.github.mikephil.charting.data.Entry;\n+import com.github.mikephil.charting.formatter.DefaultFillFormatter;\n import com.github.mikephil.charting.formatter.FillFormatter;\n import com.github.mikephil.charting.interfaces.datainterfaces.datasets.ILineDataSet;\n \n+import java.util.ArrayList;\n import java.util.List;\n \n /**\n  * Created by Philipp Jahoda on 21/10/15.\n  */\n public class RealmLineDataSet extends BaseDataSet<Entry> implements ILineDataSet {\n \n+    private List<Integer> mColors = new ArrayList<>();\n+\n+    private List<Entry> mValues = new ArrayList<>();\n+\n     public RealmLineDataSet() {\n+        mColors.add(Color.WHITE);\n \n+        \n     }\n \n     @Override\n     public float getCubicIntensity() {\n-        return 0;\n+        return .2f;\n     }\n \n     @Override\n@@ -32,22 +41,22 @@ public boolean isDrawCubicEnabled() {\n \n     @Override\n     public float getCircleSize() {\n-        return 0;\n+        return 5f;\n     }\n \n     @Override\n     public int getCircleColor(int index) {\n-        return 0;\n+        return Color.WHITE;\n     }\n \n     @Override\n     public boolean isDrawCirclesEnabled() {\n-        return false;\n+        return true;\n     }\n \n     @Override\n     public int getCircleHoleColor() {\n-        return 0;\n+        return Color.WHITE;\n     }\n \n     @Override\n@@ -67,22 +76,22 @@ public boolean isDashedLineEnabled() {\n \n     @Override\n     public FillFormatter getFillFormatter() {\n-        return null;\n+        return new DefaultFillFormatter();\n     }\n \n     @Override\n     public int getFillColor() {\n-        return 0;\n+        return Color.WHITE;\n     }\n \n     @Override\n     public int getFillAlpha() {\n-        return 0;\n+        return 100;\n     }\n \n     @Override\n     public float getLineWidth() {\n-        return 0;\n+        return 3f;\n     }\n \n     @Override\n@@ -112,56 +121,41 @@ public DashPathEffect getDashPathEffectHighlight() {\n \n     @Override\n     public int getHighLightColor() {\n-        return 0;\n+        return Color.WHITE;\n     }\n \n     @Override\n     public String getLabel() {\n-        return null;\n+        return \"Realm Data\";\n     }\n \n     @Override\n     public List<Entry> getYVals() {\n-        return null;\n-    }\n-\n-    @Override\n-    public float getYMin() {\n-        return 0;\n-    }\n-\n-    @Override\n-    public float getYMax() {\n-        return 0;\n+        return mValues;\n     }\n \n     @Override\n     public int getEntryCount() {\n-        return 0;\n+        return mValues.size();\n     }\n \n     @Override\n     public YAxis.AxisDependency getAxisDependency() {\n-        return null;\n+        return YAxis.AxisDependency.LEFT;\n     }\n \n     @Override\n     public List<Integer> getColors() {\n-        return null;\n+        return mColors;\n     }\n \n     @Override\n     public int getColor() {\n-        return 0;\n+        return mColors.get(0);\n     }\n \n     @Override\n     public int getColor(int index) {\n-        return 0;\n-    }\n-\n-    @Override\n-    public boolean contains(Entry e) {\n-        return false;\n+        return mColors.get(index % mColors.size());\n     }\n }",
    "output": "Minor changes on BaseDataSet"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java\n@@ -11,10 +11,15 @@\n import com.github.mikephil.charting.data.LineData;\n import com.github.mikephil.charting.data.realm.RealmLineDataSet;\n import com.github.mikephil.charting.interfaces.datainterfaces.datasets.ILineDataSet;\n+import com.xxmassdeveloper.mpchartexample.custom.RealmDemoData;\n import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n \n import java.util.ArrayList;\n \n+import io.realm.Realm;\n+import io.realm.RealmObject;\n+import io.realm.RealmResults;\n+\n /**\n  * Created by Philipp Jahoda on 21/10/15.\n  */\n@@ -79,7 +84,9 @@ private void setData(int count, float range) {\n             yVals.add(new Entry(val, i));\n         }\n \n-        RealmLineDataSet set = new RealmLineDataSet();\n+        RealmResults<RealmDemoData> result = Realm.getDefaultInstance().allObjects(RealmDemoData.class);\n+\n+        RealmLineDataSet set = new RealmLineDataSet(result);\n \n         ArrayList<ILineDataSet> dataSets = new ArrayList<ILineDataSet>();\n         dataSets.add(set); // add the dataset\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmDemoData.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmDemoData.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmDemoData.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmDemoData.java\n@@ -0,0 +1,26 @@\n+package com.xxmassdeveloper.mpchartexample.custom;\n+\n+\n+import io.realm.RealmObject;\n+\n+public class RealmDemoData extends RealmObject {\n+\n+    private float value;\n+    private int xIndex;\n+\n+    public float getValue() {\n+        return value;\n+    }\n+\n+    public void setValue(float value) {\n+        this.value = value;\n+    }\n+\n+    public int getxIndex() {\n+        return xIndex;\n+    }\n+\n+    public void setxIndex(int xIndex) {\n+        this.xIndex = xIndex;\n+    }\n+}\n\\ No newline at end of file\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n@@ -41,16 +41,20 @@\n import com.xxmassdeveloper.mpchartexample.PieChartActivity;\n import com.xxmassdeveloper.mpchartexample.R;\n import com.xxmassdeveloper.mpchartexample.RadarChartActivitry;\n+import com.xxmassdeveloper.mpchartexample.RealmDatabaseActivity;\n import com.xxmassdeveloper.mpchartexample.RealtimeLineChartActivity;\n import com.xxmassdeveloper.mpchartexample.ScatterChartActivity;\n import com.xxmassdeveloper.mpchartexample.ScrollViewActivity;\n import com.xxmassdeveloper.mpchartexample.StackedBarActivity;\n import com.xxmassdeveloper.mpchartexample.StackedBarActivityNegative;\n+import com.xxmassdeveloper.mpchartexample.custom.RealmDemoData;\n import com.xxmassdeveloper.mpchartexample.fragments.SimpleChartDemo;\n \n import java.util.ArrayList;\n import java.util.List;\n \n+import io.realm.Realm;\n+\n public class MainActivity extends Activity implements OnItemClickListener {\n \n     @Override\n@@ -63,6 +67,28 @@ protected void onCreate(Bundle savedInstanceState) {\n         // initialize the utilities\n         Utils.init(this);\n \n+//        Realm realm = Realm.getInstance(this);\n+//\n+//        realm.beginTransaction();\n+//\n+//        RealmDemoData d1 = realm.createObject(RealmDemoData.class);\n+//        d1.setValue(10f);\n+//        d1.setxIndex(0);\n+//        RealmDemoData d2 = realm.createObject(RealmDemoData.class);\n+//        d1.setValue(20f);\n+//        d1.setxIndex(1);\n+//        RealmDemoData d3 = realm.createObject(RealmDemoData.class);\n+//        d1.setValue(30f);\n+//        d1.setxIndex(2);\n+//        RealmDemoData d4 = realm.createObject(RealmDemoData.class);\n+//        d1.setValue(40f);\n+//        d1.setxIndex(3);\n+//        RealmDemoData d5 = realm.createObject(RealmDemoData.class);\n+//        d1.setValue(50f);\n+//        d1.setxIndex(4);\n+//\n+//        realm.commitTransaction();\n+\n         ArrayList<ContentItem> objects = new ArrayList<ContentItem>();\n \n         objects.add(new ContentItem(\"Line Chart\", \"A simple demonstration of the linechart.\"));\n@@ -125,6 +151,9 @@ protected void onCreate(Bundle savedInstanceState) {\n         objects.add(new ContentItem(\n                 \"Chart in ScrollView\",\n                 \"This demonstrates how to use a chart inside a ScrollView.\"));\n+        objects.add(new ContentItem(\n+                \"Realm.io Database\",\n+                \"This demonstrates how to use this library with Realm.io mobile database.\"));\n \n         MyAdapter adapter = new MyAdapter(this, objects);\n \n@@ -244,6 +273,10 @@ public void onItemClick(AdapterView<?> av, View v, int pos, long arg3) {\n                 i = new Intent(this, ScrollViewActivity.class);\n                 startActivity(i);\n                 break;\n+            case 26:\n+                i = new Intent(this, RealmDatabaseActivity.class);\n+                startActivity(i);\n+                break;\n         }\n \n         overridePendingTransition(R.anim.move_right_in_activity, R.anim.move_left_out_activity);",
    "output": "Setup example for realm"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineData.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineData.java\n@@ -1,35 +0,0 @@\n-package com.github.mikephil.charting.data.realm;\n-\n-import com.github.mikephil.charting.data.Entry;\n-import com.github.mikephil.charting.data.LineDataSet;\n-import com.github.mikephil.charting.interfaces.datainterfaces.data.ILineData;\n-import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IDataSet;\n-\n-import java.util.List;\n-\n-/**\n- * Created by Philipp Jahoda on 21/10/15.\n- */\n-public class RealmLineData implements ILineData {\n-\n-\n-    @Override\n-    public List getDataSets() {\n-        return null;\n-    }\n-\n-    @Override\n-    public IDataSet<? extends Entry> getDataSetByIndex(int index) {\n-        return null;\n-    }\n-\n-    @Override\n-    public int getYValCount() {\n-        return 0;\n-    }\n-\n-    @Override\n-    public int getIndexOfDataSet(IDataSet dataSet) {\n-        return 0;\n-    }\n-}",
    "output": "Remove RealmLineData - no longer needed"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java\n@@ -16,6 +16,9 @@\n  */\n public class RealmLineDataSet extends BaseDataSet<Entry> implements ILineDataSet {\n \n+    public RealmLineDataSet() {\n+\n+    }\n \n     @Override\n     public float getCubicIntensity() {",
    "output": "Add Realm optional dependency"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java\n@@ -1,6 +1,5 @@\n package com.xxmassdeveloper.mpchartexample;\n \n-import android.graphics.Color;\n import android.graphics.Typeface;\n import android.os.Bundle;\n import android.view.WindowManager;\n@@ -11,6 +10,7 @@\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.LineData;\n import com.github.mikephil.charting.data.realm.RealmLineDataSet;\n+import com.github.mikephil.charting.interfaces.datainterfaces.datasets.ILineDataSet;\n import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n \n import java.util.ArrayList;\n@@ -75,35 +75,17 @@ private void setData(int count, float range) {\n         for (int i = 0; i < count; i++) {\n \n             float mult = (range + 1);\n-            float val = (float) (Math.random() * mult) + 3;// + (float)\n-            // ((mult *\n-            // 0.1) / 10);\n+            float val = (float) (Math.random() * mult) + 3;\n             yVals.add(new Entry(val, i));\n         }\n \n-        // create a dataset and give it a type\n-        RealmLineDataSet set1 = new RealmLineDataSet();\n-\n-        // set the line to be drawn like this \"- - - - - -\"\n-//        set1.enableDashedLine(10f, 5f, 0f);\n-//        set1.enableDashedHighlightLine(10f, 5f, 0f);\n-//        set1.setColor(Color.BLACK);\n-//        set1.setCircleColor(Color.BLACK);\n-//        set1.setLineWidth(1f);\n-//        set1.setCircleSize(3f);\n-//        set1.setDrawCircleHole(false);\n-//        set1.setValueTextSize(9f);\n-//        set1.setFillAlpha(65);\n-//        set1.setFillColor(Color.BLACK);\n-//        set1.setDrawFilled(true);\n-        // set1.setShader(new LinearGradient(0, 0, 0, mChart.getHeight(),\n-        // Color.BLACK, Color.WHITE, Shader.TileMode.MIRROR));\n-\n-        ArrayList<RealmLineDataSet> dataSets = new ArrayList<RealmLineDataSet>();\n-        dataSets.add(set1); // add the datasets\n-\n-        // create a data object with the datasets\n-        LineData data = new LineData();\n+        RealmLineDataSet set = new RealmLineDataSet();\n+\n+        ArrayList<ILineDataSet> dataSets = new ArrayList<ILineDataSet>();\n+        dataSets.add(set); // add the dataset\n+\n+        // create a data object with the dataset list\n+        LineData data = new LineData(xVals, dataSets);\n \n         // set data\n         mChart.setData(data);",
    "output": "Realm example cleanup"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/formatter/FillFormatter.java b/MPChartLib/src/com/github/mikephil/charting/formatter/FillFormatter.java\n--- a/MPChartLib/src/com/github/mikephil/charting/formatter/FillFormatter.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/formatter/FillFormatter.java\n@@ -1,6 +1,6 @@\n package com.github.mikephil.charting.formatter;\n \n-import com.github.mikephil.charting.data.LineDataSet;\n+import com.github.mikephil.charting.interfaces.datainterfaces.datasets.ILineDataSet;\n import com.github.mikephil.charting.interfaces.dataprovider.LineDataProvider;\n \n /**\n@@ -15,9 +15,9 @@ public interface FillFormatter {\n      * Returns the vertical (y-axis) position where the filled-line of the\n      * LineDataSet should end.\n      * \n-     * @param dataSet the LineDataSet that is currently drawn\n+     * @param dataSet the ILineDataSet that is currently drawn\n      * @param dataProvider\n      * @return\n      */\n-    float getFillLinePosition(LineDataSet dataSet, LineDataProvider dataProvider);\n+    float getFillLinePosition(ILineDataSet dataSet, LineDataProvider dataProvider);\n }",
    "output": "Update FillFormatter with new interface"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java\n@@ -5,6 +5,7 @@\n \n import com.github.mikephil.charting.formatter.DefaultValueFormatter;\n import com.github.mikephil.charting.formatter.ValueFormatter;\n+import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBaseDataSet;\n import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IDataSet;\n import com.github.mikephil.charting.utils.Utils;\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -8,6 +8,7 @@\n import com.github.mikephil.charting.highlight.Highlight;\n import com.github.mikephil.charting.formatter.ValueFormatter;\n import com.github.mikephil.charting.interfaces.datainterfaces.data.IChartData;\n+import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBaseDataSet;\n import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IDataSet;\n \n import java.util.ArrayList;\n@@ -622,7 +623,7 @@ public void addEntry(Entry e, int dataSetIndex) {\n         if (mDataSets.size() > dataSetIndex && dataSetIndex >= 0) {\n \n             float val = e.getVal();\n-            T set = mDataSets.get(dataSetIndex);\n+            IDataSet set = mDataSets.get(dataSetIndex);\n \n             if (mYValCount == 0) {\n                 mYMin = val;\n@@ -680,16 +681,21 @@ public boolean removeEntry(Entry e, int dataSetIndex) {\n         if (e == null || dataSetIndex >= mDataSets.size())\n             return false;\n \n-        // remove the entry from the dataset\n-        boolean removed = mDataSets.get(dataSetIndex).removeEntry(e);\n+        IDataSet set = mDataSets.get(dataSetIndex);\n \n-        if (removed) {\n-            mYValCount -= 1;\n+        if(set != null) {\n+            // remove the entry from the dataset\n+            boolean removed = set.removeEntry(e);\n \n-            calcMinMax(mLastStart, mLastEnd);\n-        }\n+            if (removed) {\n+                mYValCount -= 1;\n \n-        return removed;\n+                calcMinMax(mLastStart, mLastEnd);\n+            }\n+\n+            return removed;\n+        } else\n+            return false;\n     }\n \n     /**\n@@ -706,7 +712,7 @@ public boolean removeEntry(int xIndex, int dataSetIndex) {\n         if (dataSetIndex >= mDataSets.size())\n             return false;\n \n-        T dataSet = mDataSets.get(dataSetIndex);\n+        IDataSet dataSet = mDataSets.get(dataSetIndex);\n         Entry e = dataSet.getEntryForXIndex(xIndex);\n \n         if (e == null || e.getXIndex() != xIndex)\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IBaseDataSet.java b/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IBaseDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IBaseDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IBaseDataSet.java\n@@ -1,29 +0,0 @@\n-package com.github.mikephil.charting.interfaces.datainterfaces.datasets;\n-\n-import com.github.mikephil.charting.data.Entry;\n-\n-/**\n- * Created by philipp on 21/10/15.\n- */\n-public interface IBaseDataSet<T> {\n-\n-    /**\n-     * Adds an Entry to the DataSet dynamically.\n-     * Entries are added to the end of the list.\n-     * This will also recalculate the current minimum and maximum\n-     * values of the DataSet and the value-sum.\n-     *\n-     * @param e\n-     */\n-    void addEntry(T e);\n-\n-    /**\n-     * Removes an Entry from the DataSets entries array. This will also\n-     * recalculate the current minimum and maximum values of the DataSet and the\n-     * value-sum. Returns true if an Entry was removed, false if no Entry could\n-     * be removed.\n-     *\n-     * @param e\n-     */\n-    boolean removeEntry(T e);\n-}\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IDataSet.java b/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IDataSet.java\n@@ -11,7 +11,7 @@\n /**\n  * Created by Philipp Jahoda on 21/10/15.\n  */\n-public interface IDataSet<T extends Entry> extends IBaseDataSet<Entry> {\n+public interface IDataSet<T extends Entry> {\n \n     /**\n      * Returns the label string that describes the DataSet.\n@@ -104,6 +104,26 @@ public interface IDataSet<T extends Entry> extends IBaseDataSet<Entry> {\n      */\n     void setHighlightEnabled(boolean enabled);\n \n+    /**\n+     * Adds an Entry to the DataSet dynamically.\n+     * Entries are added to the end of the list.\n+     * This will also recalculate the current minimum and maximum\n+     * values of the DataSet and the value-sum.\n+     *\n+     * @param e\n+     */\n+    void addEntry(T e);\n+\n+    /**\n+     * Removes an Entry from the DataSets entries array. This will also\n+     * recalculate the current minimum and maximum values of the DataSet and the\n+     * value-sum. Returns true if an Entry was removed, false if no Entry could\n+     * be removed.\n+     *\n+     * @param e\n+     */\n+    boolean removeEntry(T e);\n+\n     /**\n      * If this component has no ValueFormatter or is only equipped with the\n      * default one (no custom set), return true.",
    "output": "Interface improvements, get rid of IBaseDataSet"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -40,11 +40,6 @@ public abstract class ChartData<T extends IDataSet<? extends Entry>> implements\n \n     protected float mRightAxisMin = 0.0f;\n \n-    /**\n-     * the total sum of all y-values\n-     */\n-    private float mYValueSum = 0f;\n-\n     /**\n      * total number of y-values across all DataSet objects\n      */\n@@ -154,7 +149,6 @@ protected void init() {\n         checkLegal();\n \n         calcMinMax(mLastStart, mLastEnd);\n-        calcYValueSum();\n         calcYValueCount();\n \n         calcXValAverageLength();\n@@ -228,13 +222,14 @@ public void calcMinMax(int start, int end) {\n \n             for (int i = 0; i < mDataSets.size(); i++) {\n \n-                mDataSets.get(i).calcMinMax(start, end);\n+                T set = mDataSets.get(i);\n+                set.calcMinMax(set.getYVals(), start, end);\n \n-                if (mDataSets.get(i).getYMin() < mYMin)\n-                    mYMin = mDataSets.get(i).getYMin();\n+                if (set.getYMin() < mYMin)\n+                    mYMin = set.getYMin();\n \n-                if (mDataSets.get(i).getYMax() > mYMax)\n-                    mYMax = mDataSets.get(i).getYMax();\n+                if (set.getYMax() > mYMax)\n+                    mYMax = set.getYMax();\n             }\n \n             if (mYMin == Float.MAX_VALUE) {\n@@ -285,21 +280,6 @@ public void calcMinMax(int start, int end) {\n         }\n     }\n \n-    /**\n-     * calculates the sum of all y-values in all datasets\n-     */\n-    protected void calcYValueSum() {\n-\n-        mYValueSum = 0;\n-\n-        if (mDataSets == null)\n-            return;\n-\n-        for (int i = 0; i < mDataSets.size(); i++) {\n-            mYValueSum += Math.abs(mDataSets.get(i).getYValueSum());\n-        }\n-    }\n-\n     /**\n      * Calculates the total number of y-values across all DataSets the ChartData\n      * represents.\n@@ -335,15 +315,6 @@ public int getDataSetCount() {\n         return mDataSets.size();\n     }\n \n-    /**\n-     * Returns the average value across all entries in this Data object\n-     * (all entries from the DataSets this data object holds)\n-     * @return\n-     */\n-    public float getAverage() {\n-        return (float ) getYValueSum() / (float) getYValCount();\n-    }\n-\n     /**\n      * Returns the smallest y-value the data object contains.\n      *\n@@ -398,16 +369,6 @@ public float getXValAverageLength() {\n         return mXValAverageLength;\n     }\n \n-    /**\n-     * Returns the total y-value sum across all DataSet objects the this object\n-     * represents.\n-     *\n-     * @return\n-     */\n-    public float getYValueSum() {\n-        return mYValueSum;\n-    }\n-\n     @Override\n     public int getYValCount() {\n         return mYValCount;\n@@ -553,7 +514,6 @@ public void addDataSet(T d) {\n             return;\n \n         mYValCount += d.getEntryCount();\n-        mYValueSum += d.getYValueSum();\n \n         if (mDataSets.size() <= 0) {\n \n@@ -630,7 +590,6 @@ public boolean removeDataSet(T d) {\n         if (removed) {\n \n             mYValCount -= d.getEntryCount();\n-            mYValueSum -= d.getYValueSum();\n \n             calcMinMax(mLastStart, mLastEnd);\n         }\n@@ -702,7 +661,6 @@ public void addEntry(Entry e, int dataSetIndex) {\n             }\n \n             mYValCount += 1;\n-            mYValueSum += val;\n \n             handleEmptyAxis(getFirstLeft(), getFirstRight());\n \n@@ -729,11 +687,7 @@ public boolean removeEntry(Entry e, int dataSetIndex) {\n         boolean removed = mDataSets.get(dataSetIndex).removeEntry(e.getXIndex());\n \n         if (removed) {\n-\n-            float val = e.getVal();\n-\n             mYValCount -= 1;\n-            mYValueSum -= val;\n \n             calcMinMax(mLastStart, mLastEnd);\n         }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -35,11 +35,6 @@ public abstract class DataSet<T extends Entry> extends BaseDataSet<T> {\n      */\n     protected List<Integer> mColors = null;\n \n-    /**\n-     * the total sum of all y-values\n-     */\n-    private float mYValueSum = 0f;\n-\n     /**\n      * label that describes the DataSet or the data the DataSet represents\n      */\n@@ -107,29 +102,13 @@ public DataSet(List<T> yVals, String label) {\n         mColors.add(Color.rgb(140, 234, 255));\n \n         calcMinMax(mYVals, mLastStart, mLastEnd);\n-        calcYValueSum();\n     }\n \n     /**\n      * Use this method to tell the data set that the underlying data has changed\n      */\n     public void notifyDataSetChanged() {\n         calcMinMax(mYVals, mLastStart, mLastEnd);\n-        calcYValueSum();\n-    }\n-\n-    /**\n-     * calculates the sum of all y-values\n-     */\n-    private void calcYValueSum() {\n-\n-        mYValueSum = 0;\n-\n-        for (int i = 0; i < mYVals.size(); i++) {\n-            Entry e = mYVals.get(i);\n-            if (e != null)\n-                mYValueSum += Math.abs(e.getVal());\n-        }\n     }\n \n     /**\n@@ -259,11 +238,6 @@ public List<T> getYVals() {\n         return mYVals;\n     }\n \n-    @Override\n-    public float getYValueSum() {\n-        return mYValueSum;\n-    }\n-\n     @Override\n     public float getYMin() {\n         return mYMin;\n@@ -430,8 +404,6 @@ public void addEntry(Entry e) {\n                 mYMin = val;\n         }\n \n-        mYValueSum += val;\n-\n         // add the entry\n         mYVals.add((T) e);\n     }\n@@ -466,8 +438,6 @@ public void addEntryOrdered(Entry e) {\n                 mYMin = val;\n         }\n \n-        mYValueSum += val;\n-\n         if (mYVals.size() > 0 && mYVals.get(mYVals.size() - 1).getXIndex() > e.getXIndex()) {\n             int closestIndex = getEntryIndex(e.getXIndex());\n             if (mYVals.get(closestIndex).getXIndex() < e.getXIndex())\n@@ -496,10 +466,6 @@ public boolean removeEntry(T e) {\n         boolean removed = mYVals.remove(e);\n \n         if (removed) {\n-\n-            float val = e.getVal();\n-            mYValueSum -= val;\n-\n             calcMinMax(mYVals, mLastStart, mLastEnd);\n         }\n \n@@ -531,10 +497,6 @@ public boolean removeFirst() {\n         boolean removed = entry != null;\n \n         if (removed) {\n-\n-            float val = entry.getVal();\n-            mYValueSum -= val;\n-\n             calcMinMax(mYVals, mLastStart, mLastEnd);\n         }\n \n@@ -557,10 +519,6 @@ public boolean removeLast() {\n         boolean removed = entry != null;\n \n         if (removed) {\n-\n-            float val = entry.getVal();\n-            mYValueSum -= val;\n-\n             calcMinMax(mYVals, mLastStart, mLastEnd);\n         }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IDataSet.java b/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IDataSet.java\n@@ -38,13 +38,6 @@ public interface IDataSet<T extends Entry> {\n      */\n     float getYMax();\n \n-    /**\n-     * gets the sum of all y-values\n-     *\n-     * @return\n-     */\n-    float getYValueSum();\n-\n     /**\n      * returns the number of y-values this DataSet represents -> yvals.size()\n      *",
    "output": "Remove y-value-sum from DataSets as it is not needed"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -60,7 +60,7 @@ public class RadarChart extends PieRadarChartBase<RadarData> {\n     /**\n      * modulus that determines how many labels and web-lines are skipped before the next is drawn\n      */\n-    private int mSkipWebLineCount = 1;\n+    private int mSkipWebLineCount = 0;\n \n     /**\n      * the object reprsenting the y-axis labels",
    "output": "Critical fix in radarchart (issue #1121)"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java\n@@ -209,7 +209,7 @@ public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {\n     @Override\n     public void onNothingSelected() {\n         // TODO Auto-generated method stub\n-\n+        Log.i(\"NOTING SELECTED\", \"\");\n     }\n \n     private class CustomFormatter implements ValueFormatter, YAxisValueFormatter {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -372,24 +372,6 @@ private void performZoom(MotionEvent event) {\n         }\n     }\n \n-    /**\n-     * Perform a highlight operation.\n-     * \n-     * @param e\n-     */\n-    private void performHighlight(MotionEvent e) {\n-\n-        Highlight h = mChart.getHighlightByTouchPoint(e.getX(), e.getY());\n-\n-        if (h == null || h.equalTo(mLastHighlighted)) {\n-            mChart.highlightTouch(null);\n-            mLastHighlighted = null;\n-        } else {\n-            mLastHighlighted = h;\n-            mChart.highlightTouch(h);\n-        }\n-    }\n-\n     /**\n      * Highlights upon dragging, generates callbacks for the selection-listener.\n      * \n@@ -554,7 +536,9 @@ public boolean onSingleTapUp(MotionEvent e) {\n             return false;\n         }\n \n-        performHighlight(e);\n+\n+        Highlight h = mChart.getHighlightByTouchPoint(e.getX(), e.getY());\n+        performHighlight(h, e);\n \n         return super.onSingleTapUp(e);\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/listener/ChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/ChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/ChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/ChartTouchListener.java\n@@ -109,6 +109,23 @@ public ChartGesture getLastGesture() {\n         return mLastGesture;\n     }\n \n+\n+    /**\n+     * Perform a highlight operation.\n+     *\n+     * @param e\n+     */\n+    protected void performHighlight(Highlight h, MotionEvent e) {\n+\n+        if (h == null || h.equalTo(mLastHighlighted)) {\n+            mChart.highlightTouch(null);\n+            mLastHighlighted = null;\n+        } else {\n+            mLastHighlighted = h;\n+            mChart.highlightTouch(h);\n+        }\n+    }\n+\n     /**\n      * returns the distance between two points\n      *\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java\n@@ -201,16 +201,7 @@ public boolean onSingleTapUp(MotionEvent e) {\n                     mLastHighlighted = null;\n                 } else {\n                     Highlight h = new Highlight(index, dataSetIndex);\n-\n-                    if (h.equalTo(mLastHighlighted)) {\n-\n-                        mChart.highlightTouch(null);\n-                        mLastHighlighted = null;\n-                    } else {\n-\n-                        mChart.highlightTouch(h);\n-                        mLastHighlighted = h;\n-                    }\n+                    performHighlight(h, e);\n                 }\n             }\n         }",
    "output": "Improve touch-listener code style"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -121,11 +121,6 @@ public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entr\n      */\n     protected boolean mDataNotSet = true;\n \n-    /**\n-     * if true, units are drawn next to the values in the chart\n-     */\n-    protected boolean mDrawUnitInChart = false;\n-\n     /**\n      * the number of x-values the chart displays\n      */",
    "output": "Remove unused variable"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -370,8 +370,9 @@ public void onChartGestureStart(MotionEvent me, ChartTouchListener.ChartGesture\n     public void onChartGestureEnd(MotionEvent me, ChartTouchListener.ChartGesture lastPerformedGesture) {\n         Log.i(\"Gesture\", \"END, lastGesture: \" + lastPerformedGesture);\n \n+        // un-highlight values after the gesture is finished and no single-tap\n         if(lastPerformedGesture != ChartTouchListener.ChartGesture.SINGLE_TAP)\n-            mChart.highlightValues(null);\n+            mChart.highlightValues(null); // or highlightTouch(null) for callback to onNothingSelected(...)\n     }\n \n     @Override\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n@@ -85,6 +85,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart.setRotationAngle(0);\n         // enable rotation of the chart by touch\n         mChart.setRotationEnabled(true);\n+        mChart.setHighLightPerTapEnabled(false);\n \n         // mChart.setUnit(\" €\");\n         // mChart.setDrawUnitsInChart(true);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -76,6 +76,11 @@ public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entr\n      */\n     protected T mData = null;\n \n+    /**\n+     * Flag that indicates if highlighting per tap (touch) is enabled\n+     */\n+    protected boolean mHighLightPerTapEnabled = true;\n+\n     /**\n      * If set to true, chart continues to scroll after touch up\n      */\n@@ -495,6 +500,14 @@ public Highlight[] getHighlighted() {\n         return mIndicesToHighlight;\n     }\n \n+    public boolean isHighLightPerTapEnabled() {\n+        return mHighLightPerTapEnabled;\n+    }\n+\n+    public void setHighLightPerTapEnabled(boolean enabled) {\n+        mHighLightPerTapEnabled = enabled;\n+    }\n+\n     /**\n      * Returns true if there are values to highlight, false if there are no\n      * values to highlight. Checks if the highlight array is null, has a length\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -542,8 +542,6 @@ public void onLongPress(MotionEvent e) {\n     @Override\n     public boolean onSingleTapUp(MotionEvent e) {\n \n-        performHighlight(e);\n-\n         mLastGesture = ChartGesture.SINGLE_TAP;\n \n         OnChartGestureListener l = mChart.getOnChartGestureListener();\n@@ -552,6 +550,12 @@ public boolean onSingleTapUp(MotionEvent e) {\n             l.onChartSingleTapped(e);\n         }\n \n+        if(!mChart.isHighLightPerTapEnabled()) {\n+            return false;\n+        }\n+\n+        performHighlight(e);\n+\n         return super.onSingleTapUp(e);\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java\n@@ -147,6 +147,10 @@ public boolean onSingleTapUp(MotionEvent e) {\n             l.onChartSingleTapped(e);\n         }\n \n+        if(!mChart.isHighLightPerTapEnabled()) {\n+            return false;\n+        }\n+\n         float distance = mChart.distanceToCenter(e.getX(), e.getY());\n \n         // check if a slice was touched",
    "output": "Allow disabling tap-highlight while still being able to highlight programatically or via drag."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -479,8 +479,11 @@ public void highlightValues(Highlight[] highs) {\n         // set the indices to highlight\n         mIndicesToHighlight = highs;\n \n-        if(highs == null || highs.length == 0)\n+        if(highs == null || highs.length <= 0 || highs[0] == null) {\n             mChartTouchListener.setLastHighlighted(null);\n+        } else {\n+            mChartTouchListener.setLastHighlighted(highs[0]);\n+        }\n \n         // redraw the chart\n         invalidate();",
    "output": "Fix #924"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/Entry.java b/MPChartLib/src/com/github/mikephil/charting/data/Entry.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/Entry.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/Entry.java\n@@ -1,13 +1,17 @@\n \n package com.github.mikephil.charting.data;\n \n+import android.os.Parcel;\n+import android.os.ParcelFormatException;\n+import android.os.Parcelable;\n+\n /**\n  * Class representing one entry in the chart. Might contain multiple values.\n  * Might only contain a single value depending on the used constructor.\n  * \n  * @author Philipp Jahoda\n  */\n-public class Entry {\n+public class Entry implements Parcelable {\n \n     /** the actual value */\n     private float mVal = 0f;\n@@ -142,4 +146,43 @@ public boolean equalTo(Entry e) {\n     public String toString() {\n         return \"Entry, xIndex: \" + mXIndex + \" val (sum): \" + getVal();\n     }\n+\n+    @Override\n+    public int describeContents() {\n+        return 0;\n+    }\n+\n+    @Override\n+    public void writeToParcel(Parcel dest, int flags) {\n+        dest.writeFloat(this.mVal);\n+        dest.writeInt(this.mXIndex);\n+        if (mData != null) {\n+            if (mData instanceof Parcelable) {\n+                dest.writeInt(1);\n+                dest.writeParcelable((Parcelable) this.mData, flags);\n+            } else {\n+                throw new ParcelFormatException(\"Cannot parcel an Entry with non-parcelable data\");\n+            }\n+        } else {\n+            dest.writeInt(0);\n+        }\n+    }\n+\n+    protected Entry(Parcel in) {\n+        this.mVal = in.readFloat();\n+        this.mXIndex = in.readInt();\n+        if (in.readInt() == 1) {\n+            this.mData = in.readParcelable(Object.class.getClassLoader());\n+        }\n+    }\n+\n+    public static final Parcelable.Creator<Entry> CREATOR = new Parcelable.Creator<Entry>() {\n+        public Entry createFromParcel(Parcel source) {\n+            return new Entry(source);\n+        }\n+\n+        public Entry[] newArray(int size) {\n+            return new Entry[size];\n+        }\n+    };\n }",
    "output": "Merge pull request #1108 from NasaGeek/master\n\nMake Entry class Parcelable."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/Entry.java b/MPChartLib/src/com/github/mikephil/charting/data/Entry.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/Entry.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/Entry.java\n@@ -1,13 +1,17 @@\n \n package com.github.mikephil.charting.data;\n \n+import android.os.Parcel;\n+import android.os.ParcelFormatException;\n+import android.os.Parcelable;\n+\n /**\n  * Class representing one entry in the chart. Might contain multiple values.\n  * Might only contain a single value depending on the used constructor.\n  * \n  * @author Philipp Jahoda\n  */\n-public class Entry {\n+public class Entry implements Parcelable {\n \n     /** the actual value */\n     private float mVal = 0f;\n@@ -142,4 +146,43 @@ public boolean equalTo(Entry e) {\n     public String toString() {\n         return \"Entry, xIndex: \" + mXIndex + \" val (sum): \" + getVal();\n     }\n+\n+    @Override\n+    public int describeContents() {\n+        return 0;\n+    }\n+\n+    @Override\n+    public void writeToParcel(Parcel dest, int flags) {\n+        dest.writeFloat(this.mVal);\n+        dest.writeInt(this.mXIndex);\n+        if (mData != null) {\n+            if (mData instanceof Parcelable) {\n+                dest.writeInt(1);\n+                dest.writeParcelable((Parcelable) this.mData, flags);\n+            } else {\n+                throw new ParcelFormatException(\"Cannot parcel an Entry with non-parcelable data\");\n+            }\n+        } else {\n+            dest.writeInt(0);\n+        }\n+    }\n+\n+    protected Entry(Parcel in) {\n+        this.mVal = in.readFloat();\n+        this.mXIndex = in.readInt();\n+        if (in.readInt() == 1) {\n+            this.mData = in.readParcelable(Object.class.getClassLoader());\n+        }\n+    }\n+\n+    public static final Parcelable.Creator<Entry> CREATOR = new Parcelable.Creator<Entry>() {\n+        public Entry createFromParcel(Parcel source) {\n+            return new Entry(source);\n+        }\n+\n+        public Entry[] newArray(int size) {\n+            return new Entry[size];\n+        }\n+    };\n }",
    "output": "Make Entry class Parcelable.\n\nAs an Entry object may contain arbitrary data (in the form of a single object),\nI took the route of checking if that object is also parcelable and parceling it\nif so. If the object is not parcelable, then an Exception is thrown."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -1131,6 +1131,16 @@ public void setBorderColor(int color) {\n         mBorderPaint.setColor(color);\n     }\n \n+    /** Gets the minimum offset (padding) around the chart, defaults to 10.f */\n+    public float getMinOffset() {\n+        return mMinOffset;\n+    }\n+\n+    /** Sets the minimum offset (padding) around the chart, defaults to 10.f */\n+    public void setMinOffset(float minOffset) {\n+        mMinOffset = minOffset;\n+    }\n+\n     /**\n      * Returns the Highlight object (contains x-index and DataSet index) of the\n      * selected value at the given touch point inside the Line-, Scatter-, or\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -42,6 +42,9 @@ public abstract class PieRadarChartBase<T extends ChartData<? extends DataSet<?\n     /** flag that indicates if rotation is enabled or not */\n     protected boolean mRotateEnabled = true;\n \n+    /** Sets the minimum offset (padding) around the chart, defaults to 0.f */\n+    protected float mMinOffset = 0.f;\n+\n     public PieRadarChartBase(Context context) {\n         super(context);\n     }\n@@ -209,13 +212,13 @@ public void calculateOffsets() {\n             legendTop += getRequiredBaseOffset();\n         }\n \n-        float minOffset = 0f;\n+        float minOffset = Utils.convertDpToPixel(mMinOffset);\n \n         if (this instanceof RadarChart) {\n             XAxis x = ((RadarChart) this).getXAxis();\n \n             if (x.isEnabled() && x.isDrawLabelsEnabled()) {\n-                minOffset = x.mLabelWidth;\n+                minOffset = Math.max(minOffset, x.mLabelWidth);\n             }\n         }\n \n@@ -380,6 +383,16 @@ public boolean isRotationEnabled() {\n         return mRotateEnabled;\n     }\n \n+    /** Gets the minimum offset (padding) around the chart, defaults to 0.f */\n+    public float getMinOffset() {\n+        return mMinOffset;\n+    }\n+\n+    /** Sets the minimum offset (padding) around the chart, defaults to 0.f */\n+    public void setMinOffset(float minOffset) {\n+        mMinOffset = minOffset;\n+    }\n+\n     /**\n      * returns the diameter of the pie- or radar-chart\n      * ",
    "output": "Merge PR"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n@@ -76,11 +76,11 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         mChart.setTransparentCircleColor(Color.WHITE);\n         mChart.setTransparentCircleAlpha(110);\n-        \n+\n         mChart.setHoleRadius(58f);\n         mChart.setTransparentCircleRadius(61f);\n \n-        mChart.setDrawCenterText(true);   \n+        mChart.setDrawCenterText(true);\n \n         mChart.setRotationAngle(0);\n         // enable rotation of the chart by touch",
    "output": "Minor changes"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -1131,6 +1131,16 @@ public void setBorderColor(int color) {\n         mBorderPaint.setColor(color);\n     }\n \n+    /** Gets the minimum offset (padding) around the chart, defaults to 10.f */\n+    public float getMinOffset() {\n+        return mMinOffset;\n+    }\n+\n+    /** Sets the minimum offset (padding) around the chart, defaults to 10.f */\n+    public void setMinOffset(float minOffset) {\n+        mMinOffset = minOffset;\n+    }\n+\n     /**\n      * Returns the Highlight object (contains x-index and DataSet index) of the\n      * selected value at the given touch point inside the Line-, Scatter-, or\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -42,6 +42,9 @@ public abstract class PieRadarChartBase<T extends ChartData<? extends DataSet<?\n     /** flag that indicates if rotation is enabled or not */\n     protected boolean mRotateEnabled = true;\n \n+    /** Sets the minimum offset (padding) around the chart, defaults to 0.f */\n+    protected float mMinOffset = 0.f;\n+\n     public PieRadarChartBase(Context context) {\n         super(context);\n     }\n@@ -209,13 +212,13 @@ public void calculateOffsets() {\n             legendTop += getRequiredBaseOffset();\n         }\n \n-        float minOffset = 0f;\n+        float minOffset = Utils.convertDpToPixel(mMinOffset);\n \n         if (this instanceof RadarChart) {\n             XAxis x = ((RadarChart) this).getXAxis();\n \n             if (x.isEnabled() && x.isDrawLabelsEnabled()) {\n-                minOffset = x.mLabelWidth;\n+                minOffset = Math.max(minOffset, x.mLabelWidth);\n             }\n         }\n \n@@ -380,6 +383,16 @@ public boolean isRotationEnabled() {\n         return mRotateEnabled;\n     }\n \n+    /** Gets the minimum offset (padding) around the chart, defaults to 0.f */\n+    public float getMinOffset() {\n+        return mMinOffset;\n+    }\n+\n+    /** Sets the minimum offset (padding) around the chart, defaults to 0.f */\n+    public void setMinOffset(float minOffset) {\n+        mMinOffset = minOffset;\n+    }\n+\n     /**\n      * returns the diameter of the pie- or radar-chart\n      * ",
    "output": "Merge pull request #1104 from danielgindi/minoffset_accessors\n\nAllow getting/settings minOffset of the charts"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -1131,6 +1131,16 @@ public void setBorderColor(int color) {\n         mBorderPaint.setColor(color);\n     }\n \n+    /** Gets the minimum offset (padding) around the chart, defaults to 10.f */\n+    public float getMinOffset() {\n+        return mMinOffset;\n+    }\n+\n+    /** Sets the minimum offset (padding) around the chart, defaults to 10.f */\n+    public void setMinOffset(float minOffset) {\n+        mMinOffset = minOffset;\n+    }\n+\n     /**\n      * Returns the Highlight object (contains x-index and DataSet index) of the\n      * selected value at the given touch point inside the Line-, Scatter-, or\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -42,6 +42,9 @@ public abstract class PieRadarChartBase<T extends ChartData<? extends DataSet<?\n     /** flag that indicates if rotation is enabled or not */\n     protected boolean mRotateEnabled = true;\n \n+    /** Sets the minimum offset (padding) around the chart, defaults to 0.f */\n+    protected float mMinOffset = 0.f;\n+\n     public PieRadarChartBase(Context context) {\n         super(context);\n     }\n@@ -209,13 +212,13 @@ public void calculateOffsets() {\n             legendTop += getRequiredBaseOffset();\n         }\n \n-        float minOffset = 0f;\n+        float minOffset = Utils.convertDpToPixel(mMinOffset);\n \n         if (this instanceof RadarChart) {\n             XAxis x = ((RadarChart) this).getXAxis();\n \n             if (x.isEnabled() && x.isDrawLabelsEnabled()) {\n-                minOffset = x.mLabelWidth;\n+                minOffset = Math.max(minOffset, x.mLabelWidth);\n             }\n         }\n \n@@ -380,6 +383,16 @@ public boolean isRotationEnabled() {\n         return mRotateEnabled;\n     }\n \n+    /** Gets the minimum offset (padding) around the chart, defaults to 0.f */\n+    public float getMinOffset() {\n+        return mMinOffset;\n+    }\n+\n+    /** Sets the minimum offset (padding) around the chart, defaults to 0.f */\n+    public void setMinOffset(float minOffset) {\n+        mMinOffset = minOffset;\n+    }\n+\n     /**\n      * returns the diameter of the pie- or radar-chart\n      * ",
    "output": "Allow getting/settings minOffset of the charts, instead of zeroing them out totally"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n@@ -94,7 +94,7 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         setData(3, 100);\n \n-        mChart.animateY(1500, Easing.EasingOption.EaseInOutQuad);\n+        mChart.animateY(1400, Easing.EasingOption.EaseInOutQuad);\n         // mChart.spin(2000, 0, 360);\n \n         Legend l = mChart.getLegend();\n@@ -153,15 +153,15 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 mChart.invalidate();\n                 break;\n             case R.id.animateX: {\n-                mChart.animateX(1800);\n+                mChart.animateX(1400);\n                 break;\n             }\n             case R.id.animateY: {\n-                mChart.animateY(1800);\n+                mChart.animateY(1400);\n                 break;\n             }\n             case R.id.animateXY: {\n-                mChart.animateXY(1800, 1800);\n+                mChart.animateXY(1400, 1400);\n                 break;\n             }\n         }\n@@ -196,7 +196,7 @@ private void setData(int count, float range) {\n             xVals.add(mParties[i % mParties.length]);\n \n         PieDataSet dataSet = new PieDataSet(yVals1, \"Election Results\");\n-        dataSet.setSliceSpace(3f);\n+        dataSet.setSliceSpace(2f);\n         dataSet.setSelectionShift(5f);\n \n         // add a lot of colors\n@@ -244,6 +244,7 @@ private SpannableString generateCenterSpannableText() {\n         s.setSpan(new ForegroundColorSpan(Color.GRAY), 14, s.length() - 15, 0);\n         s.setSpan(new RelativeSizeSpan(.8f), 14, s.length() - 15, 0);\n         s.setSpan(new StyleSpan(Typeface.ITALIC), s.length() - 14, s.length(), 0);\n+        s.setSpan(new ForegroundColorSpan(ColorTemplate.getHoloBlue()), s.length() - 14, s.length(), 0);\n         return s;\n     }\n \n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/PieChartFrag.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/PieChartFrag.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/PieChartFrag.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/PieChartFrag.java\n@@ -1,7 +1,11 @@\n package com.xxmassdeveloper.mpchartexample.fragments;\n+import android.graphics.Color;\n import android.graphics.Typeface;\n import android.os.Bundle;\n import android.support.v4.app.Fragment;\n+import android.text.SpannableString;\n+import android.text.style.ForegroundColorSpan;\n+import android.text.style.RelativeSizeSpan;\n import android.view.LayoutInflater;\n import android.view.View;\n import android.view.ViewGroup;\n@@ -30,12 +34,12 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa\n         Typeface tf = Typeface.createFromAsset(getActivity().getAssets(), \"OpenSans-Light.ttf\");\n         \n         mChart.setCenterTextTypeface(tf);\n-        mChart.setCenterText(\"Revenues\");\n-        mChart.setCenterTextSize(22f);\n+        mChart.setCenterText(generateCenterText());\n+        mChart.setCenterTextSize(10f);\n         mChart.setCenterTextTypeface(tf);\n          \n         // radius of the center hole in percent of maximum radius\n-        mChart.setHoleRadius(45f); \n+        mChart.setHoleRadius(45f);\n         mChart.setTransparentCircleRadius(50f);\n         \n         Legend l = mChart.getLegend();\n@@ -45,4 +49,11 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa\n         \n         return v;\n     }\n+\n+    private SpannableString generateCenterText() {\n+        SpannableString s = new SpannableString(\"Revenues\\nQuarters 2015\");\n+        s.setSpan(new RelativeSizeSpan(2f), 0, 8, 0);\n+        s.setSpan(new ForegroundColorSpan(Color.GRAY), 8, s.length(), 0);\n+        return s;\n+    }\n }\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SimpleFragment.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SimpleFragment.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SimpleFragment.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SimpleFragment.java\n@@ -113,7 +113,7 @@ protected PieData generatePieData() {\n             entries1.add(new Entry((float) (Math.random() * 60) + 40, i));\n         }\n         \n-        PieDataSet ds1 = new PieDataSet(entries1, \"Quarterly Revenues 2014\");\n+        PieDataSet ds1 = new PieDataSet(entries1, \"Quarterly Revenues 2015\");\n         ds1.setColors(ColorTemplate.VORDIPLOM_COLORS);\n         ds1.setSliceSpace(2f);\n         ds1.setValueTextColor(Color.WHITE);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/PieChartItem.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/PieChartItem.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/PieChartItem.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/PieChartItem.java\n@@ -4,6 +4,9 @@\n import android.content.Context;\n import android.graphics.Color;\n import android.graphics.Typeface;\n+import android.text.SpannableString;\n+import android.text.style.ForegroundColorSpan;\n+import android.text.style.RelativeSizeSpan;\n import android.view.LayoutInflater;\n import android.view.View;\n \n@@ -13,16 +16,19 @@\n import com.github.mikephil.charting.data.ChartData;\n import com.github.mikephil.charting.data.PieData;\n import com.github.mikephil.charting.formatter.PercentFormatter;\n+import com.github.mikephil.charting.utils.ColorTemplate;\n import com.xxmassdeveloper.mpchartexample.R;\n \n public class PieChartItem extends ChartItem {\n \n     private Typeface mTf;\n+    private SpannableString mCenterText;\n \n     public PieChartItem(ChartData<?> cd, Context c) {\n         super(cd);\n \n         mTf = Typeface.createFromAsset(c.getAssets(), \"OpenSans-Regular.ttf\");\n+        mCenterText = generateCenterText();\n     }\n \n     @Override\n@@ -53,9 +59,9 @@ public View getView(int position, View convertView, Context c) {\n         holder.chart.setDescription(\"\");\n         holder.chart.setHoleRadius(52f);\n         holder.chart.setTransparentCircleRadius(57f);\n-        holder.chart.setCenterText(\"MPChart\\nAndroid\");\n+        holder.chart.setCenterText(mCenterText);\n         holder.chart.setCenterTextTypeface(mTf);\n-        holder.chart.setCenterTextSize(18f);\n+        holder.chart.setCenterTextSize(9f);\n         holder.chart.setUsePercentValues(true);\n         holder.chart.setExtraOffsets(5, 10, 50, 10);\n \n@@ -78,6 +84,17 @@ public View getView(int position, View convertView, Context c) {\n         return convertView;\n     }\n \n+    private SpannableString generateCenterText() {\n+        SpannableString s = new SpannableString(\"MPAndroidChart\\ncreated by\\nPhilipp Jahoda\");\n+        s.setSpan(new RelativeSizeSpan(1.6f), 0, 14, 0);\n+        s.setSpan(new ForegroundColorSpan(ColorTemplate.VORDIPLOM_COLORS[0]), 0, 14, 0);\n+        s.setSpan(new RelativeSizeSpan(.9f), 14, 25, 0);\n+        s.setSpan(new ForegroundColorSpan(Color.GRAY), 14, 25, 0);\n+        s.setSpan(new RelativeSizeSpan(1.4f), 25, s.length(), 0);\n+        s.setSpan(new ForegroundColorSpan(ColorTemplate.getHoloBlue()), 25, s.length(), 0);\n+        return s;\n+    }\n+\n     private static class ViewHolder {\n         PieChart chart;\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -69,7 +69,7 @@ public PieChartRenderer(PieChart chart, ChartAnimator animator,\n         mTransparentCirclePaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n         mTransparentCirclePaint.setColor(Color.WHITE);\n         mTransparentCirclePaint.setStyle(Style.FILL);\n-        mTransparentCirclePaint.setAlpha(100);\n+        mTransparentCirclePaint.setAlpha(105);\n \n         mCenterTextPaint = new TextPaint(Paint.ANTI_ALIAS_FLAG);\n         mCenterTextPaint.setColor(Color.BLACK);\n@@ -266,19 +266,19 @@ protected void drawHole(Canvas c) {\n \n             PointF center = mChart.getCenterCircleBox();\n \n-            if (transparentCircleRadius > holeRadius && mAnimator.getPhaseX() >= 1f\n-                    && mAnimator.getPhaseY() >= 1f) {\n+            // only draw the circle if it can be seen (not covered by the hole)\n+            if (transparentCircleRadius > holeRadius) {\n \n-                //int color = mTransparentCirclePaint.getColor();\n-\n-                // make transparent\n-                //mTransparentCirclePaint.setColor(color & 0x60FFFFFF);\n+                // get original alpha\n+                int alpha = mTransparentCirclePaint.getAlpha();\n+                mTransparentCirclePaint.setAlpha((int) ((float) alpha * mAnimator.getPhaseX() * mAnimator.getPhaseY()));\n \n                 // draw the transparent-circle\n                 mBitmapCanvas.drawCircle(center.x, center.y,\n                         radius / 100 * transparentCircleRadius, mTransparentCirclePaint);\n \n-                //mTransparentCirclePaint.setColor(color);\n+                // reset alpha\n+                mTransparentCirclePaint.setAlpha(alpha);\n             }\n \n             // draw the hole-circle",
    "output": "Improvements on piechart."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n@@ -21,6 +21,8 @@\n import com.github.mikephil.charting.data.LineDataSet;\n import com.github.mikephil.charting.data.filter.Approximator;\n import com.github.mikephil.charting.data.filter.Approximator.ApproximatorType;\n+import com.github.mikephil.charting.formatter.FillFormatter;\n+import com.github.mikephil.charting.interfaces.LineDataProvider;\n import com.github.mikephil.charting.utils.ColorTemplate;\n import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n \n@@ -54,7 +56,8 @@ protected void onCreate(Bundle savedInstanceState) {\n         mSeekBarX.setOnSeekBarChangeListener(this);\n \n         mChart = (LineChart) findViewById(R.id.chart1);\n-        // if enabled, the chart will always start at zero on the y-axis\n+        mChart.setViewPortOffsets(0, 20, 0, 0);\n+        mChart.setBackgroundColor(Color.rgb(104, 241, 175));\n \n         // no description text\n         mChart.setDescription(\"\");\n@@ -77,13 +80,16 @@ protected void onCreate(Bundle savedInstanceState) {\n         tf = Typeface.createFromAsset(getAssets(), \"OpenSans-Regular.ttf\");\n         \n         XAxis x = mChart.getXAxis();\n-        x.setTypeface(tf);\n         x.setEnabled(false);\n         \n         YAxis y = mChart.getAxisLeft();\n         y.setTypeface(tf);\n-        y.setLabelCount(5, false);\n-        y.setEnabled(false);\n+        y.setLabelCount(6, false);\n+        y.setStartAtZero(false);\n+        y.setTextColor(Color.WHITE);\n+        y.setPosition(YAxis.YAxisLabelPosition.INSIDE_CHART);\n+        y.setDrawGridLines(false);\n+        y.setAxisLineColor(Color.WHITE);\n         \n         mChart.getAxisRight().setEnabled(false);\n \n@@ -270,12 +276,20 @@ private void setData(int count, float range) {\n         set1.setCubicIntensity(0.2f);\n         //set1.setDrawFilled(true);\n         set1.setDrawCircles(false); \n-        set1.setLineWidth(2f);\n-        set1.setCircleSize(5f);\n+        set1.setLineWidth(1.8f);\n+        set1.setCircleSize(4f);\n+        set1.setCircleColor(Color.WHITE);\n         set1.setHighLightColor(Color.rgb(244, 117, 117));\n-        set1.setColor(Color.rgb(104, 241, 175));\n-        set1.setFillColor(ColorTemplate.getHoloBlue());\n+        set1.setColor(Color.WHITE);\n+        set1.setFillColor(Color.WHITE);\n+        set1.setFillAlpha(100);\n         set1.setDrawHorizontalHighlightIndicator(false);\n+        set1.setFillFormatter(new FillFormatter() {\n+            @Override\n+            public float getFillLinePosition(LineDataSet dataSet, LineDataProvider dataProvider) {\n+                return -10;\n+            }\n+        });\n         \n         // create a data object with the datasets\n         LineData data = new LineData(xVals, set1);",
    "output": "Improve example"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n@@ -240,10 +240,10 @@ private SpannableString generateCenterSpannableText() {\n \n         SpannableString s = new SpannableString(\"MPAndroidChart developed by Philipp Jahoda\");\n         s.setSpan(new RelativeSizeSpan(1.7f), 0, 14, 0);\n-//        s.setSpan(new StyleSpan(Typeface.NORMAL), 14, s.length() - 15, 0);\n-//        s.setSpan(new ForegroundColorSpan(Color.GRAY), 14, s.length() - 15, 0);\n-//        s.setSpan(new RelativeSizeSpan(.8f), 14, s.length() - 15, 0);\n-//        s.setSpan(new StyleSpan(Typeface.ITALIC), s.length() - 14, s.length(), 0);\n+        s.setSpan(new StyleSpan(Typeface.NORMAL), 14, s.length() - 15, 0);\n+        s.setSpan(new ForegroundColorSpan(Color.GRAY), 14, s.length() - 15, 0);\n+        s.setSpan(new RelativeSizeSpan(.8f), 14, s.length() - 15, 0);\n+        s.setSpan(new StyleSpan(Typeface.ITALIC), s.length() - 14, s.length(), 0);\n         return s;\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -74,7 +74,7 @@ public PieChartRenderer(PieChart chart, ChartAnimator animator,\n         mCenterTextPaint = new TextPaint(Paint.ANTI_ALIAS_FLAG);\n         mCenterTextPaint.setColor(Color.BLACK);\n         mCenterTextPaint.setTextSize(Utils.convertDpToPixel(12f));\n-        mCenterTextPaint.setTextAlign(Align.CENTER);\n+        //mCenterTextPaint.setTextAlign(Align.CENTER);\n \n         mValuePaint.setTextSize(Utils.convertDpToPixel(13f));\n         mValuePaint.setColor(Color.WHITE);\n@@ -327,7 +327,7 @@ protected void drawCenterText(Canvas c) {\n                 mCenterTextLayout = new StaticLayout(centerText, 0, centerText.length(),\n                         mCenterTextPaint,\n                         (int) Math.max(Math.ceil(width), 1.f),\n-                        Layout.Alignment.ALIGN_NORMAL, 1.f, 0.f, false);\n+                        Layout.Alignment.ALIGN_CENTER, 1.f, 0.f, false);\n             }\n \n             // I wish we could make an ellipse clipping path on Android to clip to the hole...\n@@ -337,7 +337,7 @@ protected void drawCenterText(Canvas c) {\n             float layoutHeight = mCenterTextLayout.getHeight();\n \n             c.save();\n-            c.translate(boundingRect.centerX(), boundingRect.top + (boundingRect.height() - layoutHeight) / 2.f);\n+            c.translate(boundingRect.left, boundingRect.top + (boundingRect.height() - layoutHeight) / 2.f);\n             mCenterTextLayout.draw(c);\n             c.restore();\n ",
    "output": "Fix SpannableString PieChart center text issues (#993)."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/PieChartItem.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/PieChartItem.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/PieChartItem.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/PieChartItem.java\n@@ -57,6 +57,7 @@ public View getView(int position, View convertView, Context c) {\n         holder.chart.setCenterTextTypeface(mTf);\n         holder.chart.setCenterTextSize(18f);\n         holder.chart.setUsePercentValues(true);\n+        holder.chart.setExtraOffsets(5, 10, 50, 10);\n \n         mChartData.setValueFormatter(new PercentFormatter());\n         mChartData.setValueTypeface(mTf);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n@@ -86,8 +86,6 @@ protected void onCreate(Bundle savedInstanceState) {\n                 \"A line chart with multiple DataSet objects. One color per DataSet.\"));\n         objects.add(new ContentItem(\"Multiple Bars Chart\",\n                 \"A bar chart with multiple DataSet objects. One multiple colors per DataSet.\"));\n-        objects.add(new ContentItem(\"Draw Chart\",\n-                \"Demonstration of drawing values into the chart per touch-gesture. With callbacks.\"));\n         objects.add(new ContentItem(\n                 \"Charts in ViewPager Fragments\",\n                 \"Demonstration of charts inside ViewPager Fragments. In this example the focus was on the design and look and feel of the chart.\"));\n@@ -195,64 +193,54 @@ public void onItemClick(AdapterView<?> av, View v, int pos, long arg3) {\n                 startActivity(i);\n                 break;\n             case 13:\n-                // i = new Intent(this, DrawChartActivity.class);\n-                // startActivity(i);\n-\n-                AlertDialog.Builder b = new AlertDialog.Builder(this);\n-                b.setTitle(\"Feature not available\");\n-                b.setMessage(\"Due to recent changes to the data model of the library, this feature is temporarily not available.\");\n-                b.setPositiveButton(\"OK\", null);\n-                b.create().show();\n-                break;\n-            case 14:\n                 i = new Intent(this, SimpleChartDemo.class);\n                 startActivity(i);\n                 break;\n-            case 15:\n+            case 14:\n                 i = new Intent(this, ListViewBarChartActivity.class);\n                 startActivity(i);\n                 break;\n-            case 16:\n+            case 15:\n                 i = new Intent(this, ListViewMultiChartActivity.class);\n                 startActivity(i);\n                 break;\n-            case 17:\n+            case 16:\n                 i = new Intent(this, InvertedLineChartActivity.class);\n                 startActivity(i);\n                 break;\n-            case 18:\n+            case 17:\n                 i = new Intent(this, CandleStickChartActivity.class);\n                 startActivity(i);\n                 break;\n-            case 19:\n+            case 18:\n                 i = new Intent(this, CubicLineChartActivity.class);\n                 startActivity(i);\n                 break;\n-            case 20:\n+            case 19:\n                 i = new Intent(this, RadarChartActivitry.class);\n                 startActivity(i);\n                 break;\n-            case 21:\n+            case 20:\n                 i = new Intent(this, LineChartActivityColored.class);\n                 startActivity(i);\n                 break;\n-            case 22:\n+            case 21:\n                 i = new Intent(this, RealtimeLineChartActivity.class);\n                 startActivity(i);\n                 break;\n-            case 23:\n+            case 22:\n                 i = new Intent(this, DynamicalAddingActivity.class);\n                 startActivity(i);\n                 break;\n-            case 24:\n+            case 23:\n                 i = new Intent(this, PerformanceLineChart.class);\n                 startActivity(i);\n                 break;\n-            case 25:\n+            case 24:\n                 i = new Intent(this, BarChartActivitySinus.class);\n                 startActivity(i);\n                 break;\n-            case 26:\n+            case 25:\n                 i = new Intent(this, ScrollViewActivity.class);\n                 startActivity(i);\n                 break;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -143,7 +143,7 @@ public void calculateOffsets() {\n         float diameter = getDiameter();\n         float radius = diameter / 2f;\n \n-        PointF c = getCenter();\n+        PointF c = getCenterOffsets();\n \n         float shift = mData.getDataSet().getSelectionShift();\n ",
    "output": "Additional fix"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n@@ -112,7 +112,7 @@ public void renderAxisLine(Canvas c) {\n \n     /**\n      * draws the x-labels on the specified y-position\n-     * \n+     *\n      * @param pos\n      */\n     protected void drawLabels(Canvas c, float pos) {\n@@ -209,8 +209,7 @@ public void renderLimitLines(Canvas c) {\n \t\tif (limitLines == null || limitLines.size() <= 0)\n \t\t\treturn;\n \n-\t\tfloat[] pts = new float[4];\n-\t\tPath limitLinePath = new Path();\n+        float[] position = new float[2];\n \n \t\tfor (int i = 0; i < limitLines.size(); i++) {\n \n@@ -219,61 +218,75 @@ public void renderLimitLines(Canvas c) {\n             if(!l.isEnabled())\n                 continue;\n \n-\t\t\tpts[0] = l.getLimit();\n-\t\t\tpts[2] = l.getLimit();\n+            position[0] = l.getLimit();\n+            position[1] = 0.f;\n \n-\t\t\tmTrans.pointValuesToPixel(pts);\n+            mTrans.pointValuesToPixel(position);\n \n-\t\t\tpts[1] = mViewPortHandler.contentTop();\n-\t\t\tpts[3] = mViewPortHandler.contentBottom();\n+            renderLimitLineLine(c, l, position);\n+            renderLimitLineLabel(c, l, position, 2.f + l.getYOffset());\n+\t\t}\n+\t}\n \n-\t\t\tlimitLinePath.moveTo(pts[0], pts[1]);\n-\t\t\tlimitLinePath.lineTo(pts[2], pts[3]);\n+    float[] mLimitLineSegmentsBuffer = new float[4];\n+    private Path mLimitLinePath = new Path();\n \n-\t\t\tmLimitLinePaint.setStyle(Paint.Style.STROKE);\n-\t\t\tmLimitLinePaint.setColor(l.getLineColor());\n-\t\t\tmLimitLinePaint.setStrokeWidth(l.getLineWidth());\n-\t\t\tmLimitLinePaint.setPathEffect(l.getDashPathEffect());\n+    public void renderLimitLineLine(Canvas c, LimitLine limitLine, float[] position)\n+    {\n+        mLimitLineSegmentsBuffer[0] = position[0];\n+        mLimitLineSegmentsBuffer[1] = mViewPortHandler.contentTop();\n+        mLimitLineSegmentsBuffer[2] = position[0];\n+        mLimitLineSegmentsBuffer[3] = mViewPortHandler.contentBottom();\n \n-\t\t\tc.drawPath(limitLinePath, mLimitLinePaint);\n-\t\t\tlimitLinePath.reset();\n+        mLimitLinePath.reset();\n+        mLimitLinePath.moveTo(mLimitLineSegmentsBuffer[0], mLimitLineSegmentsBuffer[1]);\n+        mLimitLinePath.lineTo(mLimitLineSegmentsBuffer[2], mLimitLineSegmentsBuffer[3]);\n \n-\t\t\tString label = l.getLabel();\n+        mLimitLinePaint.setStyle(Paint.Style.STROKE);\n+        mLimitLinePaint.setColor(limitLine.getLineColor());\n+        mLimitLinePaint.setStrokeWidth(limitLine.getLineWidth());\n+        mLimitLinePaint.setPathEffect(limitLine.getDashPathEffect());\n \n-\t\t\t// if drawing the limit-value label is enabled\n-\t\t\tif (label != null && !label.equals(\"\")) {\n+        c.drawPath(mLimitLinePath, mLimitLinePaint);\n+    }\n \n-\t\t\t\tmLimitLinePaint.setStyle(l.getTextStyle());\n-\t\t\t\tmLimitLinePaint.setPathEffect(null);\n-\t\t\t\tmLimitLinePaint.setColor(l.getTextColor());\n-\t\t\t\tmLimitLinePaint.setStrokeWidth(0.5f);\n-\t\t\t\tmLimitLinePaint.setTextSize(l.getTextSize());\n+    public void renderLimitLineLabel(Canvas c, LimitLine limitLine, float[] position, float yOffset)\n+    {\n+        String label = limitLine.getLabel();\n \n-                float xOffset = l.getLineWidth() + l.getXOffset();\n-                float yOffset = Utils.convertDpToPixel(2f) + l.getYOffset();\n+        // if drawing the limit-value label is enabled\n+        if (label != null && !label.equals(\"\")) {\n \n-                final LimitLine.LimitLabelPosition position = l.getLabelPosition();\n+            mLimitLinePaint.setStyle(limitLine.getTextStyle());\n+            mLimitLinePaint.setPathEffect(null);\n+            mLimitLinePaint.setColor(limitLine.getTextColor());\n+            mLimitLinePaint.setStrokeWidth(0.5f);\n+            mLimitLinePaint.setTextSize(limitLine.getTextSize());\n \n-\t\t\t\tif (position == LimitLine.LimitLabelPosition.RIGHT_TOP) {\n+            float xOffset = limitLine.getLineWidth() + limitLine.getXOffset();\n \n-                    final float labelLineHeight = Utils.calcTextHeight(mLimitLinePaint, label);\n-                    mLimitLinePaint.setTextAlign(Align.LEFT);\n-\t\t\t\t\tc.drawText(label, pts[0] + xOffset, mViewPortHandler.contentTop() + yOffset + labelLineHeight, mLimitLinePaint);\n-\t\t\t\t} else if (position == LimitLine.LimitLabelPosition.RIGHT_BOTTOM) {\n+            final LimitLine.LimitLabelPosition labelPosition = limitLine.getLabelPosition();\n \n-                    mLimitLinePaint.setTextAlign(Align.LEFT);\n-                    c.drawText(label, pts[0] + xOffset, mViewPortHandler.contentBottom() - yOffset, mLimitLinePaint);\n-                } else if (position == LimitLine.LimitLabelPosition.LEFT_TOP) {\n+            if (labelPosition == LimitLine.LimitLabelPosition.RIGHT_TOP) {\n \n-                    mLimitLinePaint.setTextAlign(Align.RIGHT);\n-                    final float labelLineHeight = Utils.calcTextHeight(mLimitLinePaint, label);\n-                    c.drawText(label, pts[0] - xOffset, mViewPortHandler.contentTop() + yOffset + labelLineHeight, mLimitLinePaint);\n-                } else {\n+                final float labelLineHeight = Utils.calcTextHeight(mLimitLinePaint, label);\n+                mLimitLinePaint.setTextAlign(Align.LEFT);\n+                c.drawText(label, position[0] + xOffset, mViewPortHandler.contentTop() + yOffset + labelLineHeight, mLimitLinePaint);\n+            } else if (labelPosition == LimitLine.LimitLabelPosition.RIGHT_BOTTOM) {\n+\n+                mLimitLinePaint.setTextAlign(Align.LEFT);\n+                c.drawText(label, position[0] + xOffset, mViewPortHandler.contentBottom() - yOffset, mLimitLinePaint);\n+            } else if (labelPosition == LimitLine.LimitLabelPosition.LEFT_TOP) {\n+\n+                mLimitLinePaint.setTextAlign(Align.RIGHT);\n+                final float labelLineHeight = Utils.calcTextHeight(mLimitLinePaint, label);\n+                c.drawText(label, position[0] - xOffset, mViewPortHandler.contentTop() + yOffset + labelLineHeight, mLimitLinePaint);\n+            } else {\n+\n+                mLimitLinePaint.setTextAlign(Align.RIGHT);\n+                c.drawText(label, position[0] - xOffset, mViewPortHandler.contentBottom() - yOffset, mLimitLinePaint);\n+            }\n+        }\n+    }\n \n-                    mLimitLinePaint.setTextAlign(Align.RIGHT);\n-\t\t\t\t\tc.drawText(label, pts[0] - xOffset, mViewPortHandler.contentBottom() - yOffset, mLimitLinePaint);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n }",
    "output": "Merge pull request #1084 from danielgindi/flex-XAxisRenderer\n\nMake the XAxisRenderer more flexible"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n@@ -112,7 +112,7 @@ public void renderAxisLine(Canvas c) {\n \n     /**\n      * draws the x-labels on the specified y-position\n-     * \n+     *\n      * @param pos\n      */\n     protected void drawLabels(Canvas c, float pos) {\n@@ -209,8 +209,7 @@ public void renderLimitLines(Canvas c) {\n \t\tif (limitLines == null || limitLines.size() <= 0)\n \t\t\treturn;\n \n-\t\tfloat[] pts = new float[4];\n-\t\tPath limitLinePath = new Path();\n+        float[] position = new float[2];\n \n \t\tfor (int i = 0; i < limitLines.size(); i++) {\n \n@@ -219,61 +218,75 @@ public void renderLimitLines(Canvas c) {\n             if(!l.isEnabled())\n                 continue;\n \n-\t\t\tpts[0] = l.getLimit();\n-\t\t\tpts[2] = l.getLimit();\n+            position[0] = l.getLimit();\n+            position[1] = 0.f;\n \n-\t\t\tmTrans.pointValuesToPixel(pts);\n+            mTrans.pointValuesToPixel(position);\n \n-\t\t\tpts[1] = mViewPortHandler.contentTop();\n-\t\t\tpts[3] = mViewPortHandler.contentBottom();\n+            renderLimitLineLine(c, l, position);\n+            renderLimitLineLabel(c, l, position, 2.f + l.getYOffset());\n+\t\t}\n+\t}\n \n-\t\t\tlimitLinePath.moveTo(pts[0], pts[1]);\n-\t\t\tlimitLinePath.lineTo(pts[2], pts[3]);\n+    float[] mLimitLineSegmentsBuffer = new float[4];\n+    private Path mLimitLinePath = new Path();\n \n-\t\t\tmLimitLinePaint.setStyle(Paint.Style.STROKE);\n-\t\t\tmLimitLinePaint.setColor(l.getLineColor());\n-\t\t\tmLimitLinePaint.setStrokeWidth(l.getLineWidth());\n-\t\t\tmLimitLinePaint.setPathEffect(l.getDashPathEffect());\n+    public void renderLimitLineLine(Canvas c, LimitLine limitLine, float[] position)\n+    {\n+        mLimitLineSegmentsBuffer[0] = position[0];\n+        mLimitLineSegmentsBuffer[1] = mViewPortHandler.contentTop();\n+        mLimitLineSegmentsBuffer[2] = position[0];\n+        mLimitLineSegmentsBuffer[3] = mViewPortHandler.contentBottom();\n \n-\t\t\tc.drawPath(limitLinePath, mLimitLinePaint);\n-\t\t\tlimitLinePath.reset();\n+        mLimitLinePath.reset();\n+        mLimitLinePath.moveTo(mLimitLineSegmentsBuffer[0], mLimitLineSegmentsBuffer[1]);\n+        mLimitLinePath.lineTo(mLimitLineSegmentsBuffer[2], mLimitLineSegmentsBuffer[3]);\n \n-\t\t\tString label = l.getLabel();\n+        mLimitLinePaint.setStyle(Paint.Style.STROKE);\n+        mLimitLinePaint.setColor(limitLine.getLineColor());\n+        mLimitLinePaint.setStrokeWidth(limitLine.getLineWidth());\n+        mLimitLinePaint.setPathEffect(limitLine.getDashPathEffect());\n \n-\t\t\t// if drawing the limit-value label is enabled\n-\t\t\tif (label != null && !label.equals(\"\")) {\n+        c.drawPath(mLimitLinePath, mLimitLinePaint);\n+    }\n \n-\t\t\t\tmLimitLinePaint.setStyle(l.getTextStyle());\n-\t\t\t\tmLimitLinePaint.setPathEffect(null);\n-\t\t\t\tmLimitLinePaint.setColor(l.getTextColor());\n-\t\t\t\tmLimitLinePaint.setStrokeWidth(0.5f);\n-\t\t\t\tmLimitLinePaint.setTextSize(l.getTextSize());\n+    public void renderLimitLineLabel(Canvas c, LimitLine limitLine, float[] position, float yOffset)\n+    {\n+        String label = limitLine.getLabel();\n \n-                float xOffset = l.getLineWidth() + l.getXOffset();\n-                float yOffset = Utils.convertDpToPixel(2f) + l.getYOffset();\n+        // if drawing the limit-value label is enabled\n+        if (label != null && !label.equals(\"\")) {\n \n-                final LimitLine.LimitLabelPosition position = l.getLabelPosition();\n+            mLimitLinePaint.setStyle(limitLine.getTextStyle());\n+            mLimitLinePaint.setPathEffect(null);\n+            mLimitLinePaint.setColor(limitLine.getTextColor());\n+            mLimitLinePaint.setStrokeWidth(0.5f);\n+            mLimitLinePaint.setTextSize(limitLine.getTextSize());\n \n-\t\t\t\tif (position == LimitLine.LimitLabelPosition.RIGHT_TOP) {\n+            float xOffset = limitLine.getLineWidth() + limitLine.getXOffset();\n \n-                    final float labelLineHeight = Utils.calcTextHeight(mLimitLinePaint, label);\n-                    mLimitLinePaint.setTextAlign(Align.LEFT);\n-\t\t\t\t\tc.drawText(label, pts[0] + xOffset, mViewPortHandler.contentTop() + yOffset + labelLineHeight, mLimitLinePaint);\n-\t\t\t\t} else if (position == LimitLine.LimitLabelPosition.RIGHT_BOTTOM) {\n+            final LimitLine.LimitLabelPosition labelPosition = limitLine.getLabelPosition();\n \n-                    mLimitLinePaint.setTextAlign(Align.LEFT);\n-                    c.drawText(label, pts[0] + xOffset, mViewPortHandler.contentBottom() - yOffset, mLimitLinePaint);\n-                } else if (position == LimitLine.LimitLabelPosition.LEFT_TOP) {\n+            if (labelPosition == LimitLine.LimitLabelPosition.RIGHT_TOP) {\n \n-                    mLimitLinePaint.setTextAlign(Align.RIGHT);\n-                    final float labelLineHeight = Utils.calcTextHeight(mLimitLinePaint, label);\n-                    c.drawText(label, pts[0] - xOffset, mViewPortHandler.contentTop() + yOffset + labelLineHeight, mLimitLinePaint);\n-                } else {\n+                final float labelLineHeight = Utils.calcTextHeight(mLimitLinePaint, label);\n+                mLimitLinePaint.setTextAlign(Align.LEFT);\n+                c.drawText(label, position[0] + xOffset, mViewPortHandler.contentTop() + yOffset + labelLineHeight, mLimitLinePaint);\n+            } else if (labelPosition == LimitLine.LimitLabelPosition.RIGHT_BOTTOM) {\n+\n+                mLimitLinePaint.setTextAlign(Align.LEFT);\n+                c.drawText(label, position[0] + xOffset, mViewPortHandler.contentBottom() - yOffset, mLimitLinePaint);\n+            } else if (labelPosition == LimitLine.LimitLabelPosition.LEFT_TOP) {\n+\n+                mLimitLinePaint.setTextAlign(Align.RIGHT);\n+                final float labelLineHeight = Utils.calcTextHeight(mLimitLinePaint, label);\n+                c.drawText(label, position[0] - xOffset, mViewPortHandler.contentTop() + yOffset + labelLineHeight, mLimitLinePaint);\n+            } else {\n+\n+                mLimitLinePaint.setTextAlign(Align.RIGHT);\n+                c.drawText(label, position[0] - xOffset, mViewPortHandler.contentBottom() - yOffset, mLimitLinePaint);\n+            }\n+        }\n+    }\n \n-                    mLimitLinePaint.setTextAlign(Align.RIGHT);\n-\t\t\t\t\tc.drawText(label, pts[0] - xOffset, mViewPortHandler.contentBottom() - yOffset, mLimitLinePaint);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n }",
    "output": "Make the XAxisRenderer more flexible\n\nIt is now possible to overwrite drawing the line or label of the LimitLine"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n@@ -87,10 +87,10 @@ protected void calcMinMax(int start, int end) {\n         mLastStart = start;\n         mLastEnd = endValue;\n \n-        mYMin = start < mYVals.size() ? mYVals.get(start).getLow() : Float.MAX_VALUE;\n-        mYMax = start < mYVals.size() ? mYVals.get(start).getHigh() : -Float.MAX_VALUE;\n+        mYMin = Float.MAX_VALUE;\n+        mYMax = -Float.MAX_VALUE;\n \n-        for (int i = start + 1; i <= endValue; i++) {\n+        for (int i = start; i <= endValue; i++) {\n \n             CandleEntry e = entries.get(i);\n ",
    "output": "Additional fix"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n@@ -87,8 +87,8 @@ protected void calcMinMax(int start, int end) {\n         mLastStart = start;\n         mLastEnd = endValue;\n \n-        mYMin = mYVals.get(start).getLow();\n-        mYMax = mYVals.get(start).getHigh();\n+        mYMin = start < mYVals.size() ? mYVals.get(start).getLow() : Float.MAX_VALUE;\n+        mYMax = start < mYVals.size() ? mYVals.get(start).getHigh() : -Float.MAX_VALUE;\n \n         for (int i = start + 1; i <= endValue; i++) {\n ",
    "output": "Fix IOOB exception"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n@@ -47,9 +47,12 @@ public LineData getLineData() {\n         return mData;\n     }\n \n-    @Override protected void onDetachedFromWindow() {\n+    @Override\n+    protected void onDetachedFromWindow() {\n         // releases the bitmap in the renderer to avoid oom error\n-        ((LineChartRenderer) mRenderer).releaseBitmap();\n+        if(mRenderer != null && mRenderer instanceof LineChartRenderer) {\n+            ((LineChartRenderer) mRenderer).releaseBitmap();\n+        }\n         super.onDetachedFromWindow();\n     }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -203,12 +203,6 @@ protected float[] getMarkerPosition(Entry e, Highlight highlight) {\n         return new float[]{x, y};\n     }\n \n-    @Override protected void onDetachedFromWindow() {\n-        // releases the bitmap in the renderer to avoid oom error\n-        ((PieChartRenderer) mRenderer).releaseBitmap();\n-        super.onDetachedFromWindow();\n-    }\n-\n     /**\n      * calculates the needed angles for the chart slices\n      */\n@@ -637,4 +631,15 @@ public void setCenterTextRadiusPercent(float percent) {\n     public float getCenterTextRadiusPercent() {\n         return mCenterTextRadiusPercent;\n     }\n+\n+\n+    @Override\n+    protected void onDetachedFromWindow() {\n+        // releases the bitmap in the renderer to avoid oom error\n+        if(mRenderer != null && mRenderer instanceof PieChartRenderer) {\n+            ((PieChartRenderer) mRenderer).releaseBitmap();\n+        }\n+        super.onDetachedFromWindow();\n+    }\n+\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -104,16 +104,6 @@ public void drawData(Canvas c) {\n         c.drawBitmap(mDrawBitmap, 0, 0, mRenderPaint);\n     }\n \n-    /**\n-     * Releases bitmap. This should be called when {@link LineChart#onDetachedFromWindow()}.\n-     */\n-    public void releaseBitmap() {\n-        if (mDrawBitmap != null) {\n-            mDrawBitmap.recycle();\n-            mDrawBitmap = null;\n-        }\n-    }\n-\n     protected void drawDataSet(Canvas c, LineDataSet dataSet) {\n \n         List<Entry> entries = dataSet.getYVals();\n@@ -585,4 +575,14 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             drawHighlightLines(c, pts, set);\n         }\n     }\n+\n+    /**\n+     * Releases the drawing bitmap. This should be called when {@link LineChart#onDetachedFromWindow()}.\n+     */\n+    public void releaseBitmap() {\n+        if (mDrawBitmap != null) {\n+            mDrawBitmap.recycle();\n+            mDrawBitmap = null;\n+        }\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -124,16 +124,6 @@ public void drawData(Canvas c) {\n         }\n     }\n \n-    /**\n-     * Releases bitmap. This should be called when {@link LineChart#onDetachedFromWindow()}.\n-     */\n-    public void releaseBitmap() {\n-        if (mDrawBitmap != null) {\n-            mDrawBitmap.recycle();\n-            mDrawBitmap = null;\n-        }\n-    }\n-\n     protected void drawDataSet(Canvas c, PieDataSet dataSet) {\n \n         float angle = mChart.getRotationAngle();\n@@ -488,4 +478,14 @@ protected void drawRoundedSlices(Canvas c) {\n             angle += newangle * mAnimator.getPhaseX();\n         }\n     }\n+\n+    /**\n+     * Releases the drawing bitmap. This should be called when {@link LineChart#onDetachedFromWindow()}.\n+     */\n+    public void releaseBitmap() {\n+        if (mDrawBitmap != null) {\n+            mDrawBitmap.recycle();\n+            mDrawBitmap = null;\n+        }\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n@@ -41,7 +41,7 @@ public void computeAxis(float xValAverageLength, List<String> xValues) {\n                 + mXAxis.getSpaceBetweenLabels());\n \n         for (int i = 0; i < max; i++) {\n-            a.append(\"h\");\n+            a.append('h');\n         }\n \n         mXAxis.mLabelWidth = Utils.calcTextWidth(mAxisLabelPaint, a.toString());",
    "output": "Minor adjustments to PR"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n@@ -46,4 +46,10 @@ protected void calcMinMax() {\n     public LineData getLineData() {\n         return mData;\n     }\n+\n+    @Override protected void onDetachedFromWindow() {\n+        // releases the bitmap in the renderer to avoid oom error\n+        ((LineChartRenderer) mRenderer).releaseBitmap();\n+        super.onDetachedFromWindow();\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -203,6 +203,12 @@ protected float[] getMarkerPosition(Entry e, Highlight highlight) {\n         return new float[]{x, y};\n     }\n \n+    @Override protected void onDetachedFromWindow() {\n+        // releases the bitmap in the renderer to avoid oom error\n+        ((PieChartRenderer) mRenderer).releaseBitmap();\n+        super.onDetachedFromWindow();\n+    }\n+\n     /**\n      * calculates the needed angles for the chart slices\n      */\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -10,6 +10,7 @@\n import com.github.mikephil.charting.animation.ChartAnimator;\n import com.github.mikephil.charting.buffer.CircleBuffer;\n import com.github.mikephil.charting.buffer.LineBuffer;\n+import com.github.mikephil.charting.charts.LineChart;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.LineData;\n import com.github.mikephil.charting.data.LineDataSet;\n@@ -103,6 +104,16 @@ public void drawData(Canvas c) {\n         c.drawBitmap(mDrawBitmap, 0, 0, mRenderPaint);\n     }\n \n+    /**\n+     * Releases bitmap. This should be called when {@link LineChart#onDetachedFromWindow()}.\n+     */\n+    public void releaseBitmap() {\n+        if (mDrawBitmap != null) {\n+            mDrawBitmap.recycle();\n+            mDrawBitmap = null;\n+        }\n+    }\n+\n     protected void drawDataSet(Canvas c, LineDataSet dataSet) {\n \n         List<Entry> entries = dataSet.getYVals();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -14,6 +14,7 @@\n import android.text.TextPaint;\n \n import com.github.mikephil.charting.animation.ChartAnimator;\n+import com.github.mikephil.charting.charts.LineChart;\n import com.github.mikephil.charting.charts.PieChart;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.PieData;\n@@ -123,6 +124,16 @@ public void drawData(Canvas c) {\n         }\n     }\n \n+    /**\n+     * Releases bitmap. This should be called when {@link LineChart#onDetachedFromWindow()}.\n+     */\n+    public void releaseBitmap() {\n+        if (mDrawBitmap != null) {\n+            mDrawBitmap.recycle();\n+            mDrawBitmap = null;\n+        }\n+    }\n+\n     protected void drawDataSet(Canvas c, PieDataSet dataSet) {\n \n         float angle = mChart.getRotationAngle();",
    "output": "Merge pull request #1074 from georgelin422/master\n\nRelease Bitmap"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -24,7 +24,9 @@ public class LineChartRenderer extends LineScatterCandleRadarRenderer {\n \n     protected LineDataProvider mChart;\n \n-    /** paint for the inner circle of the value indicators */\n+    /**\n+     * paint for the inner circle of the value indicators\n+     */\n     protected Paint mCirclePaintInner;\n \n     /**\n@@ -47,7 +49,7 @@ public class LineChartRenderer extends LineScatterCandleRadarRenderer {\n     protected CircleBuffer[] mCircleBuffers;\n \n     public LineChartRenderer(LineDataProvider chart, ChartAnimator animator,\n-            ViewPortHandler viewPortHandler) {\n+                             ViewPortHandler viewPortHandler) {\n         super(animator, viewPortHandler);\n         mChart = chart;\n \n@@ -126,7 +128,7 @@ protected void drawDataSet(Canvas c, LineDataSet dataSet) {\n \n     /**\n      * Draws a cubic line.\n-     * \n+     *\n      * @param c\n      * @param dataSet\n      * @param entries\n@@ -138,8 +140,10 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n         Entry entryFrom = dataSet.getEntryForXIndex(mMinX);\n         Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n \n-        int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n-        int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n+        int diff = (entryFrom == entryTo) ? 1 : 0;\n+        int minx = Math.max(dataSet.getEntryPosition(entryFrom) - diff, 0);\n+        int maxx = Math.min(Math.max(\n+                minx + 2, dataSet.getEntryPosition(entryTo) + 1), entries.size());\n \n         float phaseX = mAnimator.getPhaseX();\n         float phaseY = mAnimator.getPhaseY();\n@@ -219,7 +223,7 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n             cubicFillPath.reset();\n             cubicFillPath.addPath(cubicPath);\n             // create a new path, this is bad for performance\n-            drawCubicFill(dataSet, cubicFillPath, trans,\n+            drawCubicFill(mBitmapCanvas, dataSet, cubicFillPath, trans,\n                     entryFrom.getXIndex(), entryFrom.getXIndex() + size);\n         }\n \n@@ -234,34 +238,27 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n         mRenderPaint.setPathEffect(null);\n     }\n \n-    protected void drawCubicFill(LineDataSet dataSet, Path spline, Transformer trans,\n-            int from, int to) {\n+    protected void drawCubicFill(Canvas c, LineDataSet dataSet, Path spline, Transformer trans,\n+                                 int from, int to) {\n \n         if (to - from <= 1)\n             return;\n-        \n+\n         float fillMin = dataSet.getFillFormatter()\n                 .getFillLinePosition(dataSet, mChart);\n \n         spline.lineTo(to - 1, fillMin);\n         spline.lineTo(from, fillMin);\n         spline.close();\n \n-        mRenderPaint.setStyle(Paint.Style.FILL);\n-\n-        mRenderPaint.setColor(dataSet.getFillColor());\n-        // filled is drawn with less alpha\n-        mRenderPaint.setAlpha(dataSet.getFillAlpha());\n-\n         trans.pathValueToPixel(spline);\n-        mBitmapCanvas.drawPath(spline, mRenderPaint);\n \n-        mRenderPaint.setAlpha(255);\n+        drawFilledPath(c, spline, dataSet.getFillColor(), dataSet.getFillAlpha());\n     }\n \n     /**\n      * Draws a normal line.\n-     * \n+     *\n      * @param c\n      * @param dataSet\n      * @param entries\n@@ -289,8 +286,10 @@ protected void drawLinear(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n         Entry entryFrom = dataSet.getEntryForXIndex(mMinX);\n         Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n \n-        int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n-        int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n+        int diff = (entryFrom == entryTo) ? 1 : 0;\n+        int minx = Math.max(dataSet.getEntryPosition(entryFrom) - diff, 0);\n+        int maxx = Math.min(Math.max(\n+                minx + 2, dataSet.getEntryPosition(entryTo) + 1), entries.size());\n \n         int range = (maxx - minx) * 4 - 4;\n \n@@ -314,9 +313,9 @@ protected void drawLinear(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n                 // bounds\n                 if (!mViewPortHandler.isInBoundsLeft(buffer.buffer[j + 2])\n                         || (!mViewPortHandler.isInBoundsTop(buffer.buffer[j + 1]) && !mViewPortHandler\n-                                .isInBoundsBottom(buffer.buffer[j + 3]))\n+                        .isInBoundsBottom(buffer.buffer[j + 3]))\n                         || (!mViewPortHandler.isInBoundsTop(buffer.buffer[j + 1]) && !mViewPortHandler\n-                                .isInBoundsBottom(buffer.buffer[j + 3])))\n+                        .isInBoundsBottom(buffer.buffer[j + 3])))\n                     continue;\n \n                 // get the color that is set for this line-segment\n@@ -344,30 +343,39 @@ protected void drawLinear(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n     }\n \n     protected void drawLinearFill(Canvas c, LineDataSet dataSet, List<Entry> entries, int minx,\n-            int maxx,\n-            Transformer trans) {\n-\n-        mRenderPaint.setStyle(Paint.Style.FILL);\n-\n-        mRenderPaint.setColor(dataSet.getFillColor());\n-        // filled is drawn with less alpha\n-        mRenderPaint.setAlpha(dataSet.getFillAlpha());\n+                                  int maxx,\n+                                  Transformer trans) {\n \n         Path filled = generateFilledPath(\n                 entries,\n                 dataSet.getFillFormatter().getFillLinePosition(dataSet, mChart), minx, maxx);\n \n         trans.pathValueToPixel(filled);\n \n-        c.drawPath(filled, mRenderPaint);\n+        drawFilledPath(c, filled, dataSet.getFillColor(), dataSet.getFillAlpha());\n+    }\n+\n+    /**\n+     * Draws the provided path in filled mode with the provided color and alpha.\n+     * Special thanks to Angelo Suzuki (https://github.com/tinsukE) for this.\n+     *\n+     * @param c\n+     * @param filledPath\n+     * @param fillColor\n+     * @param fillAlpha\n+     */\n+    protected void drawFilledPath(Canvas c, Path filledPath, int fillColor, int fillAlpha) {\n+        c.save();\n+        c.clipPath(filledPath);\n \n-        // restore alpha\n-        mRenderPaint.setAlpha(255);\n+        int color = (fillAlpha << 24) | (fillColor & 0xffffff);\n+        c.drawColor(color);\n+        c.restore();\n     }\n \n     /**\n      * Generates the path that is used for filled drawing.\n-     * \n+     *\n      * @param entries\n      * @return\n      */\n@@ -430,8 +438,10 @@ public void drawValues(Canvas c) {\n                 Entry entryFrom = dataSet.getEntryForXIndex(mMinX);\n                 Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n \n-                int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n-                int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n+                int diff = (entryFrom == entryTo) ? 1 : 0;\n+                int minx = Math.max(dataSet.getEntryPosition(entryFrom) - diff, 0);\n+                int maxx = Math.min(Math.max(\n+                        minx + 2, dataSet.getEntryPosition(entryTo) + 1), entries.size());\n \n                 float[] positions = trans.generateTransformedValuesLine(\n                         entries, mAnimator.getPhaseX(), mAnimator.getPhaseY(), minx, maxx);\n@@ -485,8 +495,10 @@ protected void drawCircles(Canvas c) {\n             Entry entryFrom = dataSet.getEntryForXIndex((mMinX < 0) ? 0 : mMinX);\n             Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n \n-            int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n-            int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n+            int diff = (entryFrom == entryTo) ? 1 : 0;\n+            int minx = Math.max(dataSet.getEntryPosition(entryFrom) - diff, 0);\n+            int maxx = Math.min(Math.max(\n+                    minx + 2, dataSet.getEntryPosition(entryTo) + 1), entries.size());\n \n             CircleBuffer buffer = mCircleBuffers[i];\n             buffer.setPhases(phaseX, phaseY);\n@@ -539,7 +551,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n                 continue;\n \n             int xIndex = indices[i].getXIndex(); // get the\n-                                                 // x-position\n+            // x-position\n \n             if (xIndex > mChart.getXChartMax() * mAnimator.getPhaseX())\n                 continue;\n@@ -549,10 +561,10 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n                 continue;\n \n             float y = yVal * mAnimator.getPhaseY(); // get\n-                                                                            // the\n+            // the\n             // y-position\n \n-            float[] pts = new float[] {\n+            float[] pts = new float[]{\n                     xIndex, y\n             };\n ",
    "output": "Merged."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -24,7 +24,9 @@ public class LineChartRenderer extends LineScatterCandleRadarRenderer {\n \n     protected LineDataProvider mChart;\n \n-    /** paint for the inner circle of the value indicators */\n+    /**\n+     * paint for the inner circle of the value indicators\n+     */\n     protected Paint mCirclePaintInner;\n \n     /**\n@@ -47,7 +49,7 @@ public class LineChartRenderer extends LineScatterCandleRadarRenderer {\n     protected CircleBuffer[] mCircleBuffers;\n \n     public LineChartRenderer(LineDataProvider chart, ChartAnimator animator,\n-            ViewPortHandler viewPortHandler) {\n+                             ViewPortHandler viewPortHandler) {\n         super(animator, viewPortHandler);\n         mChart = chart;\n \n@@ -126,7 +128,7 @@ protected void drawDataSet(Canvas c, LineDataSet dataSet) {\n \n     /**\n      * Draws a cubic line.\n-     * \n+     *\n      * @param c\n      * @param dataSet\n      * @param entries\n@@ -138,8 +140,10 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n         Entry entryFrom = dataSet.getEntryForXIndex(mMinX);\n         Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n \n-        int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n-        int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n+        int diff = (entryFrom == entryTo) ? 1 : 0;\n+        int minx = Math.max(dataSet.getEntryPosition(entryFrom) - diff, 0);\n+        int maxx = Math.min(Math.max(\n+                minx + 2, dataSet.getEntryPosition(entryTo) + 1), entries.size());\n \n         float phaseX = mAnimator.getPhaseX();\n         float phaseY = mAnimator.getPhaseY();\n@@ -219,7 +223,7 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n             cubicFillPath.reset();\n             cubicFillPath.addPath(cubicPath);\n             // create a new path, this is bad for performance\n-            drawCubicFill(dataSet, cubicFillPath, trans,\n+            drawCubicFill(mBitmapCanvas, dataSet, cubicFillPath, trans,\n                     entryFrom.getXIndex(), entryFrom.getXIndex() + size);\n         }\n \n@@ -234,34 +238,27 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n         mRenderPaint.setPathEffect(null);\n     }\n \n-    protected void drawCubicFill(LineDataSet dataSet, Path spline, Transformer trans,\n-            int from, int to) {\n+    protected void drawCubicFill(Canvas c, LineDataSet dataSet, Path spline, Transformer trans,\n+                                 int from, int to) {\n \n         if (to - from <= 1)\n             return;\n-        \n+\n         float fillMin = dataSet.getFillFormatter()\n                 .getFillLinePosition(dataSet, mChart);\n \n         spline.lineTo(to - 1, fillMin);\n         spline.lineTo(from, fillMin);\n         spline.close();\n \n-        mRenderPaint.setStyle(Paint.Style.FILL);\n-\n-        mRenderPaint.setColor(dataSet.getFillColor());\n-        // filled is drawn with less alpha\n-        mRenderPaint.setAlpha(dataSet.getFillAlpha());\n-\n         trans.pathValueToPixel(spline);\n-        mBitmapCanvas.drawPath(spline, mRenderPaint);\n \n-        mRenderPaint.setAlpha(255);\n+        drawFilledPath(c, spline, dataSet.getFillColor(), dataSet.getFillAlpha());\n     }\n \n     /**\n      * Draws a normal line.\n-     * \n+     *\n      * @param c\n      * @param dataSet\n      * @param entries\n@@ -289,8 +286,10 @@ protected void drawLinear(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n         Entry entryFrom = dataSet.getEntryForXIndex(mMinX);\n         Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n \n-        int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n-        int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n+        int diff = (entryFrom == entryTo) ? 1 : 0;\n+        int minx = Math.max(dataSet.getEntryPosition(entryFrom) - diff, 0);\n+        int maxx = Math.min(Math.max(\n+                minx + 2, dataSet.getEntryPosition(entryTo) + 1), entries.size());\n \n         int range = (maxx - minx) * 4 - 4;\n \n@@ -314,9 +313,9 @@ protected void drawLinear(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n                 // bounds\n                 if (!mViewPortHandler.isInBoundsLeft(buffer.buffer[j + 2])\n                         || (!mViewPortHandler.isInBoundsTop(buffer.buffer[j + 1]) && !mViewPortHandler\n-                                .isInBoundsBottom(buffer.buffer[j + 3]))\n+                        .isInBoundsBottom(buffer.buffer[j + 3]))\n                         || (!mViewPortHandler.isInBoundsTop(buffer.buffer[j + 1]) && !mViewPortHandler\n-                                .isInBoundsBottom(buffer.buffer[j + 3])))\n+                        .isInBoundsBottom(buffer.buffer[j + 3])))\n                     continue;\n \n                 // get the color that is set for this line-segment\n@@ -344,30 +343,38 @@ protected void drawLinear(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n     }\n \n     protected void drawLinearFill(Canvas c, LineDataSet dataSet, List<Entry> entries, int minx,\n-            int maxx,\n-            Transformer trans) {\n-\n-        mRenderPaint.setStyle(Paint.Style.FILL);\n-\n-        mRenderPaint.setColor(dataSet.getFillColor());\n-        // filled is drawn with less alpha\n-        mRenderPaint.setAlpha(dataSet.getFillAlpha());\n+                                  int maxx,\n+                                  Transformer trans) {\n \n         Path filled = generateFilledPath(\n                 entries,\n                 dataSet.getFillFormatter().getFillLinePosition(dataSet, mChart), minx, maxx);\n \n         trans.pathValueToPixel(filled);\n \n-        c.drawPath(filled, mRenderPaint);\n+        drawFilledPath(c, filled, dataSet.getFillColor(), dataSet.getFillAlpha());\n+    }\n+\n+    /**\n+     * Draws the provided path in filled mode with the provided color and alpha.\n+     *\n+     * @param c\n+     * @param filledPath\n+     * @param fillColor\n+     * @param fillAlpha\n+     */\n+    protected void drawFilledPath(Canvas c, Path filledPath, int fillColor, int fillAlpha) {\n+        c.save();\n+        c.clipPath(filledPath);\n \n-        // restore alpha\n-        mRenderPaint.setAlpha(255);\n+        int color = (fillAlpha << 24) | (fillColor & 0xffffff);\n+        c.drawColor(color);\n+        c.restore();\n     }\n \n     /**\n      * Generates the path that is used for filled drawing.\n-     * \n+     *\n      * @param entries\n      * @return\n      */\n@@ -430,8 +437,10 @@ public void drawValues(Canvas c) {\n                 Entry entryFrom = dataSet.getEntryForXIndex(mMinX);\n                 Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n \n-                int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n-                int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n+                int diff = (entryFrom == entryTo) ? 1 : 0;\n+                int minx = Math.max(dataSet.getEntryPosition(entryFrom) - diff, 0);\n+                int maxx = Math.min(Math.max(\n+                        minx + 2, dataSet.getEntryPosition(entryTo) + 1), entries.size());\n \n                 float[] positions = trans.generateTransformedValuesLine(\n                         entries, mAnimator.getPhaseX(), mAnimator.getPhaseY(), minx, maxx);\n@@ -485,8 +494,10 @@ protected void drawCircles(Canvas c) {\n             Entry entryFrom = dataSet.getEntryForXIndex((mMinX < 0) ? 0 : mMinX);\n             Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n \n-            int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n-            int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n+            int diff = (entryFrom == entryTo) ? 1 : 0;\n+            int minx = Math.max(dataSet.getEntryPosition(entryFrom) - diff, 0);\n+            int maxx = Math.min(Math.max(\n+                    minx + 2, dataSet.getEntryPosition(entryTo) + 1), entries.size());\n \n             CircleBuffer buffer = mCircleBuffers[i];\n             buffer.setPhases(phaseX, phaseY);\n@@ -539,7 +550,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n                 continue;\n \n             int xIndex = indices[i].getXIndex(); // get the\n-                                                 // x-position\n+            // x-position\n \n             if (xIndex > mChart.getXChartMax() * mAnimator.getPhaseX())\n                 continue;\n@@ -549,10 +560,10 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n                 continue;\n \n             float y = yVal * mAnimator.getPhaseY(); // get\n-                                                                            // the\n+            // the\n             // y-position\n \n-            float[] pts = new float[] {\n+            float[] pts = new float[]{\n                     xIndex, y\n             };\n ",
    "output": "Minor adjustments."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n@@ -46,4 +46,10 @@ protected void calcMinMax() {\n     public LineData getLineData() {\n         return mData;\n     }\n+\n+    @Override protected void onDetachedFromWindow() {\n+        // releases the bitmap in the renderer to avoid oom error\n+        ((LineChartRenderer) mRenderer).releaseBitmap();\n+        super.onDetachedFromWindow();\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -203,6 +203,12 @@ protected float[] getMarkerPosition(Entry e, Highlight highlight) {\n         return new float[]{x, y};\n     }\n \n+    @Override protected void onDetachedFromWindow() {\n+        // releases the bitmap in the renderer to avoid oom error\n+        ((PieChartRenderer) mRenderer).releaseBitmap();\n+        super.onDetachedFromWindow();\n+    }\n+\n     /**\n      * calculates the needed angles for the chart slices\n      */\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -10,6 +10,7 @@\n import com.github.mikephil.charting.animation.ChartAnimator;\n import com.github.mikephil.charting.buffer.CircleBuffer;\n import com.github.mikephil.charting.buffer.LineBuffer;\n+import com.github.mikephil.charting.charts.LineChart;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.LineData;\n import com.github.mikephil.charting.data.LineDataSet;\n@@ -101,6 +102,16 @@ public void drawData(Canvas c) {\n         c.drawBitmap(mDrawBitmap, 0, 0, mRenderPaint);\n     }\n \n+    /**\n+     * Releases bitmap. This should be called when {@link LineChart#onDetachedFromWindow()}.\n+     */\n+    public void releaseBitmap() {\n+        if (mDrawBitmap != null) {\n+            mDrawBitmap.recycle();\n+            mDrawBitmap = null;\n+        }\n+    }\n+\n     protected void drawDataSet(Canvas c, LineDataSet dataSet) {\n \n         List<Entry> entries = dataSet.getYVals();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -14,6 +14,7 @@\n import android.text.TextPaint;\n \n import com.github.mikephil.charting.animation.ChartAnimator;\n+import com.github.mikephil.charting.charts.LineChart;\n import com.github.mikephil.charting.charts.PieChart;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.PieData;\n@@ -123,6 +124,16 @@ public void drawData(Canvas c) {\n         }\n     }\n \n+    /**\n+     * Releases bitmap. This should be called when {@link LineChart#onDetachedFromWindow()}.\n+     */\n+    public void releaseBitmap() {\n+        if (mDrawBitmap != null) {\n+            mDrawBitmap.recycle();\n+            mDrawBitmap = null;\n+        }\n+    }\n+\n     protected void drawDataSet(Canvas c, PieDataSet dataSet) {\n \n         float angle = mChart.getRotationAngle();",
    "output": "Release Bitmap in LineChartRenderer and PieChartRenderer to avoid OOM issues"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -138,8 +138,10 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n         Entry entryFrom = dataSet.getEntryForXIndex(mMinX);\n         Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n \n-        int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n-        int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n+        int diff = (entryFrom == entryTo) ? 1 : 0;\n+        int minx = Math.max(dataSet.getEntryPosition(entryFrom) - diff, 0);\n+        int maxx = Math.min(Math.max(\n+                minx + 2, dataSet.getEntryPosition(entryTo) + 1), entries.size());\n \n         float phaseX = mAnimator.getPhaseX();\n         float phaseY = mAnimator.getPhaseY();\n@@ -289,8 +291,10 @@ protected void drawLinear(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n         Entry entryFrom = dataSet.getEntryForXIndex(mMinX);\n         Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n \n-        int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n-        int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n+        int diff = (entryFrom == entryTo) ? 1 : 0;\n+        int minx = Math.max(dataSet.getEntryPosition(entryFrom) - diff, 0);\n+        int maxx = Math.min(Math.max(\n+                minx + 2, dataSet.getEntryPosition(entryTo) + 1), entries.size());\n \n         int range = (maxx - minx) * 4 - 4;\n \n@@ -430,8 +434,10 @@ public void drawValues(Canvas c) {\n                 Entry entryFrom = dataSet.getEntryForXIndex(mMinX);\n                 Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n \n-                int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n-                int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n+                int diff = (entryFrom == entryTo) ? 1 : 0;\n+                int minx = Math.max(dataSet.getEntryPosition(entryFrom) - diff, 0);\n+                int maxx = Math.min(Math.max(\n+                        minx + 2, dataSet.getEntryPosition(entryTo) + 1), entries.size());\n \n                 float[] positions = trans.generateTransformedValuesLine(\n                         entries, mAnimator.getPhaseX(), mAnimator.getPhaseY(), minx, maxx);\n@@ -485,8 +491,10 @@ protected void drawCircles(Canvas c) {\n             Entry entryFrom = dataSet.getEntryForXIndex((mMinX < 0) ? 0 : mMinX);\n             Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n \n-            int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n-            int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n+            int diff = (entryFrom == entryTo) ? 1 : 0;\n+            int minx = Math.max(dataSet.getEntryPosition(entryFrom) - diff, 0);\n+            int maxx = Math.min(Math.max(\n+                    minx + 2, dataSet.getEntryPosition(entryTo) + 1), entries.size());\n \n             CircleBuffer buffer = mCircleBuffers[i];\n             buffer.setPhases(phaseX, phaseY);",
    "output": "Fix disappearing line when zooming into LineChart"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/formatter/LargeValueFormatter.java b/MPChartLib/src/com/github/mikephil/charting/formatter/LargeValueFormatter.java\n--- a/MPChartLib/src/com/github/mikephil/charting/formatter/LargeValueFormatter.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/formatter/LargeValueFormatter.java\n@@ -19,11 +19,10 @@\n  */\n public class LargeValueFormatter implements ValueFormatter, YAxisValueFormatter {\n \n-    private static final String[] SUFFIX = new String[] {\n+    private static String[] SUFFIX = new String[] {\n             \"\", \"k\", \"m\", \"b\", \"t\"\n     };\n     private static final int MAX_LENGTH = 4;\n-\n     private DecimalFormat mFormat;\n     private String mText = \"\";\n \n@@ -52,6 +51,16 @@ public String getFormattedValue(float value, YAxis yAxis) {\n         return makePretty(value) + mText;\n     }\n \n+    /**\n+     * Set custom Suffix for the language of the country\n+     * @param suff new suffix\n+     */\n+    public void setSuffix(String[] suff) {\n+        if (suff.length == 5) {\n+            SUFFIX = suff;\n+        }\n+    }\n+\n     /**\n      * Formats each number properly. Special thanks to Roman Gromov\n      * (https://github.com/romangromov) for this piece of code.\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n@@ -37,7 +37,7 @@ public abstract class Utils {\n     /**\n      * initialize method, called inside the Chart.init() method.\n      * \n-     * @param res\n+     * @param context\n      */\n     @SuppressWarnings(\"deprecation\")\n     public static void init(Context context) {\n@@ -48,7 +48,8 @@ public static void init(Context context) {\n             // noinspection deprecation\n             mMaximumFlingVelocity = ViewConfiguration.getMaximumFlingVelocity();\n \n-            Log.e(\"MPAndroidChart, Utils.init(...)\", \"PROVIDED CONTEXT OBJECT IS NULL\");\n+            Log.e(\"MPChartLib-Utils\"\n+                    ,\"Utils.init(...) PROVIDED CONTEXT OBJECT IS NULL\");\n \n         } else {\n             ViewConfiguration viewConfiguration = ViewConfiguration.get(context);\n@@ -225,7 +226,7 @@ public static FSize calcTextSize(Paint paint, String demoText) {\n     /**\n      * returns the appropriate number of format digits for a legend value\n      * \n-     * @param delta\n+     * @param step\n      * @param bonus - additional digits\n      * @return\n      */\n@@ -256,16 +257,30 @@ public static int getLegendFormatDigits(float step, int bonus) {\n             1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000\n     };\n \n+\t/**\n+\t * Formats the given number to the given number of decimals, and returns the\n+\t * number as a string, maximum 35 characters.\n+\t *\n+\t * @param number\n+\t * @param digitCount\n+\t * @param separateThousands set this to true to separate thousands values\n+\t * @return\n+\t */\n+\tpublic static String formatNumber(float number, int digitCount, boolean separateThousands) {\n+\t\treturn formatNumber(number, digitCount, separateThousands, '.');\n+\t}\n+\n     /**\n      * Formats the given number to the given number of decimals, and returns the\n      * number as a string, maximum 35 characters.\n      * \n      * @param number\n      * @param digitCount\n-     * @param separateTousands set this to true to separate thousands values\n+     * @param separateThousands set this to true to separate thousands values\n+     * @param separateChar\n      * @return\n      */\n-    public static String formatNumber(float number, int digitCount, boolean separateThousands) {\n+    public static String formatNumber(float number, int digitCount, boolean separateThousands, char separateChar) {\n \n         char[] out = new char[35];\n \n@@ -312,14 +327,14 @@ public static String formatNumber(float number, int digitCount, boolean separate\n                 if (decimalPointAdded) {\n \n                     if ((charCount - digitCount) % 4 == 0) {\n-                        out[ind--] = '.';\n+                        out[ind--] = separateChar;\n                         charCount++;\n                     }\n \n                 } else {\n \n                     if ((charCount - digitCount) % 4 == 3) {\n-                        out[ind--] = '.';\n+                        out[ind--] = separateChar;\n                         charCount++;\n                     }\n                 }\n@@ -391,7 +406,7 @@ public static int[] convertIntegers(List<Integer> integers) {\n     /**\n      * Converts the provided String List to a String array.\n      * \n-     * @param labels\n+     * @param strings\n      * @return\n      */\n     public static String[] convertStrings(List<String> strings) {",
    "output": "Merge pull request #1050 from AngelOfMors/Feature\n\nAdded new features and minor adjustments"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -346,7 +346,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n                 if (isStack) {\n                     y1 = h.getRange().from;\n-                    y2 = h.getRange().to * mAnimator.getPhaseY();\n+                    y2 = h.getRange().to;\n                 } else {\n                     y1 = e.getVal();\n                     y2 = 0.f;\n@@ -370,7 +370,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n                     final float arrowWidth = set.getBarSpace() / 2.f;\n                     final float arrowHeight = arrowWidth * xToYRel;\n \n-                    final float yArrow = y1 > -y2 ? y1 : y1;\n+                    final float yArrow = (y1 > -y2 ? y1 : y1) * mAnimator.getPhaseY();\n \n                     Path arrow = new Path();\n                     arrow.moveTo(x + 0.4f, yArrow + offsetY);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n@@ -334,10 +334,21 @@ public void rectValueToPixel(RectF r) {\n     public void rectValueToPixel(RectF r, float phaseY) {\n \n         // multiply the height of the rect with the phase\n-        if (r.top > 0)\n-            r.top *= phaseY;\n-        else\n-            r.bottom *= phaseY;\n+        r.top *= phaseY;\n+        r.bottom *= phaseY;\n+\n+        mMatrixValueToPx.mapRect(r);\n+        mViewPortHandler.getMatrixTouch().mapRect(r);\n+        mMatrixOffset.mapRect(r);\n+    }\n+\n+    /**\n+     * Transform a rectangle with all matrices with potential animation phases.\n+     *\n+     * @param r\n+\n+     */\n+    public void rectValueToPixelHorizontal(RectF r) {\n \n         mMatrixValueToPx.mapRect(r);\n         mViewPortHandler.getMatrixTouch().mapRect(r);\n@@ -353,10 +364,8 @@ public void rectValueToPixel(RectF r, float phaseY) {\n     public void rectValueToPixelHorizontal(RectF r, float phaseY) {\n \n         // multiply the height of the rect with the phase\n-        if (r.left > 0)\n-            r.left *= phaseY;\n-        else\n-            r.right *= phaseY;\n+        r.left *= phaseY;\n+        r.right *= phaseY;\n \n         mMatrixValueToPx.mapRect(r);\n         mViewPortHandler.getMatrixTouch().mapRect(r);",
    "output": "Merge pull request #1061 from danielgindi/highlight-animation-fix\n\nFix highlight animation bug in stacked bar chart"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -346,7 +346,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n                 if (isStack) {\n                     y1 = h.getRange().from;\n-                    y2 = h.getRange().to * mAnimator.getPhaseY();\n+                    y2 = h.getRange().to;\n                 } else {\n                     y1 = e.getVal();\n                     y2 = 0.f;\n@@ -370,7 +370,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n                     final float arrowWidth = set.getBarSpace() / 2.f;\n                     final float arrowHeight = arrowWidth * xToYRel;\n \n-                    final float yArrow = y1 > -y2 ? y1 : y1;\n+                    final float yArrow = (y1 > -y2 ? y1 : y1) * mAnimator.getPhaseY();\n \n                     Path arrow = new Path();\n                     arrow.moveTo(x + 0.4f, yArrow + offsetY);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n@@ -334,10 +334,21 @@ public void rectValueToPixel(RectF r) {\n     public void rectValueToPixel(RectF r, float phaseY) {\n \n         // multiply the height of the rect with the phase\n-        if (r.top > 0)\n-            r.top *= phaseY;\n-        else\n-            r.bottom *= phaseY;\n+        r.top *= phaseY;\n+        r.bottom *= phaseY;\n+\n+        mMatrixValueToPx.mapRect(r);\n+        mViewPortHandler.getMatrixTouch().mapRect(r);\n+        mMatrixOffset.mapRect(r);\n+    }\n+\n+    /**\n+     * Transform a rectangle with all matrices with potential animation phases.\n+     *\n+     * @param r\n+\n+     */\n+    public void rectValueToPixelHorizontal(RectF r) {\n \n         mMatrixValueToPx.mapRect(r);\n         mViewPortHandler.getMatrixTouch().mapRect(r);\n@@ -353,10 +364,8 @@ public void rectValueToPixel(RectF r, float phaseY) {\n     public void rectValueToPixelHorizontal(RectF r, float phaseY) {\n \n         // multiply the height of the rect with the phase\n-        if (r.left > 0)\n-            r.left *= phaseY;\n-        else\n-            r.right *= phaseY;\n+        r.left *= phaseY;\n+        r.right *= phaseY;\n \n         mMatrixValueToPx.mapRect(r);\n         mViewPortHandler.getMatrixTouch().mapRect(r);",
    "output": "Fix highlight animation bug in stacked bar chart"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/formatter/LargeValueFormatter.java b/MPChartLib/src/com/github/mikephil/charting/formatter/LargeValueFormatter.java\n--- a/MPChartLib/src/com/github/mikephil/charting/formatter/LargeValueFormatter.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/formatter/LargeValueFormatter.java\n@@ -19,14 +19,10 @@\n  */\n public class LargeValueFormatter implements ValueFormatter, YAxisValueFormatter {\n \n-    private static final String[] SUFFIX = new String[] {\n+    private static String[] SUFFIX = new String[] {\n             \"\", \"k\", \"m\", \"b\", \"t\"\n     };\n     private static final int MAX_LENGTH = 4;\n-    private static String[] customSUFFIX = null;\n-    private static boolean useCustomSuffix = false;\n-\n-\n     private DecimalFormat mFormat;\n     private String mText = \"\";\n \n@@ -59,29 +55,12 @@ public String getFormattedValue(float value, YAxis yAxis) {\n      * Set custom Suffix for the language of the country\n      * @param suff new suffix\n      */\n-    public void setCustomSuffix(String[] suff) {\n+    public void setSuffix(String[] suff) {\n         if (suff.length == 5) {\n-            useCustomSuffix = true;\n-            customSUFFIX = suff;\n+            SUFFIX = suff;\n         }\n     }\n \n-    /**\n-     * Remove custom Suffix\n-     */\n-    public void removeCustomSuffix() {\n-        useCustomSuffix = false;\n-        customSUFFIX = null;\n-    }\n-\n-    /**\n-     * Check state for custom Suffix\n-     * @return state\n-     */\n-    public boolean isUseCustomSuffix(){\n-        return useCustomSuffix;\n-    }\n-\n     /**\n      * Formats each number properly. Special thanks to Roman Gromov\n      * (https://github.com/romangromov) for this piece of code.\n@@ -90,8 +69,7 @@ private String makePretty(double number) {\n \n         String r = mFormat.format(number);\n \n-        if (useCustomSuffix) r = r.replaceAll(\"E[0-9]\", customSUFFIX[Character.getNumericValue(r.charAt(r.length() - 1)) / 3]);\n-        else r = r.replaceAll(\"E[0-9]\", SUFFIX[Character.getNumericValue(r.charAt(r.length() - 1)) / 3]);\n+        r = r.replaceAll(\"E[0-9]\", SUFFIX[Character.getNumericValue(r.charAt(r.length() - 1)) / 3]);\n \n         while (r.length() > MAX_LENGTH || r.matches(\"[0-9]+\\\\.[a-z]\")) {\n             r = r.substring(0, r.length() - 2) + r.substring(r.length() - 1);",
    "output": "Set custom Suffix for Large Value"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -60,7 +60,7 @@ public class RadarChart extends PieRadarChartBase<RadarData> {\n     /**\n      * modulus that determines how many labels and web-lines are skipped before the next is drawn\n      */\n-    private int mWebModulus = 1;\n+    private int mSkipWebLineCount = 1;\n \n     /**\n      * the object reprsenting the y-axis labels\n@@ -358,10 +358,7 @@ public void setDrawWeb(boolean enabled) {\n      */\n     public void setSkipWebLineCount(int count) {\n \n-        if (count < 0)\n-            count = 0;\n-\n-        mWebModulus = count + 1;\n+        mSkipWebLineCount = Math.max(0, count);\n     }\n \n     /**\n@@ -370,7 +367,7 @@ public void setSkipWebLineCount(int count) {\n      * @return\n      */\n     public int getSkipWebLineCount() {\n-        return mWebModulus;\n+        return mSkipWebLineCount;\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -237,6 +237,9 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n     protected void drawCubicFill(LineDataSet dataSet, Path spline, Transformer trans,\n             int from, int to) {\n \n+        if (to - from <= 1)\n+            return;\n+        \n         float fillMin = dataSet.getFillFormatter()\n                 .getFillLinePosition(dataSet, mChart);\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n@@ -174,7 +174,9 @@ protected void drawWeb(Canvas c) {\n         mWebPaint.setColor(mChart.getWebColor());\n         mWebPaint.setAlpha(mChart.getWebAlpha());\n \n-        for (int i = 0; i < mChart.getData().getXValCount(); i += mChart.getSkipWebLineCount()) {\n+        final int xIncrements = 1 + mChart.getSkipWebLineCount();\n+\n+        for (int i = 0; i < mChart.getData().getXValCount(); i += xIncrements) {\n \n             PointF p = Utils.getPosition(center, mChart.getYRange() * factor, sliceangle * i\n                     + rotationangle);",
    "output": "Merge pull request #1058 from danielgindi/bugfixes\n\nMake skipWebLineCount consistent"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -237,6 +237,9 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n     protected void drawCubicFill(LineDataSet dataSet, Path spline, Transformer trans,\n             int from, int to) {\n \n+        if (to - from <= 1)\n+            return;\n+        \n         float fillMin = dataSet.getFillFormatter()\n                 .getFillLinePosition(dataSet, mChart);\n ",
    "output": "Avoid trying to draw cubic fill when there's no points\n\nMore info: https://github.com/danielgindi/ios-charts/issues/419"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -88,6 +88,9 @@ public abstract class BarLineChartBase<T extends BarLineScatterCandleBubbleData<\n \n     protected boolean mDrawBorders = false;\n \n+    /** Sets the minimum offset (padding) around the chart, defaults to 10 */\n+    protected float mMinOffset = 10.f;\n+\n     /** the listener for user drawing on the chart */\n     protected OnDrawListener mDrawListener;\n \n@@ -488,10 +491,13 @@ public void calculateOffsets() {\n             offsetBottom += getExtraBottomOffset();\n             offsetLeft += getExtraLeftOffset();\n \n-            float min = Utils.convertDpToPixel(10f);\n+            float minOffset = Utils.convertDpToPixel(mMinOffset);\n \n-            mViewPortHandler.restrainViewPort(Math.max(min, offsetLeft), Math.max(min, offsetTop),\n-                    Math.max(min, offsetRight), Math.max(min, offsetBottom));\n+            mViewPortHandler.restrainViewPort(\n+                    Math.max(minOffset, offsetLeft),\n+                    Math.max(minOffset, offsetTop),\n+                    Math.max(minOffset, offsetRight),\n+                    Math.max(minOffset, offsetBottom));\n \n             if (mLogEnabled) {\n                 Log.i(LOG_TAG, \"offsetLeft: \" + offsetLeft + \", offsetTop: \" + offsetTop\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n@@ -119,10 +119,13 @@ public void calculateOffsets() {\n \t\toffsetBottom += getExtraBottomOffset();\n \t\toffsetLeft += getExtraLeftOffset();\n \n-\t\tfloat min = Utils.convertDpToPixel(10f);\n+\t\tfloat minOffset = Utils.convertDpToPixel(mMinOffset);\n \n-\t\tmViewPortHandler.restrainViewPort(Math.max(min, offsetLeft), Math.max(min, offsetTop), Math.max(min, offsetRight),\n-\t\t\t\tMath.max(min, offsetBottom));\n+\t\tmViewPortHandler.restrainViewPort(\n+\t\t\t\tMath.max(minOffset, offsetLeft),\n+\t\t\t\tMath.max(minOffset, offsetTop),\n+\t\t\t\tMath.max(minOffset, offsetRight),\n+\t\t\t\tMath.max(minOffset, offsetBottom));\n \n \t\tif (mLogEnabled) {\n \t\t\tLog.i(LOG_TAG, \"offsetLeft: \" + offsetLeft + \", offsetTop: \" + offsetTop + \", offsetRight: \" + offsetRight + \", offsetBottom: \"\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -42,6 +42,9 @@ public abstract class PieRadarChartBase<T extends ChartData<? extends DataSet<?\n     /** flag that indicates if rotation is enabled or not */\n     protected boolean mRotateEnabled = true;\n \n+    /** Sets the minimum offset (padding) around the chart, defaults to 10 */\n+    protected float mMinOffset = 10.f;\n+\n     public PieRadarChartBase(Context context) {\n         super(context);\n     }\n@@ -194,13 +197,13 @@ public void calculateOffsets() {\n             legendTop += getRequiredBaseOffset();\n         }\n \n-        float min = Utils.convertDpToPixel(10f);\n+        float minOffset = Utils.convertDpToPixel(mMinOffset);\n \n         if (this instanceof RadarChart) {\n             XAxis x = ((RadarChart) this).getXAxis();\n \n             if (x.isEnabled() && x.isDrawLabelsEnabled()) {\n-                min = Math.max(Utils.convertDpToPixel(10f), x.mLabelWidth);\n+                minOffset = Math.max(minOffset, x.mLabelWidth);\n             }\n         }\n \n@@ -209,10 +212,10 @@ public void calculateOffsets() {\n         legendBottom += getExtraBottomOffset();\n         legendLeft += getExtraLeftOffset();\n \n-        float offsetLeft = Math.max(min, legendLeft);\n-        float offsetTop = Math.max(min, legendTop);\n-        float offsetRight = Math.max(min, legendRight);\n-        float offsetBottom = Math.max(min, Math.max(getRequiredBaseOffset(), legendBottom));\n+        float offsetLeft = Math.max(minOffset, legendLeft);\n+        float offsetTop = Math.max(minOffset, legendTop);\n+        float offsetRight = Math.max(minOffset, legendRight);\n+        float offsetBottom = Math.max(minOffset, Math.max(getRequiredBaseOffset(), legendBottom));\n \n         mViewPortHandler.restrainViewPort(offsetLeft, offsetTop, offsetRight, offsetBottom);\n ",
    "output": "Allow the minimum offset to be customized"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -60,7 +60,7 @@ public class RadarChart extends PieRadarChartBase<RadarData> {\n     /**\n      * modulus that determines how many labels and web-lines are skipped before the next is drawn\n      */\n-    private int mWebModulus = 1;\n+    private int mSkipWebLineCount = 1;\n \n     /**\n      * the object reprsenting the y-axis labels\n@@ -358,10 +358,7 @@ public void setDrawWeb(boolean enabled) {\n      */\n     public void setSkipWebLineCount(int count) {\n \n-        if (count < 0)\n-            count = 0;\n-\n-        mWebModulus = count + 1;\n+        mSkipWebLineCount = Math.max(0, count);\n     }\n \n     /**\n@@ -370,7 +367,7 @@ public void setSkipWebLineCount(int count) {\n      * @return\n      */\n     public int getSkipWebLineCount() {\n-        return mWebModulus;\n+        return mSkipWebLineCount;\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n@@ -174,7 +174,9 @@ protected void drawWeb(Canvas c) {\n         mWebPaint.setColor(mChart.getWebColor());\n         mWebPaint.setAlpha(mChart.getWebAlpha());\n \n-        for (int i = 0; i < mChart.getData().getXValCount(); i += mChart.getSkipWebLineCount()) {\n+        final int xIncrements = 1 + mChart.getSkipWebLineCount();\n+\n+        for (int i = 0; i < mChart.getData().getXValCount(); i += xIncrements) {\n \n             PointF p = Utils.getPosition(center, mChart.getYRange() * factor, sliceangle * i\n                     + rotationangle);",
    "output": "Make skipWebLineCount consistent"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/LargeValueFormatter.java b/MPChartLib/src/com/github/mikephil/charting/utils/LargeValueFormatter.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/LargeValueFormatter.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/LargeValueFormatter.java\n@@ -19,6 +19,9 @@ public class LargeValueFormatter implements ValueFormatter {\n             \"\", \"k\", \"m\", \"b\", \"t\"\n     };\n     private static final int MAX_LENGTH = 4;\n+    private static String[] customSUFFIX = null;\n+    private static boolean useCustomSuffix = false;\n+\n \n     private DecimalFormat mFormat;\n     private String mText = \"\";\n@@ -29,7 +32,7 @@ public LargeValueFormatter() {\n \n     /**\n      * Creates a formatter that appends a specified text to the result string\n-     * @param text a text that will be appended\n+     * @param appendix a text that will be appended\n      */\n     public LargeValueFormatter(String appendix) {\n         this();\n@@ -41,6 +44,33 @@ public String getFormattedValue(float value) {\n         return makePretty(value) + mText;\n     }\n \n+    /**\n+     * Set custom Suffix for the language of the country\n+     * @param suff new suffix\n+     */\n+    public void setCustomSuffix(String[] suff) {\n+        if (suff.length == 5) {\n+            useCustomSuffix = true;\n+            customSUFFIX = suff;\n+        }\n+    }\n+\n+    /**\n+     * Remove custom Suffix\n+     */\n+    public void removeCustomSuffix() {\n+        useCustomSuffix = false;\n+        customSUFFIX = null;\n+    }\n+\n+    /**\n+     * Check state for custom Suffix\n+     * @return state\n+     */\n+    public boolean isUseCustomSuffix(){\n+        return useCustomSuffix;\n+    }\n+\n     /**\n      * Formats each number properly. Special thanks to Roman Gromov\n      * (https://github.com/romangromov) for this piece of code.\n@@ -49,7 +79,8 @@ private String makePretty(double number) {\n \n         String r = mFormat.format(number);\n \n-        r = r.replaceAll(\"E[0-9]\", SUFFIX[Character.getNumericValue(r.charAt(r.length() - 1)) / 3]);\n+        if (useCustomSuffix) r = r.replaceAll(\"E[0-9]\", customSUFFIX[Character.getNumericValue(r.charAt(r.length() - 1)) / 3]);\n+        else r = r.replaceAll(\"E[0-9]\", SUFFIX[Character.getNumericValue(r.charAt(r.length() - 1)) / 3]);\n \n         while (r.length() > MAX_LENGTH || r.matches(\"[0-9]+\\\\.[a-z]\")) {\n             r = r.substring(0, r.length() - 2) + r.substring(r.length() - 1);",
    "output": "Set custom Suffix for Large Value"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n@@ -37,7 +37,7 @@ public abstract class Utils {\n     /**\n      * initialize method, called inside the Chart.init() method.\n      * \n-     * @param res\n+     * @param context\n      */\n     @SuppressWarnings(\"deprecation\")\n     public static void init(Context context) {\n@@ -48,7 +48,8 @@ public static void init(Context context) {\n             // noinspection deprecation\n             mMaximumFlingVelocity = ViewConfiguration.getMaximumFlingVelocity();\n \n-            Log.e(\"MPAndroidChart, Utils.init(...)\", \"PROVIDED CONTEXT OBJECT IS NULL\");\n+            Log.e(\"MPChartLib-Utils\"\n+                    ,\"Utils.init(...) PROVIDED CONTEXT OBJECT IS NULL\");\n \n         } else {\n             ViewConfiguration viewConfiguration = ViewConfiguration.get(context);\n@@ -225,7 +226,7 @@ public static FSize calcTextSize(Paint paint, String demoText) {\n     /**\n      * returns the appropriate number of format digits for a legend value\n      * \n-     * @param delta\n+     * @param step\n      * @param bonus - additional digits\n      * @return\n      */\n@@ -256,16 +257,30 @@ public static int getLegendFormatDigits(float step, int bonus) {\n             1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000\n     };\n \n+\t/**\n+\t * Formats the given number to the given number of decimals, and returns the\n+\t * number as a string, maximum 35 characters.\n+\t *\n+\t * @param number\n+\t * @param digitCount\n+\t * @param separateThousands set this to true to separate thousands values\n+\t * @return\n+\t */\n+\tpublic static String formatNumber(float number, int digitCount, boolean separateThousands) {\n+\t\treturn formatNumber(number, digitCount, separateThousands, '.');\n+\t}\n+\n     /**\n      * Formats the given number to the given number of decimals, and returns the\n      * number as a string, maximum 35 characters.\n      * \n      * @param number\n      * @param digitCount\n-     * @param separateTousands set this to true to separate thousands values\n+     * @param separateThousands set this to true to separate thousands values\n+     * @param separateChar\n      * @return\n      */\n-    public static String formatNumber(float number, int digitCount, boolean separateThousands) {\n+    public static String formatNumber(float number, int digitCount, boolean separateThousands, char separateChar) {\n \n         char[] out = new char[35];\n \n@@ -312,14 +327,14 @@ public static String formatNumber(float number, int digitCount, boolean separate\n                 if (decimalPointAdded) {\n \n                     if ((charCount - digitCount) % 4 == 0) {\n-                        out[ind--] = '.';\n+                        out[ind--] = separateChar;\n                         charCount++;\n                     }\n \n                 } else {\n \n                     if ((charCount - digitCount) % 4 == 3) {\n-                        out[ind--] = '.';\n+                        out[ind--] = separateChar;\n                         charCount++;\n                     }\n                 }\n@@ -391,7 +406,7 @@ public static int[] convertIntegers(List<Integer> integers) {\n     /**\n      * Converts the provided String List to a String array.\n      * \n-     * @param labels\n+     * @param strings\n      * @return\n      */\n     public static String[] convertStrings(List<String> strings) {",
    "output": "Added in function formatNumber new param: separateChar.\nCorrected params in Log.e"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n@@ -1,7 +1,7 @@\n \n package com.github.mikephil.charting.components;\n \n-import com.github.mikephil.charting.formatter.DefaultXAxisAxisValueFormatter;\n+import com.github.mikephil.charting.formatter.DefaultXAxisValueFormatter;\n import com.github.mikephil.charting.formatter.XAxisValueFormatter;\n \n import java.util.ArrayList;\n@@ -66,7 +66,7 @@ public class XAxis extends AxisBase {\n     /**\n      * Custom formatter for adjusting x-value strings\n      */\n-    protected XAxisValueFormatter mXAxisValueFormatter = new DefaultXAxisAxisValueFormatter();\n+    protected XAxisValueFormatter mXAxisValueFormatter = new DefaultXAxisValueFormatter();\n \n     /** the position of the x-labels relative to the chart */\n     private XAxisPosition mPosition = XAxisPosition.TOP;\n@@ -199,7 +199,7 @@ public List<String> getValues() {\n      */\n     public void setValueFormatter(XAxisValueFormatter formatter) {\n         if(formatter == null)\n-            mXAxisValueFormatter = new DefaultXAxisAxisValueFormatter();\n+            mXAxisValueFormatter = new DefaultXAxisValueFormatter();\n         else\n             mXAxisValueFormatter = formatter;\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/CombinedData.java b/MPChartLib/src/com/github/mikephil/charting/data/CombinedData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/CombinedData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/CombinedData.java\n@@ -86,7 +86,7 @@ public CandleData getCandleData() {\n      */\n     public List<ChartData> getAllData() {\n \n-        List<ChartData> data = new ArrayList<>();\n+        List<ChartData> data = new ArrayList<ChartData>();\n         if(mLineData != null)\n             data.add(mLineData);\n         if(mBarData != null)\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/formatter/DefaultXAxisValueFormatter.java b/MPChartLib/src/com/github/mikephil/charting/formatter/DefaultXAxisValueFormatter.java\n--- a/MPChartLib/src/com/github/mikephil/charting/formatter/DefaultXAxisValueFormatter.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/formatter/DefaultXAxisValueFormatter.java\n@@ -7,7 +7,7 @@\n  * Default formatter class for adjusting x-values before drawing them.\n  * This simply returns the original value unmodified.\n  */\n-public class DefaultXAxisAxisValueFormatter implements XAxisValueFormatter {\n+public class DefaultXAxisValueFormatter implements XAxisValueFormatter {\n \n     @Override\n     public String getXValue(String original, int index, ViewPortHandler viewPortHandler) {",
    "output": "Fixed typo in classname"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n@@ -302,18 +302,14 @@ public void limitTransAndScale(Matrix matrix, RectF content) {\n         float newTransX = Math.min(Math.max(curTransX, maxTransX - mTransOffsetX), mTransOffsetX);\n         mTransX = newTransX;\n \n-        // if(curScaleX < mMinScaleX) {\n-        // newTransX = (-width * (mScaleX - 1f)) / 2f;\n-        // }\n-\n         float maxTransY = height * (mScaleY - 1f);\n         float newTransY = Math.max(Math.min(curTransY, maxTransY + mTransOffsetY), -mTransOffsetY);\n         mTransY = newTransY;\n \n-        vals[Matrix.MTRANS_X] = newTransX;\n+        vals[Matrix.MTRANS_X] = mTransX;\n         vals[Matrix.MSCALE_X] = mScaleX;\n \n-        vals[Matrix.MTRANS_Y] = newTransY;\n+        vals[Matrix.MTRANS_Y] = mTransY;\n         vals[Matrix.MSCALE_Y] = mScaleY;\n \n         matrix.setValues(vals);",
    "output": "Remove comments"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -133,6 +133,9 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         mChart.getAxisRight().setEnabled(false);\n \n+        mChart.getViewPortHandler().setMaximumScaleY(2f);\n+        mChart.getViewPortHandler().setMaximumScaleX(2f);\n+\n         // add data\n         setData(45, 100);\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n@@ -20,6 +20,9 @@ public class ViewPortHandler {\n     /** minimum scale value on the y-axis */\n     private float mMinScaleY = 1f;\n \n+    /** maximum scale value on the y-axis */\n+    private float mMaxScaleY = Float.MAX_VALUE;\n+\n     /** minimum scale value on the x-axis */\n     private float mMinScaleX = 1f;\n \n@@ -285,7 +288,7 @@ public void limitTransAndScale(Matrix matrix, RectF content) {\n         mScaleX = Math.min(Math.max(mMinScaleX, curScaleX), mMaxScaleX);\n \n         // min scale-y is 1f\n-        mScaleY = Math.max(mMinScaleY, curScaleY);\n+        mScaleY = Math.min(Math.max(mMinScaleY, curScaleY), mMaxScaleY);\n \n         float width = 0f;\n         float height = 0f;\n@@ -307,10 +310,6 @@ public void limitTransAndScale(Matrix matrix, RectF content) {\n         float newTransY = Math.max(Math.min(curTransY, maxTransY + mTransOffsetY), -mTransOffsetY);\n         mTransY = newTransY;\n \n-        // if(curScaleY < mMinScaleY) {\n-        // newTransY = (height * (mScaleY - 1f)) / 2f;\n-        // }\n-\n         vals[Matrix.MTRANS_X] = newTransX;\n         vals[Matrix.MSCALE_X] = mScaleX;\n \n@@ -358,6 +357,13 @@ public void setMinimumScaleY(float yScale) {\n         limitTransAndScale(mMatrixTouch, mContentRect);\n     }\n \n+    public void setMaximumScaleY(float yScale) {\n+\n+        mMaxScaleY = yScale;\n+\n+        limitTransAndScale(mMatrixTouch, mContentRect);\n+    }\n+\n     /**\n      * Returns the charts-touch matrix used for translation and scale on touch.\n      * ",
    "output": "Allow setting maximum y-scale factor."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -22,35 +22,54 @@\n /**\n  * Implementation of the RadarChart, a \"spidernet\"-like chart. It works best\n  * when displaying 5-10 entries per DataSet.\n- * \n+ *\n  * @author Philipp Jahoda\n  */\n public class RadarChart extends PieRadarChartBase<RadarData> {\n \n-    /** width of the main web lines */\n+    /**\n+     * width of the main web lines\n+     */\n     private float mWebLineWidth = 2.5f;\n \n-    /** width of the inner web lines */\n+    /**\n+     * width of the inner web lines\n+     */\n     private float mInnerWebLineWidth = 1.5f;\n \n-    /** color for the main web lines */\n+    /**\n+     * color for the main web lines\n+     */\n     private int mWebColor = Color.rgb(122, 122, 122);\n \n-    /** color for the inner web */\n+    /**\n+     * color for the inner web\n+     */\n     private int mWebColorInner = Color.rgb(122, 122, 122);\n \n-    /** transparency the grid is drawn with (0-255) */\n+    /**\n+     * transparency the grid is drawn with (0-255)\n+     */\n     private int mWebAlpha = 150;\n \n-    /** flag indicating if the web lines should be drawn or not */\n+    /**\n+     * flag indicating if the web lines should be drawn or not\n+     */\n     private boolean mDrawWeb = true;\n \n+    /**\n+     * modulus that determines how many labels and web-lines are skipped before the next is drawn\n+     */\n     private int mWebModulus = 1;\n \n-    /** the object reprsenting the y-axis labels */\n+    /**\n+     * the object reprsenting the y-axis labels\n+     */\n     private YAxis mYAxis;\n \n-    /** the object representing the x-axis labels */\n+    /**\n+     * the object representing the x-axis labels\n+     */\n     private XAxis mXAxis;\n \n     protected YAxisRendererRadarChart mYAxisRenderer;\n@@ -107,19 +126,16 @@ protected void calcMinMax() {\n                 // If the values are all negative, let's stay in the negative zone\n                 mYAxis.mAxisMinimum = Math.min(0.f, !Float.isNaN(mYAxis.getAxisMinValue()) ? mYAxis.getAxisMinValue() : (minLeft - bottomSpaceLeft));\n                 mYAxis.mAxisMaximum = 0.f;\n-            }\n-            else if (minLeft >= 0.0) {\n+            } else if (minLeft >= 0.0) {\n                 // We have positive values only, stay in the positive zone\n                 mYAxis.mAxisMinimum = 0.f;\n                 mYAxis.mAxisMaximum = Math.max(0.f, !Float.isNaN(mYAxis.getAxisMaxValue()) ? mYAxis.getAxisMaxValue() : (maxLeft + topSpaceLeft));\n-            }\n-            else {\n+            } else {\n                 // Stick the minimum to 0.0 or less, and maximum to 0.0 or more (startAtZero for negative/positive at the same time)\n                 mYAxis.mAxisMinimum = Math.min(0.f, !Float.isNaN(mYAxis.getAxisMinValue()) ? mYAxis.getAxisMinValue() : (minLeft - bottomSpaceLeft));\n                 mYAxis.mAxisMaximum = Math.max(0.f, !Float.isNaN(mYAxis.getAxisMaxValue()) ? mYAxis.getAxisMaxValue() : (maxLeft + topSpaceLeft));\n             }\n-        }\n-        else {\n+        } else {\n             // Use the values as they are\n             mYAxis.mAxisMinimum = !Float.isNaN(mYAxis.getAxisMinValue()) ? mYAxis.getAxisMinValue() : (minLeft - bottomSpaceLeft);\n             mYAxis.mAxisMaximum = !Float.isNaN(mYAxis.getAxisMaxValue()) ? mYAxis.getAxisMaxValue() : (maxLeft + topSpaceLeft);\n@@ -138,7 +154,7 @@ protected float[] getMarkerPosition(Entry e, Highlight highlight) {\n         PointF p = new PointF((float) (c.x + val * Math.cos(Math.toRadians(angle))),\n                 (float) (c.y + val * Math.sin(Math.toRadians(angle))));\n \n-        return new float[] {\n+        return new float[]{\n                 p.x, p.y\n         };\n     }\n@@ -195,7 +211,7 @@ protected void onDraw(Canvas canvas) {\n \n     /**\n      * Returns the factor that is needed to transform values into pixels.\n-     * \n+     *\n      * @return\n      */\n     public float getFactor() {\n@@ -206,7 +222,7 @@ public float getFactor() {\n \n     /**\n      * Returns the angle that each slice in the radar chart occupies.\n-     * \n+     *\n      * @return\n      */\n     public float getSliceAngle() {\n@@ -231,7 +247,7 @@ public int getIndexForAngle(float angle) {\n \n     /**\n      * Returns the object that represents all y-labels of the RadarChart.\n-     * \n+     *\n      * @return\n      */\n     public YAxis getYAxis() {\n@@ -241,7 +257,7 @@ public YAxis getYAxis() {\n     /**\n      * Returns the object that represents all x-labels that are placed around\n      * the RadarChart.\n-     * \n+     *\n      * @return\n      */\n     public XAxis getXAxis() {\n@@ -250,7 +266,7 @@ public XAxis getXAxis() {\n \n     /**\n      * Sets the width of the web lines that come from the center.\n-     * \n+     *\n      * @param width\n      */\n     public void setWebLineWidth(float width) {\n@@ -264,7 +280,7 @@ public float getWebLineWidth() {\n     /**\n      * Sets the width of the web lines that are in between the lines coming from\n      * the center.\n-     * \n+     *\n      * @param width\n      */\n     public void setWebLineWidthInner(float width) {\n@@ -278,7 +294,7 @@ public float getWebLineWidthInner() {\n     /**\n      * Sets the transparency (alpha) value for all web lines, default: 150, 255\n      * = 100% opaque, 0 = 100% transparent\n-     * \n+     *\n      * @param alpha\n      */\n     public void setWebAlpha(int alpha) {\n@@ -287,7 +303,7 @@ public void setWebAlpha(int alpha) {\n \n     /**\n      * Returns the alpha value for all web lines.\n-     * \n+     *\n      * @return\n      */\n     public int getWebAlpha() {\n@@ -298,7 +314,7 @@ public int getWebAlpha() {\n      * Sets the color for the web lines that come from the center. Don't forget\n      * to use getResources().getColor(...) when loading a color from the\n      * resources. Default: Color.rgb(122, 122, 122)\n-     * \n+     *\n      * @param color\n      */\n     public void setWebColor(int color) {\n@@ -313,7 +329,7 @@ public int getWebColor() {\n      * Sets the color for the web lines in between the lines that come from the\n      * center. Don't forget to use getResources().getColor(...) when loading a\n      * color from the resources. Default: Color.rgb(122, 122, 122)\n-     * \n+     *\n      * @param color\n      */\n     public void setWebColorInner(int color) {\n@@ -327,30 +343,33 @@ public int getWebColorInner() {\n     /**\n      * If set to true, drawing the web is enabled, if set to false, drawing the\n      * whole web is disabled. Default: true\n-     * \n+     *\n      * @param enabled\n      */\n     public void setDrawWeb(boolean enabled) {\n         mDrawWeb = enabled;\n     }\n \n     /**\n-     * Sets the number of lines that should be skipped on the web before the\n-     * next line is drawn.\n+     * Sets the number of web-lines that should be skipped on chart web before the\n+     * next one is drawn. This targets the lines that come from the center of the RadarChart.\n      *\n-     * @param count\n+     * @param count if count = 1 -> 1 line is skipped in between\n      */\n-    public void setSkipWebLines(int count) {\n-        if (count >0) {\n-            mWebModulus = count;\n-        }\n+    public void setSkipWebLineCount(int count) {\n+\n+        if (count < 0)\n+            count = 0;\n+\n+        mWebModulus = count + 1;\n     }\n \n     /**\n+     * Returns the modulus that is used for skipping web-lines.\n      *\n      * @return\n      */\n-    public int getWebModulus() {\n+    public int getSkipWebLineCount() {\n         return mWebModulus;\n     }\n \n@@ -386,7 +405,7 @@ public float getYChartMin() {\n \n     /**\n      * Returns the range of y-values this chart can display.\n-     * \n+     *\n      * @return\n      */\n     public float getYRange() {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n@@ -139,8 +139,6 @@ public boolean isAxisModulusCustom() {\n     /**\n      * Returns the space (in characters) that should be left out between the\n      * x-axis labels\n-     * \n-     * @param space\n      */\n     public int getSpaceBetweenLabels() {\n         return mSpaceBetweenLabels;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n@@ -173,8 +173,8 @@ protected void drawWeb(Canvas c) {\n         mWebPaint.setColor(mChart.getWebColor());\n         mWebPaint.setAlpha(mChart.getWebAlpha());\n \n-        int mod = mChart.getWebModulus();\n-        for (int i = 0; i < mChart.getData().getXValCount(); i += mod) {\n+        for (int i = 0; i < mChart.getData().getXValCount(); i += mChart.getSkipWebLineCount()) {\n+\n             PointF p = Utils.getPosition(center, mChart.getYRange() * factor, sliceangle * i\n                     + rotationangle);\n ",
    "output": "Refactoring of PR."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -45,6 +45,8 @@ public class RadarChart extends PieRadarChartBase<RadarData> {\n     /** flag indicating if the web lines should be drawn or not */\n     private boolean mDrawWeb = true;\n \n+    private int mWebModulus = 1;\n+\n     /** the object reprsenting the y-axis labels */\n     private YAxis mYAxis;\n \n@@ -332,6 +334,26 @@ public void setDrawWeb(boolean enabled) {\n         mDrawWeb = enabled;\n     }\n \n+    /**\n+     * Sets the number of lines that should be skipped on the web before the\n+     * next line is drawn.\n+     *\n+     * @param count\n+     */\n+    public void setSkipWebLines(int count) {\n+        if (count >0) {\n+            mWebModulus = count;\n+        }\n+    }\n+\n+    /**\n+     *\n+     * @return\n+     */\n+    public int getWebModulus() {\n+        return mWebModulus;\n+    }\n+\n     @Override\n     protected float getRequiredBottomOffset() {\n         return mLegendRenderer.getLabelPaint().getTextSize() * 4.f;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n@@ -173,8 +173,8 @@ protected void drawWeb(Canvas c) {\n         mWebPaint.setColor(mChart.getWebColor());\n         mWebPaint.setAlpha(mChart.getWebAlpha());\n \n-        for (int i = 0; i < mChart.getData().getXValCount(); i++) {\n-\n+        int mod = mChart.getWebModulus();\n+        for (int i = 0; i < mChart.getData().getXValCount(); i += mod) {\n             PointF p = Utils.getPosition(center, mChart.getYRange() * factor, sliceangle * i\n                     + rotationangle);\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererRadarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererRadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererRadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererRadarChart.java\n@@ -37,8 +37,8 @@ public void renderAxisLabels(Canvas c) {\n \n         PointF center = mChart.getCenterOffsets();\n \n-        for (int i = 0; i < mXAxis.getValues().size(); i++) {\n-\n+        int mod = mXAxis.mAxisLabelModulus;\n+        for (int i = 0; i < mXAxis.getValues().size(); i += mod) {\n             String text = mXAxis.getValues().get(i);\n \n             float angle = (sliceangle * i + mChart.getRotationAngle()) % 360f;",
    "output": "Merge pull request #759 from fmt-Println-MKO/master\n\nAdded possibility to skip labels and web-lines in RadarChart"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -149,7 +149,7 @@ private List<String> arrayToList(String[] array) {\n      */\n     protected void init() {\n \n-        isLegal();\n+        checkLegal();\n \n         calcMinMax(mLastStart, mLastEnd);\n         calcYValueSum();\n@@ -181,11 +181,14 @@ private void calcXValAverageLength() {\n      * Checks if the combination of x-values array and DataSet array is legal or\n      * not.\n      */\n-    private void isLegal() {\n+    private void checkLegal() {\n \n         if (mDataSets == null)\n             return;\n \n+        if(this instanceof ScatterData)\n+            return;\n+\n         for (int i = 0; i < mDataSets.size(); i++) {\n             if (mDataSets.get(i)\n                     .getYVals()",
    "output": "Fix #931."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -23,13 +23,19 @@\n \n public class LegendRenderer extends Renderer {\n \n-    /** paint for the legend labels */\n+    /**\n+     * paint for the legend labels\n+     */\n     protected Paint mLegendLabelPaint;\n \n-    /** paint used for the legend forms */\n+    /**\n+     * paint used for the legend forms\n+     */\n     protected Paint mLegendFormPaint;\n \n-    /** the legend object this renderer renders */\n+    /**\n+     * the legend object this renderer renders\n+     */\n     protected Legend mLegend;\n \n     public LegendRenderer(ViewPortHandler viewPortHandler, Legend legend) {\n@@ -48,7 +54,7 @@ public LegendRenderer(ViewPortHandler viewPortHandler, Legend legend) {\n \n     /**\n      * Returns the Paint object used for drawing the Legend labels.\n-     * \n+     *\n      * @return\n      */\n     public Paint getLabelPaint() {\n@@ -57,7 +63,7 @@ public Paint getLabelPaint() {\n \n     /**\n      * Returns the Paint object used for drawing the Legend forms.\n-     * \n+     *\n      * @return\n      */\n     public Paint getFormPaint() {\n@@ -66,7 +72,7 @@ public Paint getFormPaint() {\n \n     /**\n      * Prepares the legend and calculates all needed forms, labels and colors.\n-     * \n+     *\n      * @param data\n      */\n     public void computeLegend(ChartData<?> data) {\n@@ -198,26 +204,22 @@ public void renderLegend(Canvas c) {\n         switch (legendPosition) {\n             case BELOW_CHART_LEFT:\n             case BELOW_CHART_RIGHT:\n-            case BELOW_CHART_CENTER:\n-            {\n+            case BELOW_CHART_CENTER: {\n                 float contentWidth = mViewPortHandler.contentWidth();\n \n                 float originPosX;\n \n-                if (legendPosition == Legend.LegendPosition.BELOW_CHART_LEFT)\n-                {\n+                if (legendPosition == Legend.LegendPosition.BELOW_CHART_LEFT) {\n                     originPosX = mViewPortHandler.contentLeft() + xoffset;\n \n                     if (direction == Legend.LegendDirection.RIGHT_TO_LEFT)\n                         originPosX += mLegend.mNeededWidth;\n-                }\n-                else if (legendPosition == Legend.LegendPosition.BELOW_CHART_RIGHT) {\n+                } else if (legendPosition == Legend.LegendPosition.BELOW_CHART_RIGHT) {\n                     originPosX = mViewPortHandler.contentRight() - xoffset;\n \n                     if (direction == Legend.LegendDirection.LEFT_TO_RIGHT)\n                         originPosX -= mLegend.mNeededWidth;\n-                }\n-                else // if (legendPosition == Legend.LegendPosition.BELOW_CHART_CENTER)\n+                } else // if (legendPosition == Legend.LegendPosition.BELOW_CHART_CENTER)\n                     originPosX = mViewPortHandler.contentLeft() + contentWidth / 2.f;\n \n                 FSize[] calculatedLineSizes = mLegend.getCalculatedLineSizes();\n@@ -266,22 +268,20 @@ else if (legendPosition == Legend.LegendPosition.BELOW_CHART_RIGHT) {\n                             posX += calculatedLabelSizes[i].width;\n \n                         posX += direction == Legend.LegendDirection.RIGHT_TO_LEFT ? -xEntrySpace : xEntrySpace;\n-                    }\n-                    else\n+                    } else\n                         posX += direction == Legend.LegendDirection.RIGHT_TO_LEFT ? -stackSpace : stackSpace;\n                 }\n \n             }\n-                break;\n+            break;\n \n             case PIECHART_CENTER:\n             case RIGHT_OF_CHART:\n             case RIGHT_OF_CHART_CENTER:\n             case RIGHT_OF_CHART_INSIDE:\n             case LEFT_OF_CHART:\n             case LEFT_OF_CHART_CENTER:\n-            case LEFT_OF_CHART_INSIDE:\n-            {\n+            case LEFT_OF_CHART_INSIDE: {\n                 // contains the stacked legend size in pixels\n                 float stack = 0f;\n                 boolean wasStacked = false;\n@@ -319,7 +319,7 @@ else if (legendPosition == Legend.LegendPosition.BELOW_CHART_RIGHT) {\n                             * Legend.LegendPosition.RIGHT_OF_CHART_INSIDE ||\n                             * legendPosition ==\n                             * Legend.LegendPosition.LEFT_OF_CHART_INSIDE)\n-                            */{\n+                            */ {\n                         posY = mViewPortHandler.contentTop() + yoffset;\n                     }\n                 }\n@@ -375,10 +375,10 @@ else if (wasStacked)\n     /**\n      * Draws the Legend-form at the given position with the color at the given\n      * index.\n-     * \n-     * @param c canvas to draw with\n-     * @param x position\n-     * @param y position\n+     *\n+     * @param c     canvas to draw with\n+     * @param x     position\n+     * @param y     position\n      * @param index the index of the color to use (in the colors array)\n      */\n     protected void drawForm(Canvas c, float x, float y, int index, Legend legend) {\n@@ -406,8 +406,8 @@ protected void drawForm(Canvas c, float x, float y, int index, Legend legend) {\n \n     /**\n      * Draws the provided label at the given position.\n-     * \n-     * @param c canvas to draw with\n+     *\n+     * @param c     canvas to draw with\n      * @param x\n      * @param y\n      * @param label the label to draw",
    "output": "Formatting"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -230,12 +230,12 @@ else if (legendPosition == Legend.LegendPosition.BELOW_CHART_RIGHT) {\n                 int lineIndex = 0;\n \n                 for (int i = 0, count = labels.length; i < count; i++) {\n-                    if (calculatedLabelBreakPoints[i]) {\n+                    if (i < calculatedLabelBreakPoints.length && calculatedLabelBreakPoints[i]) {\n                         posX = originPosX;\n                         posY += labelLineHeight + labelLineSpacing;\n                     }\n \n-                    if (posX == originPosX && legendPosition == Legend.LegendPosition.BELOW_CHART_CENTER) {\n+                    if (posX == originPosX && legendPosition == Legend.LegendPosition.BELOW_CHART_CENTER && lineIndex < calculatedLineSizes.length) {\n                         posX += (direction == Legend.LegendDirection.RIGHT_TO_LEFT ? calculatedLineSizes[lineIndex].width : -calculatedLineSizes[lineIndex].width) / 2.f;\n                         lineIndex++;\n                     }",
    "output": "Added bounds check for issue #952"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -564,6 +564,8 @@ protected float[] getMarkerPosition(Entry e, Highlight highlight) {\n                 } else {\n                     xPos = e.getVal();\n                 }\n+\n+                xPos *= mAnimator.getPhaseY();\n             } else {\n \n                 float x = i + i * (setCount - 1) + dataSetIndex + space * i + space / 2f;\n@@ -576,12 +578,16 @@ protected float[] getMarkerPosition(Entry e, Highlight highlight) {\n                 } else {\n                     yPos = e.getVal();\n                 }\n+\n+                yPos *= mAnimator.getPhaseY();\n             }\n+        } else {\n+            yPos *= mAnimator.getPhaseY();\n         }\n \n         // position of the marker depends on selected value index and value\n         float[] pts = new float[] {\n-                xPos, yPos * mAnimator.getPhaseY()\n+                xPos, yPos\n         };\n \n         getTransformer(mData.getDataSetByIndex(dataSetIndex).getAxisDependency())",
    "output": "Fixed horizontal-markerview animation issues."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n@@ -31,6 +31,7 @@\n import com.github.mikephil.charting.listener.OnChartValueSelectedListener;\n import com.github.mikephil.charting.highlight.Highlight;\n import com.github.mikephil.charting.utils.ColorTemplate;\n+import com.xxmassdeveloper.mpchartexample.custom.MyMarkerView;\n import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n \n import java.util.ArrayList;\n@@ -105,6 +106,11 @@ protected void onCreate(Bundle savedInstanceState) {\n         yr.setDrawGridLines(false);\n //        yr.setInverted(true);\n \n+        MyMarkerView mv = new MyMarkerView(this, R.layout.custom_marker_view);\n+\n+        // set the marker to the chart\n+        mChart.setMarkerView(mv);\n+\n         setData(12, 50);\n         mChart.animateY(2500);\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -548,15 +548,34 @@ protected float[] getMarkerPosition(Entry e, Highlight highlight) {\n \n             BarData bd = (BarData) mData;\n             float space = bd.getGroupSpace();\n+            int setCount = mData.getDataSetCount();\n+            int i = e.getXIndex();\n \n-            float x = e.getXIndex() * (mData.getDataSetCount() - 1) + dataSetIndex + space * e.getXIndex() + space\n-                    / 2f;\n+            if(this instanceof HorizontalBarChart) {\n \n-            xPos += x;\n+                // calculate the x-position, depending on datasetcount\n+                float y = i + i * (setCount - 1) + dataSetIndex + space * i + space / 2f ;\n \n-            BarEntry entry = (BarEntry) e;\n-            if(entry.getVals() != null) {\n-                yPos = highlight.getRange().to;\n+                yPos = y;\n+\n+                BarEntry entry = (BarEntry) e;\n+                if(entry.getVals() != null) {\n+                    xPos = highlight.getRange().to;\n+                } else {\n+                    xPos = e.getVal();\n+                }\n+            } else {\n+\n+                float x = i + i * (setCount - 1) + dataSetIndex + space * i + space / 2f;\n+\n+                xPos = x;\n+\n+                BarEntry entry = (BarEntry) e;\n+                if(entry.getVals() != null) {\n+                    yPos = highlight.getRange().to;\n+                } else {\n+                    yPos = e.getVal();\n+                }\n             }\n         }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n@@ -262,7 +262,7 @@ public float[] generateTransformedValuesHorizontalBarChart(List<? extends Entry>\n             int i = e.getXIndex();\n \n             // calculate the x-position, depending on datasetcount\n-            float x = e.getXIndex() + i * (setCount - 1) + dataSet + space * i\n+            float x = i + i * (setCount - 1) + dataSet + space * i\n                     + space / 2f ;\n             float y = e.getVal();\n ",
    "output": "Added markerview support for HorizontalBarChart (#1010) - still bugfixing needed."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n@@ -101,9 +101,6 @@ protected void calcMinMax() {\n                         mXChartMax = xmax;\n                 }\n             }\n-        } else {\n-            mXChartMin = 0f;\n-            mXChartMax = mData.getXValCount()-1;\n         }\n \n         mDeltaX = Math.abs(mXChartMax - mXChartMin);",
    "output": "Merge pull request #1007 from danielgindi/combined-fix\n\nFixes an issue with X min/max in combined charts without bubble data"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n@@ -101,9 +101,6 @@ protected void calcMinMax() {\n                         mXChartMax = xmax;\n                 }\n             }\n-        } else {\n-            mXChartMin = 0f;\n-            mXChartMax = mData.getXValCount()-1;\n         }\n \n         mDeltaX = Math.abs(mXChartMax - mXChartMin);",
    "output": "Fixes an issue with X min/max in combined charts without bubble data"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n@@ -79,7 +79,7 @@ protected void calcMinMax(int start, int end) {\n \n         int endValue;\n \n-        if (end == 0)\n+        if (end == 0 || end >= mYVals.size())\n             endValue = mYVals.size() - 1;\n         else\n             endValue = end;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n@@ -69,11 +69,8 @@ protected void drawDataSet(Canvas c, CandleDataSet dataSet) {\n \n         List<CandleEntry> entries = dataSet.getYVals();\n \n-        Entry entryFrom = dataSet.getEntryForXIndex(mMinX);\n-        Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n-\n-        int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n-        int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n+        int minx = Math.max(mMinX, 0);\n+        int maxx = Math.min(mMaxX + 1, entries.size());\n \n         int range = (maxx - minx) * 4;\n         int to = (int)Math.ceil((maxx - minx) * phaseX + minx);\n@@ -243,11 +240,8 @@ public void drawValues(Canvas c) {\n \n                 List<CandleEntry> entries = dataSet.getYVals();\n \n-                Entry entryFrom = dataSet.getEntryForXIndex(mMinX);\n-                Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n-\n-                int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n-                int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n+                int minx = Math.max(mMinX, 0);\n+                int maxx = Math.min(mMaxX + 1, entries.size());\n \n                 float[] positions = trans.generateTransformedValuesCandle(\n                         entries, mAnimator.getPhaseX(), mAnimator.getPhaseY(), minx, maxx);",
    "output": "Minor performance improvement to candle chart"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -125,14 +125,27 @@ public void calculateOffsets() {\n             return;\n \n         float diameter = getDiameter();\n-        float boxSize = diameter / 2f;\n+        float radius = diameter / 2f;\n \n         PointF c = getCenterOffsets();\n \n+        final List<PieDataSet> dataSets = mData.getDataSets();\n+\n+        float maxShift = 0.f;\n+        for (int i = 0; i < dataSets.size(); i++) {\n+            final float shift = dataSets.get(i).getSelectionShift();\n+            if (shift > maxShift)\n+                maxShift = shift;\n+        }\n+\n+        final float halfMaxShift = maxShift / 2.f;\n+\n         // create the circle box that will contain the pie-chart (the bounds of\n         // the pie-chart)\n-        mCircleBox.set(c.x - boxSize, c.y - boxSize,\n-                c.x + boxSize, c.y + boxSize);\n+        mCircleBox.set(c.x - radius + halfMaxShift,\n+                c.y - radius + halfMaxShift,\n+                c.x + radius - halfMaxShift,\n+                c.y + radius - halfMaxShift);\n     }\n \n     @Override",
    "output": "Prevent pie slices from clipping when selected"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -71,7 +71,7 @@ public void drawData(Canvas c) {\n \n             BarDataSet set = barData.getDataSetByIndex(i);\n \n-            if (set.isVisible()) {\n+            if (set.isVisible() && set.getEntryCount() > 0) {\n                 drawDataSet(c, set, i);\n             }\n         }\n@@ -187,7 +187,7 @@ public void drawValues(Canvas c) {\n \n                 BarDataSet dataSet = dataSets.get(i);\n \n-                if (!dataSet.isDrawValuesEnabled())\n+                if (!dataSet.isDrawValuesEnabled() || dataSet.getEntryCount() == 0)\n                     continue;\n \n                 // apply the text-styling defined by the DataSet\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n@@ -49,7 +49,7 @@ public void drawData(Canvas c) {\n \n         for (BubbleDataSet set : bubbleData.getDataSets()) {\n \n-            if (set.isVisible())\n+            if (set.isVisible() && set.getEntryCount() > 0)\n                 drawDataSet(c, set);\n         }\n     }\n@@ -133,7 +133,7 @@ public void drawValues(Canvas c) {\n \n             for (BubbleDataSet dataSet : dataSets) {\n \n-                if (!dataSet.isDrawValuesEnabled())\n+                if (!dataSet.isDrawValuesEnabled() || dataSet.getEntryCount() == 0)\n                     continue;\n \n                 // apply the text-styling defined by the DataSet\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n@@ -53,7 +53,7 @@ public void drawData(Canvas c) {\n \n         for (CandleDataSet set : candleData.getDataSets()) {\n \n-            if (set.isVisible())\n+            if (set.isVisible() && set.getEntryCount() > 0)\n                 drawDataSet(c, set);\n         }\n     }\n@@ -233,7 +233,7 @@ public void drawValues(Canvas c) {\n \n                 CandleDataSet dataSet = dataSets.get(i);\n \n-                if (!dataSet.isDrawValuesEnabled())\n+                if (!dataSet.isDrawValuesEnabled() || dataSet.getEntryCount() == 0)\n                     continue;\n \n                 // apply the text-styling defined by the DataSet\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n@@ -107,7 +107,7 @@ public void drawValues(Canvas c) {\n \n                 BarDataSet dataSet = dataSets.get(i);\n \n-                if (!dataSet.isDrawValuesEnabled())\n+                if (!dataSet.isDrawValuesEnabled() || dataSet.getEntryCount() == 0)\n                     continue;\n \n                 boolean isInverted = mChart.isInverted(dataSet.getAxisDependency());\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -94,7 +94,7 @@ public void drawData(Canvas c) {\n \n         for (LineDataSet set : lineData.getDataSets()) {\n \n-            if (set.isVisible())\n+            if (set.isVisible() && set.getEntryCount() > 0)\n                 drawDataSet(c, set);\n         }\n \n@@ -410,7 +410,7 @@ public void drawValues(Canvas c) {\n \n                 LineDataSet dataSet = dataSets.get(i);\n \n-                if (!dataSet.isDrawValuesEnabled())\n+                if (!dataSet.isDrawValuesEnabled() || dataSet.getEntryCount() == 0)\n                     continue;\n \n                 // apply the text-styling defined by the DataSet\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -117,7 +117,7 @@ public void drawData(Canvas c) {\n \n         for (PieDataSet set : pieData.getDataSets()) {\n \n-            if (set.isVisible())\n+            if (set.isVisible() && set.getEntryCount() > 0)\n                 drawDataSet(c, set);\n         }\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n@@ -56,7 +56,7 @@ public void drawData(Canvas c) {\n \n         for (RadarDataSet set : radarData.getDataSets()) {\n \n-            if (set.isVisible())\n+            if (set.isVisible() && set.getEntryCount() > 0)\n                 drawDataSet(c, set);\n         }\n     }\n@@ -131,7 +131,7 @@ public void drawValues(Canvas c) {\n \n             RadarDataSet dataSet = mChart.getData().getDataSetByIndex(i);\n \n-            if (!dataSet.isDrawValuesEnabled())\n+            if (!dataSet.isDrawValuesEnabled() || dataSet.getEntryCount() == 0)\n                 continue;\n \n             // apply the text-styling defined by the DataSet\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n@@ -209,7 +209,7 @@ public void drawValues(Canvas c) {\n \n                 ScatterDataSet dataSet = dataSets.get(i);\n \n-                if (!dataSet.isDrawValuesEnabled())\n+                if (!dataSet.isDrawValuesEnabled() || dataSet.getEntryCount() == 0)\n                     continue;\n \n                 // apply the text-styling defined by the DataSet",
    "output": "Avoid crashes when datasets are empty"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -363,35 +363,52 @@ protected void calcMinMax() {\n         mXChartMax = mData.getXVals().size() - 1;\n         mDeltaX = Math.abs(mXChartMax - mXChartMin);\n \n-        mAxisLeft.mAxisMaximum = !Float.isNaN(mAxisLeft.getAxisMaxValue()) ? mAxisLeft\n-                .getAxisMaxValue() : maxLeft + topSpaceLeft;\n-        mAxisRight.mAxisMaximum = !Float.isNaN(mAxisRight.getAxisMaxValue()) ? mAxisRight\n-                .getAxisMaxValue() : maxRight + topSpaceRight;\n-        mAxisLeft.mAxisMinimum = !Float.isNaN(mAxisLeft.getAxisMinValue()) ? mAxisLeft\n-                .getAxisMinValue() : minLeft - bottomSpaceLeft;\n-        mAxisRight.mAxisMinimum = !Float.isNaN(mAxisRight.getAxisMinValue()) ? mAxisRight\n-                .getAxisMinValue() : minRight - bottomSpaceRight;\n-\n-        // consider starting at zero (0)\n+        // Consider sticking one of the edges of the axis to zero (0.0)\n+\n         if (mAxisLeft.isStartAtZeroEnabled()) {\n-            if (mAxisLeft.mAxisMinimum < 0f && mAxisLeft.mAxisMaximum < 0f) {\n+            if (minLeft < 0.f && maxLeft < 0.f) {\n                 // If the values are all negative, let's stay in the negative zone\n-                mAxisLeft.mAxisMaximum = 0f;\n-            } else if (mAxisLeft.mAxisMinimum >= 0f) {\n+                mAxisLeft.mAxisMinimum = Math.min(0.f, !Float.isNaN(mAxisLeft.getAxisMinValue()) ? mAxisLeft.getAxisMinValue() : (minLeft - bottomSpaceLeft));\n+                mAxisLeft.mAxisMaximum = 0.f;\n+            }\n+            else if (minLeft >= 0.0) {\n                 // We have positive values only, stay in the positive zone\n-                mAxisLeft.mAxisMinimum = 0f;\n+                mAxisLeft.mAxisMinimum = 0.f;\n+                mAxisLeft.mAxisMaximum = Math.max(0.f, !Float.isNaN(mAxisLeft.getAxisMaxValue()) ? mAxisLeft.getAxisMaxValue() : (maxLeft + topSpaceLeft));\n             }\n+            else {\n+                // Stick the minimum to 0.0 or less, and maximum to 0.0 or more (startAtZero for negative/positive at the same time)\n+                mAxisLeft.mAxisMinimum = Math.min(0.f, !Float.isNaN(mAxisLeft.getAxisMinValue()) ? mAxisLeft.getAxisMinValue() : (minLeft - bottomSpaceLeft));\n+                mAxisLeft.mAxisMaximum = Math.max(0.f, !Float.isNaN(mAxisLeft.getAxisMaxValue()) ? mAxisLeft.getAxisMaxValue() : (maxLeft + topSpaceLeft));\n+            }\n+        }\n+        else {\n+            // Use the values as they are\n+            mAxisLeft.mAxisMinimum = !Float.isNaN(mAxisLeft.getAxisMinValue()) ? mAxisLeft.getAxisMinValue() : (minLeft - bottomSpaceLeft);\n+            mAxisLeft.mAxisMaximum = !Float.isNaN(mAxisLeft.getAxisMaxValue()) ? mAxisLeft.getAxisMaxValue() : (maxLeft + topSpaceLeft);\n         }\n \n         if (mAxisRight.isStartAtZeroEnabled()) {\n-            if (mAxisRight.mAxisMinimum < 0.0 && mAxisRight.mAxisMaximum < 0.0) {\n+            if (minRight < 0.f && maxRight < 0.f) {\n                 // If the values are all negative, let's stay in the negative zone\n-                mAxisRight.mAxisMaximum = 0f;\n-            } else if (mAxisRight.mAxisMinimum >= 0f) {\n+                mAxisRight.mAxisMinimum = Math.min(0.f, !Float.isNaN(mAxisRight.getAxisMinValue()) ? mAxisRight.getAxisMinValue() : (minRight - bottomSpaceRight));\n+                mAxisRight.mAxisMaximum = 0.f;\n+            }\n+            else if (minRight >= 0.f) {\n                 // We have positive values only, stay in the positive zone\n-                mAxisRight.mAxisMinimum = 0f;\n+                mAxisRight.mAxisMinimum = 0.f;\n+                mAxisRight.mAxisMaximum = Math.max(0.f, !Float.isNaN(mAxisRight.getAxisMaxValue()) ? mAxisRight.getAxisMaxValue() : (maxRight + topSpaceRight));\n+            }\n+            else {\n+                // Stick the minimum to 0.0 or less, and maximum to 0.0 or more (startAtZero for negative/positive at the same time)\n+                mAxisRight.mAxisMinimum = Math.min(0.f, !Float.isNaN(mAxisRight.getAxisMinValue()) ? mAxisRight.getAxisMinValue() : (minRight - bottomSpaceRight));\n+                mAxisRight.mAxisMaximum = Math.max(0.f, !Float.isNaN(mAxisRight.getAxisMaxValue()) ? mAxisRight.getAxisMaxValue() : (maxRight + topSpaceRight));\n             }\n         }\n+        else {\n+            mAxisRight.mAxisMinimum = !Float.isNaN(mAxisRight.getAxisMinValue()) ? mAxisRight.getAxisMinValue() : (minRight - bottomSpaceRight);\n+            mAxisRight.mAxisMaximum = !Float.isNaN(mAxisRight.getAxisMaxValue()) ? mAxisRight.getAxisMaxValue() : (maxRight + topSpaceRight);\n+        }\n \n         mAxisLeft.mAxisRange = Math.abs(mAxisLeft.mAxisMaximum - mAxisLeft.mAxisMinimum);\n         mAxisRight.mAxisRange = Math.abs(mAxisRight.mAxisMaximum - mAxisRight.mAxisMinimum);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -199,7 +199,7 @@ public void calculateOffsets() {\n         if (this instanceof RadarChart) {\n             XAxis x = ((RadarChart) this).getXAxis();\n \n-            if (x.isEnabled()) {\n+            if (x.isEnabled() && x.isDrawLabelsEnabled()) {\n                 min = Math.max(Utils.convertDpToPixel(10f), x.mLabelWidth);\n             }\n         }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -100,14 +100,28 @@ protected void calcMinMax() {\n         mXChartMax = mData.getXVals().size() - 1;\n         mDeltaX = Math.abs(mXChartMax - mXChartMin);\n \n-        mYAxis.mAxisMaximum = !Float.isNaN(mYAxis.getAxisMaxValue()) ? mYAxis\n-                .getAxisMaxValue() : maxLeft + topSpaceLeft;\n-        mYAxis.mAxisMinimum = !Float.isNaN(mYAxis.getAxisMinValue()) ? mYAxis\n-                .getAxisMinValue() : minLeft - bottomSpaceLeft;\n-\n-        // consider starting at zero (0)\n-        if (mYAxis.isStartAtZeroEnabled())\n-            mYAxis.mAxisMinimum = Math.min(0f, mYAxis.mAxisMinimum);\n+        if (mYAxis.isStartAtZeroEnabled()) {\n+            if (minLeft < 0.f && maxLeft < 0.f) {\n+                // If the values are all negative, let's stay in the negative zone\n+                mYAxis.mAxisMinimum = Math.min(0.f, !Float.isNaN(mYAxis.getAxisMinValue()) ? mYAxis.getAxisMinValue() : (minLeft - bottomSpaceLeft));\n+                mYAxis.mAxisMaximum = 0.f;\n+            }\n+            else if (minLeft >= 0.0) {\n+                // We have positive values only, stay in the positive zone\n+                mYAxis.mAxisMinimum = 0.f;\n+                mYAxis.mAxisMaximum = Math.max(0.f, !Float.isNaN(mYAxis.getAxisMaxValue()) ? mYAxis.getAxisMaxValue() : (maxLeft + topSpaceLeft));\n+            }\n+            else {\n+                // Stick the minimum to 0.0 or less, and maximum to 0.0 or more (startAtZero for negative/positive at the same time)\n+                mYAxis.mAxisMinimum = Math.min(0.f, !Float.isNaN(mYAxis.getAxisMinValue()) ? mYAxis.getAxisMinValue() : (minLeft - bottomSpaceLeft));\n+                mYAxis.mAxisMaximum = Math.max(0.f, !Float.isNaN(mYAxis.getAxisMaxValue()) ? mYAxis.getAxisMaxValue() : (maxLeft + topSpaceLeft));\n+            }\n+        }\n+        else {\n+            // Use the values as they are\n+            mYAxis.mAxisMinimum = !Float.isNaN(mYAxis.getAxisMinValue()) ? mYAxis.getAxisMinValue() : (minLeft - bottomSpaceLeft);\n+            mYAxis.mAxisMaximum = !Float.isNaN(mYAxis.getAxisMaxValue()) ? mYAxis.getAxisMaxValue() : (maxLeft + topSpaceLeft);\n+        }\n \n         mYAxis.mAxisRange = Math.abs(mYAxis.mAxisMaximum - mYAxis.mAxisMinimum);\n     }\n@@ -325,7 +339,7 @@ protected float getRequiredBottomOffset() {\n \n     @Override\n     protected float getRequiredBaseOffset() {\n-        return mXAxis.isEnabled() ? mXAxis.mLabelWidth : Utils.convertDpToPixel(10f);\n+        return mXAxis.isEnabled() && mXAxis.isDrawLabelsEnabled() ? mXAxis.mLabelWidth : Utils.convertDpToPixel(10f);\n     }\n \n     @Override",
    "output": "Merge pull request #964 from danielgindi/bugfixes"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -199,7 +199,7 @@ public void calculateOffsets() {\n         if (this instanceof RadarChart) {\n             XAxis x = ((RadarChart) this).getXAxis();\n \n-            if (x.isEnabled()) {\n+            if (x.isEnabled() && x.isDrawLabelsEnabled()) {\n                 min = Math.max(Utils.convertDpToPixel(10f), x.mLabelWidth);\n             }\n         }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -339,7 +339,7 @@ protected float getRequiredBottomOffset() {\n \n     @Override\n     protected float getRequiredBaseOffset() {\n-        return mXAxis.isEnabled() ? mXAxis.mLabelWidth : Utils.convertDpToPixel(10f);\n+        return mXAxis.isEnabled() && mXAxis.isDrawLabelsEnabled() ? mXAxis.mLabelWidth : Utils.convertDpToPixel(10f);\n     }\n \n     @Override",
    "output": "Exclude label width when drawLabelsEnabled=false"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -363,35 +363,52 @@ protected void calcMinMax() {\n         mXChartMax = mData.getXVals().size() - 1;\n         mDeltaX = Math.abs(mXChartMax - mXChartMin);\n \n-        mAxisLeft.mAxisMaximum = !Float.isNaN(mAxisLeft.getAxisMaxValue()) ? mAxisLeft\n-                .getAxisMaxValue() : maxLeft + topSpaceLeft;\n-        mAxisRight.mAxisMaximum = !Float.isNaN(mAxisRight.getAxisMaxValue()) ? mAxisRight\n-                .getAxisMaxValue() : maxRight + topSpaceRight;\n-        mAxisLeft.mAxisMinimum = !Float.isNaN(mAxisLeft.getAxisMinValue()) ? mAxisLeft\n-                .getAxisMinValue() : minLeft - bottomSpaceLeft;\n-        mAxisRight.mAxisMinimum = !Float.isNaN(mAxisRight.getAxisMinValue()) ? mAxisRight\n-                .getAxisMinValue() : minRight - bottomSpaceRight;\n-\n-        // consider starting at zero (0)\n+        // Consider sticking one of the edges of the axis to zero (0.0)\n+\n         if (mAxisLeft.isStartAtZeroEnabled()) {\n-            if (mAxisLeft.mAxisMinimum < 0f && mAxisLeft.mAxisMaximum < 0f) {\n+            if (minLeft < 0.f && maxLeft < 0.f) {\n                 // If the values are all negative, let's stay in the negative zone\n-                mAxisLeft.mAxisMaximum = 0f;\n-            } else if (mAxisLeft.mAxisMinimum >= 0f) {\n+                mAxisLeft.mAxisMinimum = Math.min(0.f, !Float.isNaN(mAxisLeft.getAxisMinValue()) ? mAxisLeft.getAxisMinValue() : (minLeft - bottomSpaceLeft));\n+                mAxisLeft.mAxisMaximum = 0.f;\n+            }\n+            else if (minLeft >= 0.0) {\n                 // We have positive values only, stay in the positive zone\n-                mAxisLeft.mAxisMinimum = 0f;\n+                mAxisLeft.mAxisMinimum = 0.f;\n+                mAxisLeft.mAxisMaximum = Math.max(0.f, !Float.isNaN(mAxisLeft.getAxisMaxValue()) ? mAxisLeft.getAxisMaxValue() : (maxLeft + topSpaceLeft));\n             }\n+            else {\n+                // Stick the minimum to 0.0 or less, and maximum to 0.0 or more (startAtZero for negative/positive at the same time)\n+                mAxisLeft.mAxisMinimum = Math.min(0.f, !Float.isNaN(mAxisLeft.getAxisMinValue()) ? mAxisLeft.getAxisMinValue() : (minLeft - bottomSpaceLeft));\n+                mAxisLeft.mAxisMaximum = Math.max(0.f, !Float.isNaN(mAxisLeft.getAxisMaxValue()) ? mAxisLeft.getAxisMaxValue() : (maxLeft + topSpaceLeft));\n+            }\n+        }\n+        else {\n+            // Use the values as they are\n+            mAxisLeft.mAxisMinimum = !Float.isNaN(mAxisLeft.getAxisMinValue()) ? mAxisLeft.getAxisMinValue() : (minLeft - bottomSpaceLeft);\n+            mAxisLeft.mAxisMaximum = !Float.isNaN(mAxisLeft.getAxisMaxValue()) ? mAxisLeft.getAxisMaxValue() : (maxLeft + topSpaceLeft);\n         }\n \n         if (mAxisRight.isStartAtZeroEnabled()) {\n-            if (mAxisRight.mAxisMinimum < 0.0 && mAxisRight.mAxisMaximum < 0.0) {\n+            if (minRight < 0.f && maxRight < 0.f) {\n                 // If the values are all negative, let's stay in the negative zone\n-                mAxisRight.mAxisMaximum = 0f;\n-            } else if (mAxisRight.mAxisMinimum >= 0f) {\n+                mAxisRight.mAxisMinimum = Math.min(0.f, !Float.isNaN(mAxisRight.getAxisMinValue()) ? mAxisRight.getAxisMinValue() : (minRight - bottomSpaceRight));\n+                mAxisRight.mAxisMaximum = 0.f;\n+            }\n+            else if (minRight >= 0.f) {\n                 // We have positive values only, stay in the positive zone\n-                mAxisRight.mAxisMinimum = 0f;\n+                mAxisRight.mAxisMinimum = 0.f;\n+                mAxisRight.mAxisMaximum = Math.max(0.f, !Float.isNaN(mAxisRight.getAxisMaxValue()) ? mAxisRight.getAxisMaxValue() : (maxRight + topSpaceRight));\n+            }\n+            else {\n+                // Stick the minimum to 0.0 or less, and maximum to 0.0 or more (startAtZero for negative/positive at the same time)\n+                mAxisRight.mAxisMinimum = Math.min(0.f, !Float.isNaN(mAxisRight.getAxisMinValue()) ? mAxisRight.getAxisMinValue() : (minRight - bottomSpaceRight));\n+                mAxisRight.mAxisMaximum = Math.max(0.f, !Float.isNaN(mAxisRight.getAxisMaxValue()) ? mAxisRight.getAxisMaxValue() : (maxRight + topSpaceRight));\n             }\n         }\n+        else {\n+            mAxisRight.mAxisMinimum = !Float.isNaN(mAxisRight.getAxisMinValue()) ? mAxisRight.getAxisMinValue() : (minRight - bottomSpaceRight);\n+            mAxisRight.mAxisMaximum = !Float.isNaN(mAxisRight.getAxisMaxValue()) ? mAxisRight.getAxisMaxValue() : (maxRight + topSpaceRight);\n+        }\n \n         mAxisLeft.mAxisRange = Math.abs(mAxisLeft.mAxisMaximum - mAxisLeft.mAxisMinimum);\n         mAxisRight.mAxisRange = Math.abs(mAxisRight.mAxisMaximum - mAxisRight.mAxisMinimum);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -100,14 +100,28 @@ protected void calcMinMax() {\n         mXChartMax = mData.getXVals().size() - 1;\n         mDeltaX = Math.abs(mXChartMax - mXChartMin);\n \n-        mYAxis.mAxisMaximum = !Float.isNaN(mYAxis.getAxisMaxValue()) ? mYAxis\n-                .getAxisMaxValue() : maxLeft + topSpaceLeft;\n-        mYAxis.mAxisMinimum = !Float.isNaN(mYAxis.getAxisMinValue()) ? mYAxis\n-                .getAxisMinValue() : minLeft - bottomSpaceLeft;\n-\n-        // consider starting at zero (0)\n-        if (mYAxis.isStartAtZeroEnabled())\n-            mYAxis.mAxisMinimum = Math.min(0f, mYAxis.mAxisMinimum);\n+        if (mYAxis.isStartAtZeroEnabled()) {\n+            if (minLeft < 0.f && maxLeft < 0.f) {\n+                // If the values are all negative, let's stay in the negative zone\n+                mYAxis.mAxisMinimum = Math.min(0.f, !Float.isNaN(mYAxis.getAxisMinValue()) ? mYAxis.getAxisMinValue() : (minLeft - bottomSpaceLeft));\n+                mYAxis.mAxisMaximum = 0.f;\n+            }\n+            else if (minLeft >= 0.0) {\n+                // We have positive values only, stay in the positive zone\n+                mYAxis.mAxisMinimum = 0.f;\n+                mYAxis.mAxisMaximum = Math.max(0.f, !Float.isNaN(mYAxis.getAxisMaxValue()) ? mYAxis.getAxisMaxValue() : (maxLeft + topSpaceLeft));\n+            }\n+            else {\n+                // Stick the minimum to 0.0 or less, and maximum to 0.0 or more (startAtZero for negative/positive at the same time)\n+                mYAxis.mAxisMinimum = Math.min(0.f, !Float.isNaN(mYAxis.getAxisMinValue()) ? mYAxis.getAxisMinValue() : (minLeft - bottomSpaceLeft));\n+                mYAxis.mAxisMaximum = Math.max(0.f, !Float.isNaN(mYAxis.getAxisMaxValue()) ? mYAxis.getAxisMaxValue() : (maxLeft + topSpaceLeft));\n+            }\n+        }\n+        else {\n+            // Use the values as they are\n+            mYAxis.mAxisMinimum = !Float.isNaN(mYAxis.getAxisMinValue()) ? mYAxis.getAxisMinValue() : (minLeft - bottomSpaceLeft);\n+            mYAxis.mAxisMaximum = !Float.isNaN(mYAxis.getAxisMaxValue()) ? mYAxis.getAxisMaxValue() : (maxLeft + topSpaceLeft);\n+        }\n \n         mYAxis.mAxisRange = Math.abs(mYAxis.mAxisMaximum - mYAxis.mAxisMinimum);\n     }",
    "output": "Improved startAtZero logic to ignore spacing when needed\n\nAnd still allow negative ranges when necessary (negative charts, stacked negative etc.)"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -377,8 +377,8 @@ protected void calcMinMax() {\n             if (mAxisLeft.mAxisMinimum < 0f && mAxisLeft.mAxisMaximum < 0f) {\n                 // If the values are all negative, let's stay in the negative zone\n                 mAxisLeft.mAxisMaximum = 0f;\n-            } else {\n-                // We have positive values, stay in the positive zone\n+            } else if (mAxisLeft.mAxisMinimum >= 0f) {\n+                // We have positive values only, stay in the positive zone\n                 mAxisLeft.mAxisMinimum = 0f;\n             }\n         }\n@@ -387,8 +387,8 @@ protected void calcMinMax() {\n             if (mAxisRight.mAxisMinimum < 0.0 && mAxisRight.mAxisMaximum < 0.0) {\n                 // If the values are all negative, let's stay in the negative zone\n                 mAxisRight.mAxisMaximum = 0f;\n-            } else {\n-                // We have positive values, stay in the positive zone\n+            } else if (mAxisRight.mAxisMinimum >= 0f) {\n+                // We have positive values only, stay in the positive zone\n                 mAxisRight.mAxisMinimum = 0f;\n             }\n         }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -107,7 +107,7 @@ protected void calcMinMax() {\n \n         // consider starting at zero (0)\n         if (mYAxis.isStartAtZeroEnabled())\n-            mYAxis.mAxisMinimum = 0f;\n+            mYAxis.mAxisMinimum = Math.min(0f, mYAxis.mAxisMinimum);\n \n         mYAxis.mAxisRange = Math.abs(mYAxis.mAxisMaximum - mYAxis.mAxisMinimum);\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n@@ -82,7 +82,13 @@ protected void computeAxisValues(float min, float max) {\n \n \t\t\t} else {\n \n-\t\t\t\tdouble first = Math.ceil(yMin / interval) * interval;\n+\t\t\t\tfinal double rawCount = yMin / interval;\n+\t\t\t\tdouble first = rawCount < 0.0 ? Math.floor(rawCount) * interval : Math.ceil(rawCount) * interval;\n+\n+\t\t\t\tif (first < yMin && mYAxis.isStartAtZeroEnabled()) {\n+\t\t\t\t\t// Force the first label to be at the 0 (or smallest negative value)\n+\t\t\t\t\tfirst = yMin;\n+\t\t\t\t}\n \n \t\t\t\tif (first == 0.0) // Fix for IEEE negative zero case (Where value == -0.0, and 0.0 == -0.0)\n \t\t\t\t\tfirst = 0.0;\n@@ -118,6 +124,12 @@ protected void computeAxisValues(float min, float max) {\n \t\t\tmYAxis.mDecimals = 0;\n \t\t}\n \n+\t\tif (!mYAxis.isStartAtZeroEnabled() && mYAxis.mEntries[0] < yMin) {\n+\t\t\t// If startAtZero is disabled, and the first label is lower that the axis minimum,\n+\t\t\t// Then adjust the axis minimum\n+\t\t\tmYAxis.mAxisMinimum = mYAxis.mEntries[0];\n+\t\t}\n+\n \t\tmYAxis.mAxisMaximum = mYAxis.mEntries[mYAxis.mEntryCount - 1];\n \t\tmYAxis.mAxisRange = Math.abs(mYAxis.mAxisMaximum - mYAxis.mAxisMinimum);\n \t}",
    "output": "Merge pull request #943 from danielgindi/y-axis-negative-fixes"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n@@ -82,7 +82,13 @@ protected void computeAxisValues(float min, float max) {\n \n \t\t\t} else {\n \n-\t\t\t\tdouble first = Math.ceil(yMin / interval) * interval;\n+\t\t\t\tfinal double rawCount = yMin / interval;\n+\t\t\t\tdouble first = rawCount < 0.0 ? Math.floor(rawCount) * interval : Math.ceil(rawCount) * interval;\n+\n+\t\t\t\tif (first < yMin && mYAxis.isStartAtZeroEnabled()) {\n+\t\t\t\t\t// Force the first label to be at the 0 (or smallest negative value)\n+\t\t\t\t\tfirst = yMin;\n+\t\t\t\t}\n \n \t\t\t\tif (first == 0.0) // Fix for IEEE negative zero case (Where value == -0.0, and 0.0 == -0.0)\n \t\t\t\t\tfirst = 0.0;\n@@ -118,6 +124,12 @@ protected void computeAxisValues(float min, float max) {\n \t\t\tmYAxis.mDecimals = 0;\n \t\t}\n \n+\t\tif (!mYAxis.isStartAtZeroEnabled() && mYAxis.mEntries[0] < yMin) {\n+\t\t\t// If startAtZero is disabled, and the first label is lower that the axis minimum,\n+\t\t\t// Then adjust the axis minimum\n+\t\t\tmYAxis.mAxisMinimum = mYAxis.mEntries[0];\n+\t\t}\n+\n \t\tmYAxis.mAxisMaximum = mYAxis.mEntries[mYAxis.mEntryCount - 1];\n \t\tmYAxis.mAxisRange = Math.abs(mYAxis.mAxisMaximum - mYAxis.mAxisMinimum);\n \t}",
    "output": "Prevent yAxis in radar charts from bleeding into another x index on the other side"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -377,8 +377,8 @@ protected void calcMinMax() {\n             if (mAxisLeft.mAxisMinimum < 0f && mAxisLeft.mAxisMaximum < 0f) {\n                 // If the values are all negative, let's stay in the negative zone\n                 mAxisLeft.mAxisMaximum = 0f;\n-            } else {\n-                // We have positive values, stay in the positive zone\n+            } else if (mAxisLeft.mAxisMinimum >= 0f) {\n+                // We have positive values only, stay in the positive zone\n                 mAxisLeft.mAxisMinimum = 0f;\n             }\n         }\n@@ -387,8 +387,8 @@ protected void calcMinMax() {\n             if (mAxisRight.mAxisMinimum < 0.0 && mAxisRight.mAxisMaximum < 0.0) {\n                 // If the values are all negative, let's stay in the negative zone\n                 mAxisRight.mAxisMaximum = 0f;\n-            } else {\n-                // We have positive values, stay in the positive zone\n+            } else if (mAxisRight.mAxisMinimum >= 0f) {\n+                // We have positive values only, stay in the positive zone\n                 mAxisRight.mAxisMinimum = 0f;\n             }\n         }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -107,7 +107,7 @@ protected void calcMinMax() {\n \n         // consider starting at zero (0)\n         if (mYAxis.isStartAtZeroEnabled())\n-            mYAxis.mAxisMinimum = 0f;\n+            mYAxis.mAxisMinimum = Math.min(0f, mYAxis.mAxisMinimum);\n \n         mYAxis.mAxisRange = Math.abs(mYAxis.mAxisMaximum - mYAxis.mAxisMinimum);\n     }",
    "output": "Handle negative values when startAtZeroEnabled"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -64,7 +64,7 @@ public abstract class DataSet<T extends Entry> {\n     private Typeface mValueTypeface;\n \n     /** custom formatter that is used instead of the auto-formatter if set */\n-    protected ValueFormatter mValueFormatter;\n+    protected transient ValueFormatter mValueFormatter;\n \n     /** this specifies which axis this DataSet should be plotted against */\n     protected AxisDependency mAxisDependency = AxisDependency.LEFT;",
    "output": "Merge pull request #920 from dakotasanchez/valueformatter-fix\n\nDo not serialize ValueFormatter interface member variable"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -64,7 +64,7 @@ public abstract class DataSet<T extends Entry> {\n     private Typeface mValueTypeface;\n \n     /** custom formatter that is used instead of the auto-formatter if set */\n-    protected ValueFormatter mValueFormatter;\n+    protected transient ValueFormatter mValueFormatter;\n \n     /** this specifies which axis this DataSet should be plotted against */\n     protected AxisDependency mAxisDependency = AxisDependency.LEFT;",
    "output": "Do not serialize ValueFormetter interface member variable"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n@@ -76,18 +76,8 @@ protected void calcMinMax() {\n \t\t// extend xDelta to make space for multiple datasets (if ther are one)\n \t\tmDeltaX *= mData.getDataSetCount();\n \n-\t\tint maxEntry = 0;\n-\n-\t\tfor (int i = 0; i < mData.getDataSetCount(); i++) {\n-\n-\t\t\tDataSet<? extends Entry> set = mData.getDataSetByIndex(i);\n-\n-\t\t\tif (maxEntry < set.getEntryCount())\n-\t\t\t\tmaxEntry = set.getEntryCount();\n-\t\t}\n-\n \t\tfloat groupSpace = mData.getGroupSpace();\n-\t\tmDeltaX += maxEntry * groupSpace;\n+\t\tmDeltaX += mData.getXValCount() * groupSpace;\n \t\tmXChartMax = mDeltaX - mXChartMin;\n \t}\n ",
    "output": "Minor fix in BarChart"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n@@ -67,8 +67,9 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         mChart.setDrawHoleEnabled(true);\n         mChart.setHoleColorTransparent(true);\n-        \n+\n         mChart.setTransparentCircleColor(Color.WHITE);\n+        mChart.setTransparentCircleAlpha(110);\n         \n         mChart.setHoleRadius(58f);\n         mChart.setTransparentCircleRadius(61f);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -3,6 +3,7 @@\n \n import android.content.Context;\n import android.graphics.Canvas;\n+import android.graphics.Paint;\n import android.graphics.PointF;\n import android.graphics.PorterDuff;\n import android.graphics.PorterDuffXfermode;\n@@ -66,7 +67,7 @@ public class PieChart extends PieRadarChartBase<PieData> {\n     /**\n      * the radius of the transparent circle next to the chart-hole in the center\n      */\n-    private float mTransparentCircleRadiusPercent = 55f;\n+    protected float mTransparentCircleRadiusPercent = 55f;\n \n     /** if enabled, centertext is drawn */\n     private boolean mDrawCenterText = true;\n@@ -455,8 +456,16 @@ public float getHoleRadius() {\n         return mHoleRadiusPercent;\n     }\n \n+    /**\n+     * Sets the color the transparent-circle should have.\n+     * @param color\n+     */\n     public void setTransparentCircleColor(int color) {\n-        ((PieChartRenderer) mRenderer).getPaintTransparentCircle().setColor(color);\n+\n+        Paint p = ((PieChartRenderer) mRenderer).getPaintTransparentCircle();\n+        int alpha = p.getAlpha();\n+        p.setColor(color);\n+        p.setAlpha(alpha);\n     }\n \n     /**\n@@ -475,6 +484,17 @@ public float getTransparentCircleRadius() {\n         return mTransparentCircleRadiusPercent;\n     }\n \n+\t/**\n+\t * Sets the amount of transparency the transparent circle should have 0 = fully transparent, 255 = fully opaque.\n+     * Default value is 100.\n+\t * \n+\t * @param alpha\n+\t *            0-255\n+\t */\n+\tpublic void setTransparentCircleAlpha(int alpha) {\n+\t\t((PieChartRenderer) mRenderer).getPaintTransparentCircle().setAlpha(alpha);\n+\t}\n+\n     /**\n      * set this to true to draw the x-value text into the pie slices\n      * \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -63,6 +63,7 @@ public PieChartRenderer(PieChart chart, ChartAnimator animator,\n         mTransparentCirclePaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n         mTransparentCirclePaint.setColor(Color.WHITE);\n         mTransparentCirclePaint.setStyle(Style.FILL);\n+        mTransparentCirclePaint.setAlpha(100);\n \n         mCenterTextPaint = new TextPaint(Paint.ANTI_ALIAS_FLAG);\n         mCenterTextPaint.setColor(Color.BLACK);\n@@ -260,16 +261,16 @@ protected void drawHole(Canvas c) {\n             if (transparentCircleRadius > holeRadius && mAnimator.getPhaseX() >= 1f\n                     && mAnimator.getPhaseY() >= 1f) {\n \n-                int color = mTransparentCirclePaint.getColor();\n+                //int color = mTransparentCirclePaint.getColor();\n \n                 // make transparent\n-                mTransparentCirclePaint.setColor(color & 0x60FFFFFF);\n+                //mTransparentCirclePaint.setColor(color & 0x60FFFFFF);\n \n                 // draw the transparent-circle\n                 mBitmapCanvas.drawCircle(center.x, center.y,\n                         radius / 100 * transparentCircleRadius, mTransparentCirclePaint);\n \n-                mTransparentCirclePaint.setColor(color);\n+                //mTransparentCirclePaint.setColor(color);\n             }\n \n             // draw the hole-circle",
    "output": "Allow setting transparency amout for transparent circle / hole (#902)."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -531,10 +531,8 @@ protected float[] getMarkerPosition(Entry e, Highlight highlight) {\n \n             BarData bd = (BarData) mData;\n             float space = bd.getGroupSpace();\n-            float j = mData.getDataSetByIndex(dataSetIndex)\n-                    .getEntryPosition(e);\n \n-            float x = (j * (mData.getDataSetCount() - 1)) + dataSetIndex + space * j + space\n+            float x = e.getXIndex() * (mData.getDataSetCount() - 1) + dataSetIndex + space * e.getXIndex() + space\n                     / 2f;\n \n             xPos += x;",
    "output": "Fix markerposition for grouped bars"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -370,13 +370,6 @@ protected void calculateFormatter(float min, float max) {\n     /** flag that indicates if offsets calculation has already been done or not */\n     private boolean mOffsetsCalculated = false;\n \n-    /**\n-     * Bitmap object used for drawing. This is necessary because hardware\n-     * acceleration uses OpenGL which only allows a specific texture size to be\n-     * drawn on the canvas directly.\n-     **/\n-    protected Bitmap mDrawBitmap;\n-\n     /** paint object used for drawing the bitmap */\n     protected Paint mDrawPaint;\n \n@@ -1594,12 +1587,7 @@ protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n             Log.i(LOG_TAG, \"OnSizeChanged()\");\n \n         if (w > 0 && h > 0 && w < 10000 && h < 10000) {\n-            // create a new bitmap with the new dimensions\n-\n-            if (mDrawBitmap != null)\n-                mDrawBitmap.recycle();\n \n-            mDrawBitmap = Bitmap.createBitmap(w, h, Bitmap.Config.ARGB_4444);\n             mViewPortHandler.setChartDimens(w, h);\n \n             if (mLogEnabled)\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n@@ -35,20 +35,13 @@ protected void init() {\n         super.init();\n \n         mRenderer = new LineChartRenderer(this, mAnimator, mViewPortHandler);\n-        \n         mFillFormatter = new DefaultFillFormatter();\n     }\n \n     @Override\n     protected void calcMinMax() {\n         super.calcMinMax();\n \n-        // // if there is only one value in the chart\n-        // if (mOriginalData.getYValCount() == 1\n-        // || mOriginalData.getYValCount() <= mOriginalData.getDataSetCount()) {\n-        // mDeltaX = 1;\n-        // }\n-\n         if (mDeltaX == 0 && mData.getYValCount() > 0)\n             mDeltaX = 1;\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -113,8 +113,6 @@ protected void onDraw(Canvas canvas) {\n         mLegendRenderer.renderLegend(canvas);\n \n         drawDescription(canvas);\n-\n-        // canvas.drawBitmap(mDrawBitmap, 0, 0, mDrawPaint);\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java\n@@ -46,18 +46,6 @@ protected void init() {\n         mXChartMin = -0.5f;\n     }\n \n-    // @Override\n-    // public void calculateOffsets() {\n-    // super.calculateOffsets();\n-    //\n-    // float offset = mData.getGreatestShapeSize() / 2f;\n-    // mViewPortHandler.restrainViewPort(mViewPortHandler.offsetLeft() - offset,\n-    // mViewPortHandler.offsetTop(), mViewPortHandler.offsetRight() - offset,\n-    // mViewPortHandler.offsetBottom());\n-    //\n-    // prepareOffsetMatrix();\n-    // }\n-\n     @Override\n     protected void calcMinMax() {\n         super.calcMinMax();",
    "output": "Code cleanup (#900)."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n@@ -238,21 +238,15 @@ public void onStopTrackingTouch(SeekBar seekBar) {\n \n     private void setData(int count, float range) {\n \n-        ArrayList<String> xVals = new ArrayList<String>();\n-        for (int i = 0; i < count; i++) {\n-            xVals.add(mMonths[i % 12]);\n-        }\n-\n         ArrayList<BarEntry> yVals1 = new ArrayList<BarEntry>();\n+        ArrayList<String> xVals = new ArrayList<String>();\n \n         for (int i = 0; i < count; i++) {\n-            float mult = (range + 1);\n-            float val = (float) (Math.random() * mult);\n-            yVals1.add(new BarEntry(val, i));\n+            xVals.add(mMonths[i % 12]);\n+            yVals1.add(new BarEntry((float) (Math.random() * range), i));\n         }\n \n-        BarDataSet set1 = new BarDataSet(yVals1, \"DataSet\");\n-        set1.setBarSpacePercent(35f);\n+        BarDataSet set1 = new BarDataSet(yVals1, \"DataSet 1\");\n \n         ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();\n         dataSets.add(set1);\n@@ -261,7 +255,6 @@ private void setData(int count, float range) {\n         data.setValueTextSize(10f);\n         data.setValueTypeface(tf);\n \n-        mChart.setDrawValueAboveBar(false);\n         mChart.setData(data);\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java b/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java\n@@ -56,8 +56,8 @@ public void feed(List<BarEntry> entries) {\n             BarEntry e = entries.get(i);\n \n             // calculate the x-position, depending on datasetcount\n-            float x = e.getXIndex() + i * dataSetOffset + mDataSetIndex\n-                    + mGroupSpace * i + groupSpaceHalf;\n+            float x = e.getXIndex() + e.getXIndex() * dataSetOffset + mDataSetIndex\n+                    + mGroupSpace * e.getXIndex() + groupSpaceHalf;\n             float y = e.getVal();\n             float [] vals = e.getVals();\n                 \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java b/MPChartLib/src/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java\n@@ -26,8 +26,8 @@ public void feed(List<BarEntry> entries) {\n             BarEntry e = entries.get(i);\n \n             // calculate the x-position, depending on datasetcount\n-            float x = e.getXIndex() + i * dataSetOffset + mDataSetIndex\n-                    + mGroupSpace * i + groupSpaceHalf;\n+            float x = e.getXIndex() + e.getXIndex() * dataSetOffset + mDataSetIndex\n+                    + mGroupSpace * e.getXIndex() + groupSpaceHalf;\n             float y = e.getVal();\n             float[] vals = e.getVals();\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n@@ -224,9 +224,10 @@ public float[] generateTransformedValuesBarChart(List<? extends Entry> entries,\n         for (int j = 0; j < valuePoints.length; j += 2) {\n \n             Entry e = entries.get(j / 2);\n+            int i = e.getXIndex();\n \n             // calculate the x-position, depending on datasetcount\n-            float x = e.getXIndex() + (j / 2 * (setCount - 1)) + dataSet + space * (j / 2)\n+            float x = e.getXIndex() + i * (setCount - 1) + dataSet + space * i\n                     + space / 2f;\n             float y = e.getVal();\n \n@@ -258,9 +259,10 @@ public float[] generateTransformedValuesHorizontalBarChart(List<? extends Entry>\n         for (int j = 0; j < valuePoints.length; j += 2) {\n \n             Entry e = entries.get(j / 2);\n+            int i = e.getXIndex();\n \n             // calculate the x-position, depending on datasetcount\n-            float x = e.getXIndex() + (j / 2 * (setCount - 1)) + dataSet + space * (j / 2)\n+            float x = e.getXIndex() + i * (setCount - 1) + dataSet + space * i\n                     + space / 2f ;\n             float y = e.getVal();\n ",
    "output": "Fixed issue concerning grouped-barchart (issue danielgindi/ios-charts#242)"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -129,9 +129,6 @@ protected void calcMinMax(int start, int end) {\n \n         for (int i = start; i <= endValue; i++) {\n \n-            if(i >= mYVals.size())\n-                break;\n-\n             Entry e = mYVals.get(i);\n \n             if (e != null && !Float.isNaN(e.getVal())) {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java b/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java\n--- a/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java\n@@ -99,18 +99,14 @@ protected Highlight getStackedHighlight(Highlight old, BarDataSet set, int xInde\n \n \t\tBarEntry entry = set.getEntryForXIndex(xIndex);\n \n-\t\tif (entry.getVals() == null)\n+\t\tif (entry == null || entry.getVals() == null)\n \t\t\treturn old;\n \n-\t\tif (entry != null) {\n+\t\tRange[] ranges = getRanges(entry);\n+\t\tint stackIndex = getClosestStackIndex(ranges, (float) yValue);\n \n-\t\t\tRange[] ranges = getRanges(entry);\n-\t\t\tint stackIndex = getClosestStackIndex(ranges, (float) yValue);\n-\n-\t\t\tHighlight h = new Highlight(xIndex, dataSetIndex, stackIndex, ranges[stackIndex]);\n-\t\t\treturn h;\n-\t\t} else\n-\t\t\treturn null;\n+\t\tHighlight h = new Highlight(xIndex, dataSetIndex, stackIndex, ranges[stackIndex]);\n+\t\treturn h;\n \t}\n \n \t/**",
    "output": "More fixes."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n@@ -204,7 +204,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n \t\t\tyVals1.add(new BarEntry(new float[] { val1, val2, val3 }, i));\n \t\t}\n \n-\t\tBarDataSet set1 = new BarDataSet(yVals1, \"Statistics Vienna 2015\");\n+\t\tBarDataSet set1 = new BarDataSet(yVals1, \"Statistics Vienna 2014\");\n \t\tset1.setColors(getColors());\n \t\tset1.setStackLabels(new String[] { \"Births\", \"Divorces\", \"Marriages\" });\n \n@@ -221,19 +221,21 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n \t@Override\n \tpublic void onStartTrackingTouch(SeekBar seekBar) {\n \t\t// TODO Auto-generated method stub\n+\n \t}\n \n \t@Override\n \tpublic void onStopTrackingTouch(SeekBar seekBar) {\n \t\t// TODO Auto-generated method stub\n+\n \t}\n \n \t@Override\n \tpublic void onValueSelected(Entry e, int dataSetIndex, Highlight h) {\n \n \t\tBarEntry entry = (BarEntry) e;\n \n-\t\tif (entry.isStacked())\n+\t\tif (entry.getVals() != null)\n \t\t\tLog.i(\"VAL SELECTED\", \"Value: \" + entry.getVals()[h.getStackIndex()]);\n \t\telse\n \t\t\tLog.i(\"VAL SELECTED\", \"Value: \" + entry.getVal());\n@@ -242,6 +244,7 @@ public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {\n \t@Override\n \tpublic void onNothingSelected() {\n \t\t// TODO Auto-generated method stub\n+\n \t}\n \n \tprivate int[] getColors() {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java b/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java\n@@ -85,7 +85,7 @@ public void feed(List<BarEntry> entries) {\n             } else {\n \n                 float posY = 0f;\n-                float negY = 0f;\n+                float negY = -e.getNegativeSum();\n                 float yStart = 0f;\n \n                 // fill the stack\n@@ -99,8 +99,8 @@ public void feed(List<BarEntry> entries) {\n                         posY = yStart;\n                     } else {\n                         y = negY;\n-                        yStart = negY + value;\n-                        negY = yStart;\n+                        yStart = negY + Math.abs(value);\n+                        negY += Math.abs(value);\n                     }\n \n                     float left = x - barWidth + barSpaceHalf;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -262,7 +262,7 @@ public void drawValues(Canvas c) {\n                             float[] transformed = new float[vals.length * 2];\n \n                             float posY = 0f;\n-                            float negY = 0f;\n+                            float negY = -e.getNegativeSum();\n \n                             for (int k = 0, idx = 0; k < transformed.length; k += 2, idx++) {\n \n@@ -273,8 +273,8 @@ public void drawValues(Canvas c) {\n                                     posY += value;\n                                     y = posY;\n                                 } else {\n-                                    negY += value;\n                                     y = negY;\n+                                    negY -= value;\n                                 }\n \n                                 transformed[k + 1] = y * mAnimator.getPhaseY();",
    "output": "Fixed issue in vertical stacked bars"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n@@ -207,16 +207,10 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 break;\n             }\n             case R.id.actionToggleBarValues: {\n-//                for (DataSet<?> set : mChart.getData().getDataSets()) {\n-//                    if (set instanceof BarDataSet)\n-//                        set.setDrawValues(!set.isDrawValuesEnabled());\n-//                }\n-\n-                CombinedData data = new CombinedData(mMonths);\n-\n-                data.setData(generateLineData());\n-\n-                mChart.setData(data);\n+                for (DataSet<?> set : mChart.getData().getDataSets()) {\n+                    if (set instanceof BarDataSet)\n+                        set.setDrawValues(!set.isDrawValuesEnabled());\n+                }\n \n                 mChart.invalidate();\n                 break;",
    "output": "Undo testing changes"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -129,6 +129,9 @@ protected void calcMinMax(int start, int end) {\n \n         for (int i = start; i <= endValue; i++) {\n \n+            if(i >= mYVals.size())\n+                break;\n+\n             Entry e = mYVals.get(i);\n \n             if (e != null && !Float.isNaN(e.getVal())) {\n@@ -249,7 +252,7 @@ public int getEntryIndex(int x) {\n      * does calculations at runtime. Do not over-use in performance critical\n      * situations.\n      * \n-     * @param xIndex\n+     * @param x\n      * @return\n      */\n     public List<T> getEntriesForXIndex(int x) {",
    "output": "Fixed #868"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n@@ -248,7 +248,7 @@ private void setData(int count, float range) {\n         for (int i = 0; i < count; i++) {\n             float mult = (range + 1);\n             float val = (float) (Math.random() * mult);\n-            yVals1.add(new BarEntry(new float[] {val, val+5, val+5,val+5}, i));\n+            yVals1.add(new BarEntry(val, i));\n         }\n \n         BarDataSet set1 = new BarDataSet(yVals1, \"DataSet\");",
    "output": "Code cleanup."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java\n@@ -93,7 +93,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         set.setValueFormatter(new CustomFormatter());\n         set.setValueTextSize(7f);\n         set.setAxisDependency(YAxis.AxisDependency.RIGHT);\n-        set.setBarSpacePercent(50f);\n+        set.setBarSpacePercent(40f);\n         set.setColors(new int[] {Color.rgb(67,67,72), Color.rgb(124,181,236)});\n         set.setStackLabels(new String[]{\n                 \"Men\", \"Women\"\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java b/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java\n--- a/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/highlight/BarHighlighter.java\n@@ -102,24 +102,26 @@ protected Highlight getStackedHighlight(BarDataSet set, int xIndex, int dataSetI\n         BarEntry entry = set.getEntryForXIndex(xIndex);\n \n         if (entry != null) {\n-            int stackIndex = getClosestStackIndex(entry, (float) yValue);\n-            Highlight h = new Highlight(xIndex, dataSetIndex, stackIndex);\n+\n+            Range[] ranges = getRanges(entry);\n+            int stackIndex = getClosestStackIndex(ranges, (float) yValue);\n+\n+            Highlight h = new Highlight(xIndex, dataSetIndex, stackIndex, ranges[stackIndex]);\n             return h;\n         } else\n             return null;\n     }\n \n     /**\n-     * Returns the index of the closest value inside the values array (for stacked barchart)\n+     * Returns the index of the closest value inside the values array / ranges (stacked barchart)\n      * to the value given as a parameter.\n      *\n-     * @param e\n+     * @param ranges\n      * @param value\n      * @return\n      */\n-    protected int getClosestStackIndex(BarEntry e, float value) {\n+    protected int getClosestStackIndex(Range[] ranges, float value) {\n \n-        Range[] ranges = getRanges(e);\n         int stackIndex = 0;\n \n         for(Range range : ranges) {\n@@ -175,9 +177,18 @@ protected float getBase(float x) {\n         return baseNoSpace;\n     }\n \n+    /**\n+     * Splits up the stack-values of the given bar-entry into Range objects.\n+     * @param entry\n+     * @return\n+     */\n     protected Range[] getRanges(BarEntry entry) {\n \n         float[] values = entry.getVals();\n+\n+        if(values == null)\n+            return null;\n+\n         float negRemain = -entry.getNegativeSum();\n         float posRemain = 0f;\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/highlight/Highlight.java b/MPChartLib/src/com/github/mikephil/charting/highlight/Highlight.java\n--- a/MPChartLib/src/com/github/mikephil/charting/highlight/Highlight.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/highlight/Highlight.java\n@@ -17,11 +17,13 @@ public class Highlight {\n     /** index which value of a stacked bar entry is highlighted, default -1 */\n     private int mStackIndex = -1;\n \n+    /** the range of the bar that is selected (only for stacked-barchart) */\n+    private Range mRange;\n+\n     /**\n      * constructor\n      * \n      * @param x the index of the highlighted value on the x-axis\n-     * @param val the value at the position the user touched\n      * @param dataSet the index of the DataSet the highlighted value belongs to\n      */\n     public Highlight(int x, int dataSet) {\n@@ -33,7 +35,6 @@ public Highlight(int x, int dataSet) {\n      * Constructor, only used for stacked-barchart.\n      * \n      * @param x the index of the highlighted value on the x-axis\n-     * @param val the value at the position the user touched\n      * @param dataSet the index of the DataSet the highlighted value belongs to\n      * @param stackIndex references which value of a stacked-bar entry has been\n      *            selected\n@@ -43,6 +44,20 @@ public Highlight(int x, int dataSet, int stackIndex) {\n         mStackIndex = stackIndex;\n     }\n \n+    /**\n+     * Constructor, only used for stacked-barchart.\n+     *\n+     * @param x the index of the highlighted value on the x-axis\n+     * @param dataSet the index of the DataSet the highlighted value belongs to\n+     * @param stackIndex references which value of a stacked-bar entry has been\n+     *            selected\n+     * @param range the range the selected stack-value is in\n+     */\n+    public Highlight(int x, int dataSet, int stackIndex, Range range) {\n+        this(x, dataSet, stackIndex);\n+        this.mRange = range;\n+    }\n+\n     /**\n      * returns the index of the DataSet the highlighted value is in\n      * \n@@ -71,6 +86,14 @@ public int getStackIndex() {\n         return mStackIndex;\n     }\n \n+    /**\n+     * Returns the range of values the selected value of a stacked bar is in. (this is only relevant for stacked-barchart)\n+     * @return\n+     */\n+    public Range getRange() {\n+        return mRange;\n+    }\n+\n     /**\n      * returns true if this highlight object is equal to the other (compares\n      * xIndex and dataSetIndex)\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/highlight/Range.java b/MPChartLib/src/com/github/mikephil/charting/highlight/Range.java\n--- a/MPChartLib/src/com/github/mikephil/charting/highlight/Range.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/highlight/Range.java\n@@ -6,8 +6,8 @@\n  */\n public final class Range {\n \n-    float from;\n-    float to;\n+    public float from;\n+    public float to;\n \n     public Range(float from, float to) {\n         this.from = from;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -317,10 +317,6 @@ protected void drawValue(Canvas c, String value, float xPos, float yPos) {\n                 mValuePaint);\n     }\n \n-    @Override\n-    public void drawExtras(Canvas c) {\n-    }\n-\n     @Override\n     public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n@@ -364,8 +360,8 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n                 final float y2;\n \n                 if (isStack) {\n-                    y1 = e.getPositiveSum();\n-                    y2 = -e.getNegativeSum();\n+                    y1 = h.getRange().from;\n+                    y2 = h.getRange().to * mAnimator.getPhaseY();\n                 } else {\n                     y1 = e.getVal();\n                     y2 = 0.f;\n@@ -414,4 +410,7 @@ protected boolean passesCheck() {\n         return mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount()\n                 * mViewPortHandler.getScaleX();\n     }\n+\n+    @Override\n+    public void drawExtras(Canvas c) { }\n }",
    "output": "Improvements and bugfixes concerning highlighting."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n@@ -223,7 +223,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n         ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();\n         dataSets.add(set1);\n         dataSets.add(set2);\n-       // dataSets.add(set3);\n+        dataSets.add(set3);\n \n         BarData data = new BarData(xVals, dataSets);\n //        data.setValueFormatter(new LargeValueFormatter());",
    "output": "Minor fix in example."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -109,13 +109,15 @@ public void notifyDataSetChanged() {\n      * calc minimum and maximum y value\n      */\n     protected void calcMinMax(int start, int end) {\n-        if (mYVals.size() == 0)\n+        final int yValCount = mYVals.size();\n+\n+        if (yValCount == 0)\n             return;\n \n         int endValue;\n \n-        if (end == 0 || end >= mYVals.size())\n-            endValue = mYVals.size() - 1;\n+        if (end == 0 || end >= yValCount)\n+            endValue = yValCount - 1;\n         else\n             endValue = end;\n ",
    "output": "Removed redundant calls"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -114,7 +114,7 @@ protected void calcMinMax(int start, int end) {\n \n         int endValue;\n \n-        if (end == 0)\n+        if (end == 0 || end >= mYVals.size())\n             endValue = mYVals.size() - 1;\n         else\n             endValue = end;",
    "output": "Fixed a crash when removing an entry"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java b/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java\n@@ -84,39 +84,39 @@ public void feed(List<BarEntry> entries) {\n \n             } else {\n \n-                float allPos = e.getPositiveSum();\n-                float allNeg = e.getNegativeSum();\n+                float posY = 0f;\n+                float negY = 0f;\n+                float yStart = 0f;\n \n                 // fill the stack\n                 for (int k = 0; k < vals.length; k++) {\n \n                     float value = vals[k];\n \n                     if(value >= 0f) {\n-\n-                        allPos -= value;\n-                        y = value + allPos;\n+                        y = posY;\n+                        yStart = posY + value;\n+                        posY = yStart;\n                     } else {\n-                        allNeg -= Math.abs(value);\n-                        y = value + allNeg;\n+                        y = negY;\n+                        yStart = negY + value;\n+                        negY = yStart;\n                     }\n \n                     float left = x - barWidth + barSpaceHalf;\n                     float right = x + barWidth - barSpaceHalf;\n                     float bottom, top;\n                     if (mInverted) {\n-                        bottom = y >= 0 ? y : 0;\n-                        top = y <= 0 ? y : 0;\n+                        bottom = y >= yStart ? y : yStart;\n+                        top = y <= yStart ? y : yStart;\n                     } else {\n-                        top = y >= 0 ? y : 0;\n-                        bottom = y <= 0 ? y : 0;\n+                        top = y >= yStart ? y : yStart;\n+                        bottom = y <= yStart ? y : yStart;\n                     }\n \n                     // multiply the height of the rect with the phase\n-                    if (top > 0)\n-                        top *= phaseY;\n-                    else\n-                        bottom *= phaseY;\n+                    top *= phaseY;\n+                    bottom *= phaseY;\n \n                     addBar(left, top, right, bottom);\n                 }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java b/MPChartLib/src/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java\n@@ -54,39 +54,39 @@ public void feed(List<BarEntry> entries) {\n \n             } else {\n \n-                float allPos = e.getPositiveSum();\n-                float allNeg = e.getNegativeSum();\n+                float posY = 0f;\n+                float negY = 0f;\n+                float yStart = 0f;\n \n                 // fill the stack\n                 for (int k = 0; k < vals.length; k++) {\n \n                     float value = vals[k];\n \n                     if(value >= 0f) {\n-\n-                        allPos -= value;\n-                        y = value + allPos;\n+                        y = posY;\n+                        yStart = posY + value;\n+                        posY = yStart;\n                     } else {\n-                        allNeg -= Math.abs(value);\n-                        y = value + allNeg;\n+                        y = negY;\n+                        yStart = negY + value;\n+                        negY = yStart;\n                     }\n \n                     float bottom = x - barWidth + barSpaceHalf;\n                     float top = x + barWidth - barSpaceHalf;\n                     float left, right;\n                     if (mInverted) {\n-                        left = y >= 0 ? y : 0;\n-                        right = y <= 0 ? y : 0;\n+                        left = y >= yStart ? y : yStart;\n+                        right = y <= yStart ? y : yStart;\n                     } else {\n-                        right = y >= 0 ? y : 0;\n-                        left = y <= 0 ? y : 0;\n+                        right = y >= yStart ? y : yStart;\n+                        left = y <= yStart ? y : yStart;\n                     }\n \n                     // multiply the height of the rect with the phase\n-                    if (right > 0)\n-                        right *= phaseY;\n-                    else\n-                        left *= phaseY;\n+                    right *= phaseY;\n+                    left *= phaseY;\n \n                     addBar(left, top, right, bottom);\n                 }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -260,21 +260,21 @@ public void drawValues(Canvas c) {\n                         } else {\n \n                             float[] transformed = new float[vals.length * 2];\n-                            float allPos = e.getPositiveSum();\n-                            float allNeg = e.getNegativeSum();\n+\n+                            float posY = 0f;\n+                            float negY = 0f;\n \n                             for (int k = 0, idx = 0; k < transformed.length; k += 2, idx++) {\n \n                                 float value = vals[idx];\n                                 float y;\n \n-                                if(value >= 0f) {\n-\n-                                    allPos -= value;\n-                                    y = value + allPos;\n+                                if (value >= 0f) {\n+                                    posY += value;\n+                                    y = posY;\n                                 } else {\n-                                    allNeg -= Math.abs(value);\n-                                    y = value + allNeg;\n+                                    negY += value;\n+                                    y = negY;\n                                 }\n \n                                 transformed[k + 1] = y * mAnimator.getPhaseY();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n@@ -206,21 +206,21 @@ public void drawValues(Canvas c) {\n                         } else {\n \n                             float[] transformed = new float[vals.length * 2];\n-                            float allPos = e.getPositiveSum();\n-                            float allNeg = e.getNegativeSum();\n+\n+                            float posY = 0f;\n+                            float negY = 0f;\n \n                             for (int k = 0, idx = 0; k < transformed.length; k += 2, idx++) {\n \n                                 float value = vals[idx];\n                                 float y;\n \n-                                if(value >= 0f) {\n-\n-                                    allPos -= value;\n-                                    y = value + allPos;\n+                                if (value >= 0f) {\n+                                    posY += value;\n+                                    y = posY;\n                                 } else {\n-                                    allNeg -= Math.abs(value);\n-                                    y = value + allNeg;\n+                                    negY += value;\n+                                    y = negY;\n                                 }\n \n                                 transformed[k] = y * mAnimator.getPhaseY();",
    "output": "Fixed negative stacked bars when there's more than two values in stack"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -371,11 +371,25 @@ protected void calcMinMax() {\n                 .getAxisMinValue() : minRight - bottomSpaceRight;\n \n         // consider starting at zero (0)\n-        if (mAxisLeft.isStartAtZeroEnabled())\n-            mAxisLeft.mAxisMinimum = 0f;\n+        if (mAxisLeft.isStartAtZeroEnabled()) {\n+            if (mAxisLeft.mAxisMinimum < 0f && mAxisLeft.mAxisMaximum < 0f) {\n+                // If the values are all negative, let's stay in the negative zone\n+                mAxisLeft.mAxisMaximum = 0f;\n+            } else {\n+                // We have positive values, stay in the positive zone\n+                mAxisLeft.mAxisMinimum = 0f;\n+            }\n+        }\n \n-        if (mAxisRight.isStartAtZeroEnabled())\n-            mAxisRight.mAxisMinimum = 0f;\n+        if (mAxisRight.isStartAtZeroEnabled()) {\n+            if (mAxisRight.mAxisMinimum < 0.0 && mAxisRight.mAxisMaximum < 0.0) {\n+                // If the values are all negative, let's stay in the negative zone\n+                mAxisRight.mAxisMaximum = 0f;\n+            } else {\n+                // We have positive values, stay in the positive zone\n+                mAxisRight.mAxisMinimum = 0f;\n+            }\n+        }\n \n         mAxisLeft.mAxisRange = Math.abs(mAxisLeft.mAxisMaximum - mAxisLeft.mAxisMinimum);\n         mAxisRight.mAxisRange = Math.abs(mAxisRight.mAxisMaximum - mAxisRight.mAxisMinimum);",
    "output": "startAtZeroEnabled killed that range when all values are negative"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -203,7 +203,7 @@ public void calcMinMax(int start, int end) {\n             mLastEnd = end;\n \n             mYMin = Float.MAX_VALUE;\n-            mYMax = -Float.MIN_VALUE;\n+            mYMax = -Float.MAX_VALUE;\n \n             for (int i = 0; i < mDataSets.size(); i++) {\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -123,7 +123,7 @@ protected void calcMinMax(int start, int end) {\n         mLastEnd = endValue;\n \n         mYMin = Float.MAX_VALUE;\n-        mYMax = -Float.MIN_VALUE;\n+        mYMax = -Float.MAX_VALUE;\n \n         for (int i = start; i <= endValue; i++) {\n ",
    "output": "Maximum negative value was confused..."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n@@ -122,6 +122,15 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 mChart.notifyDataSetChanged();\n                 break;\n             }\n+            case R.id.actionToggleMakeShadowSameColorAsCandle: {\n+                for (CandleDataSet set : mChart.getData().getDataSets())\n+                {\n+                    set.setShadowColorSameAsCandle(!set.getShadowColorSameAsCandle());\n+                }\n+\n+                mChart.invalidate();\n+                break;\n+            }\n             case R.id.actionToggleStartzero: {\n                 mChart.getAxisLeft().setStartAtZero(!mChart.getAxisLeft().isStartAtZeroEnabled());\n                 mChart.getAxisRight().setStartAtZero(!mChart.getAxisRight().isStartAtZeroEnabled());\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n@@ -22,6 +22,9 @@ public class CandleDataSet extends BarLineScatterCandleDataSet<CandleEntry> {\n     /** the space between the candle entries, default 0.1f (10%) */\n     private float mBodySpace = 0.1f;\n \n+    /** use candle color for the shadow */\n+    private boolean mShadowColorSameAsCandle = false;\n+\n     /** paint style when open <= close */\n     protected Paint.Style mIncreasingPaintStyle = Paint.Style.FILL;\n \n@@ -246,4 +249,22 @@ public int getShadowColor() {\n     public void setShadowColor(int shadowColor) {\n         this.mShadowColor = shadowColor;\n     }\n+\n+    /**\n+     * Is the shadow color same as the candle color?\n+     *\n+     * @return\n+     */\n+    public boolean getShadowColorSameAsCandle() {\n+        return mShadowColorSameAsCandle;\n+    }\n+\n+    /**\n+     * Sets shadow color to be the same color as the candle color\n+     *\n+     * @param shadowColorSameAsCandle\n+     */\n+    public void setShadowColorSameAsCandle(boolean shadowColorSameAsCandle) {\n+        this.mShadowColorSameAsCandle = shadowColorSameAsCandle;\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n@@ -79,6 +79,15 @@ protected void drawDataSet(Canvas c, CandleDataSet dataSet) {\n         int range = (maxx - minx) * 4;\n         int to = (int)Math.ceil((maxx - minx) * phaseX + minx);\n \n+        CandleBodyBuffer bodyBuffer = mBodyBuffers[dataSetIndex];\n+        bodyBuffer.setBodySpace(dataSet.getBodySpace());\n+        bodyBuffer.setPhases(phaseX, phaseY);\n+        bodyBuffer.limitFrom(minx);\n+        bodyBuffer.limitTo(maxx);\n+        bodyBuffer.feed(entries);\n+\n+        trans.pointValuesToPixel(bodyBuffer.buffer);\n+\n         CandleShadowBuffer shadowBuffer = mShadowBuffers[dataSetIndex];\n         shadowBuffer.setPhases(phaseX, phaseY);\n         shadowBuffer.limitFrom(minx);\n@@ -87,29 +96,8 @@ protected void drawDataSet(Canvas c, CandleDataSet dataSet) {\n \n         trans.pointValuesToPixel(shadowBuffer.buffer);\n \n-        mRenderPaint.setStyle(Paint.Style.STROKE);\n-\n-        // If not set, use default functionality for backward compatibility\n-        if (dataSet.getShadowColor() == ColorTemplate.COLOR_NONE) {\n-            mRenderPaint.setColor(dataSet.getColor());\n-        } else {\n-            mRenderPaint.setColor(dataSet.getShadowColor());\n-        }\n-\n         mRenderPaint.setStrokeWidth(dataSet.getShadowWidth());\n \n-        // draw the shadow\n-        c.drawLines(shadowBuffer.buffer, 0, range, mRenderPaint);\n-\n-        CandleBodyBuffer bodyBuffer = mBodyBuffers[dataSetIndex];\n-        bodyBuffer.setBodySpace(dataSet.getBodySpace());\n-        bodyBuffer.setPhases(phaseX, phaseY);\n-        bodyBuffer.limitFrom(minx);\n-        bodyBuffer.limitTo(maxx);\n-        bodyBuffer.feed(entries);\n-\n-        trans.pointValuesToPixel(bodyBuffer.buffer);\n-\n         // draw the body\n         for (int j = 0; j < range; j += 4) {\n \n@@ -119,6 +107,44 @@ protected void drawDataSet(Canvas c, CandleDataSet dataSet) {\n             if (!fitsBounds(e.getXIndex(), mMinX, to))\n                 continue;\n \n+            if (dataSet.getShadowColorSameAsCandle()) {\n+\n+                if (e.getOpen() > e.getClose())\n+                    mRenderPaint.setColor(\n+                            dataSet.getDecreasingColor() == ColorTemplate.COLOR_NONE ?\n+                                    dataSet.getColor(j) :\n+                                    dataSet.getDecreasingColor()\n+                    );\n+\n+                else if (e.getOpen() < e.getClose())\n+                    mRenderPaint.setColor(\n+                            dataSet.getIncreasingColor() == ColorTemplate.COLOR_NONE ?\n+                                    dataSet.getColor(j) :\n+                                    dataSet.getIncreasingColor()\n+                    );\n+\n+                else\n+                    mRenderPaint.setColor(\n+                            dataSet.getShadowColor() == ColorTemplate.COLOR_NONE ?\n+                                    dataSet.getColor(j) :\n+                                    dataSet.getShadowColor()\n+                    );\n+\n+            } else {\n+                mRenderPaint.setColor(\n+                        dataSet.getShadowColor() == ColorTemplate.COLOR_NONE ?\n+                                dataSet.getColor(j) :\n+                                dataSet.getShadowColor()\n+                );\n+            }\n+\n+            mRenderPaint.setStyle(Paint.Style.STROKE);\n+\n+            // draw the shadow\n+            c.drawLine(shadowBuffer.buffer[j], shadowBuffer.buffer[j + 1],\n+                    shadowBuffer.buffer[j + 2], shadowBuffer.buffer[j + 3],\n+                    mRenderPaint);\n+\n             float leftBody = bodyBuffer.buffer[j];\n             float open = bodyBuffer.buffer[j + 1];\n             float rightBody = bodyBuffer.buffer[j + 2];\n@@ -150,8 +176,7 @@ protected void drawDataSet(Canvas c, CandleDataSet dataSet) {\n                 c.drawRect(leftBody, open, rightBody, close, mRenderPaint);\n             } else { // equal values\n                 \n-                mRenderPaint.setColor(Color.BLACK);\n-                mRenderPaint.setStyle(Paint.Style.STROKE);\n+                mRenderPaint.setColor(dataSet.getShadowColor());\n                 c.drawLine(leftBody, open, rightBody, close, mRenderPaint);\n             }\n         }",
    "output": "Merge pull request #844 from danielgindi/candle-shadow-color\n\nFeature for making candle shadow color same as inc/dec"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -3,6 +3,7 @@\n \n import android.graphics.Canvas;\n import android.graphics.Color;\n+import android.graphics.Matrix;\n import android.graphics.Paint;\n import android.graphics.Path;\n import android.graphics.RectF;\n@@ -382,12 +383,19 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n                     // distance between highlight arrow and bar\n                     float offsetY = mAnimator.getPhaseY() * 0.07f;\n \n+                    float[] values = new float[9];\n+                    trans.getPixelToValueMatrix().getValues(values);\n+                    final float xToYRel = Math.abs(values[Matrix.MSCALE_Y] / values[Matrix.MSCALE_X]);\n+\n+                    final float arrowWidth = set.getBarSpace() / 2.f;\n+                    final float arrowHeight = arrowWidth * xToYRel;\n+\n                     final float yArrow = y1 > -y2 ? y1 : y1;\n \n                     Path arrow = new Path();\n-                    arrow.moveTo(x + 0.5f, yArrow + offsetY * 0.3f);\n-                    arrow.lineTo(x + 0.2f, yArrow + offsetY);\n-                    arrow.lineTo(x + 0.8f, yArrow + offsetY);\n+                    arrow.moveTo(x + 0.4f, yArrow + offsetY);\n+                    arrow.lineTo(x + 0.4f + arrowWidth, yArrow + offsetY - arrowHeight);\n+                    arrow.lineTo(x + 0.4f + arrowWidth, yArrow + offsetY + arrowHeight);\n \n                     trans.pathValueToPixel(arrow);\n                     c.drawPath(arrow, mHighlightPaint);",
    "output": "Fixed highlight arrow height to a sensible size in relation to its width"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n@@ -66,7 +66,7 @@ public void prepareMatrixValuePx(float xChartMin, float deltaX, float deltaY, fl\n     /**\n      * Prepares the matrix that contains all offsets.\n      * \n-     * @param chart\n+     * @param inverted\n      */\n     public void prepareMatrixOffset(boolean inverted) {\n \n@@ -113,7 +113,7 @@ public float[] generateTransformedValuesScatter(List<? extends Entry> entries,\n             }\n         }\n \n-        pointValuesToPixel(valuePoints);\n+        getValueToPixelMatrix().mapPoints(valuePoints);\n \n         return valuePoints;\n     }\n@@ -142,7 +142,7 @@ public float[] generateTransformedValuesBubble(List<? extends Entry> entries,\n             }\n         }\n \n-        pointValuesToPixel(valuePoints);\n+        getValueToPixelMatrix().mapPoints(valuePoints);\n \n         return valuePoints;\n     }\n@@ -171,7 +171,7 @@ public float[] generateTransformedValuesLine(List<? extends Entry> entries,\n             }\n         }\n \n-        pointValuesToPixel(valuePoints);\n+        getValueToPixelMatrix().mapPoints(valuePoints);\n \n         return valuePoints;\n     }\n@@ -200,7 +200,7 @@ public float[] generateTransformedValuesCandle(List<CandleEntry> entries,\n             }\n         }\n \n-        pointValuesToPixel(valuePoints);\n+        getValueToPixelMatrix().mapPoints(valuePoints);\n \n         return valuePoints;\n     }\n@@ -234,7 +234,7 @@ public float[] generateTransformedValuesBarChart(List<? extends Entry> entries,\n             valuePoints[j + 1] = y * phaseY;\n         }\n \n-        pointValuesToPixel(valuePoints);\n+        getValueToPixelMatrix().mapPoints(valuePoints);\n \n         return valuePoints;\n     }\n@@ -268,7 +268,7 @@ public float[] generateTransformedValuesHorizontalBarChart(List<? extends Entry>\n             valuePoints[j + 1] = x;\n         }\n \n-        pointValuesToPixel(valuePoints);\n+        getValueToPixelMatrix().mapPoints(valuePoints);\n \n         return valuePoints;\n     }\n@@ -368,8 +368,10 @@ public void rectValueToPixelHorizontal(RectF r, float phaseY) {\n      */\n     public void rectValuesToPixel(List<RectF> rects) {\n \n+        Matrix m = getValueToPixelMatrix();\n+\n         for (int i = 0; i < rects.size(); i++)\n-            rectValueToPixel(rects.get(i));\n+            m.mapRect(rects.get(i));\n     }\n \n     /**\n@@ -444,6 +446,20 @@ public Matrix getValueMatrix() {\n         return mMatrixValueToPx;\n     }\n \n+    private Matrix mMBuffer1 = new Matrix();\n+    public Matrix getValueToPixelMatrix() {\n+        mMBuffer1.set(mMatrixValueToPx);\n+        mMBuffer1.postConcat(mViewPortHandler.mMatrixTouch);\n+        mMBuffer1.postConcat(mMatrixOffset);\n+        return mMBuffer1;\n+    }\n+\n+    private Matrix mMBuffer2 = new Matrix();\n+    public Matrix getPixelToValueMatrix() {\n+        getValueToPixelMatrix().invert(mMBuffer2);\n+        return mMBuffer2;\n+    }\n+\n     public Matrix getOffsetMatrix() {\n         return mMatrixOffset;\n     }",
    "output": "Avoid making too many multiplications in transformer\n\nEach value takes 3 multiplications (3 matrices), when each Matrix is actually 9 values.\nNow for one value, multiplying 3 time with the matrix (X *= M1, X *= M2, X *= M3)\nWhen you take 10 values - it's 30 multiplications (and X9)\n\nThe new approach pre-multiplies the 3 matrices into 1. So:\nFirst value is multiplied by the matrix, meaning 3 multiplications for the first value (M1 * M2 * M3 * X)\nBut for 10 values, we have 12 multiplications (M = M1 * M2 * M3, M * X1, M * X2, M * X3 ... M * X10)"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -150,20 +150,20 @@ protected void drawDataSet(Canvas c, BarDataSet dataSet, int index) {\n      * Prepares a bar for being highlighted.\n      * \n      * @param x the x-position\n-     * @param y the y-position\n+     * @param y1 the y1-position\n+     * @param y2 the y2-position\n      * @param barspaceHalf the space between bars\n-     * @param from\n      * @param trans\n      */\n-    protected void prepareBarHighlight(float x, float y, float barspaceHalf, float from,\n+    protected void prepareBarHighlight(float x, float y1, float y2, float barspaceHalf,\n             Transformer trans) {\n \n         float barWidth = 0.5f;\n \n         float left = x - barWidth + barspaceHalf;\n         float right = x + barWidth - barspaceHalf;\n-        float top = y >= from ? y : from;\n-        float bottom = y <= from ? y : from;\n+        float top = y1;\n+        float bottom = y2;\n \n         mBarRect.set(left, top, right, bottom);\n \n@@ -359,13 +359,19 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n                 // calculate the correct x-position\n                 float x = index * setCount + dataSetIndex + groupspace / 2f\n                         + groupspace * index;\n-                float y = isStack ? e.getVals()[h.getStackIndex()]\n-                        + e.getBelowSum(h.getStackIndex()) : e.getVal();\n \n-                // this is where the bar starts\n-                float from = isStack ? e.getBelowSum(h.getStackIndex()) : 0f;\n+                final float y1;\n+                final float y2;\n \n-                prepareBarHighlight(x, y, barspaceHalf, from, trans);\n+                if (isStack) {\n+                    y1 = e.getPositiveSum();\n+                    y2 = -e.getNegativeSum();\n+                } else {\n+                    y1 = e.getVal();\n+                    y2 = 0.f;\n+                }\n+\n+                prepareBarHighlight(x, y1, y2, barspaceHalf, trans);\n \n                 c.drawRect(mBarRect, mHighlightPaint);\n \n@@ -376,10 +382,12 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n                     // distance between highlight arrow and bar\n                     float offsetY = mAnimator.getPhaseY() * 0.07f;\n \n+                    final float yArrow = y1 > -y2 ? y1 : y1;\n+\n                     Path arrow = new Path();\n-                    arrow.moveTo(x + 0.5f, y + offsetY * 0.3f);\n-                    arrow.lineTo(x + 0.2f, y + offsetY);\n-                    arrow.lineTo(x + 0.8f, y + offsetY);\n+                    arrow.moveTo(x + 0.5f, yArrow + offsetY * 0.3f);\n+                    arrow.lineTo(x + 0.2f, yArrow + offsetY);\n+                    arrow.lineTo(x + 0.8f, yArrow + offsetY);\n \n                     trans.pathValueToPixel(arrow);\n                     c.drawPath(arrow, mHighlightPaint);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n@@ -266,13 +266,13 @@ public void drawValues(Canvas c) {\n     }\n \n     @Override\n-    protected void prepareBarHighlight(float x, float y, float barspaceHalf, float from,\n+    protected void prepareBarHighlight(float x, float y1, float y2, float barspaceHalf,\n             Transformer trans) {\n \n         float top = x - 0.5f + barspaceHalf;\n         float bottom = x + 0.5f - barspaceHalf;\n-        float left = y >= from ? y : from;\n-        float right = y <= from ? y : from;\n+        float left = y1;\n+        float right = y2;\n \n         mBarRect.set(left, top, right, bottom);\n ",
    "output": "Fixed highlights in negative stacked bar chart"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -189,19 +189,37 @@ public float getYValForXIndex(int xIndex) {\n \n     /**\n      * Returns the first Entry object found at the given xIndex with binary\n-     * search. If the no Entry at the specifed x-index is found, this method\n-     * returns the Entry at the closest x-index. Returns null if no Entry object\n+     * search. If the no Entry at the specified x-index is found, this method\n+     * returns the index at the closest x-index. Returns null if no Entry object\n      * at that index. INFORMATION: This method does calculations at runtime. Do\n      * not over-use in performance critical situations.\n      * \n-     * @param xIndex\n+     * @param x\n      * @return\n      */\n     public T getEntryForXIndex(int x) {\n \n+        int index = getEntryIndex(x);\n+        if (index > -1)\n+            return mYVals.get(index);\n+        return null;\n+    }\n+\n+    /**\n+     * Returns the first Entry index found at the given xIndex with binary\n+     * search. If the no Entry at the specified x-index is found, this method\n+     * returns the index at the closest x-index. Returns -1 if no Entry object\n+     * at that index. INFORMATION: This method does calculations at runtime. Do\n+     * not over-use in performance critical situations.\n+     *\n+     * @param x\n+     * @return\n+     */\n+    public int getEntryIndex(int x) {\n+\n         int low = 0;\n         int high = mYVals.size() - 1;\n-        T closest = null;\n+        int closest = -1;\n \n         while (low <= high) {\n             int m = (high + low) / 2;\n@@ -210,15 +228,15 @@ public T getEntryForXIndex(int x) {\n                 while (m > 0 && mYVals.get(m - 1).getXIndex() == x)\n                     m--;\n \n-                return mYVals.get(m);\n+                return m;\n             }\n \n             if (x > mYVals.get(m).getXIndex())\n                 low = m + 1;\n             else\n                 high = m - 1;\n \n-            closest = mYVals.get(m);\n+            closest = m;\n         }\n \n         return closest;\n@@ -442,10 +460,12 @@ public boolean isDrawValuesEnabled() {\n     }\n \n     /**\n-     * Adds an Entry to the DataSet dynamically. This will also recalculate the\n-     * current minimum and maximum values of the DataSet and the value-sum.\n+     * Adds an Entry to the DataSet dynamically.\n+     * Entries are added to the end of the list.\n+     * This will also recalculate the current minimum and maximum\n+     * values of the DataSet and the value-sum.\n      *\n-     * @param d\n+     * @param e\n      */\n     @SuppressWarnings(\"unchecked\")\n     public void addEntry(Entry e) {\n@@ -475,6 +495,50 @@ public void addEntry(Entry e) {\n         mYVals.add((T) e);\n     }\n \n+    /**\n+     * Adds an Entry to the DataSet dynamically.\n+     * Entries are added to their appropriate index respective to it's x-index.\n+     * This will also recalculate the current minimum and maximum\n+     * values of the DataSet and the value-sum.\n+     *\n+     * @param e\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public void addEntryOrdered(Entry e) {\n+\n+        if (e == null)\n+            return;\n+\n+        float val = e.getVal();\n+\n+        if (mYVals == null) {\n+            mYVals = new ArrayList<T>();\n+        }\n+\n+        if (mYVals.size() == 0) {\n+            mYMax = val;\n+            mYMin = val;\n+        } else {\n+            if (mYMax < val)\n+                mYMax = val;\n+            if (mYMin > val)\n+                mYMin = val;\n+        }\n+\n+        mYValueSum += val;\n+\n+        if (mYVals.size() > 0 && mYVals.get(mYVals.size() - 1).getXIndex() > e.getXIndex())\n+        {\n+            int closestIndex = getEntryIndex(e.getXIndex());\n+            if (mYVals.get(closestIndex).getXIndex() < e.getXIndex())\n+                closestIndex++;\n+            mYVals.add(closestIndex, (T) e);\n+            return;\n+        }\n+\n+        mYVals.add((T) e);\n+    }\n+\n     /**\n      * Removes an Entry from the DataSets entries array. This will also\n      * recalculate the current minimum and maximum values of the DataSet and the",
    "output": "addEntryOrdered to automatically place the entry in the correct index"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -636,29 +636,37 @@ public boolean removeDataSet(int index) {\n     }\n \n     /**\n-     * Adds an Entry to the DataSet at the specified index. Entries are added to\n-     * the end of the list.\n+     * Adds an Entry to the DataSet at the specified index.\n+     * Entries are added to the end of the list.\n      * \n-     * @param entry\n+     * @param e\n      * @param dataSetIndex\n      */\n     public void addEntry(Entry e, int dataSetIndex) {\n \n         if (mDataSets.size() > dataSetIndex && dataSetIndex >= 0) {\n \n             float val = e.getVal();\n+            T set = mDataSets.get(dataSetIndex);\n \n-            mYValCount += 1;\n-            mYValueSum += val;\n-\n-            if (mYMax < val)\n-                mYMax = val;\n-            if (mYMin > val)\n+            if (mYValCount == 0) {\n                 mYMin = val;\n+                mYMax = val;\n \n-            T set = mDataSets.get(dataSetIndex);\n+                if (set.getAxisDependency() == AxisDependency.LEFT) {\n \n-            if (set != null) {\n+                    mLeftAxisMax = e.getVal();\n+                    mLeftAxisMin = e.getVal();\n+                } else {\n+                    mRightAxisMax = e.getVal();\n+                    mRightAxisMin = e.getVal();\n+                }\n+            } else {\n+\n+                if (mYMax < val)\n+                    mYMax = val;\n+                if (mYMin > val)\n+                    mYMin = val;\n \n                 if (set.getAxisDependency() == AxisDependency.LEFT) {\n \n@@ -672,12 +680,15 @@ public void addEntry(Entry e, int dataSetIndex) {\n                     if (mRightAxisMin > e.getVal())\n                         mRightAxisMin = e.getVal();\n                 }\n+            }\n \n-                handleEmptyAxis(getFirstLeft(), getFirstRight());\n+            mYValCount += 1;\n+            mYValueSum += val;\n \n-                // add the entry to the dataset\n-                set.addEntry(e);\n-            }\n+            handleEmptyAxis(getFirstLeft(), getFirstRight());\n+\n+            // add the entry to the dataset\n+            set.addEntry(e);\n         } else {\n             Log.e(\"addEntry\", \"Cannot add Entry because dataSetIndex too high or too low.\");\n         }",
    "output": "Fixed possible case of incorrect x/ymax after addEntry"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -728,6 +728,9 @@ public boolean removeEntry(int xIndex, int dataSetIndex) {\n         T dataSet = mDataSets.get(dataSetIndex);\n         Entry e = dataSet.getEntryForXIndex(xIndex);\n \n+        if (e == null || e.getXIndex() != xIndex)\n+            return false;\n+\n         return removeEntry(e, dataSetIndex);\n     }\n ",
    "output": "Fixed a case where removeEntry(xIndex) removes the wrong entry"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n@@ -122,6 +122,15 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 mChart.notifyDataSetChanged();\n                 break;\n             }\n+            case R.id.actionToggleMakeShadowSameColorAsCandle: {\n+                for (CandleDataSet set : mChart.getData().getDataSets())\n+                {\n+                    set.setShadowColorSameAsCandle(!set.getShadowColorSameAsCandle());\n+                }\n+\n+                mChart.invalidate();\n+                break;\n+            }\n             case R.id.actionToggleStartzero: {\n                 mChart.getAxisLeft().setStartAtZero(!mChart.getAxisLeft().isStartAtZeroEnabled());\n                 mChart.getAxisRight().setStartAtZero(!mChart.getAxisRight().isStartAtZeroEnabled());\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n@@ -22,6 +22,9 @@ public class CandleDataSet extends BarLineScatterCandleDataSet<CandleEntry> {\n     /** the space between the candle entries, default 0.1f (10%) */\n     private float mBodySpace = 0.1f;\n \n+    /** use candle color for the shadow */\n+    private boolean mShadowColorSameAsCandle = false;\n+\n     /** paint style when open <= close */\n     protected Paint.Style mIncreasingPaintStyle = Paint.Style.FILL;\n \n@@ -246,4 +249,22 @@ public int getShadowColor() {\n     public void setShadowColor(int shadowColor) {\n         this.mShadowColor = shadowColor;\n     }\n+\n+    /**\n+     * Is the shadow color same as the candle color?\n+     *\n+     * @return\n+     */\n+    public boolean getShadowColorSameAsCandle() {\n+        return mShadowColorSameAsCandle;\n+    }\n+\n+    /**\n+     * Sets shadow color to be the same color as the candle color\n+     *\n+     * @param shadowColorSameAsCandle\n+     */\n+    public void setShadowColorSameAsCandle(boolean shadowColorSameAsCandle) {\n+        this.mShadowColorSameAsCandle = shadowColorSameAsCandle;\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n@@ -79,6 +79,15 @@ protected void drawDataSet(Canvas c, CandleDataSet dataSet) {\n         int range = (maxx - minx) * 4;\n         int to = (int)Math.ceil((maxx - minx) * phaseX + minx);\n \n+        CandleBodyBuffer bodyBuffer = mBodyBuffers[dataSetIndex];\n+        bodyBuffer.setBodySpace(dataSet.getBodySpace());\n+        bodyBuffer.setPhases(phaseX, phaseY);\n+        bodyBuffer.limitFrom(minx);\n+        bodyBuffer.limitTo(maxx);\n+        bodyBuffer.feed(entries);\n+\n+        trans.pointValuesToPixel(bodyBuffer.buffer);\n+\n         CandleShadowBuffer shadowBuffer = mShadowBuffers[dataSetIndex];\n         shadowBuffer.setPhases(phaseX, phaseY);\n         shadowBuffer.limitFrom(minx);\n@@ -87,29 +96,8 @@ protected void drawDataSet(Canvas c, CandleDataSet dataSet) {\n \n         trans.pointValuesToPixel(shadowBuffer.buffer);\n \n-        mRenderPaint.setStyle(Paint.Style.STROKE);\n-\n-        // If not set, use default functionality for backward compatibility\n-        if (dataSet.getShadowColor() == ColorTemplate.COLOR_NONE) {\n-            mRenderPaint.setColor(dataSet.getColor());\n-        } else {\n-            mRenderPaint.setColor(dataSet.getShadowColor());\n-        }\n-\n         mRenderPaint.setStrokeWidth(dataSet.getShadowWidth());\n \n-        // draw the shadow\n-        c.drawLines(shadowBuffer.buffer, 0, range, mRenderPaint);\n-\n-        CandleBodyBuffer bodyBuffer = mBodyBuffers[dataSetIndex];\n-        bodyBuffer.setBodySpace(dataSet.getBodySpace());\n-        bodyBuffer.setPhases(phaseX, phaseY);\n-        bodyBuffer.limitFrom(minx);\n-        bodyBuffer.limitTo(maxx);\n-        bodyBuffer.feed(entries);\n-\n-        trans.pointValuesToPixel(bodyBuffer.buffer);\n-\n         // draw the body\n         for (int j = 0; j < range; j += 4) {\n \n@@ -119,6 +107,44 @@ protected void drawDataSet(Canvas c, CandleDataSet dataSet) {\n             if (!fitsBounds(e.getXIndex(), mMinX, to))\n                 continue;\n \n+            if (dataSet.getShadowColorSameAsCandle()) {\n+\n+                if (e.getOpen() > e.getClose())\n+                    mRenderPaint.setColor(\n+                            dataSet.getDecreasingColor() == ColorTemplate.COLOR_NONE ?\n+                                    dataSet.getColor(j) :\n+                                    dataSet.getDecreasingColor()\n+                    );\n+\n+                else if (e.getOpen() < e.getClose())\n+                    mRenderPaint.setColor(\n+                            dataSet.getIncreasingColor() == ColorTemplate.COLOR_NONE ?\n+                                    dataSet.getColor(j) :\n+                                    dataSet.getIncreasingColor()\n+                    );\n+\n+                else\n+                    mRenderPaint.setColor(\n+                            dataSet.getShadowColor() == ColorTemplate.COLOR_NONE ?\n+                                    dataSet.getColor(j) :\n+                                    dataSet.getShadowColor()\n+                    );\n+\n+            } else {\n+                mRenderPaint.setColor(\n+                        dataSet.getShadowColor() == ColorTemplate.COLOR_NONE ?\n+                                dataSet.getColor(j) :\n+                                dataSet.getShadowColor()\n+                );\n+            }\n+\n+            mRenderPaint.setStyle(Paint.Style.STROKE);\n+\n+            // draw the shadow\n+            c.drawLine(shadowBuffer.buffer[j], shadowBuffer.buffer[j + 1],\n+                    shadowBuffer.buffer[j + 2], shadowBuffer.buffer[j + 3],\n+                    mRenderPaint);\n+\n             float leftBody = bodyBuffer.buffer[j];\n             float open = bodyBuffer.buffer[j + 1];\n             float rightBody = bodyBuffer.buffer[j + 2];\n@@ -150,8 +176,7 @@ protected void drawDataSet(Canvas c, CandleDataSet dataSet) {\n                 c.drawRect(leftBody, open, rightBody, close, mRenderPaint);\n             } else { // equal values\n                 \n-                mRenderPaint.setColor(Color.BLACK);\n-                mRenderPaint.setStyle(Paint.Style.STROKE);\n+                mRenderPaint.setColor(dataSet.getShadowColor());\n                 c.drawLine(leftBody, open, rightBody, close, mRenderPaint);\n             }\n         }",
    "output": "Feature for making candle shadow color same as inc/dec"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -203,7 +203,7 @@ public void calcMinMax(int start, int end) {\n             mLastEnd = end;\n \n             mYMin = Float.MAX_VALUE;\n-            mYMax = Float.MIN_VALUE;\n+            mYMax = -Float.MIN_VALUE;\n \n             for (int i = 0; i < mDataSets.size(); i++) {\n \n@@ -216,6 +216,11 @@ public void calcMinMax(int start, int end) {\n                     mYMax = mDataSets.get(i).getYMax();\n             }\n \n+            if (mYMin == Float.MAX_VALUE) {\n+                mYMin = 0.f;\n+                mYMax = 0.f;\n+            }\n+\n             // left axis\n             T firstLeft = getFirstLeft();\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -123,7 +123,7 @@ protected void calcMinMax(int start, int end) {\n         mLastEnd = endValue;\n \n         mYMin = Float.MAX_VALUE;\n-        mYMax = Float.MIN_VALUE;\n+        mYMax = -Float.MIN_VALUE;\n \n         for (int i = start; i <= endValue; i++) {\n \n@@ -138,6 +138,11 @@ protected void calcMinMax(int start, int end) {\n                     mYMax = e.getVal();\n             }\n         }\n+\n+        if (mYMin == Float.MAX_VALUE) {\n+            mYMin = 0.f;\n+            mYMax = 0.f;\n+        }\n     }\n \n     /**",
    "output": "Merge pull request #818 from danielgindi/fix-inf-in-matrix\n\nFixed a crash after matrix transformation when only one bar is visible"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -1112,7 +1112,10 @@ protected List<SelectionDetail> getSelectionDetailsAtIndex(int xIndex) {\n                 continue;\n \n             // extract all y-values from all DataSets at the given x-index\n-            float yVal = dataSet.getYValForXIndex(xIndex);\n+            final float yVal = dataSet.getYValForXIndex(xIndex);\n+            if (yVal == Float.NaN)\n+                continue;\n+\n             pts[1] = yVal;\n \n             getTransformer(dataSet.getAxisDependency()).pointValuesToPixel(pts);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -426,11 +426,11 @@ public List<SelectionDetail> getSelectionDetailsAtIndex(int xIndex) {\n             DataSet<?> dataSet = mData.getDataSetByIndex(i);\n \n             // extract all y-values from all DataSets at the given x-index\n-            float yVal = dataSet.getYValForXIndex(xIndex);\n+            final float yVal = dataSet.getYValForXIndex(xIndex);\n+            if (yVal == Float.NaN)\n+                continue;\n \n-            if (!Float.isNaN(yVal)) {\n-                vals.add(new SelectionDetail(yVal, i, dataSet));\n-            }\n+            vals.add(new SelectionDetail(yVal, i, dataSet));\n         }\n \n         return vals;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -546,11 +546,11 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             if (xIndex > mChart.getXChartMax() * mAnimator.getPhaseX())\n                 continue;\n \n-            float yValue = set.getYValForXIndex(xIndex);\n-            if (yValue == Float.NaN)\n+            final float yVal = set.getYValForXIndex(xIndex);\n+            if (yVal == Float.NaN)\n                 continue;\n \n-            float y = yValue * mAnimator.getPhaseY(); // get\n+            float y = yVal * mAnimator.getPhaseY(); // get\n                                                                             // the\n             // y-position\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n@@ -266,11 +266,11 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             if (xIndex > mChart.getXChartMax() * mAnimator.getPhaseX())\n                 continue;\n \n-            float yValue = set.getYValForXIndex(xIndex);\n-            if (yValue == Float.NaN)\n+            final float yVal = set.getYValForXIndex(xIndex);\n+            if (yVal == Float.NaN)\n                 continue;\n \n-            float y = yValue * mAnimator.getPhaseY(); // get\n+            float y = yVal * mAnimator.getPhaseY(); // get\n                                                                             // the\n             // y-position\n ",
    "output": "Merge pull request #817 from danielgindi/fix-nan-highlights\n\nFixed an issue where highlights disappear on multi-datasets"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -203,7 +203,7 @@ public void calcMinMax(int start, int end) {\n             mLastEnd = end;\n \n             mYMin = Float.MAX_VALUE;\n-            mYMax = Float.MIN_VALUE;\n+            mYMax = -Float.MIN_VALUE;\n \n             for (int i = 0; i < mDataSets.size(); i++) {\n \n@@ -216,6 +216,11 @@ public void calcMinMax(int start, int end) {\n                     mYMax = mDataSets.get(i).getYMax();\n             }\n \n+            if (mYMin == Float.MAX_VALUE) {\n+                mYMin = 0.f;\n+                mYMax = 0.f;\n+            }\n+\n             // left axis\n             T firstLeft = getFirstLeft();\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -123,7 +123,7 @@ protected void calcMinMax(int start, int end) {\n         mLastEnd = endValue;\n \n         mYMin = Float.MAX_VALUE;\n-        mYMax = Float.MIN_VALUE;\n+        mYMax = -Float.MIN_VALUE;\n \n         for (int i = start; i <= endValue; i++) {\n \n@@ -138,6 +138,11 @@ protected void calcMinMax(int start, int end) {\n                     mYMax = e.getVal();\n             }\n         }\n+\n+        if (mYMin == Float.MAX_VALUE) {\n+            mYMin = 0.f;\n+            mYMax = 0.f;\n+        }\n     }\n \n     /**",
    "output": "Fixed a crash after matrix transformation when only one bar is visible\n\nFloat.MIN_VALUE is not the minimum... -Float.MIN_VALUE is!\nAnd of course we need to also account for a case where we are looping over zero elements."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -1112,7 +1112,10 @@ protected List<SelectionDetail> getSelectionDetailsAtIndex(int xIndex) {\n                 continue;\n \n             // extract all y-values from all DataSets at the given x-index\n-            float yVal = dataSet.getYValForXIndex(xIndex);\n+            final float yVal = dataSet.getYValForXIndex(xIndex);\n+            if (yVal == Float.NaN)\n+                continue;\n+\n             pts[1] = yVal;\n \n             getTransformer(dataSet.getAxisDependency()).pointValuesToPixel(pts);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -426,11 +426,11 @@ public List<SelectionDetail> getSelectionDetailsAtIndex(int xIndex) {\n             DataSet<?> dataSet = mData.getDataSetByIndex(i);\n \n             // extract all y-values from all DataSets at the given x-index\n-            float yVal = dataSet.getYValForXIndex(xIndex);\n+            final float yVal = dataSet.getYValForXIndex(xIndex);\n+            if (yVal == Float.NaN)\n+                continue;\n \n-            if (!Float.isNaN(yVal)) {\n-                vals.add(new SelectionDetail(yVal, i, dataSet));\n-            }\n+            vals.add(new SelectionDetail(yVal, i, dataSet));\n         }\n \n         return vals;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -546,11 +546,11 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             if (xIndex > mChart.getXChartMax() * mAnimator.getPhaseX())\n                 continue;\n \n-            float yValue = set.getYValForXIndex(xIndex);\n-            if (yValue == Float.NaN)\n+            final float yVal = set.getYValForXIndex(xIndex);\n+            if (yVal == Float.NaN)\n                 continue;\n \n-            float y = yValue * mAnimator.getPhaseY(); // get\n+            float y = yVal * mAnimator.getPhaseY(); // get\n                                                                             // the\n             // y-position\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n@@ -266,11 +266,11 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             if (xIndex > mChart.getXChartMax() * mAnimator.getPhaseX())\n                 continue;\n \n-            float yValue = set.getYValForXIndex(xIndex);\n-            if (yValue == Float.NaN)\n+            final float yVal = set.getYValForXIndex(xIndex);\n+            if (yVal == Float.NaN)\n                 continue;\n \n-            float y = yValue * mAnimator.getPhaseY(); // get\n+            float y = yVal * mAnimator.getPhaseY(); // get\n                                                                             // the\n             // y-position\n ",
    "output": "Fixed an issue where highlights disappear on multi-datasets\n\nThey disappeared because of NaN values introduces in the previous iteration, when the previous dataset does not contain a yValue for that specific index.\n\n(And a little refactoring to make this thing consistent across all appearances)"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java b/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java\n@@ -79,14 +79,23 @@ public void feed(List<BarEntry> entries) {\n                     addBar(left, top, right, bottom);\n                     \n                 } else {\n-                    \n-                    float all = e.getVal();\n+\n+                    float allPos = e.getPositiveSum();\n+                    float allNeg = e.getNegativeSum();\n \n                     // fill the stack\n                     for (int k = 0; k < vals.length; k++) {\n \n-                        all -= vals[k];\n-                        y = vals[k] + all;\n+                        float value = vals[k];\n+\n+                        if(value >= 0f) {\n+\n+                            allPos -= value;\n+                            y = value + allPos;\n+                        } else {\n+                            allNeg -= Math.abs(value);\n+                            y = value + allNeg;\n+                        }\n \n                         float left = x - barWidth + barSpaceHalf;\n                         float right = x + barWidth - barSpaceHalf;\n@@ -121,14 +130,23 @@ public void feed(List<BarEntry> entries) {\n                     addBar(left, top, right, bottom);\n                     \n                 } else {\n-                    \n-                    float all = e.getVal();\n+\n+                    float allPos = e.getPositiveSum();\n+                    float allNeg = e.getNegativeSum();\n \n                     // fill the stack\n                     for (int k = 0; k < vals.length; k++) {\n \n-                        all -= vals[k];\n-                        y = vals[k] + all;\n+                        float value = vals[k];\n+\n+                        if(value >= 0f) {\n+\n+                            allPos -= value;\n+                            y = value + allPos;\n+                        } else {\n+                            allNeg -= Math.abs(value);\n+                            y = value + allNeg;\n+                        }\n \n                         float left = x - barWidth + barSpaceHalf;\n                         float right = x + barWidth - barSpaceHalf;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -259,14 +259,24 @@ public void drawValues(Canvas c) {\n                         } else {\n \n                             float[] transformed = new float[vals.length * 2];\n-                            int cnt = 0;\n-                            float add = e.getVal();\n+                            float allPos = e.getPositiveSum();\n+                            float allNeg = e.getNegativeSum();\n \n-                            for (int k = 0; k < transformed.length; k += 2) {\n+                            for (int k = 0, idx = 0; k < transformed.length; k += 2, idx++) {\n+\n+                                float value = vals[idx];\n+                                float y;\n+\n+                                if(value >= 0f) {\n+\n+                                    allPos -= value;\n+                                    y = value + allPos;\n+                                } else {\n+                                    allNeg -= Math.abs(value);\n+                                    y = value + allNeg;\n+                                }\n \n-                                add -= vals[cnt];\n-                                transformed[k + 1] = (vals[cnt] + add) * mAnimator.getPhaseY();\n-                                cnt++;\n+                                transformed[k + 1] = y * mAnimator.getPhaseY();\n                             }\n \n                             trans.pointValuesToPixel(transformed);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n@@ -206,14 +206,13 @@ public void drawValues(Canvas c) {\n                         } else {\n \n                             float[] transformed = new float[vals.length * 2];\n-                            int cnt = 0;\n                             float allPos = e.getPositiveSum();\n                             float allNeg = e.getNegativeSum();\n \n-                            for (int k = 0; k < transformed.length; k += 2) {\n+                            for (int k = 0, idx = 0; k < transformed.length; k += 2, idx++) {\n \n-                                float value = vals[cnt];\n-                                float y = 0f;\n+                                float value = vals[idx];\n+                                float y;\n \n                                 if(value >= 0f) {\n \n@@ -225,7 +224,6 @@ public void drawValues(Canvas c) {\n                                 }\n \n                                 transformed[k] = y * mAnimator.getPhaseY();\n-                                cnt++;\n                             }\n \n                             trans.pointValuesToPixel(transformed);",
    "output": "Merge pull request #798 from danielgindi/stacked-negative\n\nSupport for negative values in stacked vertical bar chart"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java b/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java\n@@ -79,14 +79,23 @@ public void feed(List<BarEntry> entries) {\n                     addBar(left, top, right, bottom);\n                     \n                 } else {\n-                    \n-                    float all = e.getVal();\n+\n+                    float allPos = e.getPositiveSum();\n+                    float allNeg = e.getNegativeSum();\n \n                     // fill the stack\n                     for (int k = 0; k < vals.length; k++) {\n \n-                        all -= vals[k];\n-                        y = vals[k] + all;\n+                        float value = vals[k];\n+\n+                        if(value >= 0f) {\n+\n+                            allPos -= value;\n+                            y = value + allPos;\n+                        } else {\n+                            allNeg -= Math.abs(value);\n+                            y = value + allNeg;\n+                        }\n \n                         float left = x - barWidth + barSpaceHalf;\n                         float right = x + barWidth - barSpaceHalf;\n@@ -121,14 +130,23 @@ public void feed(List<BarEntry> entries) {\n                     addBar(left, top, right, bottom);\n                     \n                 } else {\n-                    \n-                    float all = e.getVal();\n+\n+                    float allPos = e.getPositiveSum();\n+                    float allNeg = e.getNegativeSum();\n \n                     // fill the stack\n                     for (int k = 0; k < vals.length; k++) {\n \n-                        all -= vals[k];\n-                        y = vals[k] + all;\n+                        float value = vals[k];\n+\n+                        if(value >= 0f) {\n+\n+                            allPos -= value;\n+                            y = value + allPos;\n+                        } else {\n+                            allNeg -= Math.abs(value);\n+                            y = value + allNeg;\n+                        }\n \n                         float left = x - barWidth + barSpaceHalf;\n                         float right = x + barWidth - barSpaceHalf;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -259,14 +259,24 @@ public void drawValues(Canvas c) {\n                         } else {\n \n                             float[] transformed = new float[vals.length * 2];\n-                            int cnt = 0;\n-                            float add = e.getVal();\n+                            float allPos = e.getPositiveSum();\n+                            float allNeg = e.getNegativeSum();\n \n-                            for (int k = 0; k < transformed.length; k += 2) {\n+                            for (int k = 0, idx = 0; k < transformed.length; k += 2, idx++) {\n+\n+                                float value = vals[idx];\n+                                float y;\n+\n+                                if(value >= 0f) {\n+\n+                                    allPos -= value;\n+                                    y = value + allPos;\n+                                } else {\n+                                    allNeg -= Math.abs(value);\n+                                    y = value + allNeg;\n+                                }\n \n-                                add -= vals[cnt];\n-                                transformed[k + 1] = (vals[cnt] + add) * mAnimator.getPhaseY();\n-                                cnt++;\n+                                transformed[k + 1] = y * mAnimator.getPhaseY();\n                             }\n \n                             trans.pointValuesToPixel(transformed);",
    "output": "Support for negative values in stacked vertical bar chart"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n@@ -206,14 +206,13 @@ public void drawValues(Canvas c) {\n                         } else {\n \n                             float[] transformed = new float[vals.length * 2];\n-                            int cnt = 0;\n                             float allPos = e.getPositiveSum();\n                             float allNeg = e.getNegativeSum();\n \n-                            for (int k = 0; k < transformed.length; k += 2) {\n+                            for (int k = 0, idx = 0; k < transformed.length; k += 2, idx++) {\n \n-                                float value = vals[cnt];\n-                                float y = 0f;\n+                                float value = vals[idx];\n+                                float y;\n \n                                 if(value >= 0f) {\n \n@@ -225,7 +224,6 @@ public void drawValues(Canvas c) {\n                                 }\n \n                                 transformed[k] = y * mAnimator.getPhaseY();\n-                                cnt++;\n                             }\n \n                             trans.pointValuesToPixel(transformed);",
    "output": "Refactored cnt into idx for clarification"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -417,7 +417,7 @@ public float getYChartMin() {\n      *\n      * @return\n      */\n-    public List<SelectionDetail> getYValsAtIndex(int xIndex) {\n+    public List<SelectionDetail> getSelectionDetailsAtIndex(int xIndex) {\n \n         List<SelectionDetail> vals = new ArrayList<SelectionDetail>();\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java\n@@ -160,7 +160,7 @@ public boolean onSingleTapUp(MotionEvent e) {\n \n             } else {\n \n-                List<SelectionDetail> valsAtIndex = mChart.getYValsAtIndex(index);\n+                List<SelectionDetail> valsAtIndex = mChart.getSelectionDetailsAtIndex(index);\n \n                 int dataSetIndex = 0;\n ",
    "output": "Refactored some stuff."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -29,14 +29,13 @@\n import com.github.mikephil.charting.interfaces.BarLineScatterCandleDataProvider;\n import com.github.mikephil.charting.jobs.MoveViewJob;\n import com.github.mikephil.charting.listener.BarLineChartTouchListener;\n-import com.github.mikephil.charting.listener.ChartTouchListener;\n import com.github.mikephil.charting.listener.OnDrawListener;\n import com.github.mikephil.charting.renderer.XAxisRenderer;\n import com.github.mikephil.charting.renderer.YAxisRenderer;\n import com.github.mikephil.charting.utils.FillFormatter;\n import com.github.mikephil.charting.utils.Highlight;\n import com.github.mikephil.charting.utils.PointD;\n-import com.github.mikephil.charting.utils.SelInfo;\n+import com.github.mikephil.charting.utils.SelectionDetail;\n import com.github.mikephil.charting.utils.Transformer;\n import com.github.mikephil.charting.utils.Utils;\n \n@@ -1070,7 +1069,7 @@ public Highlight getHighlightByTouchPoint(float x, float y) {\n             xIndex = (int) base + 1;\n         }\n \n-        List<SelInfo> valsAtIndex = getYValsAtIndex(xIndex);\n+        List<SelectionDetail> valsAtIndex = getSelectionDetailsAtIndex(xIndex);\n \n         float leftdist = Utils.getMinimumDistance(valsAtIndex, y, AxisDependency.LEFT);\n         float rightdist = Utils.getMinimumDistance(valsAtIndex, y, AxisDependency.RIGHT);\n@@ -1091,16 +1090,16 @@ public Highlight getHighlightByTouchPoint(float x, float y) {\n     }\n \n     /**\n-     * Returns an array of SelInfo objects for the given x-index. The SelInfo\n+     * Returns an array of SelectionDetail objects for the given x-index. The SelectionDetail\n      * objects give information about the value at the selected index and the\n      * DataSet it belongs to. INFORMATION: This method does calculations at\n      * runtime. Do not over-use in performance critical situations.\n      *\n      * @return\n      */\n-    public List<SelInfo> getYValsAtIndex(int xIndex) {\n+    protected List<SelectionDetail> getSelectionDetailsAtIndex(int xIndex) {\n \n-        List<SelInfo> vals = new ArrayList<SelInfo>();\n+        List<SelectionDetail> vals = new ArrayList<SelectionDetail>();\n \n         float[] pts = new float[2];\n \n@@ -1119,7 +1118,7 @@ public List<SelInfo> getYValsAtIndex(int xIndex) {\n             getTransformer(dataSet.getAxisDependency()).pointValuesToPixel(pts);\n \n             if (!Float.isNaN(pts[1])) {\n-                vals.add(new SelInfo(pts[1], i, dataSet));\n+                vals.add(new SelectionDetail(pts[1], i, dataSet));\n             }\n         }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -19,7 +19,7 @@\n import com.github.mikephil.charting.data.DataSet;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.listener.PieRadarChartTouchListener;\n-import com.github.mikephil.charting.utils.SelInfo;\n+import com.github.mikephil.charting.utils.SelectionDetail;\n import com.github.mikephil.charting.utils.Utils;\n \n import java.util.ArrayList;\n@@ -410,16 +410,16 @@ public float getYChartMin() {\n     }\n \n     /**\n-     * Returns an array of SelInfo objects for the given x-index. The SelInfo\n+     * Returns an array of SelectionDetail objects for the given x-index. The SelectionDetail\n      * objects give information about the value at the selected index and the\n      * DataSet it belongs to. INFORMATION: This method does calculations at\n      * runtime. Do not over-use in performance critical situations.\n      *\n      * @return\n      */\n-    public List<SelInfo> getYValsAtIndex(int xIndex) {\n+    public List<SelectionDetail> getYValsAtIndex(int xIndex) {\n \n-        List<SelInfo> vals = new ArrayList<SelInfo>();\n+        List<SelectionDetail> vals = new ArrayList<SelectionDetail>();\n \n         for (int i = 0; i < mData.getDataSetCount(); i++) {\n \n@@ -429,7 +429,7 @@ public List<SelInfo> getYValsAtIndex(int xIndex) {\n             float yVal = dataSet.getYValForXIndex(xIndex);\n \n             if (!Float.isNaN(yVal)) {\n-                vals.add(new SelInfo(yVal, i, dataSet));\n+                vals.add(new SelectionDetail(yVal, i, dataSet));\n             }\n         }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java\n@@ -3,18 +3,15 @@\n \n import android.annotation.SuppressLint;\n import android.graphics.PointF;\n-import android.view.GestureDetector;\n-import android.view.GestureDetector.SimpleOnGestureListener;\n import android.view.MotionEvent;\n import android.view.View;\n-import android.view.View.OnTouchListener;\n import android.view.animation.AnimationUtils;\n \n import com.github.mikephil.charting.charts.PieChart;\n import com.github.mikephil.charting.charts.PieRadarChartBase;\n import com.github.mikephil.charting.charts.RadarChart;\n import com.github.mikephil.charting.utils.Highlight;\n-import com.github.mikephil.charting.utils.SelInfo;\n+import com.github.mikephil.charting.utils.SelectionDetail;\n import com.github.mikephil.charting.utils.Utils;\n \n import java.util.ArrayList;\n@@ -163,7 +160,7 @@ public boolean onSingleTapUp(MotionEvent e) {\n \n             } else {\n \n-                List<SelInfo> valsAtIndex = mChart.getYValsAtIndex(index);\n+                List<SelectionDetail> valsAtIndex = mChart.getYValsAtIndex(index);\n \n                 int dataSetIndex = 0;\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/SelectionDetail.java b/MPChartLib/src/com/github/mikephil/charting/utils/SelectionDetail.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/SelectionDetail.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/SelectionDetail.java\n@@ -1,25 +1,24 @@\n-\n package com.github.mikephil.charting.utils;\n \n import com.github.mikephil.charting.data.DataSet;\n \n /**\n  * Class that encapsulates information of a value that has been\n- * selected/highlighted and its DataSet index. The SelInfo objects give\n+ * selected/highlighted and its DataSet index. The SelectionDetail objects give\n  * information about the value at the selected index and the DataSet it belongs\n  * to. Needed only for highlighting onTouch().\n- * \n+ *\n  * @author Philipp Jahoda\n  */\n-public class SelInfo {\n+public class SelectionDetail {\n \n     public float val;\n     public int dataSetIndex;\n     public DataSet<?> dataSet;\n \n-    public SelInfo(float val, int dataSetIndex, DataSet<?> set) {\n+    public SelectionDetail(float val, int dataSetIndex, DataSet<?> set) {\n         this.val = val;\n         this.dataSetIndex = dataSetIndex;\n         this.dataSet = set;\n     }\n-}\n+}\n\\ No newline at end of file\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n@@ -16,7 +16,6 @@\n import android.view.ViewConfiguration;\n \n import com.github.mikephil.charting.components.YAxis.AxisDependency;\n-import com.github.mikephil.charting.data.Entry;\n \n import java.text.DecimalFormat;\n import java.util.List;\n@@ -430,15 +429,15 @@ public static double nextUp(double d) {\n      * @param valsAtIndex all the values at a specific index\n      * @return\n      */\n-    public static int getClosestDataSetIndex(List<SelInfo> valsAtIndex, float val,\n+    public static int getClosestDataSetIndex(List<SelectionDetail> valsAtIndex, float val,\n             AxisDependency axis) {\n \n         int index = -1;\n         float distance = Float.MAX_VALUE;\n \n         for (int i = 0; i < valsAtIndex.size(); i++) {\n \n-            SelInfo sel = valsAtIndex.get(i);\n+            SelectionDetail sel = valsAtIndex.get(i);\n \n             if (axis == null || sel.dataSet.getAxisDependency() == axis) {\n \n@@ -464,14 +463,14 @@ public static int getClosestDataSetIndex(List<SelInfo> valsAtIndex, float val,\n      * @param axis\n      * @return\n      */\n-    public static float getMinimumDistance(List<SelInfo> valsAtIndex, float val,\n+    public static float getMinimumDistance(List<SelectionDetail> valsAtIndex, float val,\n             AxisDependency axis) {\n \n         float distance = Float.MAX_VALUE;\n \n         for (int i = 0; i < valsAtIndex.size(); i++) {\n \n-            SelInfo sel = valsAtIndex.get(i);\n+            SelectionDetail sel = valsAtIndex.get(i);\n \n             if (sel.dataSet.getAxisDependency() == axis) {\n ",
    "output": "Did some refactoring concerning SelInfo."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -122,14 +122,14 @@ protected void calcMinMax(int start, int end) {\n         mLastStart = start;\n         mLastEnd = endValue;\n \n-        mYMin = mYVals.get(start).getVal();\n-        mYMax = mYVals.get(start).getVal();\n+        mYMin = Float.MAX_VALUE;\n+        mYMax = Float.MIN_VALUE;\n \n-        for (int i = start + 1; i <= endValue; i++) {\n+        for (int i = start; i <= endValue; i++) {\n \n             Entry e = mYVals.get(i);\n \n-            if (e != null) {\n+            if (e != null && !Float.isNaN(e.getVal())) {\n \n                 if (e.getVal() < mYMin)\n                     mYMin = e.getVal();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n@@ -75,6 +75,8 @@ protected void drawDataSet(Canvas c, RadarDataSet dataSet) {\n \n         Path surface = new Path();\n \n+        boolean hasMovedToPoint = false;\n+\n         for (int j = 0; j < entries.size(); j++) {\n \n             mRenderPaint.setColor(dataSet.getColor(j));\n@@ -84,9 +86,13 @@ protected void drawDataSet(Canvas c, RadarDataSet dataSet) {\n             PointF p = Utils.getPosition(center, (e.getVal() - mChart.getYChartMin()) * factor,\n                     sliceangle * j + mChart.getRotationAngle());\n \n-            if (j == 0)\n+            if (Float.isNaN(p.x))\n+                continue;\n+\n+            if (!hasMovedToPoint) {\n                 surface.moveTo(p.x, p.y);\n-            else\n+                hasMovedToPoint = true;\n+            } else\n                 surface.lineTo(p.x, p.y);\n         }\n \n@@ -225,6 +231,9 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             int j = set.getEntryPosition(e);\n             float y = (e.getVal() - mChart.getYChartMin());\n \n+            if (Float.isNaN(y))\n+                continue;\n+\n             PointF p = Utils.getPosition(center, y * factor,\n                     sliceangle * j + mChart.getRotationAngle());\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n@@ -63,6 +63,10 @@ protected void computeAxisValues(float min, float max) {\n         } else {\n \n             double first = Math.ceil(yMin / interval) * interval;\n+\n+            if (first == 0.0) // Fix for IEEE negative zero case (Where value == -0.0, and 0.0 == -0.0)\n+                first = 0.0;\n+\n             double last = Utils.nextUp(Math.floor(yMax / interval) * interval);\n \n             double f;",
    "output": "Allow NaN values in Radar chart (Skip points)"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java\n@@ -176,16 +176,21 @@ public boolean onSingleTapUp(MotionEvent e) {\n                             / ((RadarChart) mChart).getFactor(), null);\n                 }\n \n-                Highlight h = new Highlight(index, dataSetIndex);\n-\n-                if (h.equalTo(mLastHighlighted)) {\n-\n-                    mChart.highlightTouch(null);\n+                if (dataSetIndex < 0) {\n+                    mChart.highlightValues(null);\n                     mLastHighlighted = null;\n                 } else {\n+                    Highlight h = new Highlight(index, dataSetIndex);\n+\n+                    if (h.equalTo(mLastHighlighted)) {\n \n-                    mChart.highlightTouch(h);\n-                    mLastHighlighted = h;\n+                        mChart.highlightTouch(null);\n+                        mLastHighlighted = null;\n+                    } else {\n+\n+                        mChart.highlightTouch(h);\n+                        mLastHighlighted = h;\n+                    }\n                 }\n             }\n         }",
    "output": "Fix a crash where dataSetIndex is -1"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -1108,6 +1108,10 @@ public List<SelInfo> getYValsAtIndex(int xIndex) {\n \n             DataSet<?> dataSet = mData.getDataSetByIndex(i);\n \n+            // dont include datasets that cannot be highlighted\n+            if(!dataSet.isHighlightEnabled())\n+                continue;\n+\n             // extract all y-values from all DataSets at the given x-index\n             float yVal = dataSet.getYValForXIndex(xIndex);\n             pts[1] = yVal;",
    "output": "Exclude un-highlightable datasets from being highlighted (issue #777)."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/EntryXIndexComparator.java b/MPChartLib/src/com/github/mikephil/charting/utils/EntryXIndexComparator.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/EntryXIndexComparator.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/EntryXIndexComparator.java\n@@ -0,0 +1,16 @@\n+package com.github.mikephil.charting.utils;\n+\n+import com.github.mikephil.charting.data.Entry;\n+\n+import java.util.Comparator;\n+\n+/**\n+ * Comparator for comparing Entry-objects by their x-index.\n+ * Created by philipp on 17/06/15.\n+ */\n+public class EntryXIndexComparator implements Comparator<Entry> {\n+    @Override\n+    public int compare(Entry entry1, Entry entry2) {\n+        return entry1.getXIndex() - entry2.getXIndex();\n+    }\n+}\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n@@ -16,6 +16,7 @@\n import android.view.ViewConfiguration;\n \n import com.github.mikephil.charting.components.YAxis.AxisDependency;\n+import com.github.mikephil.charting.data.Entry;\n \n import java.text.DecimalFormat;\n import java.util.List;",
    "output": "Added comparator for comparing entries by their x-index."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java\n@@ -76,9 +76,6 @@ private void addEntry() {\n //            \n //            // this automatically refreshes the chart (calls invalidate())\n             mChart.moveViewTo(data.getXValCount()-7, 50f, AxisDependency.LEFT);\n-\n-            // redraw the chart\n-            mChart.invalidate();   \n         }\n     }\n \n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java\n@@ -95,30 +95,7 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         YAxis rightAxis = mChart.getAxisRight();\n         rightAxis.setEnabled(false);\n-        \n-//        new Thread(new Runnable() {\n-//            \n-//            @Override\n-//            public void run() {\n-//                for(int i = 0; i < 5000; i++) {\n-//                    \n-//                    runOnUiThread(new Runnable() {\n-//                        \n-//                        @Override\n-//                        public void run() {\n-//                            addEntry();\n-//                        }\n-//                    });\n-//                    \n-//                    try {\n-//                        Thread.sleep(35);\n-//                    } catch (InterruptedException e) {\n-//                        // TODO Auto-generated catch block\n-//                        e.printStackTrace();\n-//                    }\n-//                }\n-//            }\n-//        }).start();\n+\n     }\n \n     @Override\n@@ -140,6 +117,10 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 Toast.makeText(this, \"Chart cleared!\", Toast.LENGTH_SHORT).show();\n                 break;\n             }\n+            case R.id.actionFeedMultiple: {\n+                feedMultiple();\n+                break;\n+            }\n         }\n         return true;\n     }\n@@ -178,9 +159,6 @@ private void addEntry() {\n             // this automatically refreshes the chart (calls invalidate())\n             // mChart.moveViewTo(data.getXValCount()-7, 55f,\n             // AxisDependency.LEFT);\n-\n-            // redraw the chart\n-            // mChart.invalidate();\n         }\n     }\n \n@@ -201,6 +179,33 @@ private LineDataSet createSet() {\n         return set;\n     }\n \n+    private void feedMultiple() {\n+\n+        new Thread(new Runnable() {\n+\n+            @Override\n+            public void run() {\n+                for(int i = 0; i < 500; i++) {\n+\n+                    runOnUiThread(new Runnable() {\n+\n+                        @Override\n+                        public void run() {\n+                            addEntry();\n+                        }\n+                    });\n+\n+                    try {\n+                        Thread.sleep(35);\n+                    } catch (InterruptedException e) {\n+                        // TODO Auto-generated catch block\n+                        e.printStackTrace();\n+                    }\n+                }\n+            }\n+        }).start();\n+    }\n+\n     @Override\n     public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {\n         Log.i(\"Entry selected\", e.toString());\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n@@ -222,8 +222,8 @@ public Matrix fitScreen() {\n      * not possible. Makes most sense in combination with the\n      * setScaleMinima(...) method.\n      * \n-     * @param pts the position to center view viewport to\n-     * @param chart\n+     * @param transformedPts the position to center view viewport to\n+     * @param view\n      * @return save\n      */\n     public synchronized void centerViewPort(final float[] transformedPts, final View view) {\n@@ -238,25 +238,7 @@ public synchronized void centerViewPort(final float[] transformedPts, final View\n \n         save.postTranslate(-x, -y);\n \n-        refresh(save, view, false);\n-\n-        // final View v = chart.getChartView();\n-        //\n-        // v.post(new Runnable() {\n-        //\n-        // @Override\n-        // public void run() {\n-        // Matrix save = new Matrix();\n-        // save.set(mMatrixTouch);\n-        //\n-        // final float x = transformedPts[0] - offsetLeft();\n-        // final float y = transformedPts[1] - offsetTop();\n-        //\n-        // save.postTranslate(-x, -y);\n-        //\n-        // refresh(save, chart, false);\n-        // }\n-        // });\n+        refresh(save, view, true);\n     }\n \n     /**",
    "output": "Address moveView issue concerning refresh (issue #765)"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -44,6 +44,8 @@ public class RadarChart extends PieRadarChartBase<RadarData> {\n     /** flag indicating if the web lines should be drawn or not */\n     private boolean mDrawWeb = true;\n \n+    private int mWebModulus = 1;\n+\n     /** the object reprsenting the y-axis labels */\n     private YAxis mYAxis;\n \n@@ -317,6 +319,26 @@ public void setDrawWeb(boolean enabled) {\n         mDrawWeb = enabled;\n     }\n \n+    /**\n+     * Sets the number of lines that should be skipped on the web before the\n+     * next line is drawn.\n+     *\n+     * @param count\n+     */\n+    public void setSkipWebLines(int count) {\n+        if (count >0) {\n+            mWebModulus = count;\n+        }\n+    }\n+\n+    /**\n+     *\n+     * @return\n+     */\n+    public int getWebModulus() {\n+        return mWebModulus;\n+    }\n+\n     @Override\n     protected float getRequiredBottomOffset() {\n         return mLegendRenderer.getLabelPaint().getTextSize() * 4.f;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n@@ -167,8 +167,8 @@ protected void drawWeb(Canvas c) {\n         mWebPaint.setColor(mChart.getWebColor());\n         mWebPaint.setAlpha(mChart.getWebAlpha());\n \n-        for (int i = 0; i < mChart.getData().getXValCount(); i++) {\n-\n+        int mod = mChart.getWebModulus();\n+        for (int i = 0; i < mChart.getData().getXValCount(); i += mod) {\n             PointF p = Utils.getPosition(center, mChart.getYRange() * factor, sliceangle * i\n                     + rotationangle);\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererRadarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererRadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererRadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererRadarChart.java\n@@ -37,8 +37,8 @@ public void renderAxisLabels(Canvas c) {\n \n         PointF center = mChart.getCenterOffsets();\n \n-        for (int i = 0; i < mXAxis.getValues().size(); i++) {\n-\n+        int mod = mXAxis.mAxisLabelModulus;\n+        for (int i = 0; i < mXAxis.getValues().size(); i += mod) {\n             String text = mXAxis.getValues().get(i);\n \n             float angle = (sliceangle * i + mChart.getRotationAngle()) % 360f;",
    "output": "added possibility to skip labels and WebLines in RadarChart"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -1409,14 +1409,38 @@ public XAxisRenderer getRendererXAxis() {\n         return mXAxisRenderer;\n     }\n \n+    /**\n+     * Sets a custom XAxisRenderer and overrides the existing (default) one.\n+     * @param xAxisRenderer\n+     */\n+    public void setXAxisRenderer(XAxisRenderer xAxisRenderer) {\n+        mXAxisRenderer = xAxisRenderer;\n+    }\n+\n     public YAxisRenderer getRendererLeftYAxis() {\n         return mAxisRendererLeft;\n     }\n \n+    /**\n+     * Sets a custom axis renderer for the left axis and overwrites the existing one.\n+     * @param rendererLeftYAxis\n+     */\n+    public void setRendererLeftYAxis(YAxisRenderer rendererLeftYAxis) {\n+        mAxisRendererLeft = rendererLeftYAxis;\n+    }\n+\n     public YAxisRenderer getRendererRightYAxis() {\n         return mAxisRendererRight;\n     }\n \n+    /**\n+     * Sets a custom axis renderer for the right acis and overwrites the existing one.\n+     * @param rendererRightYAxis\n+     */\n+    public void setRendererRightYAxis(YAxisRenderer rendererRightYAxis) {\n+        mAxisRendererRight = rendererRightYAxis;\n+    }\n+\n     public float getYChartMax() {\n         return Math.max(mAxisLeft.mAxisMaximum, mAxisRight.mAxisMaximum);\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -219,7 +219,7 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n             cubicFillPath.reset();\n             cubicFillPath.addPath(cubicPath);\n             // create a new path, this is bad for performance\n-            drawCubicFill(mBitmapCanvas, dataSet, cubicFillPath, trans,\n+            drawCubicFill(dataSet, cubicFillPath, trans,\n                     entryFrom.getXIndex(), entryFrom.getXIndex() + size);\n         }\n \n@@ -234,7 +234,7 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n         mRenderPaint.setPathEffect(null);\n     }\n \n-    protected void drawCubicFill(Canvas c, LineDataSet dataSet, Path spline, Transformer trans,\n+    protected void drawCubicFill(LineDataSet dataSet, Path spline, Transformer trans,\n             int from, int to) {\n \n         float fillMin = mChart.getFillFormatter()",
    "output": "Add possiblity to set custom axis renderers (#752)."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -510,17 +510,26 @@ public void highlightValue(int xIndex, int dataSetIndex) {\n      */\n     public void highlightTouch(Highlight high) {\n \n+        Entry e = null;\n+\n         if (high == null)\n             mIndicesToHightlight = null;\n         else {\n \n             if (mLogEnabled)\n                 Log.i(LOG_TAG, \"Highlighted: \" + high.toString());\n \n-            // set the indices to highlight\n-            mIndicesToHightlight = new Highlight[] {\n-                    high\n-            };\n+            e = mData.getEntryForHighlight(high);\n+            if (e == null || e.getXIndex() != high.getXIndex()) {\n+                mIndicesToHightlight = null;\n+                high = null;\n+            }\n+            else {\n+                // set the indices to highlight\n+                mIndicesToHightlight = new Highlight[] {\n+                        high\n+                };\n+            }\n         }\n \n         // redraw the chart\n@@ -531,9 +540,6 @@ public void highlightTouch(Highlight high) {\n             if (!valuesToHighlight())\n                 mSelectionListener.onNothingSelected();\n             else {\n-\n-                Entry e = mData.getEntryForHighlight(high);\n-\n                 // notify the listener\n                 mSelectionListener.onValueSelected(e, high.getDataSetIndex(), high);\n             }\n@@ -570,7 +576,7 @@ protected void drawMarkers(Canvas canvas) {\n                 Entry e = mData.getEntryForHighlight(mIndicesToHightlight[i]);\n \n                 // make sure entry not null\n-                if (e == null)\n+                if (e == null || e.getXIndex() != mIndicesToHightlight[i].getXIndex())\n                     continue;\n \n                 float[] pos = getMarkerPosition(e, dataSetIndex);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -176,7 +176,7 @@ public float getYValForXIndex(int xIndex) {\n \n         Entry e = getEntryForXIndex(xIndex);\n \n-        if (e != null)\n+        if (e != null && e.getXIndex() == xIndex)\n             return e.getVal();\n         else\n             return Float.NaN;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -335,13 +335,12 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             mHighlightPaint.setAlpha(set.getHighLightAlpha());\n \n             // check outofbounds\n-            if (index < mChart.getBarData().getYValCount() && index >= 0\n+            if (index >= 0\n                     && index < (mChart.getXChartMax() * mAnimator.getPhaseX()) / setCount) {\n \n-                BarEntry e = mChart.getBarData().getDataSetByIndex(dataSetIndex)\n-                        .getEntryForXIndex(index);\n+                BarEntry e = set.getEntryForXIndex(index);\n \n-                if (e == null)\n+                if (e == null || e.getXIndex() != index)\n                     continue;\n \n                 float groupspace = mChart.getBarData().getGroupSpace();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n@@ -210,6 +210,8 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, dataSet.getEntryCount());\n \n             final BubbleEntry entry = (BubbleEntry) bubbleData.getEntryForHighlight(indice);\n+            if (entry == null || entry.getXIndex() != indice.getXIndex())\n+                continue;\n \n             Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n             \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n@@ -272,7 +272,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n             CandleEntry e = set.getEntryForXIndex(xIndex);\n \n-            if (e == null)\n+            if (e == null || e.getXIndex() != xIndex)\n                 continue;\n \n             float low = e.getLow() * mAnimator.getPhaseY();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -546,7 +546,11 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             if (xIndex > mChart.getXChartMax() * mAnimator.getPhaseX())\n                 continue;\n \n-            float y = set.getYValForXIndex(xIndex) * mAnimator.getPhaseY(); // get\n+            float yValue = set.getYValForXIndex(xIndex);\n+            if (yValue == Float.NaN)\n+                continue;\n+\n+            float y = yValue * mAnimator.getPhaseY(); // get\n                                                                             // the\n             // y-position\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n@@ -219,6 +219,9 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             int xIndex = indices[i].getXIndex();\n \n             Entry e = set.getEntryForXIndex(xIndex);\n+            if (e == null || e.getXIndex() != xIndex)\n+                continue;\n+\n             int j = set.getEntryPosition(e);\n             float y = (e.getVal() - mChart.getYChartMin());\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n@@ -266,7 +266,11 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             if (xIndex > mChart.getXChartMax() * mAnimator.getPhaseX())\n                 continue;\n \n-            float y = set.getYValForXIndex(xIndex) * mAnimator.getPhaseY(); // get\n+            float yValue = set.getYValForXIndex(xIndex);\n+            if (yValue == Float.NaN)\n+                continue;\n+\n+            float y = yValue * mAnimator.getPhaseY(); // get\n                                                                             // the\n             // y-position\n ",
    "output": "Merge pull request #744 from danielgindi/master\n\nHighlight bugfixes when y values are possibly omitted"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -335,7 +335,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             mHighlightPaint.setAlpha(set.getHighLightAlpha());\n \n             // check outofbounds\n-            if (index < mChart.getBarData().getYValCount() && index >= 0\n+            if (index >= 0\n                     && index < (mChart.getXChartMax() * mAnimator.getPhaseX()) / setCount) {\n \n                 BarEntry e = set.getEntryForXIndex(index);",
    "output": "Bugfix: In some cases involving missing y-values, the highlight would not draw"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -510,17 +510,26 @@ public void highlightValue(int xIndex, int dataSetIndex) {\n      */\n     public void highlightTouch(Highlight high) {\n \n+        Entry e = null;\n+\n         if (high == null)\n             mIndicesToHightlight = null;\n         else {\n \n             if (mLogEnabled)\n                 Log.i(LOG_TAG, \"Highlighted: \" + high.toString());\n \n-            // set the indices to highlight\n-            mIndicesToHightlight = new Highlight[] {\n-                    high\n-            };\n+            e = mData.getEntryForHighlight(high);\n+            if (e == null || e.getXIndex() != high.getXIndex()) {\n+                mIndicesToHightlight = null;\n+                high = null;\n+            }\n+            else {\n+                // set the indices to highlight\n+                mIndicesToHightlight = new Highlight[] {\n+                        high\n+                };\n+            }\n         }\n \n         // redraw the chart\n@@ -531,9 +540,6 @@ public void highlightTouch(Highlight high) {\n             if (!valuesToHighlight())\n                 mSelectionListener.onNothingSelected();\n             else {\n-\n-                Entry e = mData.getEntryForHighlight(high);\n-\n                 // notify the listener\n                 mSelectionListener.onValueSelected(e, high.getDataSetIndex(), high);\n             }\n@@ -570,7 +576,7 @@ protected void drawMarkers(Canvas canvas) {\n                 Entry e = mData.getEntryForHighlight(mIndicesToHightlight[i]);\n \n                 // make sure entry not null\n-                if (e == null)\n+                if (e == null || e.getXIndex() != mIndicesToHightlight[i].getXIndex())\n                     continue;\n \n                 float[] pos = getMarkerPosition(e, dataSetIndex);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -176,7 +176,7 @@ public float getYValForXIndex(int xIndex) {\n \n         Entry e = getEntryForXIndex(xIndex);\n \n-        if (e != null)\n+        if (e != null && e.getXIndex() == xIndex)\n             return e.getVal();\n         else\n             return Float.NaN;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -338,10 +338,9 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             if (index < mChart.getBarData().getYValCount() && index >= 0\n                     && index < (mChart.getXChartMax() * mAnimator.getPhaseX()) / setCount) {\n \n-                BarEntry e = mChart.getBarData().getDataSetByIndex(dataSetIndex)\n-                        .getEntryForXIndex(index);\n+                BarEntry e = set.getEntryForXIndex(index);\n \n-                if (e == null)\n+                if (e == null || e.getXIndex() != index)\n                     continue;\n \n                 float groupspace = mChart.getBarData().getGroupSpace();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n@@ -210,6 +210,8 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, dataSet.getEntryCount());\n \n             final BubbleEntry entry = (BubbleEntry) bubbleData.getEntryForHighlight(indice);\n+            if (entry == null || entry.getXIndex() != indice.getXIndex())\n+                continue;\n \n             Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n             \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n@@ -272,7 +272,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n             CandleEntry e = set.getEntryForXIndex(xIndex);\n \n-            if (e == null)\n+            if (e == null || e.getXIndex() != xIndex)\n                 continue;\n \n             float low = e.getLow() * mAnimator.getPhaseY();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -546,7 +546,11 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             if (xIndex > mChart.getXChartMax() * mAnimator.getPhaseX())\n                 continue;\n \n-            float y = set.getYValForXIndex(xIndex) * mAnimator.getPhaseY(); // get\n+            float yValue = set.getYValForXIndex(xIndex);\n+            if (yValue == Float.NaN)\n+                continue;\n+\n+            float y = yValue * mAnimator.getPhaseY(); // get\n                                                                             // the\n             // y-position\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n@@ -219,6 +219,9 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             int xIndex = indices[i].getXIndex();\n \n             Entry e = set.getEntryForXIndex(xIndex);\n+            if (e == null || e.getXIndex() != xIndex)\n+                continue;\n+\n             int j = set.getEntryPosition(e);\n             float y = (e.getVal() - mChart.getYChartMin());\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n@@ -266,7 +266,11 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             if (xIndex > mChart.getXChartMax() * mAnimator.getPhaseX())\n                 continue;\n \n-            float y = set.getYValForXIndex(xIndex) * mAnimator.getPhaseY(); // get\n+            float yValue = set.getYValForXIndex(xIndex);\n+            if (yValue == Float.NaN)\n+                continue;\n+\n+            float y = yValue * mAnimator.getPhaseY(); // get\n                                                                             // the\n             // y-position\n ",
    "output": "Bugfix: Highlights on xIndex that miss yValues were still highlighting"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n@@ -87,6 +87,9 @@ protected void onCreate(Bundle savedInstanceState) {\n         Legend l = mChart.getLegend();\n         l.setPosition(LegendPosition.RIGHT_OF_CHART_INSIDE);\n         l.setTypeface(tf);\n+        l.setYOffset(0f);\n+        l.setYEntrySpace(0f);\n+        l.setTextSize(8f);\n \n         XAxis xl = mChart.getXAxis();\n         xl.setTypeface(tf);\n@@ -95,7 +98,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         leftAxis.setTypeface(tf);\n         leftAxis.setValueFormatter(new LargeValueFormatter());\n         leftAxis.setDrawGridLines(false);\n-        leftAxis.setSpaceTop(25f);\n+        leftAxis.setSpaceTop(30f);\n \n         mChart.getAxisRight().setEnabled(false);\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -536,7 +536,7 @@ public boolean onDoubleTap(MotionEvent e) {\n \n             PointF trans = getTrans(e.getX(), e.getY());\n \n-            mChart.zoom(1.4f, 1.4f, trans.x, trans.y);\n+            mChart.zoom(mChart.isScaleXEnabled() ? 1.4f : 1f, mChart.isScaleYEnabled() ? 1.4f : 1f, trans.x, trans.y);\n \n             if (mChart.isLogEnabled())\n                 Log.i(\"BarlineChartTouch\", \"Double-Tap, Zooming In, x: \" + trans.x + \", y: \"",
    "output": "Fix issue #740"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScrollViewActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScrollViewActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScrollViewActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScrollViewActivity.java\n@@ -0,0 +1,72 @@\n+\n+package com.xxmassdeveloper.mpchartexample;\n+\n+import android.os.Bundle;\n+import android.view.WindowManager;\n+\n+import com.github.mikephil.charting.charts.BarChart;\n+import com.github.mikephil.charting.components.XAxis;\n+import com.github.mikephil.charting.components.XAxis.XAxisPosition;\n+import com.github.mikephil.charting.data.BarData;\n+import com.github.mikephil.charting.data.BarDataSet;\n+import com.github.mikephil.charting.data.BarEntry;\n+import com.github.mikephil.charting.utils.ColorTemplate;\n+import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n+\n+import java.util.ArrayList;\n+\n+public class ScrollViewActivity extends DemoBase {\n+\n+    private BarChart mChart;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,\n+                WindowManager.LayoutParams.FLAG_FULLSCREEN);\n+        setContentView(R.layout.activity_scrollview);\n+\n+        mChart = (BarChart) findViewById(R.id.chart1);\n+\n+        mChart.setDescription(\"\");\n+\n+        // scaling can now only be done on x- and y-axis separately\n+        mChart.setPinchZoom(false);\n+\n+        mChart.setDrawBarShadow(false);\n+        mChart.setDrawGridBackground(false);\n+\n+        XAxis xAxis = mChart.getXAxis();\n+        xAxis.setPosition(XAxisPosition.BOTTOM);\n+        xAxis.setLabelsToSkip(0);\n+        xAxis.setDrawGridLines(false);\n+        \n+        mChart.getAxisLeft().setDrawGridLines(false);\n+        \n+        mChart.getLegend().setEnabled(false);\n+\n+        setData(10);\n+    }\n+    \n+    private void setData(int count) {\n+        \n+        ArrayList<BarEntry> yVals = new ArrayList<BarEntry>();\n+        ArrayList<String> xVals = new ArrayList<String>();\n+\n+        for (int i = 0; i < count; i++) {\n+            float val = (float) (Math.random() * count) + 15;\n+            yVals.add(new BarEntry((int) val, i));\n+            xVals.add((int) val + \"\");\n+        }\n+\n+        BarDataSet set = new BarDataSet(yVals, \"Data Set\");\n+        set.setColors(ColorTemplate.VORDIPLOM_COLORS);\n+        set.setDrawValues(false);\n+\n+        BarData data = new BarData(xVals, set);\n+\n+        mChart.setData(data);\n+        mChart.invalidate();\n+        mChart.animateY(800);\n+    }\n+}\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n@@ -43,6 +43,7 @@\n import com.xxmassdeveloper.mpchartexample.RadarChartActivitry;\n import com.xxmassdeveloper.mpchartexample.RealtimeLineChartActivity;\n import com.xxmassdeveloper.mpchartexample.ScatterChartActivity;\n+import com.xxmassdeveloper.mpchartexample.ScrollViewActivity;\n import com.xxmassdeveloper.mpchartexample.StackedBarActivity;\n import com.xxmassdeveloper.mpchartexample.fragments.SimpleChartDemo;\n \n@@ -120,6 +121,9 @@ protected void onCreate(Bundle savedInstanceState) {\n         objects.add(new ContentItem(\n                 \"Sinus Bar Chart\",\n                 \"A Bar Chart plotting the sinus function with 8.000 values.\"));\n+        objects.add(new ContentItem(\n+                \"Chart in ScrollView\",\n+                \"This demonstrates how to use a chart inside a ScrollView.\"));\n \n         MyAdapter adapter = new MyAdapter(this, objects);\n \n@@ -241,6 +245,10 @@ public void onItemClick(AdapterView<?> av, View v, int pos, long arg3) {\n                 i = new Intent(this, BarChartActivitySinus.class);\n                 startActivity(i);\n                 break;\n+            case 25:\n+                i = new Intent(this, ScrollViewActivity.class);\n+                startActivity(i);\n+                break;\n         }\n \n         overridePendingTransition(R.anim.move_right_in_activity, R.anim.move_left_out_activity);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1510,20 +1510,6 @@ public boolean saveToGallery(String fileName, int quality) {\n                 ? false : true;\n     }\n \n-    @Override\n-    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n-        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n-    }\n-\n-    @Override\n-    protected void onLayout(boolean changed, int left, int top, int right, int bottom) {\n-\n-        // prepareContentRect();\n-        for (int i = 0; i < getChildCount(); i++) {\n-            getChildAt(i).layout(left, top, right, bottom);\n-        }\n-    }\n-\n     /** tasks to be done after the view is setup */\n     protected ArrayList<Runnable> mJobs = new ArrayList<Runnable>();\n \n@@ -1555,6 +1541,27 @@ public ArrayList<Runnable> getJobs() {\n         return mJobs;\n     }\n \n+    @Override\n+    protected void onLayout(boolean changed, int left, int top, int right, int bottom) {\n+\n+        for (int i = 0; i < getChildCount(); i++) {\n+            getChildAt(i).layout(left, top, right, bottom);\n+        }\n+    }\n+\n+    @Override\n+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n+        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n+        int size = (int) Utils.convertDpToPixel(50f);\n+        setMeasuredDimension(\n+                Math.max(getSuggestedMinimumWidth(),\n+                        resolveSize(size,\n+                                widthMeasureSpec)),\n+                Math.max(getSuggestedMinimumHeight(),\n+                        resolveSize(size,\n+                                heightMeasureSpec)));\n+    }\n+\n     @Override\n     protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n         if (mLogEnabled)",
    "output": "Indroducing chart minimum height of 50dp if no other height attribute is set (fix issue #566, #720)"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -651,11 +651,22 @@ public void setScaleMinima(float scaleX, float scaleY) {\n      * visible at once. If this is e.g. set to 10, no more than 10 values on the\n      * x-axis can be viewed at once without scrolling.\n      * \n-     * @param xRange\n+     * @param minScaleX\n      */\n-    public void setVisibleXRange(float xRange) {\n-        float xScale = mDeltaX / (xRange);\n-        mViewPortHandler.setMinimumScaleX(xScale);\n+    public void setVisibleXRange(float minScaleX) {\n+        float xScale = mDeltaX / (minScaleX);\n+        mViewPortHandler.setMinimumScaleX(minScaleX);\n+    }\n+\n+    /**\n+     * Limits the maximum and minimum value count that can be visible by pinching and zooming.\n+     * e.g. minRange=10, maxRange=100 no less than 10 values and no more that 100 values can be viewed\n+     * at once without scrolling\n+     */\n+    public void setVisibleXRange(float minScaleX, float maxScaleX) {\n+        float maxScale = mDeltaX / minScaleX;\n+        float minScale = mDeltaX / maxScaleX;\n+        mViewPortHandler.setScaleXRange(minScaleX, maxScaleX);\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -317,35 +317,48 @@ private void performZoom(MotionEvent event) {\n                 // mode\n                 if (mTouchMode == PINCH_ZOOM) {\n \n-                    float scale = totalDist / mSavedDist; // total\n-                                                          // scale\n+                    float scale = totalDist / mSavedDist; // total scale\n+\n+                    boolean isZoomingOut = (scale < 1);\n+                    boolean canZoomMoreX = isZoomingOut ?\n+                            mChart.getViewPortHandler().canZoomOutMoreX() :\n+                            mChart.getViewPortHandler().canZoomInMoreX();\n \n                     float scaleX = (mChart.isScaleXEnabled()) ? scale : 1f;\n                     float scaleY = (mChart.isScaleYEnabled()) ? scale : 1f;\n \n-                    mMatrix.set(mSavedMatrix);\n-                    mMatrix.postScale(scaleX, scaleY, t.x, t.y);\n+                    if (mChart.isScaleYEnabled() || canZoomMoreX) {\n \n-                    if (l != null)\n-                        l.onChartScale(event, scaleX, scaleY);\n+                        mMatrix.set(mSavedMatrix);\n+                        mMatrix.postScale(scaleX, scaleY, t.x, t.y);\n+\n+                        if (l != null)\n+                            l.onChartScale(event, scaleX, scaleY);\n+                    }\n \n                 } else if (mTouchMode == X_ZOOM && mChart.isScaleXEnabled()) {\n \n                     float xDist = getXDist(event);\n-                    float scaleX = xDist / mSavedXDist; // x-axis\n-                                                        // scale\n+                    float scaleX = xDist / mSavedXDist; // x-axis scale\n \n-                    mMatrix.set(mSavedMatrix);\n-                    mMatrix.postScale(scaleX, 1f, t.x, t.y);\n+                    boolean isZoomingOut = (scaleX < 1);\n+                    boolean canZoomMoreX = isZoomingOut ?\n+                            mChart.getViewPortHandler().canZoomOutMoreX() :\n+                            mChart.getViewPortHandler().canZoomInMoreX();\n \n-                    if (l != null)\n-                        l.onChartScale(event, scaleX, 1f);\n+                    if (canZoomMoreX) {\n+\n+                        mMatrix.set(mSavedMatrix);\n+                        mMatrix.postScale(scaleX, 1f, t.x, t.y);\n+\n+                        if (l != null)\n+                            l.onChartScale(event, scaleX, 1f);\n+                    }\n \n                 } else if (mTouchMode == Y_ZOOM && mChart.isScaleYEnabled()) {\n \n                     float yDist = getYDist(event);\n-                    float scaleY = yDist / mSavedYDist; // y-axis\n-                                                        // scale\n+                    float scaleY = yDist / mSavedYDist; // y-axis scale\n \n                     mMatrix.set(mSavedMatrix);\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n@@ -23,6 +23,9 @@ public class ViewPortHandler {\n     /** minimum scale value on the x-axis */\n     private float mMinScaleX = 1f;\n \n+    /** maximum scale value on the x-axis */\n+    private float mMaxScaleX = Float.MAX_VALUE;\n+\n     /** contains the current scale factor of the x-axis */\n     private float mScaleX = 1f;\n \n@@ -292,8 +295,8 @@ public void limitTransAndScale(Matrix matrix, RectF content) {\n         float curTransY = vals[Matrix.MTRANS_Y];\n         float curScaleY = vals[Matrix.MSCALE_Y];\n \n-        // min scale-x is 1f\n-        mScaleX = Math.max(mMinScaleX, curScaleX);\n+        // min scale-x is 1f, max is the max float\n+        mScaleX = Math.min(Math.max(mMinScaleX, curScaleX), mMaxScaleX);\n \n         // min scale-y is 1f\n         mScaleY = Math.max(mMinScaleY, curScaleY);\n@@ -339,6 +342,13 @@ public void setMinimumScaleX(float xScale) {\n         limitTransAndScale(mMatrixTouch, mContentRect);\n     }\n \n+    public void setMaximumScaleX(float xScale) {\n+\n+        mMaxScaleX = xScale;\n+\n+        limitTransAndScale(mMatrixTouch, mContentRect);\n+    }\n+\n     public void setMinimumScaleY(float yScale) {\n \n         if (yScale < 1f)\n@@ -482,4 +492,24 @@ public void setDragOffsetY(float offset) {\n     public boolean hasNoDragOffset() {\n         return mTransOffsetX <= 0 && mTransOffsetY <= 0 ? true : false;\n     }\n+\n+    public void setScaleXRange(float minScaleX, float maxScaleX) {\n+\n+        if (minScaleX < 1f)\n+            minScaleX = 1f;\n+\n+        mMinScaleX = minScaleX;\n+        mMaxScaleX = maxScaleX;\n+\n+        limitTransAndScale(mMatrixTouch, mContentRect);\n+    }\n+\n+    public boolean canZoomOutMoreX() {\n+        return (mScaleX > mMinScaleX);\n+    }\n+\n+    public boolean canZoomInMoreX() {\n+        return (mScaleX < mMaxScaleX);\n+    }\n+\n }",
    "output": "Merge pull request #713 from danielgindi/max-x-scale\n\nAllow limiting x-scaling by a maximum value"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -657,11 +657,22 @@ public void setScaleMinima(float scaleX, float scaleY) {\n      * visible at once. If this is e.g. set to 10, no more than 10 values on the\n      * x-axis can be viewed at once without scrolling.\n      * \n-     * @param xRange\n+     * @param minScaleX\n      */\n-    public void setVisibleXRange(float xRange) {\n-        float xScale = mDeltaX / (xRange);\n-        mViewPortHandler.setMinimumScaleX(xScale);\n+    public void setVisibleXRange(float minScaleX) {\n+        float xScale = mDeltaX / (minScaleX);\n+        mViewPortHandler.setMinimumScaleX(minScaleX);\n+    }\n+\n+    /**\n+     * Limits the maximum and minimum value count that can be visible by pinching and zooming.\n+     * e.g. minRange=10, maxRange=100 no less than 10 values and no more that 100 values can be viewed\n+     * at once without scrolling\n+     */\n+    public void setVisibleXRange(float minScaleX, float maxScaleX) {\n+        float maxScale = mDeltaX / minScaleX;\n+        float minScale = mDeltaX / maxScaleX;\n+        mViewPortHandler.setScaleXRange(minScaleX, maxScaleX);\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -317,35 +317,48 @@ private void performZoom(MotionEvent event) {\n                 // mode\n                 if (mTouchMode == PINCH_ZOOM) {\n \n-                    float scale = totalDist / mSavedDist; // total\n-                                                          // scale\n+                    float scale = totalDist / mSavedDist; // total scale\n+\n+                    boolean isZoomingOut = (scale < 1);\n+                    boolean canZoomMoreX = isZoomingOut ?\n+                            mChart.getViewPortHandler().canZoomOutMoreX() :\n+                            mChart.getViewPortHandler().canZoomInMoreX();\n \n                     float scaleX = (mChart.isScaleXEnabled()) ? scale : 1f;\n                     float scaleY = (mChart.isScaleYEnabled()) ? scale : 1f;\n \n-                    mMatrix.set(mSavedMatrix);\n-                    mMatrix.postScale(scaleX, scaleY, t.x, t.y);\n+                    if (mChart.isScaleYEnabled() || canZoomMoreX) {\n \n-                    if (l != null)\n-                        l.onChartScale(event, scaleX, scaleY);\n+                        mMatrix.set(mSavedMatrix);\n+                        mMatrix.postScale(scaleX, scaleY, t.x, t.y);\n+\n+                        if (l != null)\n+                            l.onChartScale(event, scaleX, scaleY);\n+                    }\n \n                 } else if (mTouchMode == X_ZOOM && mChart.isScaleXEnabled()) {\n \n                     float xDist = getXDist(event);\n-                    float scaleX = xDist / mSavedXDist; // x-axis\n-                                                        // scale\n+                    float scaleX = xDist / mSavedXDist; // x-axis scale\n \n-                    mMatrix.set(mSavedMatrix);\n-                    mMatrix.postScale(scaleX, 1f, t.x, t.y);\n+                    boolean isZoomingOut = (scaleX < 1);\n+                    boolean canZoomMoreX = isZoomingOut ?\n+                            mChart.getViewPortHandler().canZoomOutMoreX() :\n+                            mChart.getViewPortHandler().canZoomInMoreX();\n \n-                    if (l != null)\n-                        l.onChartScale(event, scaleX, 1f);\n+                    if (canZoomMoreX) {\n+\n+                        mMatrix.set(mSavedMatrix);\n+                        mMatrix.postScale(scaleX, 1f, t.x, t.y);\n+\n+                        if (l != null)\n+                            l.onChartScale(event, scaleX, 1f);\n+                    }\n \n                 } else if (mTouchMode == Y_ZOOM && mChart.isScaleYEnabled()) {\n \n                     float yDist = getYDist(event);\n-                    float scaleY = yDist / mSavedYDist; // y-axis\n-                                                        // scale\n+                    float scaleY = yDist / mSavedYDist; // y-axis scale\n \n                     mMatrix.set(mSavedMatrix);\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n@@ -23,6 +23,9 @@ public class ViewPortHandler {\n     /** minimum scale value on the x-axis */\n     private float mMinScaleX = 1f;\n \n+    /** maximum scale value on the x-axis */\n+    private float mMaxScaleX = Float.MAX_VALUE;\n+\n     /** contains the current scale factor of the x-axis */\n     private float mScaleX = 1f;\n \n@@ -292,8 +295,8 @@ public void limitTransAndScale(Matrix matrix, RectF content) {\n         float curTransY = vals[Matrix.MTRANS_Y];\n         float curScaleY = vals[Matrix.MSCALE_Y];\n \n-        // min scale-x is 1f\n-        mScaleX = Math.max(mMinScaleX, curScaleX);\n+        // min scale-x is 1f, max is the max float\n+        mScaleX = Math.min(Math.max(mMinScaleX, curScaleX), mMaxScaleX);\n \n         // min scale-y is 1f\n         mScaleY = Math.max(mMinScaleY, curScaleY);\n@@ -339,6 +342,13 @@ public void setMinimumScaleX(float xScale) {\n         limitTransAndScale(mMatrixTouch, mContentRect);\n     }\n \n+    public void setMaximumScaleX(float xScale) {\n+\n+        mMaxScaleX = xScale;\n+\n+        limitTransAndScale(mMatrixTouch, mContentRect);\n+    }\n+\n     public void setMinimumScaleY(float yScale) {\n \n         if (yScale < 1f)\n@@ -482,4 +492,24 @@ public void setDragOffsetY(float offset) {\n     public boolean hasNoDragOffset() {\n         return mTransOffsetX <= 0 && mTransOffsetY <= 0 ? true : false;\n     }\n+\n+    public void setScaleXRange(float minScaleX, float maxScaleX) {\n+\n+        if (minScaleX < 1f)\n+            minScaleX = 1f;\n+\n+        mMinScaleX = minScaleX;\n+        mMaxScaleX = maxScaleX;\n+\n+        limitTransAndScale(mMatrixTouch, mContentRect);\n+    }\n+\n+    public boolean canZoomOutMoreX() {\n+        return (mScaleX > mMinScaleX);\n+    }\n+\n+    public boolean canZoomInMoreX() {\n+        return (mScaleX < mMaxScaleX);\n+    }\n+\n }",
    "output": "Allow limiting x-scaling by a maximum value"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/ScatterChartFrag.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/ScatterChartFrag.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/ScatterChartFrag.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/ScatterChartFrag.java\n@@ -10,6 +10,7 @@\n import com.github.mikephil.charting.components.Legend;\n import com.github.mikephil.charting.components.XAxis;\n import com.github.mikephil.charting.components.YAxis;\n+import com.github.mikephil.charting.components.Legend.LegendPosition;\n import com.xxmassdeveloper.mpchartexample.R;\n import com.xxmassdeveloper.mpchartexample.custom.MyMarkerView;\n \n@@ -51,7 +52,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa\n         rightAxis.setDrawGridLines(false);\n         \n         Legend l = mChart.getLegend();\n-      //  l.setWordWrapEnabled(true);\n+        l.setWordWrapEnabled(true);\n         l.setTypeface(tf);\n         \n         return v;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -463,6 +463,11 @@ protected void calculateOffsets() {\n                 }\n             }\n \n+            offsetTop += getExtraTopOffset();\n+            offsetRight += getExtraRightOffset();\n+            offsetBottom += getExtraBottomOffset();\n+            offsetLeft += getExtraLeftOffset();\n+\n             float min = Utils.convertDpToPixel(10f);\n \n             mViewPortHandler.restrainViewPort(Math.max(min, offsetLeft), Math.max(min, offsetTop),\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -150,6 +150,12 @@ public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entr\n     /** object responsible for animations */\n     protected ChartAnimator mAnimator;\n \n+    /** Extra offsets to be appended to the viewport */\n+    private float mExtraTopOffset = 0.f,\n+            mExtraRightOffset = 0.f,\n+            mExtraBottomOffset = 0.f,\n+            mExtraLeftOffset = 0.f;\n+\n     /** default constructor for initialization in code */\n     public Chart(Context context) {\n         super(context);\n@@ -1021,6 +1027,62 @@ public void setDescriptionColor(int color) {\n         mDescPaint.setColor(color);\n     }\n \n+    /**\n+     * Set an extra offset to be appended to the viewport's top\n+     */\n+    public void setExtraTopOffset(float offset) {\n+        mExtraTopOffset = offset;\n+    }\n+\n+    /**\n+     * @return the extra offset to be appended to the viewport's top\n+     */\n+    public float getExtraTopOffset() {\n+        return mExtraTopOffset;\n+    }\n+\n+    /**\n+     * Set an extra offset to be appended to the viewport's right\n+     */\n+    public void setExtraRightOffset(float offset) {\n+        mExtraRightOffset = offset;\n+    }\n+\n+    /**\n+     * @return the extra offset to be appended to the viewport's right\n+     */\n+    public float getExtraRightOffset() {\n+        return mExtraRightOffset;\n+    }\n+\n+    /**\n+     * Set an extra offset to be appended to the viewport's bottom\n+     */\n+    public void setExtraBottomOffset(float offset) {\n+        mExtraBottomOffset = offset;\n+    }\n+\n+    /**\n+     * @return the extra offset to be appended to the viewport's bottom\n+     */\n+    public float getExtraBottomOffset() {\n+        return mExtraBottomOffset;\n+    }\n+\n+    /**\n+     * Set an extra offset to be appended to the viewport's left\n+     */\n+    public void setExtraLeftOffset(float offset) {\n+        mExtraLeftOffset = offset;\n+    }\n+\n+    /**\n+     * @return the extra offset to be appended to the viewport's left\n+     */\n+    public float getExtraLeftOffset() {\n+        return mExtraLeftOffset;\n+    }\n+\n     /**\n      * Set this to true to enable logcat outputs for the chart. Default:\n      * disabled\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n@@ -117,6 +117,11 @@ protected void calculateOffsets() {\n             }\n         }\n \n+        offsetTop += getExtraTopOffset();\n+        offsetRight += getExtraRightOffset();\n+        offsetBottom += getExtraBottomOffset();\n+        offsetLeft += getExtraLeftOffset();\n+\n         float min = Utils.convertDpToPixel(10f);\n \n         mViewPortHandler.restrainViewPort(Math.max(min, offsetLeft), Math.max(min, offsetTop),\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -207,6 +207,11 @@ protected void calculateOffsets() {\n             }\n         }\n \n+        legendTop += getExtraTopOffset();\n+        legendRight += getExtraRightOffset();\n+        legendBottom += getExtraBottomOffset();\n+        legendLeft += getExtraLeftOffset();\n+\n         float offsetLeft = Math.max(min, legendLeft);\n         float offsetTop = Math.max(min, legendTop);\n         float offsetRight = Math.max(min, legendRight);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -173,7 +173,7 @@ public void renderLegend(Canvas c) {\n         mLegendLabelPaint.setTextSize(mLegend.getTextSize());\n         mLegendLabelPaint.setColor(mLegend.getTextColor());\n \n-        float labelLineHeight = Utils.calcTextHeight(mLegendLabelPaint, \"AQJ\");\n+        float labelLineHeight = - mLegendLabelPaint.ascent() - mLegendLabelPaint.descent(); // Utils.calcTextHeight(mLegendLabelPaint, \"AQJ\");\n \n         String[] labels = mLegend.getLabels();\n         int[] colors = mLegend.getColors();",
    "output": "Minor changes."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -463,6 +463,11 @@ protected void calculateOffsets() {\n                 }\n             }\n \n+            offsetTop += getExtraTopOffset();\n+            offsetRight += getExtraRightOffset();\n+            offsetBottom += getExtraBottomOffset();\n+            offsetLeft += getExtraLeftOffset();\n+\n             float min = Utils.convertDpToPixel(10f);\n \n             mViewPortHandler.restrainViewPort(Math.max(min, offsetLeft), Math.max(min, offsetTop),\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -150,6 +150,12 @@ public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entr\n     /** object responsible for animations */\n     protected ChartAnimator mAnimator;\n \n+    /** Extra offsets to be appended to the viewport */\n+    private float mExtraTopOffset = 0.f,\n+            mExtraRightOffset = 0.f,\n+            mExtraBottomOffset = 0.f,\n+            mExtraLeftOffset = 0.f;\n+\n     /** default constructor for initialization in code */\n     public Chart(Context context) {\n         super(context);\n@@ -1021,6 +1027,62 @@ public void setDescriptionColor(int color) {\n         mDescPaint.setColor(color);\n     }\n \n+    /**\n+     * Set an extra offset to be appended to the viewport's top\n+     */\n+    public void setExtraTopOffset(float offset) {\n+        mExtraTopOffset = offset;\n+    }\n+\n+    /**\n+     * @return the extra offset to be appended to the viewport's top\n+     */\n+    public float getExtraTopOffset() {\n+        return mExtraTopOffset;\n+    }\n+\n+    /**\n+     * Set an extra offset to be appended to the viewport's right\n+     */\n+    public void setExtraRightOffset(float offset) {\n+        mExtraRightOffset = offset;\n+    }\n+\n+    /**\n+     * @return the extra offset to be appended to the viewport's right\n+     */\n+    public float getExtraRightOffset() {\n+        return mExtraRightOffset;\n+    }\n+\n+    /**\n+     * Set an extra offset to be appended to the viewport's bottom\n+     */\n+    public void setExtraBottomOffset(float offset) {\n+        mExtraBottomOffset = offset;\n+    }\n+\n+    /**\n+     * @return the extra offset to be appended to the viewport's bottom\n+     */\n+    public float getExtraBottomOffset() {\n+        return mExtraBottomOffset;\n+    }\n+\n+    /**\n+     * Set an extra offset to be appended to the viewport's left\n+     */\n+    public void setExtraLeftOffset(float offset) {\n+        mExtraLeftOffset = offset;\n+    }\n+\n+    /**\n+     * @return the extra offset to be appended to the viewport's left\n+     */\n+    public float getExtraLeftOffset() {\n+        return mExtraLeftOffset;\n+    }\n+\n     /**\n      * Set this to true to enable logcat outputs for the chart. Default:\n      * disabled\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n@@ -117,6 +117,11 @@ protected void calculateOffsets() {\n             }\n         }\n \n+        offsetTop += getExtraTopOffset();\n+        offsetRight += getExtraRightOffset();\n+        offsetBottom += getExtraBottomOffset();\n+        offsetLeft += getExtraLeftOffset();\n+\n         float min = Utils.convertDpToPixel(10f);\n \n         mViewPortHandler.restrainViewPort(Math.max(min, offsetLeft), Math.max(min, offsetTop),\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -207,6 +207,11 @@ protected void calculateOffsets() {\n             }\n         }\n \n+        legendTop += getExtraTopOffset();\n+        legendRight += getExtraRightOffset();\n+        legendBottom += getExtraBottomOffset();\n+        legendLeft += getExtraLeftOffset();\n+\n         float offsetLeft = Math.max(min, legendLeft);\n         float offsetTop = Math.max(min, legendTop);\n         float offsetRight = Math.max(min, legendRight);",
    "output": "Merge pull request #695 from danielgindi/extra-offsets\n\nAllow controlling the extra offsets caused by the legends"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n@@ -191,6 +191,9 @@ public Matrix zoom(float scaleX, float scaleY, float x, float y) {\n      * bounds.\n      */\n     public Matrix fitScreen() {\n+        \n+        mMinScaleX = 1f;\n+        mMinScaleY = 1f;\n \n         Matrix save = new Matrix();\n         save.set(mMatrixTouch);",
    "output": "Fix issue #625."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -401,18 +401,20 @@ protected void calculateOffsets() {\n                 if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART\n                         || mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART_CENTER) {\n \n-                    offsetRight += mLegend.mTextWidthMax + mLegend.getXOffset() * 2f;\n+                    offsetRight += Math.min(mLegend.mNeededWidth, mViewPortHandler.getChartWidth() * mLegend.getMaxSizePercent()) + mLegend.getXOffset() * 2f;\n \n                 } else if (mLegend.getPosition() == LegendPosition.LEFT_OF_CHART\n                         || mLegend.getPosition() == LegendPosition.LEFT_OF_CHART_CENTER) {\n \n-                    offsetLeft += mLegend.mTextWidthMax + mLegend.getXOffset() * 2f;\n+                    offsetLeft += Math.min(mLegend.mNeededWidth, mViewPortHandler.getChartWidth() * mLegend.getMaxSizePercent()) + mLegend.getXOffset() * 2f;\n \n                 } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n                         || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT\n                         || mLegend.getPosition() == LegendPosition.BELOW_CHART_CENTER) {\n \n-                    offsetBottom += mLegend.mTextHeightMax * 3f;\n+                    float yOffset = mLegend.mTextHeightMax * 2.f; // It's possible that we do not need this offset anymore as it is available through the extraOffsets\n+                    offsetBottom += Math.min(mLegend.mNeededHeight + yOffset, mViewPortHandler.getChartHeight() * mLegend.getMaxSizePercent());\n+\n                 }\n             }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n@@ -70,18 +70,20 @@ protected void calculateOffsets() {\n             if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART\n                     || mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART_CENTER) {\n \n-                offsetRight += mLegend.mTextWidthMax + mLegend.getXOffset() * 2f;\n+                offsetRight += Math.min(mLegend.mNeededWidth, mViewPortHandler.getChartWidth() * mLegend.getMaxSizePercent()) + mLegend.getXOffset() * 2f;\n \n             } else if (mLegend.getPosition() == LegendPosition.LEFT_OF_CHART\n                     || mLegend.getPosition() == LegendPosition.LEFT_OF_CHART_CENTER) {\n \n-                offsetLeft += mLegend.mTextWidthMax + mLegend.getXOffset() * 2f;\n+                offsetLeft += Math.min(mLegend.mNeededWidth, mViewPortHandler.getChartWidth() * mLegend.getMaxSizePercent()) + mLegend.getXOffset() * 2f;\n \n             } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n                     || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT\n                     || mLegend.getPosition() == LegendPosition.BELOW_CHART_CENTER) {\n \n-                offsetBottom += mLegend.mTextHeightMax * 3f;\n+                float yOffset = mLegend.mTextHeightMax * 2.f; // It's possible that we do not need this offset anymore as it is available through the extraOffsets\n+                offsetBottom += Math.min(mLegend.mNeededHeight + yOffset, mViewPortHandler.getChartHeight() * mLegend.getMaxSizePercent());\n+\n             }\n         }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -104,20 +104,24 @@ protected void calculateOffsets() {\n         float legendLeft = 0f, legendRight = 0f, legendBottom = 0f, legendTop = 0f;\n \n         if (mLegend != null && mLegend.isEnabled()) {\n+            \n+            float fullLegendWidth = Math.min(mLegend.mNeededWidth, \n+                    mViewPortHandler.getChartWidth() * mLegend.getMaxSizePercent()) + \n+                    mLegend.getFormSize() + mLegend.getFormToTextSpace();\n \n             if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART_CENTER) {\n \n                 // this is the space between the legend and the chart\n                 float spacing = Utils.convertDpToPixel(13f);\n \n-                legendRight = getFullLegendWidth() + spacing;\n+                legendRight = fullLegendWidth + spacing;\n \n             } else if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART) {\n \n                 // this is the space between the legend and the chart\n                 float spacing = Utils.convertDpToPixel(8f);\n \n-                float legendWidth = getFullLegendWidth() + spacing;\n+                float legendWidth = fullLegendWidth + spacing;\n \n                 float legendHeight = mLegend.mNeededHeight + mLegend.mTextHeightMax;\n \n@@ -147,14 +151,14 @@ protected void calculateOffsets() {\n                 // this is the space between the legend and the chart\n                 float spacing = Utils.convertDpToPixel(13f);\n \n-                legendLeft = getFullLegendWidth() + spacing;\n+                legendLeft = fullLegendWidth + spacing;\n \n             } else if (mLegend.getPosition() == LegendPosition.LEFT_OF_CHART) {\n \n                 // this is the space between the legend and the chart\n                 float spacing = Utils.convertDpToPixel(8f);\n \n-                float legendWidth = getFullLegendWidth() + spacing;\n+                float legendWidth = fullLegendWidth + spacing;\n \n                 float legendHeight = mLegend.mNeededHeight + mLegend.mTextHeightMax;\n \n@@ -390,15 +394,6 @@ public float getDiameter() {\n      */\n     protected abstract float getRequiredBaseOffset();\n \n-    /**\n-     * Returns the required right offset for the chart.\n-     * \n-     * @return\n-     */\n-    private float getFullLegendWidth() {\n-        return mLegend.mTextWidthMax + mLegend.getFormSize() + mLegend.getFormToTextSpace();\n-    }\n-\n     /**\n      * set a new (e.g. custom) charttouchlistener NOTE: make sure to\n      * setTouchEnabled(true); if you need touch gestures on the chart\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/Legend.java b/MPChartLib/src/com/github/mikephil/charting/components/Legend.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/Legend.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/Legend.java\n@@ -91,6 +91,9 @@ public enum LegendDirection {\n     /** the space that should be left between stacked forms */\n     private float mStackSpace = 3f;\n \n+    /// The maximum relative size out of the whole chart view.\n+    private float mMaxSizePercent = 1.f;\n+\n     /** default constructor */\n     public Legend() {\n \n@@ -580,6 +583,24 @@ public float getFullHeight(Paint labelpaint) {\n \n     public float mTextWidthMax = 0f;\n \n+    /// The maximum relative size out of the whole chart view.\n+    /// If the legend is to the right/left of the chart, then this affects the width of the legend.\n+    /// If the legend is to the top/bottom of the chart, then this affects the height of the legend.\n+    /// If the legend is the center of the piechart, then this defines the size of the rectangular bounds out of the size of the \"hole\".\n+    /// default: 1.0 (100%)\n+    public float getMaxSizePercent() {\n+        return mMaxSizePercent;\n+    }\n+\n+    /// The maximum relative size out of the whole chart view.\n+    /// If the legend is to the right/left of the chart, then this affects the width of the legend.\n+    /// If the legend is to the top/bottom of the chart, then this affects the height of the legend.\n+    /// If the legend is the center of the piechart, then this defines the size of the rectangular bounds out of the size of the \"hole\".\n+    /// default: 1.0 (100%)\n+    public void setMaxSizePercent(float maxSize) {\n+        mMaxSizePercent = maxSize;\n+    }\n+\n     /**\n      * Calculates the dimensions of the Legend. This includes the maximum width\n      * and height of a single entry, as well as the total width and height of\n@@ -600,6 +621,7 @@ public void calculateDimensions(Paint labelpaint) {\n             mTextHeightMax = getMaximumEntryHeight(labelpaint);\n \n         } else {\n+            /* BelowChartLeft. BelowChartRight, BelowChartCenter, RightOfChartInside, LeftOfChartInside */\n \n             mNeededWidth = getFullWidth(labelpaint);\n             mNeededHeight = getMaximumEntryHeight(labelpaint);",
    "output": "Merge pull request #698 from danielgindi/legend-limits\n\nAllow limiting the legend size based on a percentage of the chart size"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -376,18 +376,20 @@ protected void calculateOffsets() {\n                 if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART\n                         || mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART_CENTER) {\n \n-                    offsetRight += mLegend.mTextWidthMax + mLegend.getXOffset() * 2f;\n+                    offsetRight += Math.min(mLegend.mNeededWidth, mViewPortHandler.getChartWidth() * mLegend.getMaxSizePercent()) + mLegend.getXOffset() * 2f;\n \n                 } else if (mLegend.getPosition() == LegendPosition.LEFT_OF_CHART\n                         || mLegend.getPosition() == LegendPosition.LEFT_OF_CHART_CENTER) {\n \n-                    offsetLeft += mLegend.mTextWidthMax + mLegend.getXOffset() * 2f;\n+                    offsetLeft += Math.min(mLegend.mNeededWidth, mViewPortHandler.getChartWidth() * mLegend.getMaxSizePercent()) + mLegend.getXOffset() * 2f;\n \n                 } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n                         || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT\n                         || mLegend.getPosition() == LegendPosition.BELOW_CHART_CENTER) {\n \n-                    offsetBottom += mLegend.mTextHeightMax * 3f;\n+                    float yOffset = mLegend.mTextHeightMax * 2.f; // It's possible that we do not need this offset anymore as it is available through the extraOffsets\n+                    offsetBottom += Math.min(mLegend.mNeededHeight + yOffset, mViewPortHandler.getChartHeight() * mLegend.getMaxSizePercent());\n+\n                 }\n             }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n@@ -70,18 +70,20 @@ protected void calculateOffsets() {\n             if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART\n                     || mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART_CENTER) {\n \n-                offsetRight += mLegend.mTextWidthMax + mLegend.getXOffset() * 2f;\n+                offsetRight += Math.min(mLegend.mNeededWidth, mViewPortHandler.getChartWidth() * mLegend.getMaxSizePercent()) + mLegend.getXOffset() * 2f;\n \n             } else if (mLegend.getPosition() == LegendPosition.LEFT_OF_CHART\n                     || mLegend.getPosition() == LegendPosition.LEFT_OF_CHART_CENTER) {\n \n-                offsetLeft += mLegend.mTextWidthMax + mLegend.getXOffset() * 2f;\n+                offsetLeft += Math.min(mLegend.mNeededWidth, mViewPortHandler.getChartWidth() * mLegend.getMaxSizePercent()) + mLegend.getXOffset() * 2f;\n \n             } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n                     || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT\n                     || mLegend.getPosition() == LegendPosition.BELOW_CHART_CENTER) {\n \n-                offsetBottom += mLegend.mTextHeightMax * 3f;\n+                float yOffset = mLegend.mTextHeightMax * 2.f; // It's possible that we do not need this offset anymore as it is available through the extraOffsets\n+                offsetBottom += Math.min(mLegend.mNeededHeight + yOffset, mViewPortHandler.getChartHeight() * mLegend.getMaxSizePercent());\n+\n             }\n         }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -104,20 +104,24 @@ protected void calculateOffsets() {\n         float legendLeft = 0f, legendRight = 0f, legendBottom = 0f, legendTop = 0f;\n \n         if (mLegend != null && mLegend.isEnabled()) {\n+            \n+            float fullLegendWidth = Math.min(mLegend.mNeededWidth, \n+                    mViewPortHandler.getChartWidth() * mLegend.getMaxSizePercent()) + \n+                    mLegend.getFormSize() + mLegend.getFormToTextSpace();\n \n             if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART_CENTER) {\n \n                 // this is the space between the legend and the chart\n                 float spacing = Utils.convertDpToPixel(13f);\n \n-                legendRight = getFullLegendWidth() + spacing;\n+                legendRight = fullLegendWidth + spacing;\n \n             } else if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART) {\n \n                 // this is the space between the legend and the chart\n                 float spacing = Utils.convertDpToPixel(8f);\n \n-                float legendWidth = getFullLegendWidth() + spacing;\n+                float legendWidth = fullLegendWidth + spacing;\n \n                 float legendHeight = mLegend.mNeededHeight + mLegend.mTextHeightMax;\n \n@@ -147,14 +151,14 @@ protected void calculateOffsets() {\n                 // this is the space between the legend and the chart\n                 float spacing = Utils.convertDpToPixel(13f);\n \n-                legendLeft = getFullLegendWidth() + spacing;\n+                legendLeft = fullLegendWidth + spacing;\n \n             } else if (mLegend.getPosition() == LegendPosition.LEFT_OF_CHART) {\n \n                 // this is the space between the legend and the chart\n                 float spacing = Utils.convertDpToPixel(8f);\n \n-                float legendWidth = getFullLegendWidth() + spacing;\n+                float legendWidth = fullLegendWidth + spacing;\n \n                 float legendHeight = mLegend.mNeededHeight + mLegend.mTextHeightMax;\n \n@@ -390,15 +394,6 @@ public float getDiameter() {\n      */\n     protected abstract float getRequiredBaseOffset();\n \n-    /**\n-     * Returns the required right offset for the chart.\n-     * \n-     * @return\n-     */\n-    private float getFullLegendWidth() {\n-        return mLegend.mTextWidthMax + mLegend.getFormSize() + mLegend.getFormToTextSpace();\n-    }\n-\n     /**\n      * set a new (e.g. custom) charttouchlistener NOTE: make sure to\n      * setTouchEnabled(true); if you need touch gestures on the chart\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/Legend.java b/MPChartLib/src/com/github/mikephil/charting/components/Legend.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/Legend.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/Legend.java\n@@ -91,6 +91,9 @@ public enum LegendDirection {\n     /** the space that should be left between stacked forms */\n     private float mStackSpace = 3f;\n \n+    /// The maximum relative size out of the whole chart view.\n+    private float mMaxSizePercent = 1.f;\n+\n     /** default constructor */\n     public Legend() {\n \n@@ -580,6 +583,24 @@ public float getFullHeight(Paint labelpaint) {\n \n     public float mTextWidthMax = 0f;\n \n+    /// The maximum relative size out of the whole chart view.\n+    /// If the legend is to the right/left of the chart, then this affects the width of the legend.\n+    /// If the legend is to the top/bottom of the chart, then this affects the height of the legend.\n+    /// If the legend is the center of the piechart, then this defines the size of the rectangular bounds out of the size of the \"hole\".\n+    /// default: 1.0 (100%)\n+    public float getMaxSizePercent() {\n+        return mMaxSizePercent;\n+    }\n+\n+    /// The maximum relative size out of the whole chart view.\n+    /// If the legend is to the right/left of the chart, then this affects the width of the legend.\n+    /// If the legend is to the top/bottom of the chart, then this affects the height of the legend.\n+    /// If the legend is the center of the piechart, then this defines the size of the rectangular bounds out of the size of the \"hole\".\n+    /// default: 1.0 (100%)\n+    public void setMaxSizePercent(float maxSize) {\n+        mMaxSizePercent = maxSize;\n+    }\n+\n     /**\n      * Calculates the dimensions of the Legend. This includes the maximum width\n      * and height of a single entry, as well as the total width and height of\n@@ -600,6 +621,7 @@ public void calculateDimensions(Paint labelpaint) {\n             mTextHeightMax = getMaximumEntryHeight(labelpaint);\n \n         } else {\n+            /* BelowChartLeft. BelowChartRight, BelowChartCenter, RightOfChartInside, LeftOfChartInside */\n \n             mNeededWidth = getFullWidth(labelpaint);\n             mNeededHeight = getMaximumEntryHeight(labelpaint);",
    "output": "Allow limiting the legend size based on a percentage of the chart size"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -402,9 +402,9 @@ protected void calculateOffsets() {\n                         .getPaintAxisLabels());\n             }\n \n-            float xlabelheight = mXAxis.mLabelHeight * 2f;\n+            if (mXAxis.isEnabled() && mXAxis.isDrawLabelsEnabled()) {\n \n-            if (mXAxis.isEnabled()) {\n+                float xlabelheight = mXAxis.mLabelHeight * 2f;\n \n                 // offsets for x-labels\n                 if (mXAxis.getPosition() == XAxisPosition.BOTTOM) {",
    "output": "Merge pull request #693 from danielgindi/hide-xlabels-bugfix\n\nOffset for labels shouldn't be calculated when they are disabled"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -422,6 +422,11 @@ protected void calculateOffsets() {\n                 }\n             }\n \n+            offsetTop += getExtraTopOffset();\n+            offsetRight += getExtraRightOffset();\n+            offsetBottom += getExtraBottomOffset();\n+            offsetLeft += getExtraLeftOffset();\n+\n             float min = Utils.convertDpToPixel(10f);\n \n             mViewPortHandler.restrainViewPort(Math.max(min, offsetLeft), Math.max(min, offsetTop),\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -150,6 +150,12 @@ public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entr\n     /** object responsible for animations */\n     protected ChartAnimator mAnimator;\n \n+    /** Extra offsets to be appended to the viewport */\n+    private float mExtraTopOffset = 0.f,\n+            mExtraRightOffset = 0.f,\n+            mExtraBottomOffset = 0.f,\n+            mExtraLeftOffset = 0.f;\n+\n     /** default constructor for initialization in code */\n     public Chart(Context context) {\n         super(context);\n@@ -1021,6 +1027,62 @@ public void setDescriptionColor(int color) {\n         mDescPaint.setColor(color);\n     }\n \n+    /**\n+     * Set an extra offset to be appended to the viewport's top\n+     */\n+    public void setExtraTopOffset(float offset) {\n+        mExtraTopOffset = offset;\n+    }\n+\n+    /**\n+     * @return the extra offset to be appended to the viewport's top\n+     */\n+    public float getExtraTopOffset() {\n+        return mExtraTopOffset;\n+    }\n+\n+    /**\n+     * Set an extra offset to be appended to the viewport's right\n+     */\n+    public void setExtraRightOffset(float offset) {\n+        mExtraRightOffset = offset;\n+    }\n+\n+    /**\n+     * @return the extra offset to be appended to the viewport's right\n+     */\n+    public float getExtraRightOffset() {\n+        return mExtraRightOffset;\n+    }\n+\n+    /**\n+     * Set an extra offset to be appended to the viewport's bottom\n+     */\n+    public void setExtraBottomOffset(float offset) {\n+        mExtraBottomOffset = offset;\n+    }\n+\n+    /**\n+     * @return the extra offset to be appended to the viewport's bottom\n+     */\n+    public float getExtraBottomOffset() {\n+        return mExtraBottomOffset;\n+    }\n+\n+    /**\n+     * Set an extra offset to be appended to the viewport's left\n+     */\n+    public void setExtraLeftOffset(float offset) {\n+        mExtraLeftOffset = offset;\n+    }\n+\n+    /**\n+     * @return the extra offset to be appended to the viewport's left\n+     */\n+    public float getExtraLeftOffset() {\n+        return mExtraLeftOffset;\n+    }\n+\n     /**\n      * Set this to true to enable logcat outputs for the chart. Default:\n      * disabled\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n@@ -115,6 +115,11 @@ protected void calculateOffsets() {\n             }\n         }\n \n+        offsetTop += getExtraTopOffset();\n+        offsetRight += getExtraRightOffset();\n+        offsetBottom += getExtraBottomOffset();\n+        offsetLeft += getExtraLeftOffset();\n+\n         float min = Utils.convertDpToPixel(10f);\n \n         mViewPortHandler.restrainViewPort(Math.max(min, offsetLeft), Math.max(min, offsetTop),\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -201,6 +201,11 @@ protected void calculateOffsets() {\n             }\n         }\n \n+        legendTop += getExtraTopOffset();\n+        legendRight += getExtraRightOffset();\n+        legendBottom += getExtraBottomOffset();\n+        legendLeft += getExtraLeftOffset();\n+\n         float offsetLeft = Math.max(min, legendLeft);\n         float offsetTop = Math.max(min, legendTop);\n         float offsetRight = Math.max(min, legendRight);",
    "output": "Allow controlling the extra offsets caused by the legends"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -402,9 +402,9 @@ protected void calculateOffsets() {\n                         .getPaintAxisLabels());\n             }\n \n-            float xlabelheight = mXAxis.mLabelHeight * 2f;\n+            if (mXAxis.isEnabled() && mXAxis.isDrawLabelsEnabled()) {\n \n-            if (mXAxis.isEnabled()) {\n+                float xlabelheight = mXAxis.mLabelHeight * 2f;\n \n                 // offsets for x-labels\n                 if (mXAxis.getPosition() == XAxisPosition.BOTTOM) {",
    "output": "Offset for labels shouldn't be calculated when they are disabled"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -66,7 +66,7 @@ public ChartData() {\n     public ChartData(List<String> xVals) {\n         this.mXVals = xVals;\n         this.mDataSets = new ArrayList<T>();\n-        init(mDataSets);\n+        init();\n     }\n \n     /**\n@@ -78,7 +78,7 @@ public ChartData(List<String> xVals) {\n     public ChartData(String[] xVals) {\n         this.mXVals = arrayToList(xVals);\n         this.mDataSets = new ArrayList<T>();\n-        init(mDataSets);\n+        init();\n     }\n \n     /**\n@@ -93,7 +93,7 @@ public ChartData(List<String> xVals, List<T> sets) {\n         this.mXVals = xVals;\n         this.mDataSets = sets;\n \n-        init(mDataSets);\n+        init();\n     }\n \n     /**\n@@ -108,7 +108,7 @@ public ChartData(String[] xVals, List<T> sets) {\n         this.mXVals = arrayToList(xVals);\n         this.mDataSets = sets;\n \n-        init(mDataSets);\n+        init();\n     }\n \n     /**\n@@ -125,13 +125,13 @@ private List<String> arrayToList(String[] array) {\n      * performs all kinds of initialization calculations, such as min-max and\n      * value count and sum\n      */\n-    protected void init(List<? extends DataSet<?>> dataSets) {\n+    protected void init() {\n \n-        isLegal(dataSets);\n+        isLegal();\n \n-        calcMinMax(dataSets);\n-        calcYValueSum(dataSets);\n-        calcYValueCount(dataSets);\n+        calcMinMax();\n+        calcYValueSum();\n+        calcYValueCount();\n \n         calcXValAverageLength();\n     }\n@@ -159,15 +159,14 @@ private void calcXValAverageLength() {\n      * Checks if the combination of x-values array and DataSet array is legal or\n      * not.\n      * \n-     * @param dataSets\n      */\n-    private void isLegal(List<? extends DataSet<?>> dataSets) {\n+    private void isLegal() {\n \n-        if (dataSets == null)\n+        if (mDataSets == null)\n             return;\n \n-        for (int i = 0; i < dataSets.size(); i++) {\n-            if (dataSets.get(i)\n+        for (int i = 0; i < mDataSets.size(); i++) {\n+            if (mDataSets.get(i)\n                     .getYVals()\n                     .size() > mXVals.size()) {\n                 throw new IllegalArgumentException(\n@@ -181,30 +180,30 @@ private void isLegal(List<? extends DataSet<?>> dataSets) {\n      * changed.\n      */\n     public void notifyDataChanged() {\n-        init(mDataSets);\n+        init();\n     }\n \n     /**\n      * calc minimum and maximum y value over all datasets\n      */\n-    protected void calcMinMax(List<? extends DataSet<?>> dataSets) {\n+    protected void calcMinMax() {\n \n-        if (dataSets == null || dataSets.size() < 1) {\n+        if (mDataSets == null || mDataSets.size() < 1) {\n \n             mYMax = 0f;\n             mYMin = 0f;\n         } else {\n \n             // calculate absolute min and max\n-            mYMin = dataSets.get(0).getYMin();\n-            mYMax = dataSets.get(0).getYMax();\n+            mYMin = mDataSets.get(0).getYMin();\n+            mYMax = mDataSets.get(0).getYMax();\n \n-            for (int i = 0; i < dataSets.size(); i++) {\n-                if (dataSets.get(i).getYMin() < mYMin)\n-                    mYMin = dataSets.get(i).getYMin();\n+            for (int i = 0; i < mDataSets.size(); i++) {\n+                if (mDataSets.get(i).getYMin() < mYMin)\n+                    mYMin = mDataSets.get(i).getYMin();\n \n-                if (dataSets.get(i).getYMax() > mYMax)\n-                    mYMax = dataSets.get(i).getYMax();\n+                if (mDataSets.get(i).getYMax() > mYMax)\n+                    mYMax = mDataSets.get(i).getYMax();\n             }\n \n             // left axis\n@@ -215,7 +214,7 @@ protected void calcMinMax(List<? extends DataSet<?>> dataSets) {\n                 mLeftAxisMax = firstLeft.getYMax();\n                 mLeftAxisMin = firstLeft.getYMin();\n \n-                for (DataSet<?> dataSet : dataSets) {\n+                for (DataSet<?> dataSet : mDataSets) {\n                     if (dataSet.getAxisDependency() == AxisDependency.LEFT) {\n                         if (dataSet.getYMin() < mLeftAxisMin)\n                             mLeftAxisMin = dataSet.getYMin();\n@@ -234,7 +233,7 @@ protected void calcMinMax(List<? extends DataSet<?>> dataSets) {\n                 mRightAxisMax = firstRight.getYMax();\n                 mRightAxisMin = firstRight.getYMin();\n \n-                for (DataSet<?> dataSet : dataSets) {\n+                for (DataSet<?> dataSet : mDataSets) {\n                     if (dataSet.getAxisDependency() == AxisDependency.RIGHT) {\n                         if (dataSet.getYMin() < mRightAxisMin)\n                             mRightAxisMin = dataSet.getYMin();\n@@ -253,15 +252,15 @@ protected void calcMinMax(List<? extends DataSet<?>> dataSets) {\n     /**\n      * calculates the sum of all y-values in all datasets\n      */\n-    protected void calcYValueSum(List<? extends DataSet<?>> dataSets) {\n+    protected void calcYValueSum() {\n \n         mYValueSum = 0;\n \n-        if (dataSets == null)\n+        if (mDataSets == null)\n             return;\n \n-        for (int i = 0; i < dataSets.size(); i++) {\n-            mYValueSum += Math.abs(dataSets.get(i).getYValueSum());\n+        for (int i = 0; i < mDataSets.size(); i++) {\n+            mYValueSum += Math.abs(mDataSets.get(i).getYValueSum());\n         }\n     }\n \n@@ -271,17 +270,17 @@ protected void calcYValueSum(List<? extends DataSet<?>> dataSets) {\n      * \n      * @return\n      */\n-    protected void calcYValueCount(List<? extends DataSet<?>> dataSets) {\n+    protected void calcYValueCount() {\n \n         mYValCount = 0;\n \n-        if (dataSets == null)\n+        if (mDataSets == null)\n             return;\n \n         int count = 0;\n \n-        for (int i = 0; i < dataSets.size(); i++) {\n-            count += dataSets.get(i).getEntryCount();\n+        for (int i = 0; i < mDataSets.size(); i++) {\n+            count += mDataSets.get(i).getEntryCount();\n         }\n \n         mYValCount = count;\n@@ -599,7 +598,7 @@ public boolean removeDataSet(T d) {\n             mYValCount -= d.getEntryCount();\n             mYValueSum -= d.getYValueSum();\n \n-            calcMinMax(mDataSets);\n+            calcMinMax();\n         }\n \n         return removed;\n@@ -691,7 +690,7 @@ public boolean removeEntry(Entry e, int dataSetIndex) {\n             mYValCount -= 1;\n             mYValueSum -= val;\n \n-            calcMinMax(mDataSets);\n+            calcMinMax();\n         }\n \n         return removed;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/CombinedData.java b/MPChartLib/src/com/github/mikephil/charting/data/CombinedData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/CombinedData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/CombinedData.java\n@@ -32,31 +32,31 @@ public CombinedData(String[] xVals) {\n     public void setData(LineData data) {\n         mLineData = data;\n         mDataSets.addAll(data.getDataSets());\n-        init(data.getDataSets());\n+        init();\n     }\n \n     public void setData(BarData data) {\n         mBarData = data;\n         mDataSets.addAll(data.getDataSets());\n-        init(data.getDataSets());\n+        init();\n     }\n \n     public void setData(ScatterData data) {\n         mScatterData = data;\n         mDataSets.addAll(data.getDataSets());\n-        init(data.getDataSets());\n+        init();\n     }\n \n     public void setData(CandleData data) {\n         mCandleData = data;\n         mDataSets.addAll(data.getDataSets());\n-        init(data.getDataSets());\n+        init();\n     }\n \n     public void setData(BubbleData data) {\n         mBubbleData = data;\n         mDataSets.addAll(data.getDataSets());\n-        init(data.getDataSets());\n+        init();\n     }\n \n     public BubbleData getBubbleData() {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/PieData.java b/MPChartLib/src/com/github/mikephil/charting/data/PieData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/PieData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/PieData.java\n@@ -48,7 +48,7 @@ private static List<PieDataSet> toList(PieDataSet dataSet) {\n     public void setDataSet(PieDataSet dataSet) {\n         mDataSets.clear();\n         mDataSets.add(dataSet);\n-        init(mDataSets);\n+        init();\n     }\n \n     /**",
    "output": "Fixed an issue where combined chart calculated min/max for only one of the Data objects"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/BarEntry.java b/MPChartLib/src/com/github/mikephil/charting/data/BarEntry.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/BarEntry.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/BarEntry.java\n@@ -83,6 +83,7 @@ public float[] getVals() {\n      * @param vals\n      */\n     public void setVals(float[] vals) {\n+        setVal(calcSum(vals));\n         mVals = vals;\n     }\n ",
    "output": "Merge pull request #683 from Pitel/patch-1\n\nFix stack size on values change"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/BarEntry.java b/MPChartLib/src/com/github/mikephil/charting/data/BarEntry.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/BarEntry.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/BarEntry.java\n@@ -83,6 +83,7 @@ public float[] getVals() {\n      * @param vals\n      */\n     public void setVals(float[] vals) {\n+        setVal(calcSum(vals));\n         mVals = vals;\n     }\n ",
    "output": "Update BarEntry.java"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -92,7 +92,7 @@ public void notifyDataSetChanged() {\n \n         calcMinMax();\n \n-        if (mLegend != null && !mLegend.isLegendCustom())\n+        if (mLegend != null)\n             mLegendRenderer.computeLegend(mData);\n \n         calculateOffsets();",
    "output": "Minor fix."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -32,7 +32,6 @@\n import com.github.mikephil.charting.data.filter.Approximator;\n import com.github.mikephil.charting.data.filter.Approximator.ApproximatorType;\n import com.github.mikephil.charting.listener.OnChartValueSelectedListener;\n-import com.github.mikephil.charting.utils.ColorTemplate;\n import com.github.mikephil.charting.utils.Highlight;\n import com.github.mikephil.charting.utils.ValueFormatter;\n import com.xxmassdeveloper.mpchartexample.custom.MyValueFormatter;\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java\n@@ -130,6 +130,7 @@ public boolean onOptionsItemSelected(MenuItem item) {\n             }\n             case R.id.actionToggleXLabels: {\n                 mChart.getXAxis().setEnabled(!mChart.getXAxis().isEnabled());\n+                mChart.notifyDataSetChanged();\n                 mChart.invalidate();\n                 break;\n             }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -14,6 +14,7 @@\n \n import com.github.mikephil.charting.animation.Easing;\n import com.github.mikephil.charting.components.Legend.LegendPosition;\n+import com.github.mikephil.charting.components.XAxis;\n import com.github.mikephil.charting.data.ChartData;\n import com.github.mikephil.charting.data.DataSet;\n import com.github.mikephil.charting.data.Entry;\n@@ -192,6 +193,14 @@ protected void calculateOffsets() {\n \n         float min = Utils.convertDpToPixel(10f);\n \n+        if (this instanceof RadarChart) {\n+            XAxis x = ((RadarChart) this).getXAxis();\n+\n+            if (x.isEnabled()) {\n+                min = Math.max(Utils.convertDpToPixel(10f), x.mLabelWidth);\n+            }\n+        }\n+\n         float offsetLeft = Math.max(min, legendLeft);\n         float offsetTop = Math.max(min, legendTop);\n         float offsetRight = Math.max(min, legendRight);\n@@ -309,9 +318,10 @@ public void setRotationAngle(float angle) {\n     }\n \n     /**\n-     * gets the raw version of the current rotation angle of the pie chart\n-     * the returned value could be any value, negative or positive, outside of the 360 degrees.\n-     * this is used when working with rotation direction, mainly by gestures and animations.\n+     * gets the raw version of the current rotation angle of the pie chart the\n+     * returned value could be any value, negative or positive, outside of the\n+     * 360 degrees. this is used when working with rotation direction, mainly by\n+     * gestures and animations.\n      *\n      * @return\n      */\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -174,8 +174,6 @@ protected void onDraw(Canvas canvas) {\n         drawDescription(canvas);\n \n         drawMarkers(canvas);\n-\n-//        canvas.drawBitmap(mDrawBitmap, 0, 0, mDrawPaint);\n     }\n \n     /**\n@@ -326,7 +324,7 @@ protected float getRequiredBottomOffset() {\n \n     @Override\n     protected float getRequiredBaseOffset() {\n-        return mXAxis.mLabelWidth;\n+        return mXAxis.isEnabled() ? mXAxis.mLabelWidth : Utils.convertDpToPixel(10f);\n     }\n \n     @Override",
    "output": "Fixed issue concerning RadarChart offsets (issue #679)."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n@@ -16,9 +16,6 @@\n  */\n public class LineChart extends BarLineChartBase<LineData> implements LineDataProvider {\n \n-    /** the width of the highlighning line */\n-    protected float mHighlightWidth = 3f;\n-\n     private FillFormatter mFillFormatter;\n \n     public LineChart(Context context) {\n@@ -55,24 +52,6 @@ protected void calcMinMax() {\n         if (mDeltaX == 0 && mData.getYValCount() > 0)\n             mDeltaX = 1;\n     }\n-    \n-    /**\n-     * set the width of the highlightning lines, default 3f\n-     * \n-     * @param width\n-     */\n-    public void setHighlightLineWidth(float width) {\n-        mHighlightWidth = width;\n-    }\n-\n-    /**\n-     * returns the width of the highlightning line, default 3f\n-     * \n-     * @return\n-     */\n-    public float getHighlightLineWidth() {\n-        return mHighlightWidth;\n-    }\n \n     @Override\n     public void setFillFormatter(FillFormatter formatter) {",
    "output": "Remove unnecessary code from linechart."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -324,8 +324,8 @@ protected void drawCenterText(Canvas c) {\n                 // I wish we could make an ellipse clipping path on Android to clip to the hole...\n                 // If we ever find out how, this is the place to add it, based on holeRect\n \n-                float layoutWidth = Utils.getStaticLayoutMaxWidth(mCenterTextLayout),\n-                        layoutHeight = mCenterTextLayout.getHeight();\n+                //float layoutWidth = Utils.getStaticLayoutMaxWidth(mCenterTextLayout);\n+                float layoutHeight = mCenterTextLayout.getHeight();\n \n                 c.save();\n                 c.translate(boundingRect.centerX(), boundingRect.top + (boundingRect.height() - layoutHeight) / 2.f);",
    "output": "Fix issue in piechartrenderer."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -70,6 +70,10 @@ public class PieChart extends PieRadarChartBase<PieData> {\n     /** if enabled, centertext is drawn */\n     private boolean mDrawCenterText = true;\n \n+    private boolean mCenterTextWordWrapEnabled = false;\n+\n+    private float mCenterTextRadiusPercent = 1.f;\n+\n     public PieChart(Context context) {\n         super(context);\n     }\n@@ -519,4 +523,38 @@ public void setUsePercentValues(boolean enabled) {\n     public boolean isUsePercentValuesEnabled() {\n         return mUsePercentValues;\n     }\n+\n+    /**\n+     * should the center text be word wrapped?\n+     * note that word wrapping takes a toll on performance\n+     * if word wrapping is disabled, newlines are still respected\n+     */\n+    public void setCenterTextWordWrapEnabled(boolean enabled) {\n+        mCenterTextWordWrapEnabled = enabled;\n+    }\n+\n+    /**\n+     * should the center text be word wrapped?\n+     * note that word wrapping takes a toll on performance\n+     * if word wrapping is disabled, newlines are still respected\n+     */\n+    public boolean isCenterTextWordWrapEnabled() {\n+        return mCenterTextWordWrapEnabled;\n+    }\n+\n+    /**\n+     * the rectangular radius of the bounding box for the center text, as a percentage of the pie hole\n+     * default 1.f (100%)\n+     */\n+    public void setCenterTextRadiusPercent(float percent) {\n+        mCenterTextRadiusPercent = percent;\n+    }\n+\n+    /**\n+     * the rectangular radius of the bounding box for the center text, as a percentage of the pie hole\n+     * default 1.f (100%)\n+     */\n+    public float getCenterTextRadiusPercent() {\n+        return mCenterTextRadiusPercent;\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -9,6 +9,9 @@\n import android.graphics.Paint.Style;\n import android.graphics.PointF;\n import android.graphics.RectF;\n+import android.text.Layout;\n+import android.text.StaticLayout;\n+import android.text.TextPaint;\n \n import com.github.mikephil.charting.animation.ChartAnimator;\n import com.github.mikephil.charting.charts.PieChart;\n@@ -36,7 +39,12 @@ public class PieChartRenderer extends DataRenderer {\n      * paint object for the text that can be displayed in the center of the\n      * chart\n      */\n-    private Paint mCenterTextPaint;\n+    private TextPaint mCenterTextPaint;\n+\n+    private StaticLayout mCenterTextLayout;\n+    private String mCenterTextLastValue;\n+    private RectF mCenterTextLastBounds = new RectF();\n+    private RectF[] mRectBuffer = { new RectF(), new RectF(), new RectF() };\n \n     /** Bitmap for drawing the center hole */\n     protected Bitmap mDrawBitmap;\n@@ -56,7 +64,7 @@ public PieChartRenderer(PieChart chart, ChartAnimator animator,\n         mTransparentCirclePaint.setColor(Color.WHITE);\n         mTransparentCirclePaint.setStyle(Style.FILL);\n \n-        mCenterTextPaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n+        mCenterTextPaint = new TextPaint(Paint.ANTI_ALIAS_FLAG);\n         mCenterTextPaint.setColor(Color.BLACK);\n         mCenterTextPaint.setTextSize(Utils.convertDpToPixel(12f));\n         mCenterTextPaint.setTextAlign(Align.CENTER);\n@@ -74,7 +82,7 @@ public Paint getPaintTransparentCircle() {\n         return mTransparentCirclePaint;\n     }\n \n-    public Paint getPaintCenterText() {\n+    public TextPaint getPaintCenterText() {\n         return mCenterTextPaint;\n     }\n \n@@ -282,35 +290,80 @@ protected void drawCenterText(Canvas c) {\n \n             PointF center = mChart.getCenterCircleBox();\n \n-            // get all lines from the text\n-            String[] lines = centerText.split(\"\\n\");\n+            if (mChart.isCenterTextWordWrapEnabled()) {\n \n-            float maxlineheight = 0f;\n+                float innerRadius = mChart.isDrawHoleEnabled() && mChart.isHoleTransparent() ? mChart.getRadius() * (mChart.getHoleRadius() / 100f) : mChart.getRadius();\n \n-            // calc the maximum line height\n-            for (String line : lines) {\n-                float curHeight = Utils.calcTextHeight(mCenterTextPaint, line);\n-                if (curHeight > maxlineheight)\n-                    maxlineheight = curHeight;\n-            }\n+                RectF holeRect = mRectBuffer[0];\n+                holeRect.left = center.x - innerRadius;\n+                holeRect.top = center.y - innerRadius;\n+                holeRect.right = center.x + innerRadius;\n+                holeRect.bottom = center.y + innerRadius;\n+                RectF boundingRect = mRectBuffer[1];\n+                boundingRect.set(holeRect);\n \n-            float linespacing = maxlineheight * 0.25f;\n+                float radiusPercent = mChart.getCenterTextRadiusPercent();\n+                if (radiusPercent > 0.0) {\n+                    boundingRect.inset((boundingRect.width() - boundingRect.width() * radiusPercent) / 2.f,\n+                            (boundingRect.height() - boundingRect.height() * radiusPercent) / 2.f);\n+                }\n \n-            float totalheight = maxlineheight * lines.length - linespacing * (lines.length - 1);\n+                if (!centerText.equals(mCenterTextLastValue) || !boundingRect.equals(mCenterTextLastBounds)) {\n \n-            int cnt = lines.length;\n+                    // Next time we won't recalculate StaticLayout...\n+                    mCenterTextLastBounds.set(boundingRect);\n+                    mCenterTextLastValue = centerText;\n+\n+                    // If width is 0, it will crash. Always have a minimum of 1\n+                    mCenterTextLayout = new StaticLayout(centerText, 0, centerText.length(),\n+                            mCenterTextPaint,\n+                            (int)Math.max(Math.ceil(mCenterTextLastBounds.width()), 1.f),\n+                            Layout.Alignment.ALIGN_NORMAL, 1.f, 0.f, false);\n+                }\n \n-            float y = center.y;\n+                // I wish we could make an ellipse clipping path on Android to clip to the hole...\n+                // If we ever find out how, this is the place to add it, based on holeRect\n \n-            for (int i = 0; i < lines.length; i++) {\n+                float layoutWidth = Utils.getStaticLayoutMaxWidth(mCenterTextLayout),\n+                        layoutHeight = mCenterTextLayout.getHeight();\n \n-                String line = lines[lines.length - i - 1];\n+                c.save();\n+                c.translate(boundingRect.centerX(), boundingRect.top + (boundingRect.height() - layoutHeight) / 2.f);\n+                mCenterTextLayout.draw(c);\n+                c.restore();\n \n-                c.drawText(line, center.x, y\n-                        + maxlineheight * cnt - totalheight / 2f,\n-                        mCenterTextPaint);\n-                cnt--;\n-                y -= linespacing;\n+            } else {\n+\n+                // get all lines from the text\n+                String[] lines = centerText.split(\"\\n\");\n+\n+                float maxlineheight = 0f;\n+\n+                // calc the maximum line height\n+                for (String line : lines) {\n+                    float curHeight = Utils.calcTextHeight(mCenterTextPaint, line);\n+                    if (curHeight > maxlineheight)\n+                        maxlineheight = curHeight;\n+                }\n+\n+                float linespacing = maxlineheight * 0.25f;\n+\n+                float totalheight = maxlineheight * lines.length - linespacing * (lines.length - 1);\n+\n+                int cnt = lines.length;\n+\n+                float y = center.y;\n+\n+                for (int i = 0; i < lines.length; i++) {\n+\n+                    String line = lines[lines.length - i - 1];\n+\n+                    c.drawText(line, center.x, y\n+                                    + maxlineheight * cnt - totalheight / 2f,\n+                            mCenterTextPaint);\n+                    cnt--;\n+                    y -= linespacing;\n+                }\n             }\n         }\n     }",
    "output": "Merge pull request #671 from danielgindi/wordwrap\n\nSupport for word wrapping center text in pie chart"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -70,6 +70,10 @@ public class PieChart extends PieRadarChartBase<PieData> {\n     /** if enabled, centertext is drawn */\n     private boolean mDrawCenterText = true;\n \n+    private boolean mCenterTextWordWrapEnabled = false;\n+\n+    private float mCenterTextRadiusPercent = 1.f;\n+\n     public PieChart(Context context) {\n         super(context);\n     }\n@@ -519,4 +523,38 @@ public void setUsePercentValues(boolean enabled) {\n     public boolean isUsePercentValuesEnabled() {\n         return mUsePercentValues;\n     }\n+\n+    /**\n+     * should the center text be word wrapped?\n+     * note that word wrapping takes a toll on performance\n+     * if word wrapping is disabled, newlines are still respected\n+     */\n+    public void setCenterTextWordWrapEnabled(boolean enabled) {\n+        mCenterTextWordWrapEnabled = enabled;\n+    }\n+\n+    /**\n+     * should the center text be word wrapped?\n+     * note that word wrapping takes a toll on performance\n+     * if word wrapping is disabled, newlines are still respected\n+     */\n+    public boolean isCenterTextWordWrapEnabled() {\n+        return mCenterTextWordWrapEnabled;\n+    }\n+\n+    /**\n+     * the rectangular radius of the bounding box for the center text, as a percentage of the pie hole\n+     * default 1.f (100%)\n+     */\n+    public void setCenterTextRadiusPercent(float percent) {\n+        mCenterTextRadiusPercent = percent;\n+    }\n+\n+    /**\n+     * the rectangular radius of the bounding box for the center text, as a percentage of the pie hole\n+     * default 1.f (100%)\n+     */\n+    public float getCenterTextRadiusPercent() {\n+        return mCenterTextRadiusPercent;\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -9,6 +9,9 @@\n import android.graphics.Paint.Style;\n import android.graphics.PointF;\n import android.graphics.RectF;\n+import android.text.Layout;\n+import android.text.StaticLayout;\n+import android.text.TextPaint;\n \n import com.github.mikephil.charting.animation.ChartAnimator;\n import com.github.mikephil.charting.charts.PieChart;\n@@ -36,7 +39,12 @@ public class PieChartRenderer extends DataRenderer {\n      * paint object for the text that can be displayed in the center of the\n      * chart\n      */\n-    private Paint mCenterTextPaint;\n+    private TextPaint mCenterTextPaint;\n+\n+    private StaticLayout mCenterTextLayout;\n+    private String mCenterTextLastValue;\n+    private RectF mCenterTextLastBounds = new RectF();\n+    private RectF[] mRectBuffer = { new RectF(), new RectF(), new RectF() };\n \n     /** Bitmap for drawing the center hole */\n     protected Bitmap mDrawBitmap;\n@@ -56,7 +64,7 @@ public PieChartRenderer(PieChart chart, ChartAnimator animator,\n         mTransparentCirclePaint.setColor(Color.WHITE);\n         mTransparentCirclePaint.setStyle(Style.FILL);\n \n-        mCenterTextPaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n+        mCenterTextPaint = new TextPaint(Paint.ANTI_ALIAS_FLAG);\n         mCenterTextPaint.setColor(Color.BLACK);\n         mCenterTextPaint.setTextSize(Utils.convertDpToPixel(12f));\n         mCenterTextPaint.setTextAlign(Align.CENTER);\n@@ -74,7 +82,7 @@ public Paint getPaintTransparentCircle() {\n         return mTransparentCirclePaint;\n     }\n \n-    public Paint getPaintCenterText() {\n+    public TextPaint getPaintCenterText() {\n         return mCenterTextPaint;\n     }\n \n@@ -282,35 +290,80 @@ protected void drawCenterText(Canvas c) {\n \n             PointF center = mChart.getCenterCircleBox();\n \n-            // get all lines from the text\n-            String[] lines = centerText.split(\"\\n\");\n+            if (mChart.isCenterTextWordWrapEnabled()) {\n \n-            float maxlineheight = 0f;\n+                float innerRadius = mChart.isDrawHoleEnabled() && mChart.isHoleTransparent() ? mChart.getRadius() * (mChart.getHoleRadius() / 100f) : mChart.getRadius();\n \n-            // calc the maximum line height\n-            for (String line : lines) {\n-                float curHeight = Utils.calcTextHeight(mCenterTextPaint, line);\n-                if (curHeight > maxlineheight)\n-                    maxlineheight = curHeight;\n-            }\n+                RectF holeRect = mRectBuffer[0];\n+                holeRect.left = center.x - innerRadius;\n+                holeRect.top = center.y - innerRadius;\n+                holeRect.right = center.x + innerRadius;\n+                holeRect.bottom = center.y + innerRadius;\n+                RectF boundingRect = mRectBuffer[1];\n+                boundingRect.set(holeRect);\n \n-            float linespacing = maxlineheight * 0.25f;\n+                float radiusPercent = mChart.getCenterTextRadiusPercent();\n+                if (radiusPercent > 0.0) {\n+                    boundingRect.inset((boundingRect.width() - boundingRect.width() * radiusPercent) / 2.f,\n+                            (boundingRect.height() - boundingRect.height() * radiusPercent) / 2.f);\n+                }\n \n-            float totalheight = maxlineheight * lines.length - linespacing * (lines.length - 1);\n+                if (!centerText.equals(mCenterTextLastValue) || !boundingRect.equals(mCenterTextLastBounds)) {\n \n-            int cnt = lines.length;\n+                    // Next time we won't recalculate StaticLayout...\n+                    mCenterTextLastBounds.set(boundingRect);\n+                    mCenterTextLastValue = centerText;\n+\n+                    // If width is 0, it will crash. Always have a minimum of 1\n+                    mCenterTextLayout = new StaticLayout(centerText, 0, centerText.length(),\n+                            mCenterTextPaint,\n+                            (int)Math.max(Math.ceil(mCenterTextLastBounds.width()), 1.f),\n+                            Layout.Alignment.ALIGN_NORMAL, 1.f, 0.f, false);\n+                }\n \n-            float y = center.y;\n+                // I wish we could make an ellipse clipping path on Android to clip to the hole...\n+                // If we ever find out how, this is the place to add it, based on holeRect\n \n-            for (int i = 0; i < lines.length; i++) {\n+                float layoutWidth = Utils.getStaticLayoutMaxWidth(mCenterTextLayout),\n+                        layoutHeight = mCenterTextLayout.getHeight();\n \n-                String line = lines[lines.length - i - 1];\n+                c.save();\n+                c.translate(boundingRect.centerX(), boundingRect.top + (boundingRect.height() - layoutHeight) / 2.f);\n+                mCenterTextLayout.draw(c);\n+                c.restore();\n \n-                c.drawText(line, center.x, y\n-                        + maxlineheight * cnt - totalheight / 2f,\n-                        mCenterTextPaint);\n-                cnt--;\n-                y -= linespacing;\n+            } else {\n+\n+                // get all lines from the text\n+                String[] lines = centerText.split(\"\\n\");\n+\n+                float maxlineheight = 0f;\n+\n+                // calc the maximum line height\n+                for (String line : lines) {\n+                    float curHeight = Utils.calcTextHeight(mCenterTextPaint, line);\n+                    if (curHeight > maxlineheight)\n+                        maxlineheight = curHeight;\n+                }\n+\n+                float linespacing = maxlineheight * 0.25f;\n+\n+                float totalheight = maxlineheight * lines.length - linespacing * (lines.length - 1);\n+\n+                int cnt = lines.length;\n+\n+                float y = center.y;\n+\n+                for (int i = 0; i < lines.length; i++) {\n+\n+                    String line = lines[lines.length - i - 1];\n+\n+                    c.drawText(line, center.x, y\n+                                    + maxlineheight * cnt - totalheight / 2f,\n+                            mCenterTextPaint);\n+                    cnt--;\n+                    y -= linespacing;\n+                }\n             }\n         }\n     }",
    "output": "Support for word wrapping center text in pie chart (default: false)"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -337,7 +337,7 @@ public String toString() {\n      */\n     public String toSimpleString() {\n         StringBuffer buffer = new StringBuffer();\n-        buffer.append(\"DataSet, label: \" + mLabel + \", entries: \" + mYVals.size() + \"\\n\");\n+        buffer.append(\"DataSet, label: \" + (mLabel == null ? \"\" : mLabel) + \", entries: \" + mYVals.size() + \"\\n\");\n         return buffer.toString();\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -92,9 +92,11 @@ public void computeLegend(ChartData<?> data) {\n                     colors.add(clrs.get(j));\n                 }\n \n-                // add the legend description label\n-                colors.add(-2);\n-                labels.add(bds.getLabel());\n+                if (bds.getLabel() != null) {\n+                    // add the legend description label\n+                    colors.add(-2);\n+                    labels.add(bds.getLabel());\n+                }\n \n             } else if (dataSet instanceof PieDataSet) {\n \n@@ -107,9 +109,11 @@ public void computeLegend(ChartData<?> data) {\n                     colors.add(clrs.get(j));\n                 }\n \n-                // add the legend description label\n-                colors.add(-2);\n-                labels.add(pds.getLabel());\n+                if (pds.getLabel() != null) {\n+                    // add the legend description label\n+                    colors.add(-2);\n+                    labels.add(pds.getLabel());\n+                }\n \n             } else { // all others\n ",
    "output": "Allow a null label for a DataSet"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -344,12 +344,12 @@ else if (wasStacked)\n                             x -= Utils.calcTextWidth(mLegendLabelPaint, labels[i]);\n \n                         if (!wasStacked) {\n-                            drawLabel(c, x, posY + mLegend.mTextHeightMax / 2f, mLegend.getLabel(i));\n+                            drawLabel(c, x, posY + mLegend.mTextHeightMax / 2f, labels[i]);\n \n                             posY += textDrop;\n                         } else {\n                             posY += mLegend.mTextHeightMax * 3f;\n-                            drawLabel(c, x, posY - mLegend.mTextHeightMax, mLegend.getLabel(i));\n+                            drawLabel(c, x, posY - mLegend.mTextHeightMax, labels[i]);\n                         }\n \n                         // make a step down\n@@ -422,12 +422,12 @@ else if (wasStacked)\n                             x -= Utils.calcTextWidth(mLegendLabelPaint, labels[i]);\n \n                         if (!wasStacked) {\n-                            drawLabel(c, x, posY + mLegend.mTextHeightMax / 2f, mLegend.getLabel(i));\n+                            drawLabel(c, x, posY + mLegend.mTextHeightMax / 2f, labels[i]);\n \n                             posY += textDrop;\n                         } else {\n                             posY += mLegend.mTextHeightMax * 3f;\n-                            drawLabel(c, x, posY - mLegend.mTextHeightMax, mLegend.getLabel(i));\n+                            drawLabel(c, x, posY - mLegend.mTextHeightMax, labels[i]);\n                         }\n \n                         // make a step down",
    "output": "No need for the extra call to getLabel"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -305,7 +305,8 @@ public void notifyDataSetChanged() {\n \n         mXAxisRenderer.computeAxis(mData.getXValAverageLength(), mData.getXVals());\n \n-        mLegendRenderer.computeLegend(mData);\n+        if (mLegend != null && !mLegend.isLegendCustom())\n+            mLegendRenderer.computeLegend(mData);\n \n         calculateOffsets();\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -91,7 +91,8 @@ public void notifyDataSetChanged() {\n \n         calcMinMax();\n \n-        mLegendRenderer.computeLegend(mData);\n+        if (mLegend != null && !mLegend.isLegendCustom())\n+            mLegendRenderer.computeLegend(mData);\n \n         calculateOffsets();\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -140,7 +140,8 @@ public void notifyDataSetChanged() {\n         mYAxisRenderer.computeAxis(mYAxis.mAxisMinimum, mYAxis.mAxisMaximum);\n         mXAxisRenderer.computeAxis(mData.getXValAverageLength(), mData.getXVals());\n \n-        mLegendRenderer.computeLegend(mData);\n+        if (mLegend != null && !mLegend.isLegendCustom())\n+            mLegendRenderer.computeLegend(mData);\n \n         calculateOffsets();\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/Legend.java b/MPChartLib/src/com/github/mikephil/charting/components/Legend.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/Legend.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/Legend.java\n@@ -43,6 +43,12 @@ public enum LegendDirection {\n     /** labels that will be appended to the end of the labels array after calculating the legend. a null label will start a group. */\n     private String[] mExtraLabels;\n \n+    /**\n+     * Are the legend labels/colors a custom value or auto calculated? If false, then it's auto, if true, then custom.\n+     * default false (automatic legend)\n+     */\n+    private boolean mIsLegendCustom = false;\n+\n     /** the position relative to the chart the legend is drawn on */\n     private LegendPosition mPosition = LegendPosition.BELOW_CHART_LEFT;\n \n@@ -257,6 +263,55 @@ public void setExtraLabels(String[] labels) {\n         this.mExtraLabels = labels;\n     }\n \n+    /**\n+     * Sets a custom legend's labels and colors arrays.\n+     * The colors count should match the labels count.\n+     * * Each color is for the form drawn at the same index.\n+     * * A null label will start a group.\n+     * * A (-2) color will avoid drawing a form\n+     * This will disable the feature that automatically calculates the legend labels and colors from the datasets.\n+     * Call resetLegendToAuto(...) to re-enable automatic calculation.\n+     */\n+    public void setLegend(int[] colors, String[] labels)\n+    {\n+        mLabels = labels;\n+        mColors = colors;\n+        mIsLegendCustom = true;\n+    }\n+\n+    /**\n+     * Sets a custom legend's labels and colors arrays.\n+     * The colors count should match the labels count.\n+     * * Each color is for the form drawn at the same index.\n+     * * A null label will start a group.\n+     * * A (-2) color will avoid drawing a form\n+     * This will disable the feature that automatically calculates the legend labels and colors from the datasets.\n+     * Call resetLegendToAuto(...) to re-enable automatic calculation (and then notifyDataSetChanged() is needed)\n+     */\n+    public void setLegend(List<Integer> colors, List<String> labels)\n+    {\n+        mColors = Utils.convertIntegers(colors);\n+        mLabels = Utils.convertStrings(labels);\n+        mIsLegendCustom = true;\n+    }\n+\n+    /**\n+     * Calling this will disable the custom legend labels (set by setLegend(...)). Instead, the labels will again be calculated automatically (after notifyDataSetChanged() is called).\n+     */\n+    public void resetLegendToAuto()\n+    {\n+        mIsLegendCustom = false;\n+    }\n+\n+    /**\n+     * @return true if a custom legend labels and colors has been set\n+     * default false (automatic legend)\n+     */\n+    public boolean isLegendCustom()\n+    {\n+        return mIsLegendCustom;\n+    }\n+\n     /**\n      * returns the position of the legend relative to the chart\n      * ",
    "output": "Allow custom legend data"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/components/Legend.java b/MPChartLib/src/com/github/mikephil/charting/components/Legend.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/Legend.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/Legend.java\n@@ -31,12 +31,18 @@ public enum LegendDirection {\n         LEFT_TO_RIGHT, RIGHT_TO_LEFT\n     }\n \n-    /** the legend colors */\n+    /** the legend colors array, each color is for the form drawn at the same index */\n     private int[] mColors;\n \n-    /** the legend labels */\n+    /** the legend text array. a null label will start a group. */\n     private String[] mLabels;\n \n+    /** colors that will be appended to the end of the colors array after calculating the legend. */\n+    private int[] mExtraColors;\n+\n+    /** labels that will be appended to the end of the labels array after calculating the legend. a null label will start a group. */\n+    private String[] mExtraLabels;\n+\n     /** the position relative to the chart the legend is drawn on */\n     private LegendPosition mPosition = LegendPosition.BELOW_CHART_LEFT;\n \n@@ -221,6 +227,36 @@ public String getLabel(int index) {\n         return mLabels[index];\n     }\n \n+    /**\n+     * colors that will be appended to the end of the colors array after calculating the legend.\n+     */\n+    public int[] getExtraColors() {\n+        return mExtraColors;\n+    }\n+\n+    /**\n+     * colors that will be appended to the end of the colors array after calculating the legend.\n+     * (if the legend has already been calculated, you will need to call notifyDataSetChanged())\n+     */\n+    public void setExtraColors(List<Integer> colors) {\n+        this.mExtraColors = Utils.convertIntegers(colors);\n+    }\n+\n+    /**\n+     * labels that will be appended to the end of the labels array after calculating the legend. a null label will start a group.\n+     */\n+    public String[] getExtraLabels() {\n+        return mExtraLabels;\n+    }\n+\n+    /**\n+     * labels that will be appended to the end of the labels array after calculating the legend. a null label will start a group.\n+     * (if the legend has already been calculated, you will need to call notifyDataSetChanged())\n+     */\n+    public void setExtraLabels(String[] labels) {\n+        this.mExtraLabels = labels;\n+    }\n+\n     /**\n      * returns the position of the legend relative to the chart\n      * \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -16,6 +16,7 @@\n import com.github.mikephil.charting.utils.ViewPortHandler;\n \n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.List;\n \n public class LegendRenderer extends Renderer {\n@@ -129,6 +130,12 @@ public void computeLegend(ChartData<?> data) {\n             }\n         }\n \n+        if (mLegend.getExtraColors() != null && mLegend.getExtraLabels() != null) {\n+            for (int color : mLegend.getExtraColors())\n+                colors.add(color);\n+            Collections.addAll(labels, mLegend.getExtraLabels());\n+        }\n+\n         mLegend.setColors(colors);\n         mLegend.setLabels(labels);\n ",
    "output": "Allow adding extra labels to the legend, after the calculated ones"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -46,6 +46,9 @@ public class PieChart extends PieRadarChartBase<PieData> {\n \n     /** if true, the values inside the piechart are drawn as percent values */\n     private boolean mUsePercentValues = false;\n+    \n+    /** if true, the slices of the piechart are rounded */\n+    private boolean mDrawRoundedSlices = false;\n \n     /**\n      * variable for the text that is drawn in the center of the pie-chart. If\n@@ -440,10 +443,15 @@ public void setHoleRadius(final float percent) {\n         mHoleRadiusPercent = percent;\n     }\n \n+    /**\n+     * Returns the size of the hole radius in percent of the total radius.\n+     * \n+     * @return\n+     */\n     public float getHoleRadius() {\n         return mHoleRadiusPercent;\n     }\n-    \n+\n     public void setTransparentCircleColor(int color) {\n         ((PieChartRenderer) mRenderer).getPaintTransparentCircle().setColor(color);\n     }\n@@ -482,6 +490,16 @@ public boolean isDrawSliceTextEnabled() {\n         return mDrawXLabels;\n     }\n \n+    /**\n+     * Returns true if the chart is set to draw each end of a pie-slice\n+     * \"rounded\".\n+     * \n+     * @return\n+     */\n+    public boolean isDrawRoundedSlicesEnabled() {\n+        return mDrawRoundedSlices;\n+    }\n+\n     /**\n      * If this is enabled, values inside the PieChart are drawn in percent and\n      * not with their original value. Values provided for the ValueFormatter to\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -102,11 +102,6 @@ public void drawData(Canvas c) {\n                 return;\n         }\n \n-        // Paint p = new Paint();\n-        // p.setStyle(Paint.Style.FILL);\n-        // p.setColor(Color.BLACK);\n-        // c.drawRect(mChart.getCircleBox(), p);\n-\n         mDrawBitmap.eraseColor(Color.TRANSPARENT);\n \n         PieData pieData = mChart.getData();\n@@ -122,14 +117,12 @@ protected void drawDataSet(Canvas c, PieDataSet dataSet) {\n \n         float angle = mChart.getRotationAngle();\n \n-        int cnt = 0;\n-\n         List<Entry> entries = dataSet.getYVals();\n         float[] drawAngles = mChart.getDrawAngles();\n \n         for (int j = 0; j < entries.size(); j++) {\n \n-            float newangle = drawAngles[cnt];\n+            float newangle = drawAngles[j];\n             float sliceSpace = dataSet.getSliceSpace();\n \n             Entry e = entries.get(j);\n@@ -143,13 +136,12 @@ protected void drawDataSet(Canvas c, PieDataSet dataSet) {\n                     mRenderPaint.setColor(dataSet.getColor(j));\n                     mBitmapCanvas.drawArc(mChart.getCircleBox(),\n                             (angle + sliceSpace / 2f) * mAnimator.getPhaseY(),\n-                            newangle * mAnimator.getPhaseY()\n-                                    - sliceSpace / 2f, true, mRenderPaint);\n+                            (newangle - sliceSpace / 2f) * mAnimator.getPhaseY(),\n+                            true, mRenderPaint);\n                 }\n             }\n \n             angle += newangle * mAnimator.getPhaseX();\n-            cnt++;\n         }\n     }\n \n@@ -237,6 +229,7 @@ public void drawValues(Canvas c) {\n \n     @Override\n     public void drawExtras(Canvas c) {\n+        // drawCircles(c);\n         drawHole(c);\n         c.drawBitmap(mDrawBitmap, 0, 0, mRenderPaint);\n         drawCenterText(c);\n@@ -377,4 +370,53 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n                     - set.getSliceSpace() / 2f, true, mRenderPaint);\n         }\n     }\n+\n+    /**\n+     * This gives all pie-slices a rounded edge.\n+     * \n+     * @param c\n+     */\n+    protected void drawRoundedSlices(Canvas c) {\n+\n+        if (!mChart.isDrawRoundedSlicesEnabled())\n+            return;\n+\n+        PieDataSet dataSet = mChart.getData().getDataSet();\n+\n+        if (!dataSet.isVisible())\n+            return;\n+        \n+        PointF center = mChart.getCenterCircleBox();\n+        float r = mChart.getRadius();\n+\n+        // calculate the radius of the \"slice-circle\"\n+        float circleRadius = (r - (r * mChart.getHoleRadius() / 100f)) / 2f;\n+\n+        List<Entry> entries = dataSet.getYVals();\n+        float[] drawAngles = mChart.getDrawAngles();\n+        float angle = mChart.getRotationAngle();\n+\n+        for (int j = 0; j < entries.size(); j++) {\n+\n+            float newangle = drawAngles[j];\n+\n+            Entry e = entries.get(j);\n+\n+            // draw only if the value is greater than zero\n+            if ((Math.abs(e.getVal()) > 0.000001)) {\n+\n+                float x = (float) ((r - circleRadius)\n+                        * Math.cos(Math.toRadians((angle + newangle)\n+                                * mAnimator.getPhaseY())) + center.x);\n+                float y = (float) ((r - circleRadius)\n+                        * Math.sin(Math.toRadians((angle + newangle)\n+                                * mAnimator.getPhaseY())) + center.y);\n+\n+                mRenderPaint.setColor(dataSet.getColor(j));\n+                mBitmapCanvas.drawCircle(x, y, circleRadius, mRenderPaint);\n+            }\n+\n+            angle += newangle * mAnimator.getPhaseX();\n+        }\n+    }\n }",
    "output": "Considering feature of rounded pie-slices, not complete yet."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -63,6 +63,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart = (LineChart) findViewById(R.id.chart1);\n         mChart.setOnChartGestureListener(this);\n         mChart.setOnChartValueSelectedListener(this);\n+        mChart.setDrawGridBackground(false);\n \n         // no description text\n         mChart.setDescription(\"\");\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -604,7 +604,7 @@ public void computeScroll() {\n \n         mDecelerationLastTime = currentTime;\n \n-        if (Math.abs(mDecelerationVelocity.x) >= 0.001 || Math.abs(mDecelerationVelocity.y) >= 0.001)\n+        if (Math.abs(mDecelerationVelocity.x) >= 0.01 || Math.abs(mDecelerationVelocity.y) >= 0.01)\n             Utils.postInvalidateOnAnimation(mChart); // This causes computeScroll to fire, recommended for this by Google\n         else\n             stopDeceleration();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java b/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java\n@@ -43,19 +43,6 @@ public class ColorTemplate {\n             Color.rgb(140, 234, 255), Color.rgb(255, 140, 157)\n     };\n \n-    // public static final int[] FRESH_COLORS = {\n-    // R.color.fresh_1, R.color.fresh_2, R.color.fresh_3, R.color.fresh_4,\n-    // R.color.fresh_5\n-    // };\n-    // public static final int[] MONO_COLORS = {\n-    // R.color.mono_1, R.color.mono_2, R.color.mono_3, R.color.mono_4,\n-    // R.color.mono_5\n-    // };\n-    // public static final int[] GREEN_COLORS = {\n-    // R.color.greens_1, R.color.greens_2, R.color.greens_3, R.color.greens_4,\n-    // R.color.greens_5\n-    // };\n-\n     /**\n      * Returns the Android ICS holo blue light color.\n      * \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n@@ -39,26 +39,30 @@ public abstract class Utils {\n      * \n      * @param res\n      */\n+    @SuppressWarnings(\"deprecation\")\n     public static void init(Context context) {\n \n         if (context == null) {\n-            //noinspection deprecation\n+            // noinspection deprecation\n             mMinimumFlingVelocity = ViewConfiguration.getMinimumFlingVelocity();\n-            //noinspection deprecation\n+            // noinspection deprecation\n             mMaximumFlingVelocity = ViewConfiguration.getMaximumFlingVelocity();\n+\n+            Log.e(\"MPAndroidChart, Utils.init(...)\", \"PROVIDED CONTEXT OBJECT IS NULL\");\n+\n         } else {\n             ViewConfiguration viewConfiguration = ViewConfiguration.get(context);\n             mMinimumFlingVelocity = viewConfiguration.getScaledMinimumFlingVelocity();\n             mMaximumFlingVelocity = viewConfiguration.getScaledMaximumFlingVelocity();\n+\n+            Resources res = context.getResources();\n+            mMetrics = res.getDisplayMetrics();\n         }\n-        \n-        Resources res = context.getResources();\n-        mMetrics = res.getDisplayMetrics();\n     }\n \n     /**\n-     * initialize method, called inside the Chart.init() method.\n-     * backwards compatibility - to not break existing code\n+     * initialize method, called inside the Chart.init() method. backwards\n+     * compatibility - to not break existing code\n      *\n      * @param res\n      */\n@@ -67,9 +71,9 @@ public static void init(Resources res) {\n \n         mMetrics = res.getDisplayMetrics();\n \n-        //noinspection deprecation\n+        // noinspection deprecation\n         mMinimumFlingVelocity = ViewConfiguration.getMinimumFlingVelocity();\n-        //noinspection deprecation\n+        // noinspection deprecation\n         mMaximumFlingVelocity = ViewConfiguration.getMaximumFlingVelocity();\n     }\n \n@@ -471,7 +475,8 @@ public static PointF getPosition(PointF center, float dist, float angle) {\n         return p;\n     }\n \n-    public static void velocityTrackerPointerUpCleanUpIfNecessary(MotionEvent ev, VelocityTracker tracker) {\n+    public static void velocityTrackerPointerUpCleanUpIfNecessary(MotionEvent ev,\n+            VelocityTracker tracker) {\n \n         // Check the dot product of current velocities.\n         // If the pointer that left was opposing another velocity vector, clear.\n@@ -481,7 +486,8 @@ public static void velocityTrackerPointerUpCleanUpIfNecessary(MotionEvent ev, Ve\n         final float x1 = tracker.getXVelocity(id1);\n         final float y1 = tracker.getYVelocity(id1);\n         for (int i = 0, count = ev.getPointerCount(); i < count; i++) {\n-            if (i == upIndex) continue;\n+            if (i == upIndex)\n+                continue;\n \n             final int id2 = ev.getPointerId(i);\n             final float x = x1 * tracker.getXVelocity(id2);\n@@ -496,8 +502,8 @@ public static void velocityTrackerPointerUpCleanUpIfNecessary(MotionEvent ev, Ve\n     }\n \n     /**\n-     * Original method view.postInvalidateOnAnimation() only supportd in API >= 16,\n-     * This is a replica of the code from ViewCompat.\n+     * Original method view.postInvalidateOnAnimation() only supportd in API >=\n+     * 16, This is a replica of the code from ViewCompat.\n      *\n      * @param view\n      */",
    "output": "Minor changes."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n@@ -45,12 +45,19 @@ public ViewPortHandler() {\n      * @param width\n      * @param height\n      */\n+\n     public void setChartDimens(float width, float height) {\n+\n+        float offsetLeft = this.offsetLeft();\n+        float offsetTop = this.offsetTop();\n+        float offsetRight = this.offsetRight();\n+        float offsetBottom = this.offsetBottom();\n+\n         mChartHeight = height;\n         mChartWidth = width;\n \n-        if (mContentRect.width() <= 0 || mContentRect.height() <= 0)\n-            mContentRect.set(0, 0, width, height);\n+        restrainViewPort(offsetLeft, offsetTop, offsetRight, offsetBottom);\n+\n     }\n \n     public boolean hasChartDimens() {",
    "output": "Merge pull request #629 from danielgindi/master\n\nUpdate contentRect when resizing"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n@@ -45,12 +45,19 @@ public ViewPortHandler() {\n      * @param width\n      * @param height\n      */\n+\n     public void setChartDimens(float width, float height) {\n+\n+        float offsetLeft = this.offsetLeft();\n+        float offsetTop = this.offsetTop();\n+        float offsetRight = this.offsetRight();\n+        float offsetBottom = this.offsetBottom();\n+\n         mChartHeight = height;\n         mChartWidth = width;\n \n-        if (mContentRect.width() <= 0 || mContentRect.height() <= 0)\n-            mContentRect.set(0, 0, width, height);\n+        restrainViewPort(offsetLeft, offsetTop, offsetRight, offsetBottom);\n+\n     }\n \n     public boolean hasChartDimens() {",
    "output": "Update contentRect when resizing"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/CombinedData.java b/MPChartLib/src/com/github/mikephil/charting/data/CombinedData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/CombinedData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/CombinedData.java\n@@ -4,7 +4,7 @@\n import java.util.List;\n \n /**\n- * Data object that allows the combination of Line-, Bar-, Scatter- and\n+ * Data object that allows the combination of Line-, Bar-, Scatter-, Bubble- and\n  * CandleData. Used in the CombinedChart class.\n  * \n  * @author Philipp Jahoda\n@@ -52,13 +52,13 @@ public void setData(CandleData data) {\n         mDataSets.addAll(data.getDataSets());\n         init(data.getDataSets());\n     }\n-    \n+\n     public void setData(BubbleData data) {\n         mBubbleData = data;\n         mDataSets.addAll(data.getDataSets());\n         init(data.getDataSets());\n     }\n-    \n+\n     public BubbleData getBubbleData() {\n         return mBubbleData;\n     }\n@@ -81,9 +81,15 @@ public CandleData getCandleData() {\n \n     @Override\n     public void notifyDataChanged() {\n-        mLineData.notifyDataChanged();\n-        mBarData.notifyDataChanged();\n-        mCandleData.notifyDataChanged();\n-        mScatterData.notifyDataChanged();\n+        if (mLineData != null)\n+            mLineData.notifyDataChanged();\n+        if (mBarData != null)\n+            mBarData.notifyDataChanged();\n+        if (mCandleData != null)\n+            mCandleData.notifyDataChanged();\n+        if (mScatterData != null)\n+            mScatterData.notifyDataChanged();\n+        if (mBubbleData != null)\n+            mBubbleData.notifyDataChanged();\n     }\n }",
    "output": "Minor fix in CombinedData."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n@@ -47,6 +47,7 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         mChart = (CombinedChart) findViewById(R.id.chart1);\n         mChart.setDescription(\"\");\n+        mChart.setBackgroundColor(Color.WHITE);\n         mChart.setDrawGridBackground(false);\n         mChart.setDrawBarShadow(false);\n         \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n@@ -128,7 +128,7 @@ public float[] generateTransformedValuesScatter(List<? extends Entry> entries,\n     public float[] generateTransformedValuesBubble(List<? extends Entry> entries,\n                                                  float phaseX, float phaseY, int from, int to) {\n \n-        final int count = (int)Math.ceil((to - from) * phaseX) * 2;\n+        final int count = (int) Math.ceil(to - from) * 2; // (int) Math.ceil((to - from) * phaseX) * 2;\n \n         float[] valuePoints = new float[count];\n \n@@ -137,7 +137,7 @@ public float[] generateTransformedValuesBubble(List<? extends Entry> entries,\n             Entry e = entries.get(j / 2 + from);\n \n             if (e != null) {\n-                valuePoints[j] = (float)(e.getXIndex() - from) * phaseX + from;\n+                valuePoints[j] = (float) (e.getXIndex() - from) * phaseX + from;\n                 valuePoints[j + 1] = e.getVal() * phaseY;\n             }\n         }",
    "output": "Fixed BubbleChart issue."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n@@ -79,15 +79,13 @@ protected void drawDataSet(Canvas c, BubbleDataSet dataSet) {\n         int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n \n         sizeBuffer[0] = 0f;\n-        sizeBuffer[1] = mChart.getYChartMin();\n         sizeBuffer[2] = 1f;\n-        sizeBuffer[3] = mChart.getYChartMax();\n \n         trans.pointValuesToPixel(sizeBuffer);\n \n         // calcualte the full width of 1 step on the x-axis\n         final float maxBubbleWidth = Math.abs(sizeBuffer[2] - sizeBuffer[0]);\n-        final float maxBubbleHeight = Math.abs(sizeBuffer[1] - sizeBuffer[3]);\n+        final float maxBubbleHeight = Math.abs(mViewPortHandler.contentBottom() - mViewPortHandler.contentTop());\n         final float referenceSize = Math.min(maxBubbleHeight, maxBubbleWidth);\n \n         for (int j = minx; j < maxx; j++) {\n@@ -216,15 +214,13 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n             \n             sizeBuffer[0] = 0f;\n-            sizeBuffer[1] = mChart.getYChartMin();\n             sizeBuffer[2] = 1f;\n-            sizeBuffer[3] = mChart.getYChartMax();\n \n             trans.pointValuesToPixel(sizeBuffer);\n             \n             // calcualte the full width of 1 step on the x-axis\n             final float maxBubbleWidth = Math.abs(sizeBuffer[2] - sizeBuffer[0]);\n-            final float maxBubbleHeight = Math.abs(sizeBuffer[1] - sizeBuffer[3]);\n+            final float maxBubbleHeight = Math.abs(mViewPortHandler.contentBottom() - mViewPortHandler.contentTop());\n             final float referenceSize = Math.min(maxBubbleHeight, maxBubbleWidth);\n \n             pointBuffer[0] = (float) (entry.getXIndex() - minx) * phaseX + (float) minx;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n@@ -128,7 +128,7 @@ public float[] generateTransformedValuesScatter(List<? extends Entry> entries,\n     public float[] generateTransformedValuesBubble(List<? extends Entry> entries,\n                                                  float phaseX, float phaseY, int from, int to) {\n \n-        final int count = from - to;\n+        final int count = (int)Math.ceil((to - from) * phaseX) * 2;\n \n         float[] valuePoints = new float[count];\n ",
    "output": "Minor fixes on BubbleChart."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n@@ -86,7 +86,7 @@ protected void drawDataSet(Canvas c, BubbleDataSet dataSet) {\n         trans.pointValuesToPixel(sizeBuffer);\n \n         // calcualte the full width of 1 step on the x-axis\n-        final float maxBubbleWidth = sizeBuffer[2] - sizeBuffer[0];\n+        final float maxBubbleWidth = Math.abs(sizeBuffer[2] - sizeBuffer[0]);\n         final float maxBubbleHeight = Math.abs(sizeBuffer[1] - sizeBuffer[3]);\n         final float referenceSize = Math.min(maxBubbleHeight, maxBubbleWidth);\n \n@@ -223,7 +223,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             trans.pointValuesToPixel(sizeBuffer);\n             \n             // calcualte the full width of 1 step on the x-axis\n-            final float maxBubbleWidth = sizeBuffer[2] - sizeBuffer[0];\n+            final float maxBubbleWidth = Math.abs(sizeBuffer[2] - sizeBuffer[0]);\n             final float maxBubbleHeight = Math.abs(sizeBuffer[1] - sizeBuffer[3]);\n             final float referenceSize = Math.min(maxBubbleHeight, maxBubbleWidth);\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n@@ -128,7 +128,7 @@ public float[] generateTransformedValuesScatter(List<? extends Entry> entries,\n     public float[] generateTransformedValuesBubble(List<? extends Entry> entries,\n                                                  float phaseX, float phaseY, int from, int to) {\n \n-        final int count = (int)Math.ceil((to - from) * phaseX) * 2;\n+        final int count = from - to;\n \n         float[] valuePoints = new float[count];\n ",
    "output": "Merge pull request #618 from danielgindi/master\n\nMinor improvements to Bubble chart"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n@@ -86,7 +86,7 @@ protected void drawDataSet(Canvas c, BubbleDataSet dataSet) {\n         trans.pointValuesToPixel(sizeBuffer);\n \n         // calcualte the full width of 1 step on the x-axis\n-        final float maxBubbleWidth = sizeBuffer[2] - sizeBuffer[0];\n+        final float maxBubbleWidth = Math.abs(sizeBuffer[2] - sizeBuffer[0]);\n         final float maxBubbleHeight = Math.abs(sizeBuffer[1] - sizeBuffer[3]);\n         final float referenceSize = Math.min(maxBubbleHeight, maxBubbleWidth);\n \n@@ -223,7 +223,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             trans.pointValuesToPixel(sizeBuffer);\n             \n             // calcualte the full width of 1 step on the x-axis\n-            final float maxBubbleWidth = sizeBuffer[2] - sizeBuffer[0];\n+            final float maxBubbleWidth = Math.abs(sizeBuffer[2] - sizeBuffer[0]);\n             final float maxBubbleHeight = Math.abs(sizeBuffer[1] - sizeBuffer[3]);\n             final float referenceSize = Math.min(maxBubbleHeight, maxBubbleWidth);\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n@@ -128,7 +128,7 @@ public float[] generateTransformedValuesScatter(List<? extends Entry> entries,\n     public float[] generateTransformedValuesBubble(List<? extends Entry> entries,\n                                                  float phaseX, float phaseY, int from, int to) {\n \n-        final int count = (int)Math.ceil((to - from) * phaseX) * 2;\n+        final int count = from - to;\n \n         float[] valuePoints = new float[count];\n ",
    "output": "Minor improvements to Bubble chart"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -174,7 +174,8 @@ protected void onDraw(Canvas canvas) {\n         if (mDataNotSet)\n             return;\n \n-        long starttime = System.currentTimeMillis();calcModulus();\n+        long starttime = System.currentTimeMillis();\n+        calcModulus();\n \n         mXAxisRenderer.calcXBounds(this, mXAxis.mAxisLabelModulus);\n         mRenderer.calcXBounds(this, mXAxis.mAxisLabelModulus);\n@@ -1191,14 +1192,20 @@ public int getHighestVisibleXIndex() {\n      * returns the current x-scale factor\n      */\n     public float getScaleX() {\n-        return mViewPortHandler.getScaleX();\n+        if (mViewPortHandler == null)\n+            return 1f;\n+        else\n+            return mViewPortHandler.getScaleX();\n     }\n \n     /**\n      * returns the current y-scale factor\n      */\n     public float getScaleY() {\n-        return mViewPortHandler.getScaleY();\n+        if (mViewPortHandler == null)\n+            return 1f;\n+        else\n+            return mViewPortHandler.getScaleY();\n     }\n \n     /**",
    "output": "Fixed issue concerning elevation (issue #492, #512)."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -157,30 +157,28 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n             float curDx = 0f;\n             float curDy = 0f;\n \n+            Entry prevPrev = entries.get(minx);\n+            Entry prev = entries.get(minx);\n             Entry cur = entries.get(minx);\n             Entry next = entries.get(minx + 1);\n-            Entry prev = entries.get(minx);\n-            Entry prevPrev = entries.get(minx);\n \n             // let the spline start\n             cubicPath.moveTo(cur.getXIndex(), cur.getVal() * phaseY);\n \n-            prevDx = (next.getXIndex() - cur.getXIndex()) * intensity;\n-            prevDy = (next.getVal() - cur.getVal()) * intensity;\n+            prevDx = (cur.getXIndex() - prev.getXIndex()) * intensity;\n+            prevDy = (cur.getVal() - prev.getVal()) * intensity;\n \n-            cur = entries.get(minx + 1);\n-            next = entries.get(minx + (entries.size() - minx > 2 ? 2 : 1));\n-            curDx = (next.getXIndex() - prev.getXIndex()) * intensity;\n-            curDy = (next.getVal() - prev.getVal()) * intensity;\n+            curDx = (next.getXIndex() - cur.getXIndex()) * intensity;\n+            curDy = (next.getVal() - cur.getVal()) * intensity;\n \n             // the first cubic\n             cubicPath.cubicTo(prev.getXIndex() + prevDx, (prev.getVal() + prevDy) * phaseY,\n                     cur.getXIndex() - curDx,\n                     (cur.getVal() - curDy) * phaseY, cur.getXIndex(), cur.getVal() * phaseY);\n \n-            for (int j = minx + 2, count = Math.min(size, entries.size() - 1); j < count; j++) {\n+            for (int j = minx + 1, count = Math.min(size, entries.size() - 1); j < count; j++) {\n \n-                prevPrev = entries.get(j - 2);\n+                prevPrev = entries.get(j == 1 ? 0 : j - 2);\n                 prev = entries.get(j - 1);\n                 cur = entries.get(j);\n                 next = entries.get(j + 1);",
    "output": "Merge pull request #617 from danielgindi/master\n\nMinor bug fix to cubic line rendering while scrolling"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -157,30 +157,28 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n             float curDx = 0f;\n             float curDy = 0f;\n \n+            Entry prevPrev = entries.get(minx);\n+            Entry prev = entries.get(minx);\n             Entry cur = entries.get(minx);\n             Entry next = entries.get(minx + 1);\n-            Entry prev = entries.get(minx);\n-            Entry prevPrev = entries.get(minx);\n \n             // let the spline start\n             cubicPath.moveTo(cur.getXIndex(), cur.getVal() * phaseY);\n \n-            prevDx = (next.getXIndex() - cur.getXIndex()) * intensity;\n-            prevDy = (next.getVal() - cur.getVal()) * intensity;\n+            prevDx = (cur.getXIndex() - prev.getXIndex()) * intensity;\n+            prevDy = (cur.getVal() - prev.getVal()) * intensity;\n \n-            cur = entries.get(minx + 1);\n-            next = entries.get(minx + (entries.size() - minx > 2 ? 2 : 1));\n-            curDx = (next.getXIndex() - prev.getXIndex()) * intensity;\n-            curDy = (next.getVal() - prev.getVal()) * intensity;\n+            curDx = (next.getXIndex() - cur.getXIndex()) * intensity;\n+            curDy = (next.getVal() - cur.getVal()) * intensity;\n \n             // the first cubic\n             cubicPath.cubicTo(prev.getXIndex() + prevDx, (prev.getVal() + prevDy) * phaseY,\n                     cur.getXIndex() - curDx,\n                     (cur.getVal() - curDy) * phaseY, cur.getXIndex(), cur.getVal() * phaseY);\n \n-            for (int j = minx + 2, count = Math.min(size, entries.size() - 1); j < count; j++) {\n+            for (int j = minx + 1, count = Math.min(size, entries.size() - 1); j < count; j++) {\n \n-                prevPrev = entries.get(j - 2);\n+                prevPrev = entries.get(j == 1 ? 0 : j - 2);\n                 prev = entries.get(j - 1);\n                 cur = entries.get(j);\n                 next = entries.get(j + 1);",
    "output": "Minor bug fix to cubic line rendering while scrolling"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/LargeValueFormatter.java b/MPChartLib/src/com/github/mikephil/charting/utils/LargeValueFormatter.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/LargeValueFormatter.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/LargeValueFormatter.java\n@@ -21,7 +21,7 @@ public class LargeValueFormatter implements ValueFormatter {\n     private static final int MAX_LENGTH = 4;\n \n     private DecimalFormat mFormat;\n-    private String mText;\n+    private String mText = \"\";\n \n     public LargeValueFormatter() {\n         mFormat = new DecimalFormat(\"###E0\");",
    "output": "Minor fix in large valueformatter."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n@@ -58,6 +58,8 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart = (PieChart) findViewById(R.id.chart1);\n         mChart.setUsePercentValues(true);\n         mChart.setDescription(\"\");\n+        \n+        mChart.setDragDecelerationFrictionCoef(0.99f);\n \n         tf = Typeface.createFromAsset(getAssets(), \"OpenSans-Regular.ttf\");\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -81,7 +81,7 @@ public boolean onTouchEvent(MotionEvent event) {\n     public void computeScroll() {\n \n         if (mListener instanceof PieRadarChartTouchListener)\n-            ((PieRadarChartTouchListener)mListener).computeScroll();\n+            ((PieRadarChartTouchListener) mListener).computeScroll();\n     }\n \n     @Override\n@@ -442,7 +442,6 @@ public List<SelInfo> getYValsAtIndex(int xIndex) {\n      */\n     /** CODE BELOW THIS RELATED TO ANIMATION */\n \n-\n     /**\n      * Applys a spin animation to the Chart.\n      * \n@@ -458,7 +457,8 @@ public void spin(int durationmillis, float fromangle, float toangle, Easing.Easi\n \n         setRotationAngle(fromangle);\n \n-        ObjectAnimator spinAnimator = ObjectAnimator.ofFloat(this, \"rotationAngle\", fromangle, toangle);\n+        ObjectAnimator spinAnimator = ObjectAnimator.ofFloat(this, \"rotationAngle\", fromangle,\n+                toangle);\n         spinAnimator.setDuration(durationmillis);\n         spinAnimator.setInterpolator(Easing.getEasingFunctionFromOption(easing));\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java\n@@ -41,7 +41,7 @@ public class PieRadarChartTouchListener extends SimpleOnGestureListener implemen\n \n     private GestureDetector mGestureDetector;\n \n-    private ArrayList<AngularVelocitySample> _velocitySamples = new ArrayList<>();\n+    private ArrayList<AngularVelocitySample> _velocitySamples = new ArrayList<AngularVelocitySample>();\n \n     private long mDecelerationLastTime = 0;\n     private float mDecelerationAngularVelocity = 0.f;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/LargeValueFormatter.java b/MPChartLib/src/com/github/mikephil/charting/utils/LargeValueFormatter.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/LargeValueFormatter.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/LargeValueFormatter.java\n@@ -31,14 +31,14 @@ public LargeValueFormatter() {\n      * Creates a formatter that appends a specified text to the result string\n      * @param text a text that will be appended\n      */\n-    public LargeValueFormatter(String text) {\n+    public LargeValueFormatter(String appendix) {\n         this();\n-        mText = text;\n+        mText = appendix;\n     }\n \n     @Override\n     public String getFormattedValue(float value) {\n-        return makePretty(value) + \" \" + mText;\n+        return makePretty(value) + mText;\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n@@ -14,7 +14,9 @@\n import android.view.VelocityTracker;\n import android.view.View;\n import android.view.ViewConfiguration;\n+\n import com.github.mikephil.charting.components.YAxis.AxisDependency;\n+\n import java.text.DecimalFormat;\n import java.util.List;\n ",
    "output": "Merged recent PRs."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n@@ -91,7 +91,7 @@ protected void drawDataSet(Canvas c, BubbleDataSet dataSet) {\n \n             final float shapeSize = (chartSize / bubbleSizeFactor)\n                     * (float) (Math.sqrt(entry.getSize() /\n-                    (dataSet.getMaxSize() > 0.0 ? dataSet.getMaxSize() : 1.0)));\n+                    (dataSet.getMaxSize() != 0.0 ? dataSet.getMaxSize() : 1.0)));\n             final float shapeHalf = shapeSize / 2.f;\n \n             if (!mViewPortHandler.isInBoundsY(_pointBuffer[1]))\n@@ -216,7 +216,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n             final float shapeSize = (chartSize / bubbleSizeFactor)\n                     * (float) (Math.sqrt(entry.getSize() /\n-                    (dataSet.getMaxSize() > 0.0 ? dataSet.getMaxSize() : 1.0)));\n+                    (dataSet.getMaxSize() != 0.0 ? dataSet.getMaxSize() : 1.0)));\n             final float shapeHalf = shapeSize / 2.f;\n \n             if (indice.getXIndex() < minx || indice.getXIndex() >= maxx)",
    "output": "Theoretically these values could be negative"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/LargeValueFormatter.java b/MPChartLib/src/com/github/mikephil/charting/utils/LargeValueFormatter.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/LargeValueFormatter.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/LargeValueFormatter.java\n@@ -11,25 +11,34 @@\n  * (https://github.com/romangromov) for this piece of code.\n  * \n  * @author Philipp Jahoda\n+ * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>\n  */\n public class LargeValueFormatter implements ValueFormatter {\n \n-    private static String[] SUFFIX = new String[] {\n+    private static final String[] SUFFIX = new String[] {\n             \"\", \"k\", \"m\", \"b\", \"t\"\n     };\n-\n-    private static int MAX_LENGTH = 4;\n+    private static final int MAX_LENGTH = 4;\n \n     private DecimalFormat mFormat;\n+    private String mText;\n \n     public LargeValueFormatter() {\n-\n         mFormat = new DecimalFormat(\"###E0\");\n     }\n \n+    /**\n+     * Creates a formatter that appends a specified text to the result string\n+     * @param text a text that will be appended\n+     */\n+    public LargeValueFormatter(String text) {\n+        this();\n+        mText = text;\n+    }\n+\n     @Override\n     public String getFormattedValue(float value) {\n-        return makePretty(value);\n+        return makePretty(value) + \" \" + mText;\n     }\n \n     /**",
    "output": "Merge pull request #614 from aint/large_value_formatter\n\nLarge value formatter now can appends a specified text to the result string"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/LargeValueFormatter.java b/MPChartLib/src/com/github/mikephil/charting/utils/LargeValueFormatter.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/LargeValueFormatter.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/LargeValueFormatter.java\n@@ -11,25 +11,34 @@\n  * (https://github.com/romangromov) for this piece of code.\n  * \n  * @author Philipp Jahoda\n+ * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>\n  */\n public class LargeValueFormatter implements ValueFormatter {\n \n-    private static String[] SUFFIX = new String[] {\n+    private static final String[] SUFFIX = new String[] {\n             \"\", \"k\", \"m\", \"b\", \"t\"\n     };\n-\n-    private static int MAX_LENGTH = 4;\n+    private static final int MAX_LENGTH = 4;\n \n     private DecimalFormat mFormat;\n+    private String mText;\n \n     public LargeValueFormatter() {\n-\n         mFormat = new DecimalFormat(\"###E0\");\n     }\n \n+    /**\n+     * Creates a formatter that appends a specified text to the result string\n+     * @param text a text that will be appended\n+     */\n+    public LargeValueFormatter(String text) {\n+        this();\n+        mText = text;\n+    }\n+\n     @Override\n     public String getFormattedValue(float value) {\n-        return makePretty(value);\n+        return makePretty(value) + \" \" + mText;\n     }\n \n     /**",
    "output": "Large value formatter now can appends a specified text to the result string"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java\n@@ -227,7 +227,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n         BubbleData data = new BubbleData(xVals, dataSets);\n         data.setValueTypeface(tf);\n         data.setValueTextSize(8f);\n-        data.setHighLightCircleWidth(1.5f);\n+        data.setHighlightCircleWidth(1.5f);\n \n         mChart.setData(data);\n         mChart.invalidate();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/BubbleData.java b/MPChartLib/src/com/github/mikephil/charting/data/BubbleData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/BubbleData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/BubbleData.java\n@@ -46,9 +46,9 @@ private static List<BubbleDataSet> toList(BubbleDataSet dataSet) {\n      * \n      * @param width\n      */\n-    public void setHighLightCircleWidth(float width) {\n+    public void setHighlightCircleWidth(float width) {\n         for (BubbleDataSet set : mDataSets) {\n-            set.setHighLightCircleWidth(width);\n+            set.setHighlightCircleWidth(width);\n         }\n     }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java\n@@ -20,9 +20,6 @@ public class BubbleDataSet extends BarLineScatterCandleDataSet<BubbleEntry> {\n \n     public BubbleDataSet(List<BubbleEntry> yVals, String label) {\n         super(yVals, label);\n-\n-        if (mMaxSize < 1.f)\n-            mMaxSize = 1.f;\n     }\n \n     /**\n@@ -31,11 +28,11 @@ public BubbleDataSet(List<BubbleEntry> yVals, String label) {\n      * \n      * @param width\n      */\n-    public void setHighLightCircleWidth(float width) {\n+    public void setHighlightCircleWidth(float width) {\n         mHighlightCircleWidth = Utils.convertDpToPixel(width);\n     }\n \n-    public float getHighLightCircleWidth() {\n+    public float getHighlightCircleWidth() {\n         return mHighlightCircleWidth;\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n@@ -90,7 +90,8 @@ protected void drawDataSet(Canvas c, BubbleDataSet dataSet) {\n             trans.pointValuesToPixel(_pointBuffer);\n \n             final float shapeSize = (chartSize / bubbleSizeFactor)\n-                    * (float) (Math.sqrt(entry.getSize() / dataSet.getMaxSize()));\n+                    * (float) (Math.sqrt(entry.getSize() /\n+                    (dataSet.getMaxSize() > 0.0 ? dataSet.getMaxSize() : 1.0)));\n             final float shapeHalf = shapeSize / 2.f;\n \n             if (!mViewPortHandler.isInBoundsY(_pointBuffer[1]))\n@@ -214,7 +215,8 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             trans.pointValuesToPixel(_pointBuffer);\n \n             final float shapeSize = (chartSize / bubbleSizeFactor)\n-                    * (float) (Math.sqrt(entry.getSize() / dataSet.getMaxSize()));\n+                    * (float) (Math.sqrt(entry.getSize() /\n+                    (dataSet.getMaxSize() > 0.0 ? dataSet.getMaxSize() : 1.0)));\n             final float shapeHalf = shapeSize / 2.f;\n \n             if (indice.getXIndex() < minx || indice.getXIndex() >= maxx)\n@@ -231,7 +233,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             final int color = Color.HSVToColor(Color.alpha(originalColor), _hsvBuffer);\n \n             mHighlightPaint.setColor(color);\n-            mHighlightPaint.setStrokeWidth(dataSet.getHighLightCircleWidth());\n+            mHighlightPaint.setStrokeWidth(dataSet.getHighlightCircleWidth());\n             c.drawCircle(_pointBuffer[0], _pointBuffer[1], shapeHalf, mHighlightPaint);\n         }\n     }",
    "output": "Merge pull request #611 from danielgindi/minor-improvements\n\nMinor improvements to Bubble chart"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java\n@@ -227,7 +227,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n         BubbleData data = new BubbleData(xVals, dataSets);\n         data.setValueTypeface(tf);\n         data.setValueTextSize(8f);\n-        data.setHighLightCircleWidth(1.5f);\n+        data.setHighlightCircleWidth(1.5f);\n \n         mChart.setData(data);\n         mChart.invalidate();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/BubbleData.java b/MPChartLib/src/com/github/mikephil/charting/data/BubbleData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/BubbleData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/BubbleData.java\n@@ -46,9 +46,9 @@ private static List<BubbleDataSet> toList(BubbleDataSet dataSet) {\n      * \n      * @param width\n      */\n-    public void setHighLightCircleWidth(float width) {\n+    public void setHighlightCircleWidth(float width) {\n         for (BubbleDataSet set : mDataSets) {\n-            set.setHighLightCircleWidth(width);\n+            set.setHighlightCircleWidth(width);\n         }\n     }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java\n@@ -20,9 +20,6 @@ public class BubbleDataSet extends BarLineScatterCandleDataSet<BubbleEntry> {\n \n     public BubbleDataSet(List<BubbleEntry> yVals, String label) {\n         super(yVals, label);\n-\n-        if (mMaxSize < 1.f)\n-            mMaxSize = 1.f;\n     }\n \n     /**\n@@ -31,11 +28,11 @@ public BubbleDataSet(List<BubbleEntry> yVals, String label) {\n      * \n      * @param width\n      */\n-    public void setHighLightCircleWidth(float width) {\n+    public void setHighlightCircleWidth(float width) {\n         mHighlightCircleWidth = Utils.convertDpToPixel(width);\n     }\n \n-    public float getHighLightCircleWidth() {\n+    public float getHighlightCircleWidth() {\n         return mHighlightCircleWidth;\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java\n@@ -90,7 +90,8 @@ protected void drawDataSet(Canvas c, BubbleDataSet dataSet) {\n             trans.pointValuesToPixel(_pointBuffer);\n \n             final float shapeSize = (chartSize / bubbleSizeFactor)\n-                    * (float) (Math.sqrt(entry.getSize() / dataSet.getMaxSize()));\n+                    * (float) (Math.sqrt(entry.getSize() /\n+                    (dataSet.getMaxSize() > 0.0 ? dataSet.getMaxSize() : 1.0)));\n             final float shapeHalf = shapeSize / 2.f;\n \n             if (!mViewPortHandler.isInBoundsY(_pointBuffer[1]))\n@@ -214,7 +215,8 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             trans.pointValuesToPixel(_pointBuffer);\n \n             final float shapeSize = (chartSize / bubbleSizeFactor)\n-                    * (float) (Math.sqrt(entry.getSize() / dataSet.getMaxSize()));\n+                    * (float) (Math.sqrt(entry.getSize() /\n+                    (dataSet.getMaxSize() > 0.0 ? dataSet.getMaxSize() : 1.0)));\n             final float shapeHalf = shapeSize / 2.f;\n \n             if (indice.getXIndex() < minx || indice.getXIndex() >= maxx)\n@@ -231,7 +233,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             final int color = Color.HSVToColor(Color.alpha(originalColor), _hsvBuffer);\n \n             mHighlightPaint.setColor(color);\n-            mHighlightPaint.setStrokeWidth(dataSet.getHighLightCircleWidth());\n+            mHighlightPaint.setStrokeWidth(dataSet.getHighlightCircleWidth());\n             c.drawCircle(_pointBuffer[0], _pointBuffer[1], shapeHalf, mHighlightPaint);\n         }\n     }",
    "output": "Minor improvements to Bubble chart"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n@@ -73,7 +73,7 @@ protected void drawDataSet(Canvas c, CandleDataSet dataSet) {\n         Entry entryFrom = dataSet.getEntryForXIndex(mMinX);\n         Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n \n-        int minx = dataSet.getEntryPosition(entryFrom);\n+        int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n         int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n \n         int range = (maxx - minx) * 4;\n@@ -222,7 +222,7 @@ public void drawValues(Canvas c) {\n                 Entry entryFrom = dataSet.getEntryForXIndex(mMinX);\n                 Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n \n-                int minx = dataSet.getEntryPosition(entryFrom);\n+                int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n                 int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n \n                 float[] positions = trans.generateTransformedValuesCandle(\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -138,7 +138,7 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n         Entry entryFrom = dataSet.getEntryForXIndex(mMinX);\n         Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n \n-        int minx = dataSet.getEntryPosition(entryFrom);\n+        int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n         int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n \n         float phaseX = mAnimator.getPhaseX();\n@@ -289,7 +289,7 @@ protected void drawLinear(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n         Entry entryFrom = dataSet.getEntryForXIndex(mMinX);\n         Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n \n-        int minx = dataSet.getEntryPosition(entryFrom);\n+        int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n         int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n \n         int range = (maxx - minx) * 4 - 4;\n@@ -431,10 +431,7 @@ public void drawValues(Canvas c) {\n                 Entry entryFrom = dataSet.getEntryForXIndex(mMinX);\n                 Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n \n-                int minx = dataSet.getEntryPosition(entryFrom);\n-                if (minx < 0)\n-                    minx = 0;\n-\n+                int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n                 int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n \n                 float[] positions = trans.generateTransformedValuesLine(\n@@ -490,7 +487,7 @@ protected void drawCircles(Canvas c) {\n             Entry entryFrom = dataSet.getEntryForXIndex((mMinX < 0) ? 0 : mMinX);\n             Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n \n-            int minx = dataSet.getEntryPosition(entryFrom);\n+            int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n             int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n \n             CircleBuffer buffer = mCircleBuffers[i];\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n@@ -229,7 +229,7 @@ public void drawValues(Canvas c) {\n                         break;\n \n                     // make sure the lines don't do shitty things outside bounds\n-                    if (j != 0 && (!mViewPortHandler.isInBoundsLeft(positions[j])\n+                    if ((!mViewPortHandler.isInBoundsLeft(positions[j])\n                             || !mViewPortHandler.isInBoundsY(positions[j + 1])))\n                         continue;\n ",
    "output": "Merge pull request #607 from danielgindi/minor-bugfixes\n\nMinor bugfixes"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java\n@@ -82,15 +82,43 @@ protected void onCreate(Bundle savedInstanceState) {\n         xl.setTextColor(Color.WHITE);\n         xl.setDrawGridLines(false);\n         xl.setAvoidFirstLastClipping(true);\n+        xl.setSpaceBetweenLabels(5);\n+        xl.setEnabled(false);\n \n         YAxis leftAxis = mChart.getAxisLeft();\n         leftAxis.setTypeface(tf);\n         leftAxis.setTextColor(Color.WHITE);\n-        leftAxis.setAxisMaxValue(120f);\n+        leftAxis.setAxisMaxValue(100f);\n+        leftAxis.setAxisMinValue(0f);\n+        leftAxis.setStartAtZero(false);\n         leftAxis.setDrawGridLines(true);\n \n         YAxis rightAxis = mChart.getAxisRight();\n         rightAxis.setEnabled(false);\n+        \n+//        new Thread(new Runnable() {\n+//            \n+//            @Override\n+//            public void run() {\n+//                for(int i = 0; i < 5000; i++) {\n+//                    \n+//                    runOnUiThread(new Runnable() {\n+//                        \n+//                        @Override\n+//                        public void run() {\n+//                            addEntry();\n+//                        }\n+//                    });\n+//                    \n+//                    try {\n+//                        Thread.sleep(35);\n+//                    } catch (InterruptedException e) {\n+//                        // TODO Auto-generated catch block\n+//                        e.printStackTrace();\n+//                    }\n+//                }\n+//            }\n+//        }).start();\n     }\n \n     @Override\n@@ -116,7 +144,7 @@ public boolean onOptionsItemSelected(MenuItem item) {\n         return true;\n     }\n \n-    private int year = 15;\n+    private int year = 2015;\n \n     private void addEntry() {\n \n@@ -135,17 +163,17 @@ private void addEntry() {\n             // add a new x-value first\n             data.addXValue(mMonths[data.getXValCount() % 12] + \" \"\n                     + (year + data.getXValCount() / 12));\n-            data.addEntry(new Entry((float) (Math.random() * 40) + 40f, set.getEntryCount()), 0);\n+            data.addEntry(new Entry((float) (Math.random() * 40) + 30f, set.getEntryCount()), 0);\n \n             // let the chart know it's data has changed\n             mChart.notifyDataSetChanged();\n \n             // limit the number of visible entries\n-            mChart.setVisibleXRange(6);\n+            mChart.setVisibleXRange(120);\n             // mChart.setVisibleYRange(30, AxisDependency.LEFT);\n \n             // move to the latest entry\n-            mChart.moveViewToX(data.getXValCount() - 7);\n+            mChart.moveViewToX(data.getXValCount() - 121);\n \n             // this automatically refreshes the chart (calls invalidate())\n             // mChart.moveViewTo(data.getXValCount()-7, 55f,\n@@ -161,14 +189,15 @@ private LineDataSet createSet() {\n         LineDataSet set = new LineDataSet(null, \"Dynamic Data\");\n         set.setAxisDependency(AxisDependency.LEFT);\n         set.setColor(ColorTemplate.getHoloBlue());\n-        set.setCircleColor(ColorTemplate.getHoloBlue());\n+        set.setCircleColor(Color.WHITE);\n         set.setLineWidth(2f);\n         set.setCircleSize(4f);\n         set.setFillAlpha(65);\n         set.setFillColor(ColorTemplate.getHoloBlue());\n         set.setHighLightColor(Color.rgb(244, 117, 117));\n         set.setValueTextColor(Color.WHITE);\n-        set.setValueTextSize(10f);\n+        set.setValueTextSize(9f);\n+        set.setDrawValues(false);\n         return set;\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -174,9 +174,7 @@ protected void onDraw(Canvas canvas) {\n         if (mDataNotSet)\n             return;\n \n-        long starttime = System.currentTimeMillis();\n-\n-        calcModulus();\n+        long starttime = System.currentTimeMillis();calcModulus();\n \n         mXAxisRenderer.calcXBounds(this, mXAxis.mAxisLabelModulus);\n         mRenderer.calcXBounds(this, mXAxis.mAxisLabelModulus);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -389,6 +389,8 @@ public List<String> getXVals() {\n      * @param xVal\n      */\n     public void addXValue(String xVal) {\n+        \n+        mXValAverageLength = (mXValAverageLength + xVal.length())  / 2f;     \n         mXVals.add(xVal);\n     }\n ",
    "output": "Minor bugfix concerning addXValue()."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n@@ -229,7 +229,7 @@ public void drawValues(Canvas c) {\n                         break;\n \n                     // make sure the lines don't do shitty things outside bounds\n-                    if (j != 0 && (!mViewPortHandler.isInBoundsLeft(positions[j])\n+                    if ((!mViewPortHandler.isInBoundsLeft(positions[j])\n                             || !mViewPortHandler.isInBoundsY(positions[j + 1])))\n                         continue;\n ",
    "output": "Prevent labels from drawing way out of bounds"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n@@ -73,7 +73,7 @@ protected void drawDataSet(Canvas c, CandleDataSet dataSet) {\n         Entry entryFrom = dataSet.getEntryForXIndex(mMinX);\n         Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n \n-        int minx = dataSet.getEntryPosition(entryFrom);\n+        int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n         int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n \n         int range = (maxx - minx) * 4;\n@@ -222,7 +222,7 @@ public void drawValues(Canvas c) {\n                 Entry entryFrom = dataSet.getEntryForXIndex(mMinX);\n                 Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n \n-                int minx = dataSet.getEntryPosition(entryFrom);\n+                int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n                 int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n \n                 float[] positions = trans.generateTransformedValuesCandle(\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -138,7 +138,7 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n         Entry entryFrom = dataSet.getEntryForXIndex(mMinX);\n         Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n \n-        int minx = dataSet.getEntryPosition(entryFrom);\n+        int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n         int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n \n         float phaseX = mAnimator.getPhaseX();\n@@ -289,7 +289,7 @@ protected void drawLinear(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n         Entry entryFrom = dataSet.getEntryForXIndex(mMinX);\n         Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n \n-        int minx = dataSet.getEntryPosition(entryFrom);\n+        int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n         int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n \n         int range = (maxx - minx) * 4 - 4;\n@@ -431,10 +431,7 @@ public void drawValues(Canvas c) {\n                 Entry entryFrom = dataSet.getEntryForXIndex(mMinX);\n                 Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n \n-                int minx = dataSet.getEntryPosition(entryFrom);\n-                if (minx < 0)\n-                    minx = 0;\n-\n+                int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n                 int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n \n                 float[] positions = trans.generateTransformedValuesLine(\n@@ -490,7 +487,7 @@ protected void drawCircles(Canvas c) {\n             Entry entryFrom = dataSet.getEntryForXIndex((mMinX < 0) ? 0 : mMinX);\n             Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n \n-            int minx = dataSet.getEntryPosition(entryFrom);\n+            int minx = Math.max(dataSet.getEntryPosition(entryFrom), 0);\n             int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n \n             CircleBuffer buffer = mCircleBuffers[i];",
    "output": "Safety checks"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -447,12 +447,16 @@ protected void calcModulus() {\n         if (mXAxis == null)\n             return;\n \n-        float[] values = new float[9];\n-        mViewPortHandler.getMatrixTouch().getValues(values);\n+        if (!mXAxis.axisLabelModulusCustom) {\n \n-        mXAxis.mAxisLabelModulus = (int) Math\n-                .ceil((mData.getXValCount() * mXAxis.mLabelWidth)\n-                        / (mViewPortHandler.contentWidth() * values[Matrix.MSCALE_X]));\n+            float[] values = new float[9];\n+            mViewPortHandler.getMatrixTouch().getValues(values);\n+\n+            mXAxis.mAxisLabelModulus = (int) Math\n+                    .ceil((mData.getXValCount() * mXAxis.mLabelWidth)\n+                            / (mViewPortHandler.contentWidth() * values[Matrix.MSCALE_X]));\n+\n+        }\n \n         if (mLogEnabled)\n             Log.i(LOG_TAG, \"X-Axis modulus: \" + mXAxis.mAxisLabelModulus + \", x-axis label width: \"\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n@@ -41,6 +41,13 @@ public class XAxis extends AxisBase {\n      */\n     public int mAxisLabelModulus = 1;\n \n+    /**\n+     * is axisLabelModulus a custom value or auto calculated?\n+     * If false, then it's auto, if true, then custom.\n+     * default: false (automatic modulus)\n+     */\n+    public boolean axisLabelModulusCustom = false;\n+\n     /**\n      * the modulus that indicates if a value at a specified index in an\n      * array(list) for the y-axis-labels is drawn or not. If index % modulus ==",
    "output": "Merge pull request #606 from danielgindi/custom-xaxis-modulus\n\nAllow custom axis label modulus"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -447,12 +447,16 @@ protected void calcModulus() {\n         if (mXAxis == null)\n             return;\n \n-        float[] values = new float[9];\n-        mViewPortHandler.getMatrixTouch().getValues(values);\n+        if (!mXAxis.axisLabelModulusCustom) {\n \n-        mXAxis.mAxisLabelModulus = (int) Math\n-                .ceil((mData.getXValCount() * mXAxis.mLabelWidth)\n-                        / (mViewPortHandler.contentWidth() * values[Matrix.MSCALE_X]));\n+            float[] values = new float[9];\n+            mViewPortHandler.getMatrixTouch().getValues(values);\n+\n+            mXAxis.mAxisLabelModulus = (int) Math\n+                    .ceil((mData.getXValCount() * mXAxis.mLabelWidth)\n+                            / (mViewPortHandler.contentWidth() * values[Matrix.MSCALE_X]));\n+\n+        }\n \n         if (mLogEnabled)\n             Log.i(LOG_TAG, \"X-Axis modulus: \" + mXAxis.mAxisLabelModulus + \", x-axis label width: \"\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n@@ -41,6 +41,13 @@ public class XAxis extends AxisBase {\n      */\n     public int mAxisLabelModulus = 1;\n \n+    /**\n+     * is axisLabelModulus a custom value or auto calculated?\n+     * If false, then it's auto, if true, then custom.\n+     * default: false (automatic modulus)\n+     */\n+    public boolean axisLabelModulusCustom = false;\n+\n     /**\n      * the modulus that indicates if a value at a specified index in an\n      * array(list) for the y-axis-labels is drawn or not. If index % modulus ==",
    "output": "Allow custom axis label modulus"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -307,7 +307,7 @@ public void renderLegend(Canvas c) {\n             case PIECHART_CENTER:\n \n                 posX = mViewPortHandler.getChartWidth() / 2f + (direction == Legend.LegendDirection.LEFT_TO_RIGHT ? -mLegend.mTextWidthMax / 2f : mLegend.mTextWidthMax / 2f);\n-                posY = mViewPortHandler.getChartHeight() / 2f - mLegend.mNeededHeight / 2f;\n+                posY = mViewPortHandler.getChartHeight() / 2f - mLegend.mNeededHeight / 2f + mLegend.getYOffset();\n \n                 for (int i = 0; i < labels.length; i++) {\n ",
    "output": "Merge pull request #581 from danielgindi/pie-chart-legend-offset\n\nConsider yOffsest when rendering pie-chart legend"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -152,12 +152,6 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n \n         int size = (int) Math.ceil((maxx - minx) * phaseX + minx);\n \n-        minx = Math.max(minx - 2, 0); // Decrement by 2 as we always render two\n-        // extra points to keep cubic flowing\n-        size = Math.min(size + 2, entries.size()); // Increment by 2 as we\n-                                                   // always render two extra\n-                                                   // points to keep cubic\n-                                                   // flowing\n         if (size - minx >= 2) {\n \n             float prevDx = 0f;\n@@ -177,7 +171,7 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n             prevDy = (next.getVal() - cur.getVal()) * intensity;\n \n             cur = entries.get(minx + 1);\n-            next = entries.get(minx + (size - minx > 2 ? 2 : 1));\n+            next = entries.get(minx + (entries.size() - minx > 2 ? 2 : 1));\n             curDx = (next.getXIndex() - prev.getXIndex()) * intensity;\n             curDy = (next.getVal() - prev.getVal()) * intensity;\n \n@@ -186,7 +180,7 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n                     cur.getXIndex() - curDx,\n                     (cur.getVal() - curDy) * phaseY, cur.getXIndex(), cur.getVal() * phaseY);\n \n-            for (int j = minx + 2; j < size - 1; j++) {\n+            for (int j = minx + 2, count = Math.min(size, entries.size() - 1); j < count; j++) {\n \n                 prevPrev = entries.get(j - 2);\n                 prev = entries.get(j - 1);\n@@ -205,10 +199,10 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n \n             if (size > entries.size() - 1) {\n \n-                cur = entries.get(entries.size() - 1);\n-                prev = entries.get(entries.size() - 2);\n                 prevPrev = entries.get((entries.size() >= 3) ? entries.size() - 3\n                         : entries.size() - 2);\n+                prev = entries.get(entries.size() - 2);\n+                cur = entries.get(entries.size() - 1);\n                 next = cur;\n \n                 prevDx = (cur.getXIndex() - prevPrev.getXIndex()) * intensity;",
    "output": "Merge pull request #580 from danielgindi/cubic-line-animation-fix\n\nSync cubic line drawing to animation"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -307,7 +307,7 @@ public void renderLegend(Canvas c) {\n             case PIECHART_CENTER:\n \n                 posX = mViewPortHandler.getChartWidth() / 2f + (direction == Legend.LegendDirection.LEFT_TO_RIGHT ? -mLegend.mTextWidthMax / 2f : mLegend.mTextWidthMax / 2f);\n-                posY = mViewPortHandler.getChartHeight() / 2f - mLegend.mNeededHeight / 2f;\n+                posY = mViewPortHandler.getChartHeight() / 2f - mLegend.mNeededHeight / 2f + mLegend.getYOffset();\n \n                 for (int i = 0; i < labels.length; i++) {\n ",
    "output": "Consider yOffsest when rendering pie-chart legend"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -152,12 +152,6 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n \n         int size = (int) Math.ceil((maxx - minx) * phaseX + minx);\n \n-        minx = Math.max(minx - 2, 0); // Decrement by 2 as we always render two\n-        // extra points to keep cubic flowing\n-        size = Math.min(size + 2, entries.size()); // Increment by 2 as we\n-                                                   // always render two extra\n-                                                   // points to keep cubic\n-                                                   // flowing\n         if (size - minx >= 2) {\n \n             float prevDx = 0f;\n@@ -177,7 +171,7 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n             prevDy = (next.getVal() - cur.getVal()) * intensity;\n \n             cur = entries.get(minx + 1);\n-            next = entries.get(minx + (size - minx > 2 ? 2 : 1));\n+            next = entries.get(minx + (entries.size() - minx > 2 ? 2 : 1));\n             curDx = (next.getXIndex() - prev.getXIndex()) * intensity;\n             curDy = (next.getVal() - prev.getVal()) * intensity;\n \n@@ -186,7 +180,7 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n                     cur.getXIndex() - curDx,\n                     (cur.getVal() - curDy) * phaseY, cur.getXIndex(), cur.getVal() * phaseY);\n \n-            for (int j = minx + 2; j < size - 1; j++) {\n+            for (int j = minx + 2, count = Math.min(size, entries.size() - 1); j < count; j++) {\n \n                 prevPrev = entries.get(j - 2);\n                 prev = entries.get(j - 1);\n@@ -205,10 +199,10 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n \n             if (size > entries.size() - 1) {\n \n-                cur = entries.get(entries.size() - 1);\n-                prev = entries.get(entries.size() - 2);\n                 prevPrev = entries.get((entries.size() >= 3) ? entries.size() - 3\n                         : entries.size() - 2);\n+                prev = entries.get(entries.size() - 2);\n+                cur = entries.get(entries.size() - 1);\n                 next = cur;\n \n                 prevDx = (cur.getXIndex() - prevPrev.getXIndex()) * intensity;",
    "output": "Sync cubic line drawing to animation"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -229,7 +229,8 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n             cubicFillPath.reset();\n             cubicFillPath.addPath(cubicPath);\n             // create a new path, this is bad for performance\n-            drawCubicFill(mBitmapCanvas, dataSet, cubicFillPath, trans, minx, size);\n+            drawCubicFill(mBitmapCanvas, dataSet, cubicFillPath, trans,\n+                    entryFrom.getXIndex(), entryFrom.getXIndex() + size);\n         }\n \n         mRenderPaint.setColor(dataSet.getColor());",
    "output": "Merge pull request #565 from mesropd/fixCubicFillBug\n\nFix cubic fill bug for the LineChart"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -229,7 +229,8 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n             cubicFillPath.reset();\n             cubicFillPath.addPath(cubicPath);\n             // create a new path, this is bad for performance\n-            drawCubicFill(mBitmapCanvas, dataSet, cubicFillPath, trans, minx, size);\n+            drawCubicFill(mBitmapCanvas, dataSet, cubicFillPath, trans,\n+                    entryFrom.getXIndex(), entryFrom.getXIndex() + size);\n         }\n \n         mRenderPaint.setColor(dataSet.getColor());",
    "output": "- fix cubic fill bug for the LineChart"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -84,7 +84,8 @@ public void drawData(Canvas c) {\n \n                 mDrawBitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_4444);\n                 mBitmapCanvas = new Canvas(mDrawBitmap);\n-            }\n+            } else\n+                return;\n         }\n \n         mDrawBitmap.eraseColor(Color.TRANSPARENT);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -98,7 +98,8 @@ public void drawData(Canvas c) {\n \n                 mDrawBitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_4444);\n                 mBitmapCanvas = new Canvas(mDrawBitmap);\n-            }\n+            } else\n+                return;\n         }\n \n         // Paint p = new Paint();",
    "output": "Additional fix."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -31,7 +31,7 @@ public class LineChartRenderer extends DataRenderer {\n      * Bitmap object used for drawing the paths (otherwise they are too long if\n      * rendered directly on the canvas)\n      */\n-    protected Bitmap mPathBitmap;\n+    protected Bitmap mDrawBitmap;\n \n     /**\n      * on this canvas, the paths are rendered, it is initialized with the\n@@ -73,15 +73,21 @@ public void initBuffers() {\n     @Override\n     public void drawData(Canvas c) {\n \n-        if (mPathBitmap == null\n-\t\t\t\t|| (mPathBitmap.getWidth() != (int) mViewPortHandler.getChartWidth())\n-\t\t\t\t|| (mPathBitmap.getHeight() != (int) mViewPortHandler.getChartHeight())) {\n-            mPathBitmap = Bitmap.createBitmap((int) mViewPortHandler.getChartWidth(),\n-                    (int) mViewPortHandler.getChartHeight(), Bitmap.Config.ARGB_4444);\n-            mBitmapCanvas = new Canvas(mPathBitmap);\n+        int width = (int) mViewPortHandler.getChartWidth();\n+        int height = (int) mViewPortHandler.getChartHeight();\n+\n+        if (mDrawBitmap == null\n+                || (mDrawBitmap.getWidth() != width)\n+                || (mDrawBitmap.getHeight() != height)) {\n+\n+            if (width > 0 && height > 0) {\n+\n+                mDrawBitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_4444);\n+                mBitmapCanvas = new Canvas(mDrawBitmap);\n+            }\n         }\n \n-        mPathBitmap.eraseColor(Color.TRANSPARENT);\n+        mDrawBitmap.eraseColor(Color.TRANSPARENT);\n \n         LineData lineData = mChart.getLineData();\n \n@@ -91,7 +97,7 @@ public void drawData(Canvas c) {\n                 drawDataSet(c, set);\n         }\n \n-        c.drawBitmap(mPathBitmap, 0, 0, mRenderPaint);\n+        c.drawBitmap(mDrawBitmap, 0, 0, mRenderPaint);\n     }\n \n     protected void drawDataSet(Canvas c, LineDataSet dataSet) {\n@@ -146,7 +152,7 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n         int size = (int) Math.ceil((maxx - minx) * phaseX + minx);\n \n         minx = Math.max(minx - 2, 0); // Decrement by 2 as we always render two\n-                                  // extra points to keep cubic flowing\n+        // extra points to keep cubic flowing\n         size = Math.min(size + 2, entries.size()); // Increment by 2 as we\n                                                    // always render two extra\n                                                    // points to keep cubic\n@@ -200,7 +206,8 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n \n                 cur = entries.get(entries.size() - 1);\n                 prev = entries.get(entries.size() - 2);\n-                prevPrev = entries.get((entries.size() >= 3) ? entries.size() - 3 : entries.size() - 2);\n+                prevPrev = entries.get((entries.size() >= 3) ? entries.size() - 3\n+                        : entries.size() - 2);\n                 next = cur;\n \n                 prevDx = (cur.getXIndex() - prevPrev.getXIndex()) * intensity;\n@@ -242,7 +249,7 @@ protected void drawCubicFill(Canvas c, LineDataSet dataSet, Path spline, Transfo\n                 .getFillLinePosition(dataSet, mChart.getLineData(), mChart.getYChartMax(),\n                         mChart.getYChartMin());\n \n-        spline.lineTo(to-1, fillMin);\n+        spline.lineTo(to - 1, fillMin);\n         spline.lineTo(from, fillMin);\n         spline.close();\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -87,12 +87,18 @@ public void initBuffers() {\n     @Override\n     public void drawData(Canvas c) {\n \n+        int width = (int) mViewPortHandler.getChartWidth();\n+        int height = (int) mViewPortHandler.getChartHeight();\n+\n         if (mDrawBitmap == null\n-\t\t\t\t|| (mDrawBitmap.getWidth() != (int) mViewPortHandler.getChartWidth())\n-\t\t\t\t|| (mDrawBitmap.getHeight() != (int) mViewPortHandler.getChartHeight())) {\n-            mDrawBitmap = Bitmap.createBitmap((int) mViewPortHandler.getChartWidth(),\n-                    (int) mViewPortHandler.getChartHeight(), Bitmap.Config.ARGB_8888);\n-            mBitmapCanvas = new Canvas(mDrawBitmap);\n+                || (mDrawBitmap.getWidth() != width)\n+                || (mDrawBitmap.getHeight() != height)) {\n+\n+            if (width > 0 && height > 0) {\n+\n+                mDrawBitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_4444);\n+                mBitmapCanvas = new Canvas(mDrawBitmap);\n+            }\n         }\n \n         // Paint p = new Paint();",
    "output": "Fixed issue concerning drawbitmap (issue #554)."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java\n@@ -71,11 +71,11 @@ private void addEntry() {\n             // let the chart know it's data has changed\n             mChart.notifyDataSetChanged();\n             \n-//            mChart.setVisibleXRange(6);\n-//            mChart.setVisibleYRange(30, AxisDependency.LEFT);\n+            mChart.setVisibleXRange(6);\n+            mChart.setVisibleYRange(10, AxisDependency.LEFT);\n //            \n //            // this automatically refreshes the chart (calls invalidate())\n-//            mChart.moveViewTo(data.getXValCount()-7, 55f, AxisDependency.LEFT);\n+            mChart.moveViewTo(data.getXValCount()-7, 50f, AxisDependency.LEFT);\n \n             // redraw the chart\n             mChart.invalidate();   \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -398,16 +398,24 @@ protected void onDraw(Canvas canvas) {\n         // mDrawBitmap.eraseColor(Color.TRANSPARENT);\n     }\n \n+    /** the custom position of the description text */\n+    private PointF mDescriptionPosition;\n+\n     /**\n      * draws the description text in the bottom right corner of the chart\n      */\n     protected void drawDescription(Canvas c) {\n \n         if (!mDescription.equals(\"\")) {\n \n-            c.drawText(mDescription, getWidth() - mViewPortHandler.offsetRight() - 10,\n-                    getHeight() - mViewPortHandler.offsetBottom()\n-                            - 10, mDescPaint);\n+            if (mDescriptionPosition == null) {\n+\n+                c.drawText(mDescription, getWidth() - mViewPortHandler.offsetRight() - 10,\n+                        getHeight() - mViewPortHandler.offsetBottom()\n+                                - 10, mDescPaint);\n+            } else {\n+                c.drawText(mDescription, mDescriptionPosition.x, mDescriptionPosition.y, mDescPaint);\n+            }\n         }\n     }\n \n@@ -609,14 +617,13 @@ protected void drawMarkers(Canvas canvas) {\n     public ChartAnimator getAnimator() {\n         return mAnimator;\n     }\n-    \n+\n     /**\n      * ################ ################ ################ ################\n      * ANIMATIONS ONLY WORK FOR API LEVEL 11 (Android 3.0.x) AND HIGHER.\n      */\n     /** CODE BELOW FOR PROVIDING EASING FUNCTIONS */\n \n-\n     /**\n      * Animates the drawing / rendering of the chart on both x- and y-axis with\n      * the specified animation time. If animate(...) is called, no further\n@@ -628,7 +635,8 @@ public ChartAnimator getAnimator() {\n      * @param easingX a custom easing function to be used on the animation phase\n      * @param easingY a custom easing function to be used on the animation phase\n      */\n-    public void animateXY(int durationMillisX, int durationMillisY, EasingFunction easingX, EasingFunction easingY) {\n+    public void animateXY(int durationMillisX, int durationMillisY, EasingFunction easingX,\n+            EasingFunction easingY) {\n         mAnimator.animateXY(durationMillisX, durationMillisY, easingX, easingY);\n     }\n \n@@ -657,13 +665,13 @@ public void animateX(int durationMillis, EasingFunction easing) {\n     public void animateY(int durationMillis, EasingFunction easing) {\n         mAnimator.animateY(durationMillis, easing);\n     }\n-    \n+\n     /**\n      * ################ ################ ################ ################\n      * ANIMATIONS ONLY WORK FOR API LEVEL 11 (Android 3.0.x) AND HIGHER.\n      */\n     /** CODE BELOW FOR PREDEFINED EASING OPTIONS */\n-    \n+\n     /**\n      * Animates the drawing / rendering of the chart on both x- and y-axis with\n      * the specified animation time. If animate(...) is called, no further\n@@ -675,7 +683,8 @@ public void animateY(int durationMillis, EasingFunction easing) {\n      * @param easingX a predefined easing option\n      * @param easingY a predefined easing option\n      */\n-    public void animateXY(int durationMillisX, int durationMillisY, Easing.EasingOption easingX, Easing.EasingOption easingY) {\n+    public void animateXY(int durationMillisX, int durationMillisY, Easing.EasingOption easingX,\n+            Easing.EasingOption easingY) {\n         mAnimator.animateXY(durationMillisX, durationMillisY, easingX, easingY);\n     }\n \n@@ -704,13 +713,12 @@ public void animateX(int durationMillis, Easing.EasingOption easing) {\n     public void animateY(int durationMillis, Easing.EasingOption easing) {\n         mAnimator.animateY(durationMillis, easing);\n     }\n-    \n+\n     /**\n      * ################ ################ ################ ################\n      * ANIMATIONS ONLY WORK FOR API LEVEL 11 (Android 3.0.x) AND HIGHER.\n      */\n     /** CODE BELOW FOR ANIMATIONS WITHOUT EASING */\n-    \n \n     /**\n      * Animates the rendering of the chart on the x-axis with the specified\n@@ -723,7 +731,7 @@ public void animateY(int durationMillis, Easing.EasingOption easing) {\n     public void animateX(int durationMillis) {\n         mAnimator.animateX(durationMillis);\n     }\n-    \n+\n     /**\n      * Animates the rendering of the chart on the y-axis with the specified\n      * animation time. If animate(...) is called, no further calling of\n@@ -735,7 +743,7 @@ public void animateX(int durationMillis) {\n     public void animateY(int durationMillis) {\n         mAnimator.animateY(durationMillis);\n     }\n-    \n+\n     /**\n      * Animates the drawing / rendering of the chart on both x- and y-axis with\n      * the specified animation time. If animate(...) is called, no further\n@@ -748,7 +756,7 @@ public void animateY(int durationMillis) {\n     public void animateXY(int durationMillisX, int durationMillisY) {\n         mAnimator.animateXY(durationMillisX, durationMillisY);\n     }\n-    \n+\n     /**\n      * ################ ################ ################ ################\n      */\n@@ -838,16 +846,6 @@ public float getYMin() {\n         return mData.getYMin();\n     }\n \n-    // /**\n-    // * Get the total number of X-values.\n-    // *\n-    // * @return\n-    // */\n-    // @Override\n-    // public float getDeltaX() {\n-    // return mDeltaX;\n-    // }\n-\n     @Override\n     public float getXChartMax() {\n         return mXChartMax;\n@@ -911,6 +909,37 @@ public PointF getCenterOffsets() {\n         return mViewPortHandler.getContentCenter();\n     }\n \n+    /**\n+     * set a description text that appears in the bottom right corner of the\n+     * chart, size = Y-legend text size\n+     *\n+     * @param desc\n+     */\n+    public void setDescription(String desc) {\n+        if (desc == null)\n+            desc = \"\";\n+        this.mDescription = desc;\n+    }\n+\n+    /**\n+     * Sets a custom position for the description text in pixels on the screen.\n+     * \n+     * @param x - xcoordinate\n+     * @param y - ycoordinate\n+     */\n+    public void setDescriptionPosition(float x, float y) {\n+        mDescriptionPosition = new PointF(x, y);\n+    }\n+\n+    /**\n+     * sets the typeface for the description paint\n+     *\n+     * @param t\n+     */\n+    public void setDescriptionTypeface(Typeface t) {\n+        mDescPaint.setTypeface(t);\n+    }\n+\n     /**\n      * sets the size of the description text in pixels, min 6f, max 16f\n      *\n@@ -926,6 +955,15 @@ public void setDescriptionTextSize(float size) {\n         mDescPaint.setTextSize(Utils.convertDpToPixel(size));\n     }\n \n+    /**\n+     * Sets the color of the description text.\n+     * \n+     * @param color\n+     */\n+    public void setDescriptionColor(int color) {\n+        mDescPaint.setColor(color);\n+    }\n+\n     /**\n      * Set this to true to enable logcat outputs for the chart. Default:\n      * disabled\n@@ -945,18 +983,6 @@ public boolean isLogEnabled() {\n         return mLogEnabled;\n     }\n \n-    /**\n-     * set a description text that appears in the bottom right corner of the\n-     * chart, size = Y-legend text size\n-     *\n-     * @param desc\n-     */\n-    public void setDescription(String desc) {\n-        if (desc == null)\n-            desc = \"\";\n-        this.mDescription = desc;\n-    }\n-\n     /**\n      * Sets the text that informs the user that there is no data available with\n      * which to draw the chart.\n@@ -1218,15 +1244,6 @@ public float getPercentOfTotal(float val) {\n         return val / mData.getYValueSum() * 100f;\n     }\n \n-    /**\n-     * sets the typeface for the description paint\n-     *\n-     * @param t\n-     */\n-    public void setDescriptionTypeface(Typeface t) {\n-        mDescPaint.setTypeface(t);\n-    }\n-\n     /**\n      * Returns the ViewPortHandler of the chart that is responsible for the\n      * content area of the chart and its offsets and dimensions.\n@@ -1458,7 +1475,6 @@ protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n \n         super.onSizeChanged(w, h, oldw, oldh);\n     }\n-    \n \n     /**\n      * Setting this to true will set the layer-type HARDWARE for the view, false",
    "output": "Enhanced customizability of description text (issue #563)."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -168,8 +168,8 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n             prevDx = (next.getXIndex() - cur.getXIndex()) * intensity;\n             prevDy = (next.getVal() - cur.getVal()) * intensity;\n \n-            cur = entries.get(1);\n-            next = entries.get((entries.size() > 2) ? 2 : 1);\n+            cur = entries.get(minx + 1);\n+            next = entries.get(minx + (size - minx > 2 ? 2 : 1));\n             curDx = (next.getXIndex() - prev.getXIndex()) * intensity;\n             curDy = (next.getVal() - prev.getVal()) * intensity;\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n@@ -379,6 +379,7 @@ public boolean isInBoundsLeft(float x) {\n     }\n \n     public boolean isInBoundsRight(float x) {\n+        x = (float)((int)(x * 100.f)) / 100.f;\n         return mContentRect.right >= x ? true : false;\n     }\n \n@@ -387,6 +388,7 @@ public boolean isInBoundsTop(float y) {\n     }\n \n     public boolean isInBoundsBottom(float y) {\n+        y = (float)((int)(y * 100.f)) / 100.f;\n         return mContentRect.bottom >= y ? true : false;\n     }\n ",
    "output": "Merge pull request #544 from danielgindi/viewport-bugs\n\nViewport bugfixes in LineChart"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -73,8 +73,10 @@ public void initBuffers() {\n     @Override\n     public void drawData(Canvas c) {\n \n-        if (mPathBitmap == null) {\n-            mPathBitmap = Bitmap.createBitmap((int) mViewPortHandler.getChartWidth(),\n+        if (mPathBitmap == null\n+\t\t\t\t|| mPathBitmap.getWidth() != mViewPortHandler.getChartWidth()\n+\t\t\t\t|| mPathBitmap.getHeight() != mViewPortHandler.getChartHeight()) {\n+\t\t\tmPathBitmap = Bitmap.createBitmap((int) mViewPortHandler.getChartWidth(),\n                     (int) mViewPortHandler.getChartHeight(), Bitmap.Config.ARGB_4444);\n             mBitmapCanvas = new Canvas(mPathBitmap);\n         }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -77,7 +77,9 @@ public void initBuffers() {\n     @Override\n     public void drawData(Canvas c) {\n \n-        if (mDrawBitmap == null) {\n+        if (mDrawBitmap == null\n+\t\t\t\t|| mDrawBitmap.getWidth() != mViewPortHandler.getChartWidth()\n+\t\t\t\t|| mDrawBitmap.getHeight() != mViewPortHandler.getChartHeight()) {\n             mDrawBitmap = Bitmap.createBitmap((int) mViewPortHandler.getChartWidth(),\n                     (int) mViewPortHandler.getChartHeight(), Bitmap.Config.ARGB_4444);\n             mBitmapCanvas = new Canvas(mDrawBitmap);",
    "output": "- Fixed LineChart & PieChart data rendering bug on resized views"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n@@ -379,6 +379,7 @@ public boolean isInBoundsLeft(float x) {\n     }\n \n     public boolean isInBoundsRight(float x) {\n+        x = (float)((int)(x * 100.f)) / 100.f;\n         return mContentRect.right >= x ? true : false;\n     }\n \n@@ -387,6 +388,7 @@ public boolean isInBoundsTop(float y) {\n     }\n \n     public boolean isInBoundsBottom(float y) {\n+        y = (float)((int)(y * 100.f)) / 100.f;\n         return mContentRect.bottom >= y ? true : false;\n     }\n ",
    "output": "Bugfix: Last label were sometimes invisible due to rounding errors"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -168,8 +168,8 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, List<Entry> entries) {\n             prevDx = (next.getXIndex() - cur.getXIndex()) * intensity;\n             prevDy = (next.getVal() - cur.getVal()) * intensity;\n \n-            cur = entries.get(1);\n-            next = entries.get((entries.size() > 2) ? 2 : 1);\n+            cur = entries.get(minx + 1);\n+            next = entries.get(minx + (size - minx > 2 ? 2 : 1));\n             curDx = (next.getXIndex() - prev.getXIndex()) * intensity;\n             curDy = (next.getVal() - prev.getVal()) * intensity;\n ",
    "output": "Bugfix: Consider viewport for second point in cubic line"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -55,7 +55,7 @@ public PieChartRenderer(PieChart chart, ChartAnimator animator,\n         mTransparentCirclePaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n         mTransparentCirclePaint.setColor(Color.WHITE);\n         mTransparentCirclePaint.setStyle(Style.FILL);\n-        \n+\n         mCenterTextPaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n         mCenterTextPaint.setColor(Color.BLACK);\n         mCenterTextPaint.setTextSize(Utils.convertDpToPixel(12f));\n@@ -69,7 +69,7 @@ public PieChartRenderer(PieChart chart, ChartAnimator animator,\n     public Paint getPaintHole() {\n         return mHolePaint;\n     }\n-    \n+\n     public Paint getPaintTransparentCircle() {\n         return mTransparentCirclePaint;\n     }\n@@ -86,19 +86,19 @@ public void initBuffers() {\n \n     @Override\n     public void drawData(Canvas c) {\n-        \n+\n         if (mDrawBitmap == null\n                 || ((int) mViewPortHandler.getChartHeight() != mDrawBitmap.getHeight())) {\n             mDrawBitmap = Bitmap.createBitmap((int) mViewPortHandler.getChartWidth(),\n                     (int) mViewPortHandler.getChartHeight(), Bitmap.Config.ARGB_8888);\n             mBitmapCanvas = new Canvas(mDrawBitmap);\n         }\n-        \n-//        Paint p = new Paint();\n-//        p.setStyle(Paint.Style.FILL);\n-//        p.setColor(Color.BLACK);\n-//        c.drawRect(mChart.getCircleBox(), p);\n-        \n+\n+        // Paint p = new Paint();\n+        // p.setStyle(Paint.Style.FILL);\n+        // p.setColor(Color.BLACK);\n+        // c.drawRect(mChart.getCircleBox(), p);\n+\n         mDrawBitmap.eraseColor(Color.TRANSPARENT);\n \n         PieData pieData = mChart.getData();\n@@ -200,8 +200,9 @@ public void drawValues(Canvas c) {\n                         / mChart.getYValueSum() * 100f : entries.get(j).getVal();\n \n                 String val = dataSet.getValueFormatter().getFormattedValue(value);\n-                \n-                float lineHeight = Utils.calcTextHeight(mValuePaint, val) + Utils.convertDpToPixel(4f);\n+\n+                float lineHeight = Utils.calcTextHeight(mValuePaint, val)\n+                        + Utils.convertDpToPixel(4f);\n \n                 boolean drawYVals = dataSet.isDrawValuesEnabled();\n \n@@ -244,11 +245,12 @@ protected void drawHole(Canvas c) {\n             float transparentCircleRadius = mChart.getTransparentCircleRadius();\n             float holeRadius = mChart.getHoleRadius();\n             float radius = mChart.getRadius();\n-            \n-            PointF center = mChart.getCenterCircleBox();    \n-            \n-            if (transparentCircleRadius > holeRadius) {\n-                \n+\n+            PointF center = mChart.getCenterCircleBox();\n+\n+            if (transparentCircleRadius > holeRadius && mAnimator.getPhaseX() >= 1f\n+                    && mAnimator.getPhaseY() >= 1f) {\n+\n                 int color = mTransparentCirclePaint.getColor();\n \n                 // make transparent\n@@ -257,10 +259,10 @@ protected void drawHole(Canvas c) {\n                 // draw the transparent-circle\n                 mBitmapCanvas.drawCircle(center.x, center.y,\n                         radius / 100 * transparentCircleRadius, mTransparentCirclePaint);\n-                \n-                mTransparentCirclePaint.setColor(color); \n-            } \n-            \n+\n+                mTransparentCirclePaint.setColor(color);\n+            }\n+\n             // draw the hole-circle\n             mBitmapCanvas.drawCircle(center.x, center.y,\n                     radius / 100 * holeRadius, mHolePaint);",
    "output": "Fixed issue concerning transparent circle when animating (issue #543)."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -430,13 +430,14 @@ public void addEntry(Entry e) {\n \n         float val = e.getVal();\n \n-        if (mYVals == null || mYVals.size() <= 0) {\n-\n+        if(mYVals == null) {\n             mYVals = new ArrayList<T>();\n+        }\n+\n+        if (mYVals.size() == 0) {\n             mYMax = val;\n             mYMin = val;\n         } else {\n-\n             if (mYMax < val)\n                 mYMax = val;\n             if (mYMin > val)",
    "output": "Merge pull request #533 from mesropd/stableYVals\n\nStable reference for the yVals array"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -245,7 +245,7 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 break;\n             }\n             case R.id.animateY: {\n-                mChart.animateY(3000);\n+                mChart.animateY(3000, EasingFunction.EaseInCubic);\n                 break;\n             }\n             case R.id.animateXY: {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/buffer/AbstractBuffer.java b/MPChartLib/src/com/github/mikephil/charting/buffer/AbstractBuffer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/buffer/AbstractBuffer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/buffer/AbstractBuffer.java\n@@ -23,10 +23,10 @@ public abstract class AbstractBuffer<T> {\n \n     /** animation phase y-axis */\n     protected float phaseY = 1f;\n-    \n+\n     /** indicates from which x-index the visible data begins */\n     protected int mFrom = 0;\n-    \n+\n     /** indicates to which x-index the visible data ranges */\n     protected int mTo = 0;\n \n@@ -42,11 +42,15 @@ public AbstractBuffer(int size) {\n \n     /** limits the drawing on the x-axis */\n     public void limitFrom(int from) {\n+        if (from < 0)\n+            from = 0;\n         mFrom = from;\n     }\n \n     /** limits the drawing on the x-axis */\n     public void limitTo(int to) {\n+        if (to < 0)\n+            to = 0;\n         mTo = to;\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -73,7 +73,8 @@ public void initBuffers() {\n     @Override\n     public void drawData(Canvas c) {\n \n-        if (mPathBitmap == null || ((int) mViewPortHandler.getChartHeight() != mPathBitmap.getHeight())) {\n+        if (mPathBitmap == null\n+                || ((int) mViewPortHandler.getChartHeight() != mPathBitmap.getHeight())) {\n             mPathBitmap = Bitmap.createBitmap((int) mViewPortHandler.getChartWidth(),\n                     (int) mViewPortHandler.getChartHeight(), Bitmap.Config.ARGB_4444);\n             mBitmapCanvas = new Canvas(mPathBitmap);\n@@ -430,6 +431,9 @@ public void drawValues(Canvas c) {\n                 Entry entryTo = dataSet.getEntryForXIndex(mMaxX);\n \n                 int minx = dataSet.getEntryPosition(entryFrom);\n+                if (minx < 0)\n+                    minx = 0;\n+\n                 int maxx = Math.min(dataSet.getEntryPosition(entryTo) + 1, entries.size());\n \n                 float[] positions = trans.generateTransformedValuesLine(",
    "output": "Fixed issue concerning linechart crash (issue #529)."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -430,13 +430,14 @@ public void addEntry(Entry e) {\n \n         float val = e.getVal();\n \n-        if (mYVals == null || mYVals.size() <= 0) {\n-\n+        if(mYVals == null) {\n             mYVals = new ArrayList<T>();\n+        }\n+\n+        if (mYVals.size() == 0) {\n             mYMax = val;\n             mYMin = val;\n         } else {\n-\n             if (mYMax < val)\n                 mYMax = val;\n             if (mYMin > val)",
    "output": "- stable reference for the yVals array"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MyEasingFunction.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MyEasingFunction.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MyEasingFunction.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MyEasingFunction.java\n@@ -0,0 +1,20 @@\n+\n+package com.xxmassdeveloper.mpchartexample.custom;\n+\n+import com.github.mikephil.charting.animation.AnimationEasing.EasingFunction;\n+\n+/**\n+ * Example of a custom made animation EasingFunction.\n+ * \n+ * @author Philipp Jahoda\n+ */\n+public class MyEasingFunction implements EasingFunction {\n+\n+    @Override\n+    public float ease(long elapsed, long duration) {\n+\n+        // do awesome stuff here, this is just linear easing\n+        return elapsed / (float) duration;\n+    }\n+\n+}",
    "output": "Added example custom easing function."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/buffer/LineBuffer.java b/MPChartLib/src/com/github/mikephil/charting/buffer/LineBuffer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/buffer/LineBuffer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/buffer/LineBuffer.java\n@@ -42,7 +42,7 @@ public void lineTo(float x, float y) {\n \n     @Override\n     public void feed(List<Entry> entries) {\n-        moveTo(entries.get(mFrom).getXIndex(), entries.get(mFrom).getVal());\n+        moveTo(entries.get(mFrom).getXIndex(), entries.get(mFrom).getVal() * phaseY);\n \n         int size = (int)Math.ceil((mTo - mFrom) * phaseX + mFrom);\n ",
    "output": "Minor bugfix in line animation."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n@@ -20,7 +20,7 @@\n import com.github.mikephil.charting.data.PieData;\n import com.github.mikephil.charting.data.PieDataSet;\n import com.github.mikephil.charting.listener.OnChartValueSelectedListener;\n-import com.github.mikephil.charting.utils.AnimationEasing;\n+import com.github.mikephil.charting.animation.AnimationEasing;\n import com.github.mikephil.charting.utils.ColorTemplate;\n import com.github.mikephil.charting.utils.Highlight;\n import com.github.mikephil.charting.utils.PercentFormatter;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/animation/AnimationEasing.java b/MPChartLib/src/com/github/mikephil/charting/animation/AnimationEasing.java\n--- a/MPChartLib/src/com/github/mikephil/charting/animation/AnimationEasing.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/animation/AnimationEasing.java\n@@ -1,4 +1,4 @@\n-package com.github.mikephil.charting.utils;\n+package com.github.mikephil.charting.animation;\n \n /**\n  * Created by dcg on 7/4/15.\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/animation/ChartAnimator.java b/MPChartLib/src/com/github/mikephil/charting/animation/ChartAnimator.java\n--- a/MPChartLib/src/com/github/mikephil/charting/animation/ChartAnimator.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/animation/ChartAnimator.java\n@@ -3,11 +3,8 @@\n \n import android.annotation.SuppressLint;\n import android.os.Handler;\n-import android.os.Message;\n import android.os.SystemClock;\n \n-import com.github.mikephil.charting.utils.AnimationEasing;\n-\n /**\n  * Object responsible for all animations in the Chart. ANIMATIONS ONLY WORK FOR\n  * API LEVEL 11 (Android 3.0.x) AND HIGHER.\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -23,6 +23,7 @@\n import android.view.ViewGroup;\n import android.view.ViewParent;\n \n+import com.github.mikephil.charting.animation.AnimationEasing;\n import com.github.mikephil.charting.animation.ChartAnimator;\n import com.github.mikephil.charting.components.Legend;\n import com.github.mikephil.charting.components.MarkerView;\n@@ -34,7 +35,6 @@\n import com.github.mikephil.charting.listener.OnChartValueSelectedListener;\n import com.github.mikephil.charting.renderer.DataRenderer;\n import com.github.mikephil.charting.renderer.LegendRenderer;\n-import com.github.mikephil.charting.utils.AnimationEasing;\n import com.github.mikephil.charting.utils.DefaultValueFormatter;\n import com.github.mikephil.charting.utils.Highlight;\n import com.github.mikephil.charting.utils.Utils;",
    "output": "Code cleanup."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/animation/ChartAnimator.java b/MPChartLib/src/com/github/mikephil/charting/animation/ChartAnimator.java\n--- a/MPChartLib/src/com/github/mikephil/charting/animation/ChartAnimator.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/animation/ChartAnimator.java\n@@ -62,7 +62,7 @@ protected void startAnimationLoop() {\n             }\n \n             mHandler = new FrameHandler();\n-            mHandler.sendEmptyMessageDelayed(0, FRAME_DELAY);\n+            mHandler.queueNowFrame();\n         }\n     }\n \n@@ -128,7 +128,7 @@ public void animateXY(int durationMillisX, int durationMillisY, AnimationEasing.\n      * @param durationMillisY\n      */\n     public void animateXY(int durationMillisX, int durationMillisY) {\n-        animateXY(durationMillisX, durationMillisY, (AnimationEasing.EasingFunction)null);\n+        animateXY(durationMillisX, durationMillisY, AnimationEasing.EasingOption.EaseInOutSine);\n     }\n \n     /**\n@@ -163,7 +163,7 @@ public void animateY(int durationMillis, AnimationEasing.EasingOption easing) {\n      * @param durationMillis\n      */\n     public void animateY(int durationMillis) {\n-        animateXY(0, durationMillis, (AnimationEasing.EasingFunction) null);\n+        animateXY(0, durationMillis, AnimationEasing.EasingOption.EaseInOutSine);\n     }\n \n     /**\n@@ -198,7 +198,7 @@ public void animateX(int durationMillis, AnimationEasing.EasingOption easing) {\n      * @param durationMillis\n      */\n     public void animateX(int durationMillis) {\n-        animateXY(durationMillis, 0, (AnimationEasing.EasingFunction) null);\n+        animateXY(durationMillis, 0, AnimationEasing.EasingOption.EaseInOutSine);\n     }\n \n     /**\n@@ -242,10 +242,20 @@ public interface UpdateListener {\n     }\n \n     public class FrameHandler extends Handler {\n-        @Override\n-        public void handleMessage(Message msg) {\n \n-            if (msg.what == 0) {\n+        public void queueNextFrame() {\n+            postAtTime(frameHandler, SystemClock.uptimeMillis() + FRAME_DELAY);\n+        }\n+\n+        public void queueNowFrame() {\n+            post(frameHandler);\n+        }\n+\n+        private Runnable frameHandler = new Runnable()\n+        {\n+            @Override\n+            public void run()\n+            {\n \n                 synchronized (mLock) {\n \n@@ -282,13 +292,14 @@ public void handleMessage(Message msg) {\n                         stop();\n \n                     if (mEnabledX || mEnabledY) {\n-                        mHandler.sendEmptyMessageDelayed(0, FRAME_DELAY);\n+                        queueNextFrame();\n                     }\n \n                     if (mListener != null)\n                         mListener.onAnimationUpdate();\n                 }\n+\n             }\n-        }\n+        };\n     }\n }",
    "output": "Merge pull request #525 from danielgindi/master\n\nAnimation improvements"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/animation/ChartAnimator.java b/MPChartLib/src/com/github/mikephil/charting/animation/ChartAnimator.java\n--- a/MPChartLib/src/com/github/mikephil/charting/animation/ChartAnimator.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/animation/ChartAnimator.java\n@@ -128,7 +128,7 @@ public void animateXY(int durationMillisX, int durationMillisY, AnimationEasing.\n      * @param durationMillisY\n      */\n     public void animateXY(int durationMillisX, int durationMillisY) {\n-        animateXY(durationMillisX, durationMillisY, (AnimationEasing.EasingFunction)null);\n+        animateXY(durationMillisX, durationMillisY, AnimationEasing.EasingOption.EaseInOutSine);\n     }\n \n     /**\n@@ -163,7 +163,7 @@ public void animateY(int durationMillis, AnimationEasing.EasingOption easing) {\n      * @param durationMillis\n      */\n     public void animateY(int durationMillis) {\n-        animateXY(0, durationMillis, (AnimationEasing.EasingFunction) null);\n+        animateXY(0, durationMillis, AnimationEasing.EasingOption.EaseInOutSine);\n     }\n \n     /**\n@@ -198,7 +198,7 @@ public void animateX(int durationMillis, AnimationEasing.EasingOption easing) {\n      * @param durationMillis\n      */\n     public void animateX(int durationMillis) {\n-        animateXY(durationMillis, 0, (AnimationEasing.EasingFunction) null);\n+        animateXY(durationMillis, 0, AnimationEasing.EasingOption.EaseInOutSine);\n     }\n \n     /**",
    "output": "Default animation curve reverted"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/animation/ChartAnimator.java b/MPChartLib/src/com/github/mikephil/charting/animation/ChartAnimator.java\n--- a/MPChartLib/src/com/github/mikephil/charting/animation/ChartAnimator.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/animation/ChartAnimator.java\n@@ -62,7 +62,7 @@ protected void startAnimationLoop() {\n             }\n \n             mHandler = new FrameHandler();\n-            mHandler.sendEmptyMessageDelayed(0, FRAME_DELAY);\n+            mHandler.queueNowFrame();\n         }\n     }\n \n@@ -242,10 +242,20 @@ public interface UpdateListener {\n     }\n \n     public class FrameHandler extends Handler {\n-        @Override\n-        public void handleMessage(Message msg) {\n \n-            if (msg.what == 0) {\n+        public void queueNextFrame() {\n+            postAtTime(frameHandler, SystemClock.uptimeMillis() + FRAME_DELAY);\n+        }\n+\n+        public void queueNowFrame() {\n+            post(frameHandler);\n+        }\n+\n+        private Runnable frameHandler = new Runnable()\n+        {\n+            @Override\n+            public void run()\n+            {\n \n                 synchronized (mLock) {\n \n@@ -282,13 +292,14 @@ public void handleMessage(Message msg) {\n                         stop();\n \n                     if (mEnabledX || mEnabledY) {\n-                        mHandler.sendEmptyMessageDelayed(0, FRAME_DELAY);\n+                        queueNextFrame();\n                     }\n \n                     if (mListener != null)\n                         mListener.onAnimationUpdate();\n                 }\n+\n             }\n-        }\n+        };\n     }\n }",
    "output": "Animation improvements"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n@@ -184,11 +184,11 @@ public boolean onOptionsItemSelected(MenuItem item) {\n     @Override\n     public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n \n-        tvX.setText(\"\" + (mSeekBarX.getProgress() * 3 + 1));\n+        tvX.setText(\"\" + (mSeekBarX.getProgress() * 3));\n         tvY.setText(\"\" + (mSeekBarY.getProgress()));\n \n         ArrayList<String> xVals = new ArrayList<String>();\n-        for (int i = 0; i < mSeekBarX.getProgress() + 1; i++) {\n+        for (int i = 0; i < mSeekBarX.getProgress(); i++) {\n             xVals.add((i + 1990) + \"\");\n         }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1193,7 +1193,7 @@ public void setRenderer(DataRenderer renderer) {\n         if (renderer != null)\n             mRenderer = renderer;\n     }\n-    \n+\n     @Override\n     public PointF getCenterOfView() {\n         return getCenter();\n@@ -1357,15 +1357,28 @@ public void clearAllJobs() {\n         mJobs.clear();\n     }\n \n+    /**\n+     * Returns all jobs that are scheduled to be executed after\n+     * onSizeChanged(...).\n+     * \n+     * @return\n+     */\n+    public ArrayList<Runnable> getJobs() {\n+        return mJobs;\n+    }\n+\n     @Override\n     protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n         if (mLogEnabled)\n             Log.i(LOG_TAG, \"OnSizeChanged()\");\n \n         if (w > 0 && h > 0 && w < 10000 && h < 10000) {\n             // create a new bitmap with the new dimensions\n+\n+            if (mDrawBitmap != null)\n+                mDrawBitmap.recycle();\n+\n             mDrawBitmap = Bitmap.createBitmap(w, h, Bitmap.Config.ARGB_4444);\n-            // mDrawCanvas = new Canvas(mDrawBitmap);\n             mViewPortHandler.setChartDimens(w, h);\n \n             if (mLogEnabled)\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -495,7 +495,7 @@ protected void drawCircles(Canvas c) {\n \n             float halfsize = dataSet.getCircleSize() / 2f;\n \n-            for (int j = 0, count = (int)Math.ceil((maxx - minx) * phaseX + minx) * 2; j < count; j += 2) {\n+            for (int j = 0, count = (int) Math.ceil((maxx - minx) * phaseX + minx) * 2; j < count; j += 2) {\n \n                 float x = buffer.buffer[j];\n                 float y = buffer.buffer[j + 1];\n@@ -508,7 +508,7 @@ protected void drawCircles(Canvas c) {\n                 if (!mViewPortHandler.isInBoundsLeft(x) || !mViewPortHandler.isInBoundsY(y))\n                     continue;\n \n-                int circleColor = dataSet.getCircleColor(j / 2);\n+                int circleColor = dataSet.getCircleColor(j / 2 + minx);\n \n                 mRenderPaint.setColor(circleColor);\n ",
    "output": "Fix issue #521 & address issue #520."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/Renderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/Renderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/Renderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/Renderer.java\n@@ -55,6 +55,6 @@ protected void calcXBounds(Transformer trans) {\n         if (!Double.isInfinite(minx))\n             mMinX = (int) minx;\n         if (!Double.isInfinite(maxx))\n-            mMaxX = (int) maxx; \n+            mMaxX = (int) Math.ceil(maxx);\n     }\n }",
    "output": "Do not cut off end-values because of Int rounding"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -184,6 +184,9 @@ public T getEntryForXIndex(int x) {\n             int m = (high + low) / 2;\n \n             if (x == mYVals.get(m).getXIndex()) {\n+                while (m > 0 && mYVals.get(m - 1).getXIndex() == x)\n+                    m--;\n+\n                 return mYVals.get(m);\n             }\n \n@@ -211,16 +214,32 @@ public List<T> getEntriesForXIndex(int x) {\n         List<T> entries = new ArrayList<T>();\n \n         int low = 0;\n-        int high = mYVals.size();\n+        int high = mYVals.size() - 1;\n \n         while (low <= high) {\n             int m = (high + low) / 2;\n-\n-            if (x == mYVals.get(m).getXIndex()) {\n-                entries.add(mYVals.get(m));\n+            T entry = mYVals.get(m);\n+\n+            if (x == entry.getXIndex()) {\n+                while (m > 0 && mYVals.get(m - 1).getXIndex() == x)\n+                    m--;\n+\n+                high = mYVals.size();\n+                for (; m < high; m++)\n+                {\n+                    entry = mYVals.get(m);\n+                    if (entry.getXIndex() == x)\n+                    {\n+                        entries.add(entry);\n+                    }\n+                    else\n+                    {\n+                        break;\n+                    }\n+                }\n             }\n \n-            if (x > mYVals.get(m).getXIndex())\n+            if (x > entry.getXIndex())\n                 low = m + 1;\n             else\n                 high = m - 1;",
    "output": "Fixed searching algorithms"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n@@ -195,6 +195,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n         CandleDataSet set1 = new CandleDataSet(yVals1, \"Data Set\");\n         set1.setAxisDependency(AxisDependency.LEFT);\n         set1.setColor(Color.rgb(80, 80, 80));\n+        set1.setShadowColor(Color.RED);\n \n         CandleData data = new CandleData(xVals, set1);\n         \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n@@ -1,6 +1,8 @@\n \n package com.github.mikephil.charting.data;\n \n+import android.graphics.Color;\n+\n import com.github.mikephil.charting.utils.Utils;\n \n import java.util.ArrayList;\n@@ -19,6 +21,9 @@ public class CandleDataSet extends BarLineScatterCandleDataSet<CandleEntry> {\n     /** the space between the candle entries, default 0.1f (10%) */\n     private float mBodySpace = 0.1f;\n \n+    /** the color of the shadow line */\n+    private int mShadowColor = Color.DKGRAY;\n+\n     public CandleDataSet(List<CandleEntry> yVals, String label) {\n         super(yVals, label);\n     }\n@@ -37,18 +42,18 @@ public DataSet<CandleEntry> copy() {\n         copied.mShadowWidth = mShadowWidth;\n         copied.mBodySpace = mBodySpace;\n         copied.mHighLightColor = mHighLightColor;\n-        \n+\n         return copied;\n     }\n-    \n+\n     @Override\n     protected void calcMinMax() {\n-//        super.calcMinMax();\n-        \n+        // super.calcMinMax();\n+\n         if (mYVals.size() == 0) {\n             return;\n         }\n-        \n+\n         List<CandleEntry> entries = mYVals;\n \n         mYMin = entries.get(0).getLow();\n@@ -109,4 +114,22 @@ public void setShadowWidth(float width) {\n     public float getShadowWidth() {\n         return mShadowWidth;\n     }\n+\n+    /**\n+     * Sets the color of the candle shadow (the candle-line).\n+     * \n+     * @param color\n+     */\n+    public void setShadowColor(int color) {\n+        mShadowColor = color;\n+    }\n+\n+    /**\n+     * Returns the color of the candle shadow.\n+     * \n+     * @return\n+     */\n+    public int getShadowColor() {\n+        return mShadowColor;\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n@@ -80,7 +80,7 @@ protected void drawDataSet(Canvas c, CandleDataSet dataSet) {\n         trans.pointValuesToPixel(shadowBuffer.buffer);\n         \n         mRenderPaint.setStyle(Paint.Style.STROKE);\n-        mRenderPaint.setColor(dataSet.getColor());\n+        mRenderPaint.setColor(dataSet.getShadowColor());\n         mRenderPaint.setStrokeWidth(dataSet.getShadowWidth());\n \n         // draw the shadow",
    "output": "Added feature to color candle shadow lines (issue #507)."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -388,6 +388,11 @@ public void onChartFling(MotionEvent me1, MotionEvent me2, float velocityX, floa\n         Log.i(\"Fling\", \"Chart flinged. VeloX: \" + velocityX + \", VeloY: \" + velocityY);\n     }\n \n+    @Override\n+    public void onChartScale(MotionEvent me, float scaleX, float scaleY) {\n+        Log.i(\"Scale / Zoom\", \"ScaleX: \" + scaleX + \", ScaleY: \" + scaleY);\n+    }\n+    \n     @Override\n     public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {\n         Log.i(\"Entry selected\", e.toString());\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/BarChartFrag.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/BarChartFrag.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/BarChartFrag.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/BarChartFrag.java\n@@ -85,4 +85,9 @@ public void onChartSingleTapped(MotionEvent me) {\n     public void onChartFling(MotionEvent me1, MotionEvent me2, float velocityX, float velocityY) {\n         Log.i(\"Fling\", \"Chart flinged. VeloX: \" + velocityX + \", VeloY: \" + velocityY);\n     }\n+   \n+    @Override\n+    public void onChartScale(MotionEvent me, float scaleX, float scaleY) {\n+        Log.i(\"Scale / Zoom\", \"ScaleX: \" + scaleX + \", ScaleY: \" + scaleY);\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -205,9 +205,9 @@ private void performDrag(MotionEvent event) {\n         // check if axis is inverted\n         if (mChart.isAnyAxisInverted() && mClosestDataSetToTouch != null\n                 && mChart.getAxis(mClosestDataSetToTouch.getAxisDependency()).isInverted()) {\n-            \n+\n             // if there is an inverted horizontalbarchart\n-            if(mChart instanceof HorizontalBarChart) {\n+            if (mChart instanceof HorizontalBarChart) {\n \n                 mMatrix.postTranslate(-(event.getX() - mTouchStartPoint.x), event.getY()\n                         - mTouchStartPoint.y);\n@@ -231,6 +231,8 @@ private void performDrag(MotionEvent event) {\n     private void performZoom(MotionEvent event) {\n \n         if (event.getPointerCount() >= 2) {\n+            \n+            OnChartGestureListener l = mChart.getOnChartGestureListener();\n \n             // get the distance between the pointers of the touch\n             // event\n@@ -247,10 +249,15 @@ private void performZoom(MotionEvent event) {\n \n                     float scale = totalDist / mSavedDist; // total\n                                                           // scale\n+                    \n+                    float scaleX = (mChart.isScaleXEnabled()) ? scale : 1f;\n+                    float scaleY = (mChart.isScaleYEnabled()) ? scale : 1f;\n \n                     mMatrix.set(mSavedMatrix);\n-                    mMatrix.postScale((mChart.isScaleXEnabled()) ? scale : 1f,\n-                            (mChart.isScaleYEnabled()) ? scale : 1f, t.x, t.y);\n+                    mMatrix.postScale(scaleX, scaleY, t.x, t.y);                   \n+\n+                    if (l != null)\n+                        l.onChartScale(event, scaleX, scaleY);\n \n                 } else if (mTouchMode == X_ZOOM && mChart.isScaleXEnabled()) {\n \n@@ -260,6 +267,9 @@ private void performZoom(MotionEvent event) {\n \n                     mMatrix.set(mSavedMatrix);\n                     mMatrix.postScale(scaleX, 1f, t.x, t.y);\n+                    \n+                    if (l != null)\n+                        l.onChartScale(event, scaleX, 1f);\n \n                 } else if (mTouchMode == Y_ZOOM && mChart.isScaleYEnabled()) {\n \n@@ -271,7 +281,9 @@ private void performZoom(MotionEvent event) {\n \n                     // y-axis comes from top to bottom, revert y\n                     mMatrix.postScale(1f, scaleY, t.x, t.y);\n-\n+                    \n+                    if (l != null)\n+                        l.onChartScale(event, 1f, scaleY);\n                 }\n             }\n         }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/listener/OnChartGestureListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/OnChartGestureListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/OnChartGestureListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/OnChartGestureListener.java\n@@ -40,4 +40,13 @@ public interface OnChartGestureListener {\n      * @param velocityY\n      */\n     public void onChartFling(MotionEvent me1, MotionEvent me2, float velocityX, float velocityY);\n+\n+    /**\n+     * Callbacks when the chart is scaled / zoomed via pinch zoom gesture.\n+     * \n+     * @param me\n+     * @param scaleX scalefactor on the x-axis\n+     * @param scaleY scalefactor on the y-axis\n+     */\n+    public void onChartScale(MotionEvent me, float scaleX, float scaleY);\n }",
    "output": "Added listener for chart scale gesture."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -35,7 +35,7 @@ public YAxisRenderer(ViewPortHandler viewPortHandler, YAxis yAxis, Transformer t\n         mAxisLabelPaint.setTextSize(Utils.convertDpToPixel(10f));\n \n         mLimitLinePaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n-        mLimitLinePaint.setStyle(Paint.Style.FILL_AND_STROKE);\n+        mLimitLinePaint.setStyle(Paint.Style.STROKE);\n     }\n \n     /**\n@@ -277,28 +277,25 @@ public void renderLimitLines(Canvas c) {\n         if (limitLines == null || limitLines.size() <= 0)\n             return;\n \n-        float[] pts = new float[4];\n+        float[] pts = new float[2];\n         Path limitLinePath = new Path();\n \n         for (int i = 0; i < limitLines.size(); i++) {\n \n             LimitLine l = limitLines.get(i);\n+            \n+            mLimitLinePaint.setStyle(Paint.Style.STROKE);\n+            mLimitLinePaint.setColor(l.getLineColor());\n+            mLimitLinePaint.setStrokeWidth(l.getLineWidth());\n+            mLimitLinePaint.setPathEffect(l.getDashPathEffect());\n \n             pts[1] = l.getLimit();\n-            pts[3] = l.getLimit();\n \n             mTrans.pointValuesToPixel(pts);\n \n-            pts[0] = mViewPortHandler.contentLeft();\n-            pts[2] = mViewPortHandler.contentRight();\n-\n-            limitLinePath.moveTo(pts[0], pts[1]);\n-            limitLinePath.lineTo(pts[2], pts[3]);\n-\n-            mLimitLinePaint.setColor(l.getLineColor());\n-            mLimitLinePaint.setPathEffect(l.getDashPathEffect());\n-            mLimitLinePaint.setStrokeWidth(l.getLineWidth());\n-\n+            limitLinePath.moveTo(mViewPortHandler.contentLeft(), pts[1]);\n+            limitLinePath.lineTo(mViewPortHandler.contentRight(), pts[1]);\n+            \n             c.drawPath(limitLinePath, mLimitLinePaint);\n             limitLinePath.reset();\n             // c.drawLines(pts, mLimitLinePaint);\n@@ -312,6 +309,7 @@ public void renderLimitLines(Canvas c) {\n                 float yOffset = l.getLineWidth() + Utils.calcTextHeight(mLimitLinePaint, label)\n                         / 2f;\n \n+                mLimitLinePaint.setStyle(Paint.Style.FILL_AND_STROKE);\n                 mLimitLinePaint.setPathEffect(null);\n                 mLimitLinePaint.setColor(l.getTextColor());\n                 mLimitLinePaint.setStrokeWidth(0.5f);",
    "output": "Fixed bug in dashed LimitLine (issue #494)."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -365,7 +365,11 @@ protected void calculateFormatter(float min, float max) {\n     protected void onDraw(Canvas canvas) {\n         // super.onDraw(canvas);\n \n-        if (mDataNotSet || mData == null || mData.getYValCount() <= 0) { // check if there is data\n+        if (mDataNotSet || mData == null || mData.getYValCount() <= 0) { // check\n+                                                                         // if\n+                                                                         // there\n+                                                                         // is\n+                                                                         // data\n \n             // if no data, inform the user\n             canvas.drawText(mNoDataText, getWidth() / 2, getHeight() / 2, mInfoPaint);\n@@ -1189,6 +1193,11 @@ public void setRenderer(DataRenderer renderer) {\n         if (renderer != null)\n             mRenderer = renderer;\n     }\n+    \n+    @Override\n+    public PointF getCenterOfView() {\n+        return getCenter();\n+    }\n \n     /**\n      * Returns the bitmap that represents the chart.\n@@ -1326,9 +1335,28 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto\n             getChildAt(i).layout(left, top, right, bottom);\n         }\n     }\n-    \n+\n+    /** tasks to be done after the view is setup */\n     protected ArrayList<Runnable> mJobs = new ArrayList<Runnable>();\n \n+    /**\n+     * Adds a job to be executed after the chart-view is setup (after\n+     * onSizeChanged(...) is called).\n+     * \n+     * @param job\n+     */\n+    public void addJob(Runnable job) {\n+        mJobs.add(job);\n+    }\n+\n+    public void removeJob(Runnable job) {\n+        mJobs.remove(job);\n+    }\n+\n+    public void clearAllJobs() {\n+        mJobs.clear();\n+    }\n+\n     @Override\n     protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n         if (mLogEnabled)\n@@ -1342,11 +1370,11 @@ protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n \n             if (mLogEnabled)\n                 Log.i(LOG_TAG, \"Setting chart dimens, width: \" + w + \", height: \" + h);\n-            \n-            for(Runnable r : mJobs) {\n+\n+            for (Runnable r : mJobs) {\n                 post(r);\n             }\n-            \n+\n             mJobs.clear();\n         }\n \n@@ -1355,11 +1383,6 @@ protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n         super.onSizeChanged(w, h, oldw, oldh);\n     }\n \n-    @Override\n-    public PointF getCenterOfView() {\n-        return getCenter();\n-    }\n-\n     /**\n      * Setting this to true will set the layer-type HARDWARE for the view, false\n      * will set layer-type SOFTWARE.",
    "output": "Added access methods to scheduled jobs."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -104,6 +104,7 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         // add data\n         setData(45, 100);\n+//        mChart.setVisibleXRange(20);\n         \n         mChart.animateX(2500);\n \n@@ -141,8 +142,7 @@ public boolean onCreateOptionsMenu(Menu menu) {\n     public boolean onOptionsItemSelected(MenuItem item) {\n \n         switch (item.getItemId()) {\n-            case R.id.actionToggleValues: {  \n-                \n+            case R.id.actionToggleValues: { \n                 for (DataSet<?> set : mChart.getData().getDataSets())\n                     set.setDrawValues(!set.isDrawValuesEnabled());\n \n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java\n@@ -82,13 +82,7 @@ private void setupChart(LineChart chart, LineData data, int color) {\n \n         // get the legend (only possible after setting data)\n         Legend l = chart.getLegend();\n-\n-        // modify the legend ...\n-        // l.setPosition(LegendPosition.LEFT_OF_CHART);\n-        l.setForm(LegendForm.CIRCLE);\n-        l.setFormSize(6f);\n-        l.setTextColor(Color.WHITE);\n-        l.setTypeface(mTf);\n+        l.setEnabled(false);\n \n         chart.getAxisLeft().setEnabled(false);\n         chart.getAxisRight().setEnabled(false);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -595,7 +595,7 @@ public void setScaleMinima(float scaleX, float scaleY) {\n      * @param xRange\n      */\n     public void setVisibleXRange(float xRange) {\n-        float xScale = mDeltaX / (xRange + 0.01f);\n+        float xScale = mDeltaX / (xRange);\n         mViewPortHandler.setMinimumScaleX(xScale);\n     }\n \n@@ -703,6 +703,8 @@ public void setViewPortOffsets(final float left, final float top,\n             public void run() {\n \n                 mViewPortHandler.restrainViewPort(left, top, right, bottom);\n+                prepareOffsetMatrix();\n+                prepareValuePxMatrix();\n             }\n         });\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java\n@@ -39,10 +39,8 @@ public Transformer(ViewPortHandler viewPortHandler) {\n      */\n     public void prepareMatrixValuePx(float xChartMin, float deltaX, float deltaY, float yChartMin) {\n \n-        float scaleX = (float) ((mViewPortHandler.getChartWidth() - mViewPortHandler.offsetRight() - mViewPortHandler\n-                .offsetLeft()) / deltaX);\n-        float scaleY = (float) ((mViewPortHandler.getChartHeight() - mViewPortHandler.offsetTop() - mViewPortHandler\n-                .offsetBottom()) / deltaY);\n+        float scaleX = (float) ((mViewPortHandler.contentWidth()) / deltaX);\n+        float scaleY = (float) ((mViewPortHandler.contentHeight()) / deltaY);\n \n         // setup all matrices\n         mMatrixValueToPx.reset();",
    "output": "Fixed bug in viewport-offset custom setting."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -247,7 +247,7 @@ public void onAnimationUpdate(ValueAnimator animation) {\n      */\n     public void setData(T data) {\n \n-        if (data == null || data.getYValCount() <= 0) {\n+        if (data == null) {\n             Log.e(LOG_TAG,\n                     \"Cannot set data for chart. Provided data object is null.\");\n             return;\n@@ -365,7 +365,7 @@ protected void calculateFormatter(float min, float max) {\n     protected void onDraw(Canvas canvas) {\n         // super.onDraw(canvas);\n \n-        if (mDataNotSet) { // check if there is data\n+        if (mDataNotSet || mData == null || mData.getYValCount() <= 0) { // check if there is data\n \n             // if no data, inform the user\n             canvas.drawText(mNoDataText, getWidth() / 2, getHeight() / 2, mInfoPaint);",
    "output": "Fixed no data bug."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -104,7 +104,9 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         // add data\n         setData(45, 100);\n+        \n         mChart.animateX(2500);\n+\n         // mChart.setVisibleYRange(30, AxisDependency.LEFT);\n \n         // // restrain the maximum scale-out factor\n@@ -123,6 +125,11 @@ protected void onCreate(Bundle savedInstanceState) {\n         // // dont forget to refresh the drawing\n         // mChart.invalidate();\n     }\n+    \n+    @Override\n+    public void onWindowFocusChanged(boolean hasFocus) {\n+        super.onWindowFocusChanged(hasFocus);\n+    }\n \n     @Override\n     public boolean onCreateOptionsMenu(Menu menu) {\n@@ -134,7 +141,8 @@ public boolean onCreateOptionsMenu(Menu menu) {\n     public boolean onOptionsItemSelected(MenuItem item) {\n \n         switch (item.getItemId()) {\n-            case R.id.actionToggleValues: {\n+            case R.id.actionToggleValues: {  \n+                \n                 for (DataSet<?> set : mChart.getData().getDataSets())\n                     set.setDrawValues(!set.isDrawValuesEnabled());\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -27,6 +27,7 @@\n import com.github.mikephil.charting.data.LineDataSet;\n import com.github.mikephil.charting.data.filter.Approximator;\n import com.github.mikephil.charting.interfaces.BarLineScatterCandleDataProvider;\n+import com.github.mikephil.charting.jobs.MoveViewJob;\n import com.github.mikephil.charting.listener.BarLineChartTouchListener;\n import com.github.mikephil.charting.listener.OnDrawListener;\n import com.github.mikephil.charting.renderer.XAxisRenderer;\n@@ -212,7 +213,7 @@ protected void onDraw(Canvas canvas) {\n             mAxisRendererRight.renderLimitLines(canvas);\n \n         mRenderer.drawData(canvas);\n-        \n+\n         if (!mAxisLeft.isDrawLimitLinesBehindDataEnabled())\n             mAxisRendererLeft.renderLimitLines(canvas);\n \n@@ -615,14 +616,24 @@ public void setVisibleYRange(float yRange, AxisDependency axis) {\n      * \n      * @param xIndex\n      */\n-    public void moveViewToX(int xIndex) {\n+    public void moveViewToX(float xIndex) {\n \n-        float[] pts = new float[] {\n-                xIndex, 0f\n-        };\n+        Runnable job = new MoveViewJob(mViewPortHandler, xIndex, 0f,\n+                getTransformer(AxisDependency.LEFT), this);\n \n-        getTransformer(AxisDependency.LEFT).pointValuesToPixel(pts);\n-        mViewPortHandler.centerViewPort(pts, this);\n+        if (mViewPortHandler.hasChartDimens()) {\n+            post(job);\n+        } else {\n+            mJobs.add(job);\n+        }\n+\n+        // float[] pts = new float[] {\n+        // xIndex, 0f\n+        // };\n+        //\n+        // getTransformer(AxisDependency.LEFT).pointValuesToPixel(pts);\n+        //\n+        // mViewPortHandler.centerViewPort(pts, this);\n     }\n \n     /**\n@@ -635,12 +646,14 @@ public void moveViewToY(float yValue, AxisDependency axis) {\n \n         float valsInView = getDeltaY(axis) / mViewPortHandler.getScaleY();\n \n-        float[] pts = new float[] {\n-                0f, yValue + valsInView / 2f\n-        };\n+        Runnable job = new MoveViewJob(mViewPortHandler, 0f, yValue + valsInView / 2f,\n+                getTransformer(axis), this);\n \n-        getTransformer(axis).pointValuesToPixel(pts);\n-        mViewPortHandler.centerViewPort(pts, this);\n+        if (mViewPortHandler.hasChartDimens()) {\n+            post(job);\n+        } else {\n+            mJobs.add(job);\n+        }\n     }\n \n     /**\n@@ -652,16 +665,18 @@ public void moveViewToY(float yValue, AxisDependency axis) {\n      * @param yValue\n      * @param axis - which axis should be used as a reference for the y-axis\n      */\n-    public void moveViewTo(int xIndex, float yValue, AxisDependency axis) {\n+    public void moveViewTo(float xIndex, float yValue, AxisDependency axis) {\n \n         float valsInView = getDeltaY(axis) / mViewPortHandler.getScaleY();\n \n-        float[] pts = new float[] {\n-                xIndex, yValue + valsInView / 2f\n-        };\n+        Runnable job = new MoveViewJob(mViewPortHandler, xIndex, yValue + valsInView / 2f,\n+                getTransformer(axis), this);\n \n-        getTransformer(axis).pointValuesToPixel(pts);\n-        mViewPortHandler.centerViewPort(pts, this);\n+        if (mViewPortHandler.hasChartDimens()) {\n+            post(job);\n+        } else {\n+            mJobs.add(job);\n+        }\n     }\n \n     /** flag that indicates if a custom viewport offset has been set */\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1326,6 +1326,8 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto\n             getChildAt(i).layout(left, top, right, bottom);\n         }\n     }\n+    \n+    protected ArrayList<Runnable> mJobs = new ArrayList<Runnable>();\n \n     @Override\n     protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n@@ -1340,6 +1342,12 @@ protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n \n             if (mLogEnabled)\n                 Log.i(LOG_TAG, \"Setting chart dimens, width: \" + w + \", height: \" + h);\n+            \n+            for(Runnable r : mJobs) {\n+                post(r);\n+            }\n+            \n+            mJobs.clear();\n         }\n \n         notifyDataSetChanged();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/jobs/MoveViewJob.java b/MPChartLib/src/com/github/mikephil/charting/jobs/MoveViewJob.java\n--- a/MPChartLib/src/com/github/mikephil/charting/jobs/MoveViewJob.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/jobs/MoveViewJob.java\n@@ -0,0 +1,44 @@\n+\n+package com.github.mikephil.charting.jobs;\n+\n+import android.view.View;\n+\n+import com.github.mikephil.charting.utils.Transformer;\n+import com.github.mikephil.charting.utils.ViewPortHandler;\n+\n+/**\n+ * Runnable that is used for viewport modifications since they cannot be\n+ * executed at any time. This can be used to delay the execution of viewport\n+ * modifications until the onSizeChanged(...) method of the chartview is called.\n+ * \n+ * @author Philipp Jahoda\n+ */\n+public class MoveViewJob implements Runnable {\n+\n+    protected ViewPortHandler mViewPortHandler;\n+    protected float xIndex = 0f;\n+    protected float yValue = 0f;\n+    protected Transformer mTrans;\n+    protected View view;\n+\n+    public MoveViewJob(ViewPortHandler viewPortHandler, float xIndex, float yValue,\n+            Transformer trans, View v) {\n+\n+        this.mViewPortHandler = viewPortHandler;\n+        this.xIndex = xIndex;\n+        this.yValue = yValue;\n+        this.mTrans = trans;\n+        this.view = v;\n+    }\n+\n+    @Override\n+    public void run() {\n+\n+        float[] pts = new float[] {\n+                xIndex, yValue\n+        };\n+\n+        mTrans.pointValuesToPixel(pts);\n+        mViewPortHandler.centerViewPort(pts, view);\n+    }\n+}\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/ViewPortHandler.java\n@@ -4,8 +4,8 @@\n import android.graphics.Matrix;\n import android.graphics.PointF;\n import android.graphics.RectF;\n-\n-import com.github.mikephil.charting.charts.Chart;\n+import android.util.Log;\n+import android.view.View;\n \n public class ViewPortHandler {\n \n@@ -54,6 +54,13 @@ public void setChartDimens(float width, float height) {\n             mContentRect.set(0, 0, width, height);\n     }\n \n+    public boolean hasChartDimens() {\n+        if (mChartHeight > 0 && mChartWidth > 0)\n+            return true;\n+        else\n+            return false;\n+    }\n+\n     public void restrainViewPort(float offsetLeft, float offsetTop, float offsetRight,\n             float offsetBottom) {\n         mContentRect.set(offsetLeft, offsetTop, mChartWidth - offsetRight, mChartHeight\n@@ -207,17 +214,19 @@ public Matrix fitScreen() {\n      * @param chart\n      * @return save\n      */\n-    public synchronized void centerViewPort(final float[] transformedPts, final Chart<?> chart) {\n+    public synchronized void centerViewPort(final float[] transformedPts, final View view) {\n \n         Matrix save = new Matrix();\n         save.set(mMatrixTouch);\n \n         final float x = transformedPts[0] - offsetLeft();\n         final float y = transformedPts[1] - offsetTop();\n \n+        Log.i(\"\", \"Moving view to x: \" + x + \", y: \" + y);\n+\n         save.postTranslate(-x, -y);\n \n-        refresh(save, chart, false);\n+        refresh(save, view, false);\n \n         // final View v = chart.getChartView();\n         //\n@@ -244,7 +253,7 @@ public synchronized void centerViewPort(final float[] transformedPts, final Char\n      * @param newMatrix\n      * @return\n      */\n-    public Matrix refresh(Matrix newMatrix, Chart<?> chart, boolean invalidate) {\n+    public Matrix refresh(Matrix newMatrix, View chart, boolean invalidate) {\n \n         mMatrixTouch.set(newMatrix);\n ",
    "output": "Bugfixes concerning viewport modifications. Introduced jobs that await the complete setup of the chart (waiting for onSizeChanged(...)) before modifying it's viewport."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -98,6 +98,9 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart.setHighlightIndicatorEnabled(false);\n         \n         mChart.getAxisLeft().enableGridDashedLine(10f, 10f, 0f);\n+        \n+        // limit lines are drawn behind data (and not on top)\n+        mChart.getAxisLeft().setDrawLimitLinesBehindData(true);\n \n         // add data\n         setData(45, 100);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -205,10 +205,19 @@ protected void onDraw(Canvas canvas) {\n         mAxisRendererLeft.renderGridLines(canvas);\n         mAxisRendererRight.renderGridLines(canvas);\n \n+        if (mAxisLeft.isDrawLimitLinesBehindDataEnabled())\n+            mAxisRendererLeft.renderLimitLines(canvas);\n+\n+        if (mAxisRight.isDrawLimitLinesBehindDataEnabled())\n+            mAxisRendererRight.renderLimitLines(canvas);\n+\n         mRenderer.drawData(canvas);\n+        \n+        if (!mAxisLeft.isDrawLimitLinesBehindDataEnabled())\n+            mAxisRendererLeft.renderLimitLines(canvas);\n \n-        mAxisRendererLeft.renderLimitLines(canvas);\n-        mAxisRendererRight.renderLimitLines(canvas);\n+        if (!mAxisRight.isDrawLimitLinesBehindDataEnabled())\n+            mAxisRendererRight.renderLimitLines(canvas);\n \n         // if highlighting is enabled\n         if (mHighlightEnabled && mHighLightIndicatorEnabled && valuesToHighlight())\n@@ -312,7 +321,7 @@ protected void calcMinMax() {\n \n         float leftRange = Math.abs(maxLeft - (mAxisLeft.isStartAtZeroEnabled() ? 0 : minLeft));\n         float rightRange = Math.abs(maxRight - (mAxisRight.isStartAtZeroEnabled() ? 0 : minRight));\n-        \n+\n         // in case all values are equal\n         if (leftRange == 0f)\n             maxLeft = maxLeft + 1f;\n@@ -1163,7 +1172,7 @@ public YAxis getAxis(AxisDependency axis) {\n         else\n             return mAxisRight;\n     }\n-    \n+\n     @Override\n     public boolean isInverted(AxisDependency axis) {\n         return getAxis(axis).isInverted();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n@@ -49,6 +49,8 @@ public class YAxis extends AxisBase {\n     /** if true, the y-label entries will always start at zero */\n     protected boolean mStartAtZero = true;\n \n+    protected boolean mDrawLimitLineBehindData = false;\n+\n     /** array of limitlines that can be set for the axis */\n     private List<LimitLine> mLimitLines;\n \n@@ -270,6 +272,20 @@ public List<LimitLine> getLimitLines() {\n         return mLimitLines;\n     }\n \n+    /**\n+     * If this is set to true, the LimitLines are drawn behind the actual data,\n+     * otherwise on top. Default: false\n+     * \n+     * @param enabled\n+     */\n+    public void setDrawLimitLinesBehindData(boolean enabled) {\n+        mDrawLimitLineBehindData = enabled;\n+    }\n+\n+    public boolean isDrawLimitLinesBehindDataEnabled() {\n+        return mDrawLimitLineBehindData;\n+    }\n+\n     public float getAxisMinValue() {\n         return mCustomAxisMin;\n     }",
    "output": "LimitLines can now be drawn behind or in front of the actual data (issue #493)."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -96,6 +96,8 @@ protected void onCreate(Bundle savedInstanceState) {\n         // enable/disable highlight indicators (the lines that indicate the\n         // highlighted Entry)\n         mChart.setHighlightIndicatorEnabled(false);\n+        \n+        mChart.getAxisLeft().enableGridDashedLine(10f, 10f, 0f);\n \n         // add data\n         setData(45, 100);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java\n@@ -2,6 +2,7 @@\n package com.github.mikephil.charting.components;\n \n import android.graphics.Color;\n+import android.graphics.DashPathEffect;\n \n import com.github.mikephil.charting.utils.Utils;\n \n@@ -29,6 +30,9 @@ public abstract class AxisBase extends ComponentBase {\n     /** flag that indicates of the labels of this axis should be drawn or not */\n     protected boolean mDrawLabels = true;\n \n+    /** the path effect of the grid lines that makes dashed lines possible */\n+    private DashPathEffect mGridDashPathEffect = null;\n+\n     /** default constructor */\n     public AxisBase() {\n         this.mTextSize = Utils.convertDpToPixel(10f);\n@@ -174,4 +178,44 @@ public boolean isDrawLabelsEnabled() {\n      * @return\n      */\n     public abstract String getLongestLabel();\n+\n+    /**\n+     * Enables the grid line to be drawn in dashed mode, e.g. like this\n+     * \"- - - - - -\". THIS ONLY WORKS IF HARDWARE-ACCELERATION IS TURNED OFF.\n+     * Keep in mind that hardware acceleration boosts performance.\n+     *\n+     * @param lineLength the length of the line pieces\n+     * @param spaceLength the length of space in between the pieces\n+     * @param phase offset, in degrees (normally, use 0)\n+     */\n+    public void enableGridDashedLine(float lineLength, float spaceLength, float phase) {\n+        mGridDashPathEffect = new DashPathEffect(new float[] {\n+                lineLength, spaceLength\n+        }, phase);\n+    }\n+\n+    /**\n+     * Disables the grid line to be drawn in dashed mode.\n+     */\n+    public void disableGridDashedLine() {\n+        mGridDashPathEffect = null;\n+    }\n+\n+    /**\n+     * Returns true if the grid dashed-line effect is enabled, false if not.\n+     *\n+     * @return\n+     */\n+    public boolean isGridDashedLineEnabled() {\n+        return mGridDashPathEffect == null ? false : true;\n+    }\n+\n+    /**\n+     * returns the DashPathEffect that is set for grid line\n+     *\n+     * @return\n+     */\n+    public DashPathEffect getGridDashPathEffect() {\n+        return mGridDashPathEffect;\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n@@ -177,6 +177,7 @@ public void renderGridLines(Canvas c) {\n \n         mGridPaint.setColor(mXAxis.getGridColor());\n         mGridPaint.setStrokeWidth(mXAxis.getGridLineWidth());\n+        mGridPaint.setPathEffect(mXAxis.getGridDashPathEffect());\n \n         for (int i = mMinX; i <= mMaxX; i += mXAxis.mAxisLabelModulus) {\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -59,7 +59,7 @@ public void computeAxis(float yMin, float yMax) {\n                 yMin = (float) p2.y;\n                 yMax = (float) p1.y;\n             } else {\n-                \n+\n                 yMin = (float) p1.y;\n                 yMax = (float) p2.y;\n             }\n@@ -245,16 +245,23 @@ public void renderGridLines(Canvas c) {\n \n         mGridPaint.setColor(mYAxis.getGridColor());\n         mGridPaint.setStrokeWidth(mYAxis.getGridLineWidth());\n+        mGridPaint.setPathEffect(mYAxis.getGridDashPathEffect());\n+\n+        Path gridLinePath = new Path();\n \n         // draw the horizontal grid\n         for (int i = 0; i < mYAxis.mEntryCount; i++) {\n \n             position[1] = mYAxis.mEntries[i];\n             mTrans.pointValuesToPixel(position);\n \n-            c.drawLine(mViewPortHandler.offsetLeft(), position[1], mViewPortHandler.contentRight(),\n-                    position[1],\n-                    mGridPaint);\n+            gridLinePath.moveTo(mViewPortHandler.offsetLeft(), position[1]);\n+            gridLinePath.lineTo(mViewPortHandler.contentRight(),\n+                    position[1]);\n+\n+            c.drawPath(gridLinePath, mGridPaint);\n+\n+            gridLinePath.reset();\n         }\n     }\n ",
    "output": "Improved grid dashed lines."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java\n@@ -2,6 +2,7 @@\n package com.github.mikephil.charting.components;\n \n import android.graphics.Color;\n+import android.graphics.DashPathEffect;\n \n import com.github.mikephil.charting.utils.Utils;\n \n@@ -29,6 +30,9 @@ public abstract class AxisBase extends ComponentBase {\n     /** flag that indicates of the labels of this axis should be drawn or not */\n     protected boolean mDrawLabels = true;\n \n+    /** the path effect of the grid lines that makes dashed lines possible */\n+    private DashPathEffect mGridDashPathEffect = null;\n+\n     /** default constructor */\n     public AxisBase() {\n         this.mTextSize = Utils.convertDpToPixel(10f);\n@@ -174,4 +178,44 @@ public boolean isDrawLabelsEnabled() {\n      * @return\n      */\n     public abstract String getLongestLabel();\n+\n+    /**\n+     * Enables the grid line to be drawn in dashed mode, e.g. like this\n+     * \"- - - - - -\". THIS ONLY WORKS IF HARDWARE-ACCELERATION IS TURNED OFF.\n+     * Keep in mind that hardware acceleration boosts performance.\n+     *\n+     * @param lineLength the length of the line pieces\n+     * @param spaceLength the length of space in between the pieces\n+     * @param phase offset, in degrees (normally, use 0)\n+     */\n+    public void enableGridDashedLine(float lineLength, float spaceLength, float phase) {\n+        mGridDashPathEffect = new DashPathEffect(new float[] {\n+                lineLength, spaceLength\n+        }, phase);\n+    }\n+\n+    /**\n+     * Disables the grid line to be drawn in dashed mode.\n+     */\n+    public void disableGridDashedLine() {\n+        mGridDashPathEffect = null;\n+    }\n+\n+    /**\n+     * Returns true if the grid dashed-line effect is enabled, false if not.\n+     *\n+     * @return\n+     */\n+    public boolean isGridDashedLineEnabled() {\n+        return mGridDashPathEffect == null ? false : true;\n+    }\n+\n+    /**\n+     * returns the DashPathEffect that is set for grid line\n+     *\n+     * @return\n+     */\n+    public DashPathEffect getDashPathEffect() {\n+        return mGridDashPathEffect;\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n@@ -177,6 +177,7 @@ public void renderGridLines(Canvas c) {\n \n         mGridPaint.setColor(mXAxis.getGridColor());\n         mGridPaint.setStrokeWidth(mXAxis.getGridLineWidth());\n+        mGridPaint.setPathEffect(mXAxis.getDashPathEffect());\n \n         for (int i = mMinX; i <= mMaxX; i += mXAxis.mAxisLabelModulus) {\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -245,6 +245,7 @@ public void renderGridLines(Canvas c) {\n \n         mGridPaint.setColor(mYAxis.getGridColor());\n         mGridPaint.setStrokeWidth(mYAxis.getGridLineWidth());\n+        mGridPaint.setPathEffect(mYAxis.getDashPathEffect());\n \n         // draw the horizontal grid\n         for (int i = 0; i < mYAxis.mEntryCount; i++) {",
    "output": "Merge pull request #499 from mesropd/dashGridLines\n\nImplement dash path effect for the grid lines"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java\n@@ -86,9 +86,9 @@ public View getView(int position, View convertView, ViewGroup parent) {\n \n             // apply styling\n             data.setValueTypeface(mTf);\n+            data.setValueTextColor(Color.BLACK);\n             holder.chart.setDescription(\"\");\n             holder.chart.setDrawGridBackground(false);\n-            data.setValueTextColor(Color.WHITE);\n \n             XAxis xAxis = holder.chart.getXAxis();\n             xAxis.setPosition(XAxisPosition.BOTTOM);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java b/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java\n@@ -61,7 +61,7 @@ public void feed(List<BarEntry> entries) {\n             float y = e.getVal();\n             float [] vals = e.getVals();\n             \n-            if(mInverted) { // inverted axis\n+            if(mInverted) { // inverted axis, here, I chose performance over readability\n                 \n                 if(!mContainsStacks || vals == null) {\n                     \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -247,7 +247,7 @@ public void onAnimationUpdate(ValueAnimator animation) {\n      */\n     public void setData(T data) {\n \n-        if (data == null) {\n+        if (data == null || data.getYValCount() <= 0) {\n             Log.e(LOG_TAG,\n                     \"Cannot set data for chart. Provided data object is null.\");\n             return;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -80,7 +80,7 @@ public void computeLegend(ChartData<?> data) {\n             int entryCount = dataSet.getEntryCount();\n \n             // if we have a barchart with stacked bars\n-            if (dataSet instanceof BarDataSet && ((BarDataSet) dataSet).getStackSize() > 1) {\n+            if (dataSet instanceof BarDataSet && ((BarDataSet) dataSet).isStacked()) {\n \n                 BarDataSet bds = (BarDataSet) dataSet;\n                 String[] sLabels = bds.getStackLabels();",
    "output": "Fixed issue concerning no data text (issue #473)."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java\n@@ -2,6 +2,7 @@\n package com.github.mikephil.charting.components;\n \n import android.graphics.Color;\n+import android.graphics.DashPathEffect;\n \n import com.github.mikephil.charting.utils.Utils;\n \n@@ -29,6 +30,9 @@ public abstract class AxisBase extends ComponentBase {\n     /** flag that indicates of the labels of this axis should be drawn or not */\n     protected boolean mDrawLabels = true;\n \n+    /** the path effect of the grid lines that makes dashed lines possible */\n+    private DashPathEffect mGridDashPathEffect = null;\n+\n     /** default constructor */\n     public AxisBase() {\n         this.mTextSize = Utils.convertDpToPixel(10f);\n@@ -174,4 +178,44 @@ public boolean isDrawLabelsEnabled() {\n      * @return\n      */\n     public abstract String getLongestLabel();\n+\n+    /**\n+     * Enables the grid line to be drawn in dashed mode, e.g. like this\n+     * \"- - - - - -\". THIS ONLY WORKS IF HARDWARE-ACCELERATION IS TURNED OFF.\n+     * Keep in mind that hardware acceleration boosts performance.\n+     *\n+     * @param lineLength the length of the line pieces\n+     * @param spaceLength the length of space in between the pieces\n+     * @param phase offset, in degrees (normally, use 0)\n+     */\n+    public void enableGridDashedLine(float lineLength, float spaceLength, float phase) {\n+        mGridDashPathEffect = new DashPathEffect(new float[] {\n+                lineLength, spaceLength\n+        }, phase);\n+    }\n+\n+    /**\n+     * Disables the grid line to be drawn in dashed mode.\n+     */\n+    public void disableGridDashedLine() {\n+        mGridDashPathEffect = null;\n+    }\n+\n+    /**\n+     * Returns true if the grid dashed-line effect is enabled, false if not.\n+     *\n+     * @return\n+     */\n+    public boolean isGridDashedLineEnabled() {\n+        return mGridDashPathEffect == null ? false : true;\n+    }\n+\n+    /**\n+     * returns the DashPathEffect that is set for grid line\n+     *\n+     * @return\n+     */\n+    public DashPathEffect getDashPathEffect() {\n+        return mGridDashPathEffect;\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n@@ -177,6 +177,7 @@ public void renderGridLines(Canvas c) {\n \n         mGridPaint.setColor(mXAxis.getGridColor());\n         mGridPaint.setStrokeWidth(mXAxis.getGridLineWidth());\n+        mGridPaint.setPathEffect(mXAxis.getDashPathEffect());\n \n         for (int i = mMinX; i <= mMaxX; i += mXAxis.mAxisLabelModulus) {\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -245,6 +245,7 @@ public void renderGridLines(Canvas c) {\n \n         mGridPaint.setColor(mYAxis.getGridColor());\n         mGridPaint.setStrokeWidth(mYAxis.getGridLineWidth());\n+        mGridPaint.setPathEffect(mYAxis.getDashPathEffect());\n \n         // draw the horizontal grid\n         for (int i = 0; i < mYAxis.mEntryCount; i++) {",
    "output": "- implement dash path effect for the grid lines"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -209,12 +209,12 @@ private void performDrag(MotionEvent event) {\n             // if there is an inverted horizontalbarchart\n             if(mChart instanceof HorizontalBarChart) {\n \n-                mMatrix.postTranslate(event.getX() - mTouchStartPoint.x, -(event.getY()\n-                        - mTouchStartPoint.y));\n+                mMatrix.postTranslate(-(event.getX() - mTouchStartPoint.x), event.getY()\n+                        - mTouchStartPoint.y);\n             } else {\n \n                 mMatrix.postTranslate(event.getX() - mTouchStartPoint.x, -(event.getY()\n-                        - mTouchStartPoint.y));   \n+                        - mTouchStartPoint.y));\n             }\n         }\n         else {",
    "output": "Fixed dragging inverted horizontal bar chart"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java\n@@ -93,7 +93,7 @@ protected void drawDataSet(Canvas c, ScatterDataSet dataSet) {\n                             || !mViewPortHandler.isInBoundsY(buffer.buffer[i + 1]))\n                         continue;\n \n-                    mRenderPaint.setColor(dataSet.getColor(i));\n+                    mRenderPaint.setColor(dataSet.getColor(i / 2));\n                     c.drawRect(buffer.buffer[i] - shapeHalf,\n                             buffer.buffer[i + 1] - shapeHalf, buffer.buffer[i]\n                                     + shapeHalf, buffer.buffer[i + 1]\n@@ -113,7 +113,7 @@ protected void drawDataSet(Canvas c, ScatterDataSet dataSet) {\n                             || !mViewPortHandler.isInBoundsY(buffer.buffer[i + 1]))\n                         continue;\n \n-                    mRenderPaint.setColor(dataSet.getColor(i));\n+                    mRenderPaint.setColor(dataSet.getColor(i / 2));\n                     c.drawCircle(buffer.buffer[i], buffer.buffer[i + 1], shapeHalf,\n                             mRenderPaint);\n                 }\n@@ -134,7 +134,7 @@ protected void drawDataSet(Canvas c, ScatterDataSet dataSet) {\n                             || !mViewPortHandler.isInBoundsY(buffer.buffer[i + 1]))\n                         continue;\n \n-                    mRenderPaint.setColor(dataSet.getColor(i));\n+                    mRenderPaint.setColor(dataSet.getColor(i / 2));\n                     tri.moveTo(buffer.buffer[i], buffer.buffer[i + 1] - shapeHalf);\n                     tri.lineTo(buffer.buffer[i] + shapeHalf, buffer.buffer[i + 1] + shapeHalf);\n                     tri.lineTo(buffer.buffer[i] - shapeHalf, buffer.buffer[i + 1] + shapeHalf);\n@@ -157,7 +157,7 @@ protected void drawDataSet(Canvas c, ScatterDataSet dataSet) {\n                             || !mViewPortHandler.isInBoundsY(buffer.buffer[i + 1]))\n                         continue;\n \n-                    mRenderPaint.setColor(dataSet.getColor(i));\n+                    mRenderPaint.setColor(dataSet.getColor(i / 2));\n \n                     c.drawLine(buffer.buffer[i] - shapeHalf, buffer.buffer[i + 1],\n                             buffer.buffer[i] + shapeHalf,",
    "output": "Fixed issue concerning scatterchart color (issue #490)."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n@@ -22,7 +22,8 @@\n \n /**\n  * BarChart with horizontal bar orientation. In this implementation, x- and\n- * y-axis are switched.\n+ * y-axis are switched, meaning the YAxis class represents the horizontal values\n+ * and the XAxis class represents the vertical values.\n  * \n  * @author Philipp Jahoda\n  */\n@@ -53,7 +54,7 @@ protected void init() {\n         mXAxisRenderer = new XAxisRendererHorizontalBarChart(mViewPortHandler, mXAxis,\n                 mLeftAxisTransformer, this);\n     }\n-    \n+\n     @Override\n     protected void calculateOffsets() {\n \n@@ -86,7 +87,8 @@ protected void calculateOffsets() {\n         }\n \n         if (mAxisRight.needsOffset()) {\n-            offsetBottom += mAxisRight.getRequiredHeightSpace(mAxisRendererRight.getPaintAxisLabels());\n+            offsetBottom += mAxisRight.getRequiredHeightSpace(mAxisRendererRight\n+                    .getPaintAxisLabels());\n         }\n \n         float xlabelwidth = mXAxis.mLabelWidth;\n@@ -142,7 +144,7 @@ protected void calcModulus() {\n         mXAxis.mAxisLabelModulus = (int) Math\n                 .ceil((mData.getXValCount() * mXAxis.mLabelHeight)\n                         / (mViewPortHandler.contentHeight() * values[Matrix.MSCALE_Y]));\n-        \n+\n         if (mXAxis.mAxisLabelModulus < 1)\n             mXAxis.mAxisLabelModulus = 1;\n     }\n@@ -165,14 +167,14 @@ public RectF getBarBounds(BarEntry e) {\n         float bottom = x + 0.5f - spaceHalf;\n         float left = y >= 0 ? y : 0;\n         float right = y <= 0 ? y : 0;\n-        \n+\n         RectF bounds = new RectF(left, top, right, bottom);\n \n         getTransformer(set.getAxisDependency()).rectValueToPixel(bounds);\n \n         return bounds;\n     }\n-    \n+\n     @Override\n     public PointF getPosition(Entry e, AxisDependency axis) {\n \n@@ -187,7 +189,7 @@ public PointF getPosition(Entry e, AxisDependency axis) {\n \n         return new PointF(vals[0], vals[1]);\n     }\n-    \n+\n     /**\n      * Returns the Highlight object (contains x-index and DataSet index) of the\n      * selected value at the given touch point inside the BarChart.",
    "output": "Added share images."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -99,12 +99,14 @@ protected void onCreate(Bundle savedInstanceState) {\n         leftAxis.setLabelCount(8);\n         leftAxis.setValueFormatter(custom);\n         leftAxis.setPosition(YAxisLabelPosition.OUTSIDE_CHART);\n+        leftAxis.setSpaceTop(15f);\n \n         YAxis rightAxis = mChart.getAxisRight();\n         rightAxis.setDrawGridLines(false);\n         rightAxis.setTypeface(mTf);\n         rightAxis.setLabelCount(8);\n         rightAxis.setValueFormatter(custom);\n+        rightAxis.setSpaceTop(15f);\n         \n         Legend l = mChart.getLegend();\n         l.setPosition(LegendPosition.BELOW_CHART_LEFT);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -311,6 +311,13 @@ protected void calcMinMax() {\n \n         float leftRange = Math.abs(maxLeft - (mAxisLeft.isStartAtZeroEnabled() ? 0 : minLeft));\n         float rightRange = Math.abs(maxRight - (mAxisRight.isStartAtZeroEnabled() ? 0 : minRight));\n+        \n+        // in case all values are equal\n+        if (leftRange == 0f)\n+            maxLeft = maxLeft + 1f;\n+\n+        if (rightRange == 0f)\n+            maxRight = maxRight + 1f;\n \n         float topSpaceLeft = leftRange / 100f * mAxisLeft.getSpaceTop();\n         float topSpaceRight = rightRange / 100f * mAxisRight.getSpaceTop();\n@@ -356,7 +363,7 @@ protected void calculateOffsets() {\n                     offsetRight += mLegend.mTextWidthMax + mLegend.getXOffset() * 2f;\n \n                 } else if (mLegend.getPosition() == LegendPosition.LEFT_OF_CHART\n-                            || mLegend.getPosition() == LegendPosition.LEFT_OF_CHART_CENTER) {\n+                        || mLegend.getPosition() == LegendPosition.LEFT_OF_CHART_CENTER) {\n \n                     offsetLeft += mLegend.mTextWidthMax + mLegend.getXOffset() * 2f;\n \n@@ -370,11 +377,13 @@ protected void calculateOffsets() {\n \n             // offsets for y-labels\n             if (mAxisLeft.needsOffset()) {\n-                offsetLeft += mAxisLeft.getRequiredWidthSpace(mAxisRendererLeft.getPaintAxisLabels());\n+                offsetLeft += mAxisLeft.getRequiredWidthSpace(mAxisRendererLeft\n+                        .getPaintAxisLabels());\n             }\n \n             if (mAxisRight.needsOffset()) {\n-                offsetRight += mAxisRight.getRequiredWidthSpace(mAxisRendererRight.getPaintAxisLabels());\n+                offsetRight += mAxisRight.getRequiredWidthSpace(mAxisRendererRight\n+                        .getPaintAxisLabels());\n             }\n \n             float xlabelheight = mXAxis.mLabelHeight * 2f;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -60,9 +60,9 @@ public void computeAxis(float yMin, float yMax) {\n                 yMax = (float) p1.y;\n             } else {\n \n-                if (!mYAxis.isStartAtZeroEnabled())\n+                if (!mYAxis.isStartAtZeroEnabled()) {\n                     yMin = (float) Math.min(p1.y, p2.y);\n-                else\n+                } else\n                     yMin = 0;\n                 yMax = (float) Math.max(p1.y, p2.y);\n             }\n@@ -275,19 +275,19 @@ public void renderLimitLines(Canvas c) {\n \n         float[] pts = new float[4];\n         Path limitLinePath = new Path();\n-               \n+\n         for (int i = 0; i < limitLines.size(); i++) {\n \n             LimitLine l = limitLines.get(i);\n-            \n+\n             pts[1] = l.getLimit();\n             pts[3] = l.getLimit();\n \n             mTrans.pointValuesToPixel(pts);\n \n             pts[0] = mViewPortHandler.contentLeft();\n             pts[2] = mViewPortHandler.contentRight();\n-            \n+\n             limitLinePath.moveTo(pts[0], pts[1]);\n             limitLinePath.lineTo(pts[2], pts[3]);\n \n@@ -297,7 +297,7 @@ public void renderLimitLines(Canvas c) {\n \n             c.drawPath(limitLinePath, mLimitLinePaint);\n             limitLinePath.reset();\n-//            c.drawLines(pts, mLimitLinePaint);\n+            // c.drawLines(pts, mLimitLinePaint);\n \n             String label = l.getLabel();\n ",
    "output": "Fixed issue concerning all equal values (issue #409)."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n@@ -84,7 +84,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart.setOnChartValueSelectedListener(this);\n         // mChart.setTouchEnabled(false);\n \n-        mChart.setCenterText(\"MPAndroidChart\\nLibrary\");\n+        mChart.setCenterText(\"MPAndroidChart\\nby Philipp Jahoda\");\n \n         setData(3, 100);\n \n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/PieChartFrag.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/PieChartFrag.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/PieChartFrag.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/PieChartFrag.java\n@@ -27,23 +27,22 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa\n         mChart = (PieChart) v.findViewById(R.id.pieChart1);\n         mChart.setDescription(\"\");\n         \n-        mChart.setCenterTextTypeface(Typeface.createFromAsset(getActivity().getAssets(), \"OpenSans-Light.ttf\"));\n-        mChart.setCenterText(\"Quarterly\\nRevenue\");\n+        Typeface tf = Typeface.createFromAsset(getActivity().getAssets(), \"OpenSans-Light.ttf\");\n+        \n+        mChart.setCenterTextTypeface(tf);\n+        mChart.setCenterText(\"Revenues\");\n         mChart.setCenterTextSize(22f);\n+        mChart.setCenterTextTypeface(tf);\n          \n         // radius of the center hole in percent of maximum radius\n         mChart.setHoleRadius(45f); \n         mChart.setTransparentCircleRadius(50f);\n         \n-        // enable / disable drawing of x- and y-values\n-//        mChart.setDrawYValues(false);\n-//        mChart.setDrawXValues(false);\n-        \n-        mChart.setData(generatePieData());\n-        \n         Legend l = mChart.getLegend();\n         l.setPosition(LegendPosition.RIGHT_OF_CHART);\n         \n+        mChart.setData(generatePieData());\n+        \n         return v;\n     }\n }\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SimpleFragment.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SimpleFragment.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SimpleFragment.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SimpleFragment.java\n@@ -1,5 +1,6 @@\n package com.xxmassdeveloper.mpchartexample.fragments;\n \n+import android.graphics.Color;\n import android.graphics.Typeface;\n import android.os.Bundle;\n import android.support.v4.app.Fragment;\n@@ -115,9 +116,12 @@ protected PieData generatePieData() {\n         PieDataSet ds1 = new PieDataSet(entries1, \"Quarterly Revenues 2014\");\n         ds1.setColors(ColorTemplate.VORDIPLOM_COLORS);\n         ds1.setSliceSpace(2f);\n+        ds1.setValueTextColor(Color.WHITE);\n+        ds1.setValueTextSize(12f);\n         \n         PieData d = new PieData(xVals, ds1);\n         d.setValueTypeface(tf);\n+\n         return d;\n     }\n     \n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n@@ -83,7 +83,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         objects.add(new ContentItem(\"Draw Chart\",\n                 \"Demonstration of drawing values into the chart per touch-gesture. With callbacks.\"));\n         objects.add(new ContentItem(\n-                \"Charts in Fragments, awesome design.\",\n+                \"Charts in ViewPager Fragments\",\n                 \"Demonstration of charts inside ViewPager Fragments. In this example the focus was on the design and look and feel of the chart.\"));\n         objects.add(new ContentItem(\n                 \"BarChart inside ListView\",\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -35,7 +35,7 @@ public class PieChartRenderer extends DataRenderer {\n      * chart\n      */\n     private Paint mCenterTextPaint;\n-    \n+\n     /** Bitmap for drawing the center hole */\n     protected Bitmap mDrawBitmap;\n \n@@ -66,16 +66,16 @@ public Paint getPaintHole() {\n     public Paint getPaintCenterText() {\n         return mCenterTextPaint;\n     }\n-    \n+\n     @Override\n     public void initBuffers() {\n         // TODO Auto-generated method stub\n-        \n+\n     }\n \n     @Override\n     public void drawData(Canvas c) {\n-        \n+\n         if (mDrawBitmap == null) {\n             mDrawBitmap = Bitmap.createBitmap((int) mViewPortHandler.getChartWidth(),\n                     (int) mViewPortHandler.getChartHeight(), Bitmap.Config.ARGB_4444);\n@@ -91,7 +91,7 @@ public void drawData(Canvas c) {\n             if (set.isVisible())\n                 drawDataSet(c, set);\n         }\n-                \n+\n         c.drawBitmap(mDrawBitmap, 0, 0, mRenderPaint);\n     }\n \n@@ -275,11 +275,18 @@ protected void drawCenterText(Canvas c) {\n             // get all lines from the text\n             String[] lines = centerText.split(\"\\n\");\n \n-            // calculate the height for each line\n-            float lineHeight = Utils.calcTextHeight(mCenterTextPaint, lines[0]);\n-            float linespacing = lineHeight * 0.2f;\n+            float maxlineheight = 0f;\n+\n+            // calc the maximum line height\n+            for (String line : lines) {\n+                float curHeight = Utils.calcTextHeight(mCenterTextPaint, line);\n+                if (curHeight > maxlineheight)\n+                    maxlineheight = curHeight;\n+            }\n+\n+            float linespacing = maxlineheight * 0.25f;\n \n-            float totalheight = lineHeight * lines.length - linespacing * (lines.length - 1);\n+            float totalheight = maxlineheight * lines.length - linespacing * (lines.length - 1);\n \n             int cnt = lines.length;\n \n@@ -290,7 +297,7 @@ protected void drawCenterText(Canvas c) {\n                 String line = lines[lines.length - i - 1];\n \n                 c.drawText(line, center.x, y\n-                        + lineHeight * cnt - totalheight / 2f,\n+                        + maxlineheight * cnt - totalheight / 2f,\n                         mCenterTextPaint);\n                 cnt--;\n                 y -= linespacing;\n@@ -348,7 +355,8 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n             // redefine the rect that contains the arc so that the\n             // highlighted pie is not cut off\n-            mBitmapCanvas.drawArc(highlighted, angle + set.getSliceSpace() / 2f, sliceDegrees * mAnimator.getPhaseY()\n+            mBitmapCanvas.drawArc(highlighted, angle + set.getSliceSpace() / 2f, sliceDegrees\n+                    * mAnimator.getPhaseY()\n                     - set.getSliceSpace() / 2f, true, mRenderPaint);\n         }\n     }",
    "output": "Fixed issue concerning PieChart center text (issue #467)."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -355,6 +355,11 @@ protected void calculateOffsets() {\n \n                     offsetRight += mLegend.mTextWidthMax + mLegend.getXOffset() * 2f;\n \n+                } else if (mLegend.getPosition() == LegendPosition.LEFT_OF_CHART\n+                            || mLegend.getPosition() == LegendPosition.LEFT_OF_CHART_CENTER) {\n+\n+                    offsetLeft += mLegend.mTextWidthMax + mLegend.getXOffset() * 2f;\n+\n                 } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n                         || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT\n                         || mLegend.getPosition() == LegendPosition.BELOW_CHART_CENTER) {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n@@ -67,6 +67,11 @@ protected void calculateOffsets() {\n \n                 offsetRight += mLegend.mTextWidthMax + mLegend.getXOffset() * 2f;\n \n+            } else if (mLegend.getPosition() == LegendPosition.LEFT_OF_CHART\n+                    || mLegend.getPosition() == LegendPosition.LEFT_OF_CHART_CENTER) {\n+\n+                offsetLeft += mLegend.mTextWidthMax + mLegend.getXOffset() * 2f;\n+\n             } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n                     || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT\n                     || mLegend.getPosition() == LegendPosition.BELOW_CHART_CENTER) {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -91,7 +91,7 @@ public void notifyDataSetChanged() {\n     @Override\n     protected void calculateOffsets() {\n \n-        float legendRight = 0f, legendBottom = 0f, legendTop = 0f;\n+        float legendLeft = 0f, legendRight = 0f, legendBottom = 0f, legendTop = 0f;\n \n         if (mLegend != null && mLegend.isEnabled()) {\n \n@@ -132,20 +132,58 @@ protected void calculateOffsets() {\n                     legendRight = legendWidth;\n                 }\n \n+            } else if (mLegend.getPosition() == LegendPosition.LEFT_OF_CHART_CENTER) {\n+\n+                // this is the space between the legend and the chart\n+                float spacing = Utils.convertDpToPixel(13f);\n+\n+                legendLeft = getFullLegendWidth() + spacing;\n+\n+            } else if (mLegend.getPosition() == LegendPosition.LEFT_OF_CHART) {\n+\n+                // this is the space between the legend and the chart\n+                float spacing = Utils.convertDpToPixel(8f);\n+\n+                float legendWidth = getFullLegendWidth() + spacing;\n+\n+                float legendHeight = mLegend.mNeededHeight + mLegend.mTextHeightMax;\n+\n+                PointF c = getCenter();\n+\n+                PointF bottomLeft = new PointF(legendWidth - 15, legendHeight + 15);\n+                float distLegend = distanceToCenter(bottomLeft.x, bottomLeft.y);\n+\n+                PointF reference = getPosition(c, getRadius(),\n+                        getAngleForPoint(bottomLeft.x, bottomLeft.y));\n+\n+                float distReference = distanceToCenter(reference.x, reference.y);\n+                float min = Utils.convertDpToPixel(5f);\n+\n+                if (distLegend < distReference) {\n+\n+                    float diff = distReference - distLegend;\n+                    legendLeft = min + diff;\n+                }\n+\n+                if (bottomLeft.y >= c.y && getHeight() - legendWidth > getWidth()) {\n+                    legendLeft = legendWidth;\n+                }\n+\n             } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n                     || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT\n                     || mLegend.getPosition() == LegendPosition.BELOW_CHART_CENTER) {\n \n                 legendBottom = getRequiredBottomOffset();\n             }\n \n+            legendLeft += getRequiredBaseOffset();\n             legendRight += getRequiredBaseOffset();\n             legendTop += getRequiredBaseOffset();\n         }\n \n         float min = Utils.convertDpToPixel(10f);\n \n-        float offsetLeft = Math.max(min, getRequiredBaseOffset());\n+        float offsetLeft = Math.max(min, legendLeft);\n         float offsetTop = Math.max(min, legendTop);\n         float offsetRight = Math.max(min, legendRight);\n         float offsetBottom = Math.max(min, Math.max(getRequiredBaseOffset(), legendBottom));\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/Legend.java b/MPChartLib/src/com/github/mikephil/charting/components/Legend.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/Legend.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/Legend.java\n@@ -17,7 +17,10 @@\n public class Legend extends ComponentBase {\n \n     public enum LegendPosition {\n-        RIGHT_OF_CHART, RIGHT_OF_CHART_CENTER, RIGHT_OF_CHART_INSIDE, BELOW_CHART_LEFT, BELOW_CHART_RIGHT, BELOW_CHART_CENTER, PIECHART_CENTER\n+        RIGHT_OF_CHART, RIGHT_OF_CHART_CENTER, RIGHT_OF_CHART_INSIDE,\n+        LEFT_OF_CHART, LEFT_OF_CHART_CENTER, LEFT_OF_CHART_INSIDE,\n+        BELOW_CHART_LEFT, BELOW_CHART_RIGHT, BELOW_CHART_CENTER,\n+        PIECHART_CENTER\n     }\n \n     public enum LegendForm {\n@@ -468,6 +471,8 @@ public void calculateDimensions(Paint labelpaint) {\n \n         if (mPosition == LegendPosition.RIGHT_OF_CHART\n                 || mPosition == LegendPosition.RIGHT_OF_CHART_CENTER\n+                || mPosition == LegendPosition.LEFT_OF_CHART\n+                || mPosition == LegendPosition.LEFT_OF_CHART_CENTER\n                 || mPosition == LegendPosition.PIECHART_CENTER) {\n             mNeededWidth = getMaximumEntryWidth(labelpaint);\n             mNeededHeight = getFullHeight(labelpaint);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java\n@@ -361,16 +361,32 @@ else if (wasStacked)\n             case RIGHT_OF_CHART:\n             case RIGHT_OF_CHART_CENTER:\n             case RIGHT_OF_CHART_INSIDE:\n+            case LEFT_OF_CHART:\n+            case LEFT_OF_CHART_CENTER:\n+            case LEFT_OF_CHART_INSIDE:\n+\n+                boolean isRightAligned = mLegend.getPosition() == Legend.LegendPosition.RIGHT_OF_CHART ||\n+                    mLegend.getPosition() == Legend.LegendPosition.RIGHT_OF_CHART_CENTER ||\n+                    mLegend.getPosition() == Legend.LegendPosition.RIGHT_OF_CHART_INSIDE;\n+\n+                if (isRightAligned) {\n+                    posX = mViewPortHandler.getChartWidth() - xoffset;\n+                    if (direction == Legend.LegendDirection.LEFT_TO_RIGHT)\n+                        posX -= mLegend.mTextWidthMax;\n+                } else {\n+                    posX = xoffset;\n+                    if (direction == Legend.LegendDirection.RIGHT_TO_LEFT)\n+                        posX += mLegend.mTextWidthMax;\n+                }\n \n-                posX = mViewPortHandler.getChartWidth() - xoffset;\n-                if (direction == Legend.LegendDirection.LEFT_TO_RIGHT)\n-                    posX -= mLegend.mTextWidthMax;\n-\n-                if (mLegend.getPosition() == Legend.LegendPosition.RIGHT_OF_CHART) {\n+                if (mLegend.getPosition() == Legend.LegendPosition.RIGHT_OF_CHART ||\n+                        mLegend.getPosition() == Legend.LegendPosition.LEFT_OF_CHART) {\n                     posY = mViewPortHandler.contentTop() + yoffset;\n-                } else if (mLegend.getPosition() == Legend.LegendPosition.RIGHT_OF_CHART_CENTER) {\n+                } else if (mLegend.getPosition() == Legend.LegendPosition.RIGHT_OF_CHART_CENTER ||\n+                        mLegend.getPosition() == Legend.LegendPosition.LEFT_OF_CHART_CENTER) {\n                     posY = mViewPortHandler.getChartHeight() / 2f - mLegend.mNeededHeight / 2f;\n-                } else /*if (legend.getPosition() == Legend.LegendPosition.RIGHT_OF_CHART_INSIDE)*/ {\n+                } else /*if (mLegend.getPosition() == Legend.LegendPosition.RIGHT_OF_CHART_INSIDE ||\n+                        mLegend.getPosition() == Legend.LegendPosition.LEFT_OF_CHART_INSIDE)*/ {\n                     posY = mViewPortHandler.contentTop() + yoffset;\n                 }\n ",
    "output": "Support for left-of-chart legends"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/components/Legend.java b/MPChartLib/src/com/github/mikephil/charting/components/Legend.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/Legend.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/Legend.java\n@@ -408,10 +408,14 @@ public float getFullWidth(Paint labelpaint) {\n                 if (mColors[i] != -2)\n                     width += mFormSize + mFormToTextSpace;\n \n-                width += Utils.calcTextWidth(labelpaint, mLabels[i])\n-                        + mXEntrySpace;\n+                width += Utils.calcTextWidth(labelpaint, mLabels[i]);\n+\n+                if (i < mLabels.length - 1)\n+                    width += mXEntrySpace;\n             } else {\n-                width += mFormSize + mStackSpace;\n+                width += mFormSize;\n+                if (i < mLabels.length - 1)\n+                    width += mStackSpace;\n             }\n         }\n \n@@ -433,8 +437,10 @@ public float getFullHeight(Paint labelpaint) {\n             // grouped forms have null labels\n             if (mLabels[i] != null) {\n \n-                height += Utils.calcTextHeight(labelpaint, mLabels[i])\n-                        + mYEntrySpace;\n+                height += Utils.calcTextHeight(labelpaint, mLabels[i]);\n+\n+                if (i < mLabels.length - 1)\n+                    height += mYEntrySpace;\n             }\n         }\n ",
    "output": "Do not add extra spacing after last legend element\n\nThis affected mainly RTL legend, but occasionally cause more spacing than the xOffset set for the legend even for LTR."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java\n@@ -120,6 +120,11 @@ public boolean onSingleTapUp(MotionEvent e) {\n         } else {\n \n             float angle = mChart.getAngleForPoint(e.getX(), e.getY());\n+            \n+            if (mChart instanceof PieChart) {\n+                angle /= mChart.getAnimator().getPhaseY();\n+            }\n+            \n             int index = mChart.getIndexForAngle(angle);\n \n             // check if the index could be found\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -348,7 +348,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n             // redefine the rect that contains the arc so that the\n             // highlighted pie is not cut off\n-            mBitmapCanvas.drawArc(highlighted, angle + set.getSliceSpace() / 2f, sliceDegrees\n+            mBitmapCanvas.drawArc(highlighted, angle + set.getSliceSpace() / 2f, sliceDegrees * mAnimator.getPhaseY()\n                     - set.getSliceSpace() / 2f, true, mRenderPaint);\n         }\n     }",
    "output": "Merge pull request #457 from danielgindi/master\n\nFix PieChart bugs considering phaseY"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -189,6 +189,8 @@ public void onAnimationUpdate(ValueAnimator animation) {\n \n         mViewPortHandler = new ViewPortHandler();\n \n+        mLegend = new Legend();\n+\n         mLegendRenderer = new LegendRenderer(mViewPortHandler);\n \n         mRenderPaint = new Paint(Paint.ANTI_ALIAS_FLAG);",
    "output": "Merge pull request #463 from danielgindi/legend-convenience\n\nAllow configuring the legend before setting data"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -229,7 +229,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n         tvX.setText(\"\" + (mSeekBarX.getProgress() + 1));\n         tvY.setText(\"\" + (mSeekBarY.getProgress()));\n \n-        setData(mSeekBarX.getProgress(), mSeekBarY.getProgress());\n+        setData(mSeekBarX.getProgress() + 1, mSeekBarY.getProgress());\n         mChart.invalidate();\n     }\n \n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n@@ -188,7 +188,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n         tvY.setText(\"\" + (mSeekBarY.getProgress()));\n \n         ArrayList<String> xVals = new ArrayList<String>();\n-        for (int i = 0; i < mSeekBarX.getProgress(); i++) {\n+        for (int i = 0; i < mSeekBarX.getProgress() + 1; i++) {\n             xVals.add((i + 1990) + \"\");\n         }\n \n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n@@ -224,7 +224,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n         tvX.setText(\"\" + (mSeekBarX.getProgress() + 1));\n         tvY.setText(\"\" + (mSeekBarY.getProgress()));\n \n-        setData(mSeekBarX.getProgress(), mSeekBarY.getProgress());\n+        setData(mSeekBarX.getProgress() + 1, mSeekBarY.getProgress());\n         mChart.invalidate();\n     }\n \n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java\n@@ -183,7 +183,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n         tvY.setText(\"\" + (mSeekBarY.getProgress()));\n \n         ArrayList<String> xVals = new ArrayList<String>();\n-        for (int i = 0; i < mSeekBarX.getProgress(); i++) {\n+        for (int i = 0; i < mSeekBarX.getProgress() + 1; i++) {\n             xVals.add((i) + \"\");\n         }\n ",
    "output": "Merge pull request #460 from danielgindi/element-count-bugs\n\nElement count bugs"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -322,9 +322,16 @@ public String toSimpleString() {\n         return buffer.toString();\n     }\n \n+    /**\n+     * Sets the label string that describes the DataSet.\n+     *\n+     * @return\n+     */\n+    public void setLabel(String label) { mLabel = label; }\n+\n     /**\n      * Returns the label string that describes the DataSet.\n-     * \n+     *\n      * @return\n      */\n     public String getLabel() {",
    "output": "Merge pull request #468 from danielgindi/set-dataset-label\n\nAllow setting the label for legend"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -322,9 +322,16 @@ public String toSimpleString() {\n         return buffer.toString();\n     }\n \n+    /**\n+     * Sets the label string that describes the DataSet.\n+     *\n+     * @return\n+     */\n+    public void setLabel(String label) { mLabel = label; }\n+\n     /**\n      * Returns the label string that describes the DataSet.\n-     * \n+     *\n      * @return\n      */\n     public String getLabel() {",
    "output": "Allow setting the label for legend"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -189,6 +189,8 @@ public void onAnimationUpdate(ValueAnimator animation) {\n \n         mViewPortHandler = new ViewPortHandler();\n \n+        mLegend = new Legend();\n+\n         mLegendRenderer = new LegendRenderer(mViewPortHandler);\n \n         mRenderPaint = new Paint(Paint.ANTI_ALIAS_FLAG);",
    "output": "Allow configuring the legend before setting data\n\nThis will allow a proper flow of code- configuring and then setting data and rendering"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n@@ -188,7 +188,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n         tvY.setText(\"\" + (mSeekBarY.getProgress()));\n \n         ArrayList<String> xVals = new ArrayList<String>();\n-        for (int i = 0; i < mSeekBarX.getProgress(); i++) {\n+        for (int i = 0; i < mSeekBarX.getProgress() + 1; i++) {\n             xVals.add((i + 1990) + \"\");\n         }\n ",
    "output": "Missing one xAxis entry"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n@@ -224,7 +224,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n         tvX.setText(\"\" + (mSeekBarX.getProgress() + 1));\n         tvY.setText(\"\" + (mSeekBarY.getProgress()));\n \n-        setData(mSeekBarX.getProgress(), mSeekBarY.getProgress());\n+        setData(mSeekBarX.getProgress() + 1, mSeekBarY.getProgress());\n         mChart.invalidate();\n     }\n ",
    "output": "Missing one xAxis entry"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -229,7 +229,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n         tvX.setText(\"\" + (mSeekBarX.getProgress() + 1));\n         tvY.setText(\"\" + (mSeekBarY.getProgress()));\n \n-        setData(mSeekBarX.getProgress(), mSeekBarY.getProgress());\n+        setData(mSeekBarX.getProgress() + 1, mSeekBarY.getProgress());\n         mChart.invalidate();\n     }\n ",
    "output": "Missing one xAxis entry"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java\n@@ -183,7 +183,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n         tvY.setText(\"\" + (mSeekBarY.getProgress()));\n \n         ArrayList<String> xVals = new ArrayList<String>();\n-        for (int i = 0; i < mSeekBarX.getProgress(); i++) {\n+        for (int i = 0; i < mSeekBarX.getProgress() + 1; i++) {\n             xVals.add((i) + \"\");\n         }\n ",
    "output": "Missing one xAxis entry"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java\n@@ -120,6 +120,11 @@ public boolean onSingleTapUp(MotionEvent e) {\n         } else {\n \n             float angle = mChart.getAngleForPoint(e.getX(), e.getY());\n+            \n+            if (mChart instanceof PieChart) {\n+                angle /= mChart.getAnimator().getPhaseY();\n+            }\n+            \n             int index = mChart.getIndexForAngle(angle);\n \n             // check if the index could be found",
    "output": "Consider anim phase on pie taps for highlights\n\nTo fix a case where tapping a slice during Y axis animation highlights the wrong slice"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -348,7 +348,7 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n \n             // redefine the rect that contains the arc so that the\n             // highlighted pie is not cut off\n-            mBitmapCanvas.drawArc(highlighted, angle + set.getSliceSpace() / 2f, sliceDegrees\n+            mBitmapCanvas.drawArc(highlighted, angle + set.getSliceSpace() / 2f, sliceDegrees * mAnimator.getPhaseY()\n                     - set.getSliceSpace() / 2f, true, mRenderPaint);\n         }\n     }",
    "output": "Consider anim phase when drawing pie highlights"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -378,6 +378,7 @@ public void onChartFling(MotionEvent me1, MotionEvent me2, float velocityX, floa\n     @Override\n     public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {\n         Log.i(\"Entry selected\", e.toString());\n+        Log.i(\"\", \"low: \" + mChart.getLowestVisibleXIndex() + \", high: \" + mChart.getHighestVisibleXIndex());\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -190,7 +190,7 @@ protected void onDraw(Canvas canvas) {\n             mAxisRendererLeft.computeAxis(mAxisLeft.mAxisMinimum, mAxisLeft.mAxisMaximum);\n         if (mAxisRight.isEnabled())\n             mAxisRendererRight.computeAxis(mAxisRight.mAxisMinimum, mAxisRight.mAxisMaximum);\n-        \n+\n         mXAxisRenderer.renderAxisLine(canvas);\n         mAxisRendererLeft.renderAxisLine(canvas);\n         mAxisRendererRight.renderAxisLine(canvas);\n@@ -1064,6 +1064,34 @@ public BarLineScatterCandleDataSet<? extends Entry> getDataSetByTouchPoint(float\n         return null;\n     }\n \n+    /**\n+     * Returns the lowest x-index (value on the x-axis) that is still visible on\n+     * the chart.\n+     * \n+     * @return\n+     */\n+    public int getLowestVisibleXIndex() {\n+        float[] pts = new float[] {\n+                mViewPortHandler.contentLeft(), mViewPortHandler.contentBottom()\n+        };\n+        getTransformer(AxisDependency.LEFT).pixelsToValue(pts);\n+        return (pts[0] <= 0) ? 0 : (int) (pts[0] + 1);\n+    }\n+\n+    /**\n+     * Returns the highest x-index (value on the x-axis) that is still visible\n+     * on the chart.\n+     * \n+     * @return\n+     */\n+    public int getHighestVisibleXIndex() {\n+        float[] pts = new float[] {\n+                mViewPortHandler.contentRight(), mViewPortHandler.contentBottom()\n+        };\n+        getTransformer(AxisDependency.LEFT).pixelsToValue(pts);\n+        return (pts[0] >= mData.getXValCount()) ? mData.getXValCount() - 1 : (int) pts[0];\n+    }\n+\n     /**\n      * returns the current x-scale factor\n      */",
    "output": "Added methods for getting highest and lowest visible x-index."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -402,9 +402,12 @@ protected void onDraw(Canvas canvas) {\n      */\n     protected void drawDescription(Canvas c) {\n \n-        c.drawText(mDescription, getWidth() - mViewPortHandler.offsetRight() - 10,\n-                getHeight() - mViewPortHandler.offsetBottom()\n-                        - 10, mDescPaint);\n+        if (!mDescription.equals(\"\")) {\n+\n+            c.drawText(mDescription, getWidth() - mViewPortHandler.offsetRight() - 10,\n+                    getHeight() - mViewPortHandler.offsetBottom()\n+                            - 10, mDescPaint);\n+        }\n     }\n \n     /**",
    "output": "Minor bugfix."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n@@ -39,10 +39,10 @@ public class BarChart extends BarLineChartBase<BarData> implements BarDataProvid\n     private boolean mDrawValuesForWholeStack = true;\n \n     /**\n-     * if set to true, a grey area is darawn behind each bar that indicates the\n+     * if set to true, a grey area is drawn behind each bar that indicates the\n      * maximum value\n      */\n-    protected boolean mDrawBarShadow = true;\n+    private boolean mDrawBarShadow = false;\n \n     public BarChart(Context context) {\n         super(context);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n@@ -44,10 +44,10 @@ public class CombinedChart extends BarLineChartBase<CombinedData> implements Lin\n     private boolean mDrawValuesForWholeStack = true;\n \n     /**\n-     * if set to true, a grey area is darawn behind each bar that indicates the\n+     * if set to true, a grey area is drawn behind each bar that indicates the\n      * maximum value\n      */\n-    private boolean mDrawBarShadow = true;\n+    private boolean mDrawBarShadow = false;\n \n     protected DrawOrder[] mDrawOrder = new DrawOrder[] {\n             DrawOrder.BAR, DrawOrder.LINE, DrawOrder.CANDLE, DrawOrder.SCATTER",
    "output": "Merge pull request #454 from Maragues/drawBarShadow-default\n\nChange drawBarShadow default value to false."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n@@ -39,10 +39,10 @@ public class BarChart extends BarLineChartBase<BarData> implements BarDataProvid\n     private boolean mDrawValuesForWholeStack = true;\n \n     /**\n-     * if set to true, a grey area is darawn behind each bar that indicates the\n+     * if set to true, a grey area is drawn behind each bar that indicates the\n      * maximum value\n      */\n-    protected boolean mDrawBarShadow = true;\n+    private boolean mDrawBarShadow = false;\n \n     public BarChart(Context context) {\n         super(context);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java\n@@ -44,10 +44,10 @@ public class CombinedChart extends BarLineChartBase<CombinedData> implements Lin\n     private boolean mDrawValuesForWholeStack = true;\n \n     /**\n-     * if set to true, a grey area is darawn behind each bar that indicates the\n+     * if set to true, a grey area is drawn behind each bar that indicates the\n      * maximum value\n      */\n-    private boolean mDrawBarShadow = true;\n+    private boolean mDrawBarShadow = false;\n \n     protected DrawOrder[] mDrawOrder = new DrawOrder[] {\n             DrawOrder.BAR, DrawOrder.LINE, DrawOrder.CANDLE, DrawOrder.SCATTER",
    "output": "drawBarShadow is false by default. Set variable accessor in BarChart to private"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -9,7 +9,6 @@\n import android.util.Log;\n import android.view.Menu;\n import android.view.MenuItem;\n-import android.view.View;\n import android.view.WindowManager;\n import android.widget.SeekBar;\n import android.widget.SeekBar.OnSeekBarChangeListener;\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n@@ -319,8 +319,8 @@ private void setData(int count, float range) {\n         set2.setHighLightColor(Color.rgb(244, 117, 117));\n \n         ArrayList<LineDataSet> dataSets = new ArrayList<LineDataSet>();\n-        dataSets.add(set1);\n-        dataSets.add(set2); // add the datasets\n+        dataSets.add(set2);\n+        dataSets.add(set1); // add the datasets\n \n         // create a data object with the datasets\n         LineData data = new LineData(xVals, dataSets);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java b/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java\n@@ -3,7 +3,6 @@\n \n import com.github.mikephil.charting.data.BarEntry;\n \n-import java.util.ArrayList;\n import java.util.List;\n \n public class BarBuffer extends AbstractBuffer<BarEntry> {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/buffer/CandleBodyBuffer.java b/MPChartLib/src/com/github/mikephil/charting/buffer/CandleBodyBuffer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/buffer/CandleBodyBuffer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/buffer/CandleBodyBuffer.java\n@@ -3,7 +3,6 @@\n \n import com.github.mikephil.charting.data.CandleEntry;\n \n-import java.util.ArrayList;\n import java.util.List;\n \n public class CandleBodyBuffer extends AbstractBuffer<CandleEntry> {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/buffer/CandleShadowBuffer.java b/MPChartLib/src/com/github/mikephil/charting/buffer/CandleShadowBuffer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/buffer/CandleShadowBuffer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/buffer/CandleShadowBuffer.java\n@@ -3,7 +3,6 @@\n \n import com.github.mikephil.charting.data.CandleEntry;\n \n-import java.util.ArrayList;\n import java.util.List;\n \n public class CandleShadowBuffer extends AbstractBuffer<CandleEntry> {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/buffer/CircleBuffer.java b/MPChartLib/src/com/github/mikephil/charting/buffer/CircleBuffer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/buffer/CircleBuffer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/buffer/CircleBuffer.java\n@@ -3,7 +3,6 @@\n \n import com.github.mikephil.charting.data.Entry;\n \n-import java.util.ArrayList;\n import java.util.List;\n \n public class CircleBuffer extends AbstractBuffer<Entry> {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java b/MPChartLib/src/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java\n@@ -3,7 +3,6 @@\n \n import com.github.mikephil.charting.data.BarEntry;\n \n-import java.util.ArrayList;\n import java.util.List;\n \n public class HorizontalBarBuffer extends BarBuffer {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/buffer/ScatterBuffer.java b/MPChartLib/src/com/github/mikephil/charting/buffer/ScatterBuffer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/buffer/ScatterBuffer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/buffer/ScatterBuffer.java\n@@ -3,7 +3,6 @@\n \n import com.github.mikephil.charting.data.Entry;\n \n-import java.util.ArrayList;\n import java.util.List;\n \n public class ScatterBuffer extends AbstractBuffer<Entry> {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -11,7 +11,6 @@\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n-import java.util.List;\n \n /**\n  * Class that holds all relevant data that represents the chart. That involves\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -18,7 +18,6 @@\n import com.github.mikephil.charting.utils.Transformer;\n import com.github.mikephil.charting.utils.ViewPortHandler;\n \n-import java.util.ArrayList;\n import java.util.List;\n \n public class LineChartRenderer extends DataRenderer {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n@@ -2,20 +2,19 @@\n package com.github.mikephil.charting.renderer;\n \n import android.graphics.Canvas;\n-import android.graphics.Path;\n import android.graphics.Paint.Align;\n+import android.graphics.Path;\n \n import com.github.mikephil.charting.components.LimitLine;\n-import com.github.mikephil.charting.components.YAxis;\n import com.github.mikephil.charting.components.LimitLine.LimitLabelPosition;\n+import com.github.mikephil.charting.components.YAxis;\n import com.github.mikephil.charting.components.YAxis.AxisDependency;\n import com.github.mikephil.charting.components.YAxis.YAxisLabelPosition;\n import com.github.mikephil.charting.utils.PointD;\n import com.github.mikephil.charting.utils.Transformer;\n import com.github.mikephil.charting.utils.Utils;\n import com.github.mikephil.charting.utils.ViewPortHandler;\n \n-import java.util.ArrayList;\n import java.util.List;\n \n public class YAxisRendererHorizontalBarChart extends YAxisRenderer {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n@@ -12,7 +12,6 @@\n \n import java.text.DecimalFormat;\n import java.util.List;\n-import java.util.List;\n \n /**\n  * Utilities class that has some helper methods. Needs to be initialized by",
    "output": "Code cleanup."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -232,7 +232,7 @@ protected void onDraw(Canvas canvas) {\n \n         // canvas.drawBitmap(mDrawBitmap, 0, 0, mDrawPaint);\n \n-        if (mLogEnabled) {\n+        if (true) {\n             long drawtime = (System.currentTimeMillis() - starttime);\n             totalTime += drawtime;\n             drawCycles += 1;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -360,7 +360,7 @@ protected void drawLinearFill(Canvas c, LineDataSet dataSet, ArrayList<Entry> en\n \n         trans.pathValueToPixel(filled);\n \n-        c.drawPath(filled, mRenderPaint);\n+        mBitmapCanvas.drawPath(filled, mRenderPaint);\n \n         // restore alpha\n         mRenderPaint.setAlpha(255);",
    "output": "Minor changes in line-renderer."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/BarChartFrag.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/BarChartFrag.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/BarChartFrag.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/BarChartFrag.java\n@@ -33,6 +33,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa\n         // create a new chart object\n         mChart = new BarChart(getActivity());\n         mChart.setDescription(\"\");\n+        mChart.setOnChartGestureListener(this);\n         \n         MyMarkerView mv = new MyMarkerView(getActivity(), R.layout.custom_marker_view);\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -472,19 +472,20 @@ public void onLongPress(MotionEvent e) {\n     @Override\n     public boolean onSingleTapUp(MotionEvent e) {\n \n-        OnChartGestureListener l = mChart.getOnChartGestureListener();\n-\n-        if (l != null) {\n-            l.onChartSingleTapped(e);\n-        }\n-\n         performHighlight(e);\n \n         return super.onSingleTapUp(e);\n     }\n \n     @Override\n     public boolean onSingleTapConfirmed(MotionEvent e) {\n+        \n+        OnChartGestureListener l = mChart.getOnChartGestureListener();\n+\n+        if (l != null) {\n+            l.onChartSingleTapped(e);\n+        }\n+        \n         return super.onSingleTapConfirmed(e);\n     }\n ",
    "output": "Fixed issue concerning gestures."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n@@ -2,20 +2,27 @@\n package com.github.mikephil.charting.renderer;\n \n import android.graphics.Canvas;\n+import android.graphics.Path;\n import android.graphics.Paint.Align;\n \n+import com.github.mikephil.charting.components.LimitLine;\n import com.github.mikephil.charting.components.YAxis;\n+import com.github.mikephil.charting.components.LimitLine.LimitLabelPosition;\n import com.github.mikephil.charting.components.YAxis.AxisDependency;\n import com.github.mikephil.charting.components.YAxis.YAxisLabelPosition;\n import com.github.mikephil.charting.utils.PointD;\n import com.github.mikephil.charting.utils.Transformer;\n import com.github.mikephil.charting.utils.Utils;\n \n+import java.util.ArrayList;\n+\n public class YAxisRendererHorizontalBarChart extends YAxisRenderer {\n \n     public YAxisRendererHorizontalBarChart(ViewPortHandler viewPortHandler, YAxis yAxis,\n             Transformer trans) {\n         super(viewPortHandler, yAxis, trans);\n+        \n+        mLimitLinePaint.setTextAlign(Align.LEFT);\n     }\n \n     /**\n@@ -174,4 +181,67 @@ public void renderGridLines(Canvas c) {\n                     mGridPaint);\n         }\n     }\n+    \n+    /**\n+     * Draws the LimitLines associated with this axis to the screen.\n+     * \n+     * @param c\n+     */\n+    @Override\n+    public void renderLimitLines(Canvas c) {\n+\n+        ArrayList<LimitLine> limitLines = mYAxis.getLimitLines();\n+\n+        if (limitLines == null || limitLines.size() <= 0)\n+            return;\n+\n+        float[] pts = new float[4];\n+        Path limitLinePath = new Path();\n+               \n+        for (int i = 0; i < limitLines.size(); i++) {\n+\n+            LimitLine l = limitLines.get(i);\n+            \n+            pts[0] = l.getLimit();\n+            pts[2] = l.getLimit();\n+\n+            mTrans.pointValuesToPixel(pts);\n+\n+            pts[1] = mViewPortHandler.contentTop();\n+            pts[3] = mViewPortHandler.contentBottom();\n+            \n+            limitLinePath.moveTo(pts[0], pts[1]);\n+            limitLinePath.lineTo(pts[2], pts[3]);\n+\n+            mLimitLinePaint.setColor(l.getLineColor());\n+            mLimitLinePaint.setPathEffect(l.getDashPathEffect());\n+            mLimitLinePaint.setStrokeWidth(l.getLineWidth());\n+\n+            c.drawPath(limitLinePath, mLimitLinePaint);\n+            limitLinePath.reset();\n+\n+            String label = l.getLabel();\n+\n+            // if drawing the limit-value label is enabled\n+            if (label != null && !label.equals(\"\")) {\n+\n+                float xOffset = l.getLineWidth();\n+                float add = Utils.convertDpToPixel(4f);\n+\n+                mLimitLinePaint.setPathEffect(null);\n+                mLimitLinePaint.setColor(l.getTextColor());\n+                mLimitLinePaint.setStrokeWidth(0.5f);\n+                mLimitLinePaint.setTextSize(l.getTextSize());\n+                \n+                float yOffset = Utils.calcTextHeight(mLimitLinePaint, label) + add / 2f;\n+\n+                if (l.getLabelPosition() == LimitLabelPosition.POS_RIGHT) {\n+                    c.drawText(label, pts[0] + xOffset, mViewPortHandler.contentBottom() - add, mLimitLinePaint);\n+\n+                } else {\n+                    c.drawText(label, pts[0] + xOffset, mViewPortHandler.contentTop() + yOffset, mLimitLinePaint);\n+                }\n+            }\n+        }\n+    }\n }",
    "output": "Fixed LimitLine issue in HorizontalBarChart (issue #439)."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n@@ -48,7 +48,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         \n         // draw bars behind lines\n         mChart.setDrawOrder(new DrawOrder[] {\n-                DrawOrder.BAR, DrawOrder.LINE, DrawOrder.CANDLE\n+                DrawOrder.BAR, DrawOrder.LINE\n         });\n \n         YAxis rightAxis = mChart.getAxisRight();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -89,6 +89,8 @@ public void drawData(Canvas c) {\n         }\n \n         c.drawBitmap(mPathBitmap, 0, 0, mRenderPaint);\n+\n+        drawCircles(c);\n     }\n \n     protected void drawDataSet(Canvas c, LineDataSet dataSet) {\n@@ -269,11 +271,11 @@ protected void drawLinear(Canvas c, LineDataSet dataSet, ArrayList<Entry> entrie\n         float phaseY = mAnimator.getPhaseY();\n \n         mRenderPaint.setStyle(Paint.Style.STROKE);\n-        \n+\n         Canvas canvas = null;\n-        \n+\n         // if the data-set is dashed, draw on bitmap-canvas\n-        if(dataSet.isDashedLineEnabled()) {\n+        if (dataSet.isDashedLineEnabled()) {\n             canvas = mBitmapCanvas;\n         } else {\n             canvas = c;\n@@ -324,7 +326,8 @@ protected void drawLinear(Canvas c, LineDataSet dataSet, ArrayList<Entry> entrie\n             mRenderPaint.setColor(dataSet.getColor());\n \n             // c.drawLines(buffer.buffer, mRenderPaint);\n-            canvas.drawLines(buffer.buffer, from, to >= buffer.size() ? buffer.size() - from : range,\n+            canvas.drawLines(buffer.buffer, from, to >= buffer.size() ? buffer.size() - from\n+                    : range,\n                     mRenderPaint);\n         }\n \n@@ -450,11 +453,11 @@ public void drawValues(Canvas c) {\n \n     @Override\n     public void drawExtras(Canvas c) {\n-        drawCircles(c);\n+\n     }\n \n     protected void drawCircles(Canvas c) {\n-        \n+\n         mRenderPaint.setStyle(Paint.Style.FILL);\n \n         float phaseX = mAnimator.getPhaseX();\n@@ -468,7 +471,7 @@ protected void drawCircles(Canvas c) {\n \n             if (!dataSet.isVisible() || !dataSet.isDrawCirclesEnabled())\n                 continue;\n-            \n+\n             mCirclePaintInner.setColor(dataSet.getCircleHoleColor());\n \n             Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n@@ -483,7 +486,7 @@ protected void drawCircles(Canvas c) {\n             float halfsize = dataSet.getCircleSize() / 2f;\n \n             for (int j = 0; j < buffer.size(); j += 2) {\n-                \n+\n                 float x = buffer.buffer[j];\n                 float y = buffer.buffer[j + 1];\n \n@@ -494,13 +497,16 @@ protected void drawCircles(Canvas c) {\n                 // bounds\n                 if (!mViewPortHandler.isInBoundsLeft(x) || !mViewPortHandler.isInBoundsY(y))\n                     continue;\n-                \n-                mRenderPaint.setColor(dataSet.getCircleColor(j / 2));\n+\n+                int circleColor = dataSet.getCircleColor(j / 2);\n+\n+                mRenderPaint.setColor(circleColor);\n \n                 c.drawCircle(x, y, dataSet.getCircleSize(),\n                         mRenderPaint);\n \n-                if (dataSet.isDrawCircleHoleEnabled())\n+                if (dataSet.isDrawCircleHoleEnabled()\n+                        && circleColor != mCirclePaintInner.getColor())\n                     c.drawCircle(x, y,\n                             halfsize,\n                             mCirclePaintInner);",
    "output": "Minor bugfix."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n@@ -111,7 +111,7 @@ private BarData generateBarData() {\n         return d;\n     }\n \n-    private ScatterData generateScatterData() {\n+    protected ScatterData generateScatterData() {\n \n         ScatterData d = new ScatterData();\n \n@@ -130,7 +130,7 @@ private ScatterData generateScatterData() {\n         return d;\n     }\n \n-    private CandleData generateCandleData() {\n+    protected CandleData generateCandleData() {\n \n         CandleData d = new CandleData();\n \n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DrawChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DrawChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DrawChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DrawChartActivity.java\n@@ -180,7 +180,7 @@ public void onEntryAdded(Entry entry) {\n \n     /** callback when a DataSet has been drawn (when lifting the finger) */\n     @Override\n-    public void onDrawFinished(DataSet dataSet) {\n+    public void onDrawFinished(DataSet<?> dataSet) {\n         Log.i(Chart.LOG_TAG, \"DataSet drawn. \" + dataSet.toSimpleString());\n \n         // prepare the legend again\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n@@ -20,7 +20,6 @@\n import com.github.mikephil.charting.components.Legend.LegendPosition;\n import com.github.mikephil.charting.components.XAxis;\n import com.github.mikephil.charting.components.XAxis.XAxisPosition;\n-import com.github.mikephil.charting.components.YAxis.YAxisLabelPosition;\n import com.github.mikephil.charting.components.YAxis;\n import com.github.mikephil.charting.data.BarData;\n import com.github.mikephil.charting.data.BarDataSet;\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java\n@@ -57,6 +57,7 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         mChart = (LineChart) findViewById(R.id.chart1);\n         mChart.setOnChartValueSelectedListener(this);\n+        mChart.setDrawGridBackground(false);\n         \n         // no description text\n         mChart.setDescription(\"\");\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java\n@@ -9,8 +9,6 @@\n import com.github.mikephil.charting.charts.LineChart;\n import com.github.mikephil.charting.components.Legend;\n import com.github.mikephil.charting.components.Legend.LegendForm;\n-import com.github.mikephil.charting.components.XAxis;\n-import com.github.mikephil.charting.components.YAxis;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.LineData;\n import com.github.mikephil.charting.data.LineDataSet;",
    "output": "Example cleanup."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/Renderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/Renderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/Renderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/Renderer.java\n@@ -1,8 +1,6 @@\n \n package com.github.mikephil.charting.renderer;\n \n-import android.util.Log;\n-\n import com.github.mikephil.charting.utils.Transformer;\n \n /**",
    "output": "Merged readme."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java\n@@ -8,6 +8,7 @@\n import android.view.Menu;\n import android.view.MenuItem;\n import android.view.WindowManager;\n+import android.widget.Toast;\n \n import com.github.mikephil.charting.charts.LineChart;\n import com.github.mikephil.charting.components.Legend;\n@@ -61,7 +62,7 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         LineData data = new LineData();\n         data.setValueTextColor(Color.WHITE);\n-        \n+\n         // add empty data\n         mChart.setData(data);\n \n@@ -87,7 +88,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         leftAxis.setTextColor(Color.WHITE);\n         leftAxis.setAxisMaxValue(120f);\n         leftAxis.setDrawGridLines(true);\n-        \n+\n         YAxis rightAxis = mChart.getAxisRight();\n         rightAxis.setEnabled(false);\n     }\n@@ -106,12 +107,17 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 addEntry();\n                 break;\n             }\n+            case R.id.actionClear: {\n+                mChart.clearValues();\n+                Toast.makeText(this, \"Chart cleared!\", Toast.LENGTH_SHORT).show();\n+                break;\n+            }\n         }\n         return true;\n     }\n \n     private int year = 15;\n-    \n+\n     private void addEntry() {\n \n         LineData data = mChart.getData();\n@@ -127,24 +133,26 @@ private void addEntry() {\n             }\n \n             // add a new x-value first\n-            data.addXValue(mMonths[data.getXValCount() % 12] + \" \" + (year + data.getXValCount() / 12));\n+            data.addXValue(mMonths[data.getXValCount() % 12] + \" \"\n+                    + (year + data.getXValCount() / 12));\n             data.addEntry(new Entry((float) (Math.random() * 40) + 40f, set.getEntryCount()), 0);\n \n             // let the chart know it's data has changed\n             mChart.notifyDataSetChanged();\n \n             // limit the number of visible entries\n-             mChart.setVisibleXRange(6);\n+            mChart.setVisibleXRange(6);\n             // mChart.setVisibleYRange(30, AxisDependency.LEFT);\n-            \n-             // move to the latest entry\n-             mChart.moveViewToX(data.getXValCount()-7);\n-             \n-             // this automatically refreshes the chart (calls invalidate())\n-//             mChart.moveViewTo(data.getXValCount()-7, 55f, AxisDependency.LEFT);\n+\n+            // move to the latest entry\n+            mChart.moveViewToX(data.getXValCount() - 7);\n+\n+            // this automatically refreshes the chart (calls invalidate())\n+            // mChart.moveViewTo(data.getXValCount()-7, 55f,\n+            // AxisDependency.LEFT);\n \n             // redraw the chart\n-//            mChart.invalidate();\n+            // mChart.invalidate();\n         }\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -278,15 +278,24 @@ public void setData(T data) {\n     }\n \n     /**\n-     * Clears the chart from all data and refreshes it (by calling\n-     * invalidate()).\n+     * Clears the chart from all data (sets it to null) and refreshes it (by\n+     * calling invalidate()).\n      */\n     public void clear() {\n         mData = null;\n         mDataNotSet = true;\n         invalidate();\n     }\n \n+    /**\n+     * Removes all DataSets (and thereby Entries) from the chart. Does not\n+     * remove the x-values.\n+     */\n+    public void clearValues() {\n+        mData.clearValues();\n+        invalidate();\n+    }\n+\n     /**\n      * Returns true if the chart is empty (meaning it's data object is either\n      * null or contains no entries).\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -879,4 +879,12 @@ public void setDrawValues(boolean enabled) {\n             set.setDrawValues(enabled);\n         }\n     }\n+\n+    /**\n+     * Clears this data object from all DataSets and removes all Entries.\n+     */\n+    public void clearValues() {\n+        mDataSets.clear();\n+        notifyDataChanged();\n+    }\n }",
    "output": "Introducing the clearValues() method that only removes entries but not x-values."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -342,6 +342,7 @@ private void setData(int count, float range) {\n         ll2.setTextSize(10f);\n \n         YAxis leftAxis = mChart.getAxisLeft();\n+        leftAxis.removeAllLimitLines(); // reset all limit lines to avoid overlapping lines\n         leftAxis.addLimitLine(ll1);\n         leftAxis.addLimitLine(ll2);\n         leftAxis.setAxisMaxValue(220f);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -223,7 +223,7 @@ protected void onDraw(Canvas canvas) {\n \n         // canvas.drawBitmap(mDrawBitmap, 0, 0, mDrawPaint);\n \n-        if (true) {\n+        if (mLogEnabled) {\n             long drawtime = (System.currentTimeMillis() - starttime);\n             totalTime += drawtime;\n             drawCycles += 1;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n@@ -2,6 +2,7 @@\n package com.github.mikephil.charting.components;\n \n import android.graphics.Paint;\n+import android.util.Log;\n \n import com.github.mikephil.charting.utils.DefaultValueFormatter;\n import com.github.mikephil.charting.utils.Utils;\n@@ -95,6 +96,12 @@ public enum AxisDependency {\n         LEFT, RIGHT\n     }\n \n+    public YAxis() {\n+        super();\n+        this.mAxisDependency = AxisDependency.LEFT;\n+        this.mLimitLines = new ArrayList<LimitLine>();\n+    }\n+\n     public YAxis(AxisDependency position) {\n         super();\n         this.mAxisDependency = position;\n@@ -230,6 +237,11 @@ public boolean isStartAtZeroEnabled() {\n      */\n     public void addLimitLine(LimitLine l) {\n         mLimitLines.add(l);\n+\n+        if (mLimitLines.size() > 6) {\n+            Log.e(\"MPAndroiChart\",\n+                    \"Warning! You have more than 6 LimitLines on your axis, do you really want that?\");\n+        }\n     }\n \n     /**\n@@ -245,7 +257,7 @@ public void removeLimitLine(LimitLine l) {\n      * Removes all LimitLines from the axis.\n      */\n     public void removeAllLimitLines() {\n-        mLimitLines = new ArrayList<LimitLine>();\n+        mLimitLines.clear();\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -5,6 +5,7 @@\n import android.graphics.Color;\n import android.graphics.Paint;\n import android.graphics.Paint.Align;\n+import android.graphics.Path;\n \n import com.github.mikephil.charting.components.LimitLine;\n import com.github.mikephil.charting.components.LimitLine.LimitLabelPosition;\n@@ -272,24 +273,30 @@ public void renderLimitLines(Canvas c) {\n             return;\n \n         float[] pts = new float[4];\n-\n+        Path limitLinePath = new Path();\n+               \n         for (int i = 0; i < limitLines.size(); i++) {\n \n             LimitLine l = limitLines.get(i);\n-\n+            \n             pts[1] = l.getLimit();\n             pts[3] = l.getLimit();\n \n             mTrans.pointValuesToPixel(pts);\n \n             pts[0] = mViewPortHandler.contentLeft();\n             pts[2] = mViewPortHandler.contentRight();\n+            \n+            limitLinePath.moveTo(pts[0], pts[1]);\n+            limitLinePath.lineTo(pts[2], pts[3]);\n \n             mLimitLinePaint.setColor(l.getLineColor());\n             mLimitLinePaint.setPathEffect(l.getDashPathEffect());\n             mLimitLinePaint.setStrokeWidth(l.getLineWidth());\n \n-            c.drawLines(pts, mLimitLinePaint);\n+            c.drawPath(limitLinePath, mLimitLinePaint);\n+            limitLinePath.reset();\n+//            c.drawLines(pts, mLimitLinePaint);\n \n             String label = l.getLabel();\n ",
    "output": "More bugfixes."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n@@ -260,7 +260,7 @@ private void setData(int count, float range) {\n \n         ArrayList<Entry> vals1 = new ArrayList<Entry>();\n \n-        for (int i = 5; i < count / 2; i+=2) {\n+        for (int i = 0; i < count; i++) {\n             float mult = (range + 1);\n             float val = (float) (Math.random() * mult) + 20;// + (float)\n                                                            // ((mult *\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/buffer/LineBuffer.java b/MPChartLib/src/com/github/mikephil/charting/buffer/LineBuffer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/buffer/LineBuffer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/buffer/LineBuffer.java\n@@ -18,7 +18,7 @@ public void moveTo(float x, float y) {\n \n         buffer[index++] = x;\n         buffer[index++] = y;\n-        \n+\n         // in case just one entry, this is overwritten when lineTo is called\n         buffer[index] = x;\n         buffer[index + 1] = y;\n@@ -42,16 +42,17 @@ public void lineTo(float x, float y) {\n \n     @Override\n     public void feed(ArrayList<Entry> entries) {\n+\n         moveTo(entries.get(0).getXIndex(), entries.get(0).getVal());\n-        \n+\n         float size = entries.size() * phaseX;\n \n         for (int i = 1; i < size; i++) {\n \n             Entry e = entries.get(i);\n             lineTo(e.getXIndex(), e.getVal() * phaseY);\n         }\n-        \n+\n         reset();\n     }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -150,46 +150,69 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, ArrayList<Entry> entries\n         // the path for the cubic-spline\n         Path spline = new Path();\n \n-        ArrayList<CPoint> points = new ArrayList<CPoint>();\n-        for (int i = minx; i < maxx; i++) {\n+        float size = entries.size() * phaseX;\n \n-            Entry e = entries.get(i);\n-            if (e != null)\n-                points.add(new CPoint(e.getXIndex(), e.getVal()));\n-        }\n+        if (entries.size() > 2) {\n \n-        if (points.size() > 1) {\n-            for (int j = 0; j < points.size() * phaseX; j++) {\n+            float prevDx = 0f;\n+            float prevDy = 0f;\n+            float curDx = 0f;\n+            float curDy = 0f;\n \n-                CPoint point = points.get(j);\n+            Entry cur = entries.get(0);\n+            Entry next = entries.get(1);\n+            Entry prev = entries.get(0);\n+            Entry prevPrev = entries.get(0);\n \n-                if (j == 0) {\n-                    CPoint next = points.get(j + 1);\n-                    point.dx = ((next.x - point.x) * intensity);\n-                    point.dy = ((next.y - point.y) * intensity);\n-                }\n-                else if (j == points.size() - 1) {\n-                    CPoint prev = points.get(j - 1);\n-                    point.dx = ((point.x - prev.x) * intensity);\n-                    point.dy = ((point.y - prev.y) * intensity);\n-                }\n-                else {\n-                    CPoint next = points.get(j + 1);\n-                    CPoint prev = points.get(j - 1);\n-                    point.dx = ((next.x - prev.x) * intensity);\n-                    point.dy = ((next.y - prev.y) * intensity);\n-                }\n+            // let the spline start\n+            spline.moveTo(cur.getXIndex(), cur.getVal() * phaseY);\n \n-                // create the cubic-spline path\n-                if (j == 0) {\n-                    spline.moveTo(point.x, point.y * phaseY);\n-                }\n-                else {\n-                    CPoint prev = points.get(j - 1);\n-                    spline.cubicTo(prev.x + prev.dx, (prev.y + prev.dy) * phaseY, point.x\n-                            - point.dx,\n-                            (point.y - point.dy) * phaseY, point.x, point.y * phaseY);\n-                }\n+            prevDx = (next.getXIndex() - cur.getXIndex()) * intensity;\n+            prevDy = (next.getVal() - cur.getVal()) * intensity;\n+\n+            cur = entries.get(1);\n+            next = entries.get(2);\n+            curDx = (next.getXIndex() - prev.getXIndex()) * intensity;\n+            curDy = (next.getVal() - prev.getVal()) * intensity;\n+\n+            // the first cubic\n+            spline.cubicTo(prev.getXIndex() + prevDx, (prev.getVal() + prevDy) * phaseY,\n+                    cur.getXIndex() - curDx,\n+                    (cur.getVal() - curDy) * phaseY, cur.getXIndex(), cur.getVal() * phaseY);\n+\n+            for (int j = 2; j < size - 1; j++) {\n+\n+                prevPrev = entries.get(j - 2);\n+                prev = entries.get(j - 1);\n+                cur = entries.get(j);\n+                next = entries.get(j + 1);\n+\n+                prevDx = (cur.getXIndex() - prevPrev.getXIndex()) * intensity;\n+                prevDy = (cur.getVal() - prevPrev.getVal()) * intensity;\n+                curDx = (next.getXIndex() - prev.getXIndex()) * intensity;\n+                curDy = (next.getVal() - prev.getVal()) * intensity;\n+\n+                spline.cubicTo(prev.getXIndex() + prevDx, (prev.getVal() + prevDy) * phaseY,\n+                        cur.getXIndex() - curDx,\n+                        (cur.getVal() - curDy) * phaseY, cur.getXIndex(), cur.getVal() * phaseY);\n+            }\n+\n+            if (size > entries.size() - 1) {\n+\n+                cur = entries.get(entries.size() - 1);\n+                prev = entries.get(entries.size() - 2);\n+                prevPrev = entries.get(entries.size() - 3);\n+                next = cur;\n+\n+                prevDx = (cur.getXIndex() - prevPrev.getXIndex()) * intensity;\n+                prevDy = (cur.getVal() - prevPrev.getVal()) * intensity;\n+                curDx = (next.getXIndex() - prev.getXIndex()) * intensity;\n+                curDy = (next.getVal() - prev.getVal()) * intensity;\n+\n+                // the last cubic\n+                spline.cubicTo(prev.getXIndex() + prevDx, (prev.getVal() + prevDy) * phaseY,\n+                        cur.getXIndex() - curDx,\n+                        (cur.getVal() - curDy) * phaseY, cur.getXIndex(), cur.getVal() * phaseY);\n             }\n         }\n \n@@ -456,7 +479,7 @@ protected void drawCircles(Canvas c) {\n             buffer.feed(entries);\n \n             trans.pointValuesToPixel(buffer.buffer);\n-            \n+\n             float halfsize = dataSet.getCircleSize() / 2f;\n \n             for (int j = 0; j < buffer.size(); j += 2) {",
    "output": "Improved performance of cubic-lines."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java\n@@ -108,7 +108,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         l.setTextSize(11f);\n         l.setXEntrySpace(4f);\n \n-        mChart.animateY(1500);\n+        mChart.animateXY(2000, 2000);\n     }\n \n     @Override\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n@@ -61,6 +61,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         XAxis xAxis = mChart.getXAxis();\n         xAxis.setPosition(XAxisPosition.BOTTOM);\n         xAxis.setSpaceBetweenLabels(2);\n+        xAxis.setDrawGridLines(false);\n \n         YAxis leftAxis = mChart.getAxisLeft();  \n //        leftAxis.setEnabled(false);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java\n@@ -68,8 +68,9 @@ protected void drawDataSet(Canvas c, CandleDataSet dataSet) {\n         ArrayList<CandleEntry> entries = dataSet.getYVals();\n      \n         // draw the shadow\n-        int range = (mMaxX - mMinX) * 4;\n+        int range = (mMaxX - mMinX + 1) * 4;\n         int from = mMinX * 4;\n+        int to = mMaxX + 1;\n \n         CandleShadowBuffer shadowBuffer = mShadowBuffers[dataSetIndex];\n         shadowBuffer.setPhases(phaseX, phaseY);\n@@ -81,6 +82,7 @@ protected void drawDataSet(Canvas c, CandleDataSet dataSet) {\n         mRenderPaint.setColor(dataSet.getColor());\n         mRenderPaint.setStrokeWidth(dataSet.getShadowWidth());\n \n+        // draw the shadow\n         c.drawLines(shadowBuffer.buffer, from, range, mRenderPaint);\n                 \n         CandleBodyBuffer bodyBuffer = mBodyBuffers[dataSetIndex];\n@@ -90,12 +92,13 @@ protected void drawDataSet(Canvas c, CandleDataSet dataSet) {\n \n         trans.pointValuesToPixel(bodyBuffer.buffer);\n \n+        // draw the body\n         for (int j = 0; j < bodyBuffer.size(); j+=4) {\n             \n             // get the entry\n             CandleEntry e = entries.get(j / 4);\n             \n-            if (!fitsBounds(e.getXIndex(), mMinX, mMaxX))\n+            if (!fitsBounds(e.getXIndex(), mMinX, to))\n                 continue;\n \n             // get the color that is specified for this position from\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n@@ -4,7 +4,6 @@\n import android.graphics.Canvas;\n import android.graphics.Color;\n import android.graphics.Paint.Align;\n-import android.util.Log;\n \n import com.github.mikephil.charting.components.XAxis;\n import com.github.mikephil.charting.components.XAxis.XAxisPosition;\n@@ -118,15 +117,18 @@ protected void drawLabels(Canvas c, float pos) {\n         float[] position = new float[] {\n                 0f, 0f\n         };\n-        \n+\n         int maxx = mMaxX + 1;\n-        \n-        if(maxx > mXAxis.getValues().size()) {\n+        int minx = mMinX - 1;\n+\n+        if (maxx > mXAxis.getValues().size())\n             maxx = mXAxis.getValues().size();\n-        }\n \n-        for (int i = mMinX; i < maxx; i += mXAxis.mAxisLabelModulus) {\n-            \n+        if (minx < 0)\n+            minx = 0;\n+\n+        for (int i = minx; i < maxx; i += mXAxis.mAxisLabelModulus) {\n+\n             position[0] = i;\n \n             mTrans.pointValuesToPixel(position);",
    "output": "Worked on CandleStick chart."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java\n@@ -47,7 +47,7 @@ protected void onCreate(Bundle savedInstanceState) {\n                 WindowManager.LayoutParams.FLAG_FULLSCREEN);\n         setContentView(R.layout.activity_barchart_sinus);\n         \n-        mSinusData = FileUtils.loadBarEntriesFromAssets(getAssets(),\"sine.txt\");\n+        mSinusData = FileUtils.loadBarEntriesFromAssets(getAssets(),\"othersine.txt\");\n \n         tvX = (TextView) findViewById(R.id.tvValueCount);\n \n@@ -85,21 +85,21 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         YAxis leftAxis = mChart.getAxisLeft();\n         leftAxis.setTypeface(mTf);\n-        leftAxis.setLabelCount(8);\n+        leftAxis.setLabelCount(6);\n         leftAxis.setStartAtZero(false);\n-        leftAxis.setAxisMinValue(-1.2f);\n-        leftAxis.setAxisMaxValue(1.2f);\n+        leftAxis.setAxisMinValue(-2.5f);\n+        leftAxis.setAxisMaxValue(2.5f);\n \n         YAxis rightAxis = mChart.getAxisRight();\n         rightAxis.setDrawGridLines(false);\n         rightAxis.setTypeface(mTf);\n-        rightAxis.setLabelCount(8);\n+        rightAxis.setLabelCount(6);\n         rightAxis.setStartAtZero(false);\n-        rightAxis.setAxisMinValue(-1.2f);\n-        rightAxis.setAxisMaxValue(1.2f);\n+        rightAxis.setAxisMinValue(-2.5f);\n+        rightAxis.setAxisMaxValue(2.5f);\n \n         mSeekBarX.setOnSeekBarChangeListener(this);\n-        mSeekBarX.setProgress(750);\n+        mSeekBarX.setProgress(150); // set data\n \n         Legend l = mChart.getLegend();\n         l.setPosition(LegendPosition.BELOW_CHART_LEFT);\n@@ -108,7 +108,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         l.setTextSize(11f);\n         l.setXEntrySpace(4f);\n \n-        // mChart.setDrawLegend(false);\n+        mChart.animateY(1500);\n     }\n \n     @Override\n@@ -161,16 +161,16 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 break;\n             }\n             case R.id.animateX: {\n-                mChart.animateX(3000);\n+                mChart.animateX(1500);\n                 break;\n             }\n             case R.id.animateY: {\n-                mChart.animateY(3000);\n+                mChart.animateY(1500);\n                 break;\n             }\n             case R.id.animateXY: {\n \n-                mChart.animateXY(3000, 3000);\n+                mChart.animateXY(2000, 2000);\n                 break;\n             }\n             case R.id.actionToggleAdjustXLegend: {\n@@ -212,7 +212,7 @@ public boolean onOptionsItemSelected(MenuItem item) {\n     @Override\n     public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n \n-        tvX.setText(\"\" + (mSeekBarX.getProgress() + 1));\n+        tvX.setText(\"\" + (mSeekBarX.getProgress()));\n \n         setData(mSeekBarX.getProgress());\n         mChart.invalidate();\n@@ -242,8 +242,8 @@ private void setData(int count) {\n         }\n         \n         BarDataSet set = new BarDataSet(entries, \"Sinus Function\");\n-        set.setBarSpacePercent(35f);\n-        set.setColor(Color.rgb(233, 101, 105));\n+        set.setBarSpacePercent(40f);\n+        set.setColor(Color.rgb(240, 120, 124));\n \n         BarData data = new BarData(xVals, set);\n         data.setValueTextSize(10f);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n@@ -117,7 +117,7 @@ protected void onCreate(Bundle savedInstanceState) {\n                 \"Renders up to 30.000 objects smoothly.\"));\n         objects.add(new ContentItem(\n                 \"Sinus Bar Chart\",\n-                \"A BarChart plotting the sinus function (~750 values).\"));\n+                \"A Bar Chart plotting the sinus function with 8.000 values.\"));\n \n         MyAdapter adapter = new MyAdapter(this, objects);\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java b/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java\n@@ -64,7 +64,7 @@ public void feed(ArrayList<BarEntry> entries) {\n                 float bottom = y <= 0 ? y : 0;\n \n                 // multiply the height of the rect with the phase\n-                if (top >= 0)\n+                if (top > 0)\n                     top *= phaseY;\n                 else\n                     bottom *= phaseY;\n@@ -87,7 +87,7 @@ public void feed(ArrayList<BarEntry> entries) {\n                     float bottom = y <= 0 ? y : 0;\n \n                     // multiply the height of the rect with the phase\n-                    if (top >= 0)\n+                    if (top > 0)\n                         top *= phaseY;\n                     else\n                         bottom *= phaseY;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java b/MPChartLib/src/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java\n@@ -39,7 +39,7 @@ public void feed(ArrayList<BarEntry> entries) {\n                 float left = y <= 0 ? y : 0;\n \n                 // multiply the height of the rect with the phase\n-                if (right >= 0)\n+                if (right > 0)\n                     right *= phaseY;\n                 else\n                     left *= phaseY;\n@@ -62,7 +62,7 @@ public void feed(ArrayList<BarEntry> entries) {\n                     float left = y <= 0 ? y : 0;\n \n                     // multiply the height of the rect with the phase\n-                    if (right >= 0)\n+                    if (right > 0)\n                         right *= phaseY;\n                     else\n                         left *= phaseY;",
    "output": "Minor bugfixes and new BarChart example."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -221,7 +221,7 @@ protected void onDraw(Canvas canvas) {\n \n         // canvas.drawBitmap(mDrawBitmap, 0, 0, mDrawPaint);\n \n-        if (true) {\n+        if (mLogEnabled) {\n             long drawtime = (System.currentTimeMillis() - starttime);\n             totalTime += drawtime;\n             drawCycles += 1;",
    "output": "Log fix."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -312,7 +312,9 @@ private void setData(int count, float range) {\n         set1.setColor(Color.BLACK);\n         set1.setCircleColor(Color.BLACK);\n         set1.setLineWidth(1f);\n-        set1.setCircleSize(4f);\n+        set1.setCircleSize(3f);\n+        set1.setDrawCircleHole(false);\n+        set1.setValueTextSize(9f);\n         set1.setFillAlpha(65);\n         set1.setFillColor(Color.BLACK);\n         // set1.setShader(new LinearGradient(0, 0, 0, mChart.getHeight(),\n@@ -323,7 +325,6 @@ private void setData(int count, float range) {\n \n         // create a data object with the datasets\n         LineData data = new LineData(xVals, dataSets);\n-        data.setValueTextSize(10f);\n \n         LimitLine ll1 = new LimitLine(130f, \"Upper Limit\");\n         ll1.setLineWidth(4f);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java\n@@ -14,7 +14,7 @@ public class LineDataSet extends LineRadarDataSet<Entry> {\n \n     /** arraylist representing all colors that are used for the circles */\n     private ArrayList<Integer> mCircleColors = null;\n-    \n+\n     /** the radius of the circle-shaped value indicators */\n     private float mCircleSize = 8f;\n \n@@ -30,6 +30,8 @@ public class LineDataSet extends LineRadarDataSet<Entry> {\n     /** if true, cubic lines are drawn instead of linear */\n     private boolean mDrawCubic = false;\n \n+    private boolean mDrawCircleHole = true;\n+\n     public LineDataSet(ArrayList<Entry> yVals, String label) {\n         super(yVals, label);\n \n@@ -269,4 +271,17 @@ public void setCircleColor(int color) {\n     public void resetCircleColors() {\n         mCircleColors = new ArrayList<Integer>();\n     }\n+\n+    /**\n+     * Set this to true to allow drawing a hole in each data circle.\n+     * \n+     * @param enabled\n+     */\n+    public void setDrawCircleHole(boolean enabled) {\n+        mDrawCircleHole = enabled;\n+    }\n+    \n+    public boolean isDrawCircleHoleEnabled() {\n+        return mDrawCircleHole;\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -141,32 +141,35 @@ else if (j == points.size() - 1) {\n                 }\n             }\n         }\n-        \n+\n         // if filled is enabled, close the path\n         if (dataSet.isDrawFilledEnabled()) {\n-            \n+\n             // create a new path, this is bad for performance\n             drawCubicFill(c, dataSet, new Path(spline), trans);\n-        } \n-        \n+        }\n+\n         mRenderPaint.setColor(dataSet.getColor());\n-        \n+\n         mRenderPaint.setStyle(Paint.Style.STROKE);\n-        \n+\n         trans.pathValueToPixel(spline);\n \n         c.drawPath(spline, mRenderPaint);\n-        \n+\n         mRenderPaint.setPathEffect(null);\n     }\n \n     protected void drawCubicFill(Canvas c, LineDataSet dataSet, Path spline, Transformer trans) {\n-        \n+\n         float fillMin = mChart.getFillFormatter()\n                 .getFillLinePosition(dataSet, mChart.getLineData(), mChart.getYChartMax(),\n                         mChart.getYChartMin());\n \n-        spline.lineTo(dataSet.getYVals().get((int) ((dataSet.getYVals().size() - 1) * mAnimator.getPhaseX())).getXIndex(), fillMin);\n+        spline.lineTo(\n+                dataSet.getYVals()\n+                        .get((int) ((dataSet.getYVals().size() - 1) * mAnimator.getPhaseX()))\n+                        .getXIndex(), fillMin);\n         spline.lineTo(mChart.getXChartMin(), fillMin);\n         spline.close();\n \n@@ -178,7 +181,7 @@ protected void drawCubicFill(Canvas c, LineDataSet dataSet, Path spline, Transfo\n \n         trans.pathValueToPixel(spline);\n         c.drawPath(spline, mRenderPaint);\n-        \n+\n         mRenderPaint.setAlpha(255);\n     }\n \n@@ -325,12 +328,12 @@ public void drawValues(Canvas c) {\n \n                 if (!dataSet.isDrawValuesEnabled())\n                     continue;\n-                \n+\n                 // apply the text-styling defined by the DataSet\n                 applyValueTextStyle(dataSet);\n \n                 Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n-                \n+\n                 // make sure the values do not interfear with the circles\n                 int valOffset = (int) (dataSet.getCircleSize() * 1.75f);\n \n@@ -355,7 +358,8 @@ public void drawValues(Canvas c) {\n \n                     float val = entries.get(j / 2).getVal();\n \n-                    c.drawText(dataSet.getValueFormatter().getFormattedValue(val), x, y - valOffset,\n+                    c.drawText(dataSet.getValueFormatter().getFormattedValue(val), x,\n+                            y - valOffset,\n                             mValuePaint);\n                 }\n             }\n@@ -402,9 +406,11 @@ protected void drawCircles(Canvas c) {\n \n                     c.drawCircle(x, y, dataSet.getCircleSize(),\n                             mRenderPaint);\n-                    c.drawCircle(x, y,\n-                            dataSet.getCircleSize() / 2f,\n-                            mCirclePaintInner);\n+                    \n+                    if (dataSet.isDrawCircleHoleEnabled())\n+                        c.drawCircle(x, y,\n+                                dataSet.getCircleSize() / 2f,\n+                                mCirclePaintInner);\n                 }\n             } // else do nothing\n         }",
    "output": "LineDataSet can now enable/disable the hole in circles."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -62,7 +62,7 @@ public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entr\n     public static final String LOG_TAG = \"MPAndroidChart\";\n \n     /** flag that indicates if logging is enabled or not */\n-    protected boolean mLogEnabled = true;\n+    protected boolean mLogEnabled = false;\n \n     /**\n      * object that holds all data that was originally set for the chart, before",
    "output": "Removed logcat ouput."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n@@ -21,6 +21,7 @@\n import com.github.mikephil.charting.data.LineDataSet;\n import com.github.mikephil.charting.data.filter.Approximator;\n import com.github.mikephil.charting.data.filter.Approximator.ApproximatorType;\n+import com.github.mikephil.charting.utils.ColorTemplate;\n import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n \n import java.util.ArrayList;\n@@ -81,7 +82,8 @@ protected void onCreate(Bundle savedInstanceState) {\n         YAxis y = mChart.getAxisLeft();\n         y.setTypeface(tf);\n         y.setLabelCount(5);\n-        y.setDrawGridLines(false);\n+        \n+        mChart.getAxisRight().setEnabled(false);\n \n         // add data\n         setData(45, 100);\n@@ -270,18 +272,16 @@ private void setData(int count, float range) {\n         LineDataSet set1 = new LineDataSet(vals1, \"DataSet 1\");\n         set1.setDrawCubic(true);\n         set1.setCubicIntensity(0.2f);\n-        set1.setDrawFilled(true);\n+        //set1.setDrawFilled(true);\n         set1.setDrawCircles(false); \n         set1.setLineWidth(2f);\n         set1.setCircleSize(5f);\n         set1.setHighLightColor(Color.rgb(244, 117, 117));\n         set1.setColor(Color.rgb(104, 241, 175));\n-\n-        ArrayList<LineDataSet> dataSets = new ArrayList<LineDataSet>();\n-        dataSets.add(set1);\n+        set1.setFillColor(ColorTemplate.getHoloBlue());\n \n         // create a data object with the datasets\n-        LineData data = new LineData(xVals, dataSets);\n+        LineData data = new LineData(xVals, set1);\n         data.setValueTypeface(tf);\n         data.setValueTextSize(9f);\n         data.setDrawValues(false);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -62,7 +62,7 @@ public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entr\n     public static final String LOG_TAG = \"MPAndroidChart\";\n \n     /** flag that indicates if logging is enabled or not */\n-    protected boolean mLogEnabled = false;\n+    protected boolean mLogEnabled = true;\n \n     /**\n      * object that holds all data that was originally set for the chart, before\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -96,10 +96,6 @@ protected void drawCubic(Canvas c, LineDataSet dataSet, ArrayList<Entry> entries\n         float phaseX = mAnimator.getPhaseX();\n         float phaseY = mAnimator.getPhaseY();\n \n-        // get the color that is specified for this position from the\n-        // DataSet\n-        mRenderPaint.setColor(dataSet.getColor());\n-\n         float intensity = dataSet.getCubicIntensity();\n \n         // the path for the cubic-spline\n@@ -145,20 +141,26 @@ else if (j == points.size() - 1) {\n                 }\n             }\n         }\n-\n+        \n         // if filled is enabled, close the path\n         if (dataSet.isDrawFilledEnabled()) {\n-            drawCubicFill(dataSet, spline);\n-        } else {\n-            mRenderPaint.setStyle(Paint.Style.STROKE);\n-        }\n-\n+            \n+            // create a new path, this is bad for performance\n+            drawCubicFill(c, dataSet, new Path(spline), trans);\n+        } \n+        \n+        mRenderPaint.setColor(dataSet.getColor());\n+        \n+        mRenderPaint.setStyle(Paint.Style.STROKE);\n+        \n         trans.pathValueToPixel(spline);\n \n         c.drawPath(spline, mRenderPaint);\n+        \n+        mRenderPaint.setPathEffect(null);\n     }\n \n-    protected void drawCubicFill(LineDataSet dataSet, Path spline) {\n+    protected void drawCubicFill(Canvas c, LineDataSet dataSet, Path spline, Transformer trans) {\n         \n         float fillMin = mChart.getFillFormatter()\n                 .getFillLinePosition(dataSet, mChart.getLineData(), mChart.getYChartMax(),\n@@ -169,6 +171,15 @@ protected void drawCubicFill(LineDataSet dataSet, Path spline) {\n         spline.close();\n \n         mRenderPaint.setStyle(Paint.Style.FILL);\n+\n+        mRenderPaint.setColor(dataSet.getFillColor());\n+        // filled is drawn with less alpha\n+        mRenderPaint.setAlpha(dataSet.getFillAlpha());\n+\n+        trans.pathValueToPixel(spline);\n+        c.drawPath(spline, mRenderPaint);\n+        \n+        mRenderPaint.setAlpha(255);\n     }\n \n     protected void drawLinear(Canvas c, LineDataSet dataSet, ArrayList<Entry> entries) {\n@@ -225,10 +236,6 @@ protected void drawLinear(Canvas c, LineDataSet dataSet, ArrayList<Entry> entrie\n     protected void drawLinearFill(Canvas c, LineDataSet dataSet, ArrayList<Entry> entries,\n             Transformer trans) {\n \n-        // mDrawCanvas.drawVertices(VertexMode.TRIANGLE_STRIP,\n-        // valuePoints.length, valuePoints, 0,\n-        // null, 0, null, 0, null, 0, 0, paint);\n-\n         mRenderPaint.setStyle(Paint.Style.FILL);\n \n         mRenderPaint.setColor(dataSet.getFillColor());",
    "output": "Update gradle, fixed issue #284."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -167,6 +167,7 @@ public boolean onOptionsItemSelected(MenuItem item) {\n             case R.id.actionToggleStartzero: {\n                 mChart.getAxisLeft().setStartAtZero(!mChart.getAxisLeft().isStartAtZeroEnabled());\n                 mChart.getAxisRight().setStartAtZero(!mChart.getAxisRight().isStartAtZeroEnabled());\n+                mChart.notifyDataSetChanged();\n                 mChart.invalidate();\n                 break;\n             }\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n@@ -21,7 +21,6 @@\n import com.github.mikephil.charting.components.XAxis;\n import com.github.mikephil.charting.components.XAxis.XAxisPosition;\n import com.github.mikephil.charting.components.YAxis;\n-import com.github.mikephil.charting.components.YAxis.AxisDependency;\n import com.github.mikephil.charting.data.BarData;\n import com.github.mikephil.charting.data.BarDataSet;\n import com.github.mikephil.charting.data.BarEntry;\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n@@ -71,6 +71,8 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart.setPinchZoom(false);\n \n         mChart.setDrawBarShadow(false);\n+        \n+        mChart.setDrawValueAboveBar(false);\n \n         // change the position of the y-labels\n         YAxis yLabels = mChart.getAxisLeft();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/BarEntry.java b/MPChartLib/src/com/github/mikephil/charting/data/BarEntry.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/BarEntry.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/BarEntry.java\n@@ -118,7 +118,7 @@ public float getBelowSum(int stackIndex) {\n         float remainder = 0f;\n         int index = mVals.length - 1;\n         \n-        while(index > stackIndex) {\n+        while(index > stackIndex && index >= 0) {\n             remainder += mVals[index];\n             index--;\n         }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -161,7 +161,7 @@ protected void drawDataSet(Canvas c, BarDataSet dataSet, int index) {\n      * @param barspace the space between bars\n      */\n     protected void prepareBar(float x, float y, float barspace, Transformer trans) {\n-        \n+\n         float barWidth = 0.5f;\n \n         float spaceHalf = barspace / 2f;\n@@ -181,6 +181,30 @@ protected void prepareBar(float x, float y, float barspace, Transformer trans) {\n         }\n     }\n \n+    /**\n+     * Prepares a bar for being highlighted.\n+     * \n+     * @param x the x-position\n+     * @param y the y-position\n+     * @param barspace the space between bars\n+     * @param from\n+     * @param trans\n+     */\n+    protected void prepareBarHighlight(float x, float y, float barspace, float from, Transformer trans) {\n+\n+        float barWidth = 0.5f;\n+\n+        float spaceHalf = barspace / 2f;\n+        float left = x - barWidth + spaceHalf;\n+        float right = x + barWidth - spaceHalf;\n+        float top = y >= from ? y : from;\n+        float bottom = y <= from ? y : from;\n+\n+        mBarRect.set(left, top, right, bottom);\n+\n+        trans.rectValueToPixel(mBarRect, mAnimator.getPhaseY());\n+    }\n+\n     @Override\n     public void drawValues(Canvas c) {\n         // if values are drawn\n@@ -206,12 +230,12 @@ public void drawValues(Canvas c) {\n \n                 if (!dataSet.isDrawValuesEnabled())\n                     continue;\n-                \n+\n                 // apply the text-styling defined by the DataSet\n                 applyValueTextStyle(dataSet);\n \n                 ValueFormatter formatter = dataSet.getValueFormatter();\n-                \n+\n                 Transformer trans = mChart.getTransformer(dataSet.getAxisDependency());\n \n                 ArrayList<BarEntry> entries = dataSet.getYVals();\n@@ -249,7 +273,7 @@ public void drawValues(Canvas c) {\n                         // non-stacked\n                         // in between\n                         if (vals == null) {\n-                            \n+\n                             if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))\n                                 break;\n \n@@ -258,7 +282,8 @@ public void drawValues(Canvas c) {\n                                 continue;\n \n                             drawValue(c, e.getVal(), valuePoints[j],\n-                                    valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset), formatter);\n+                                    valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset),\n+                                    formatter);\n \n                         } else {\n \n@@ -276,11 +301,11 @@ public void drawValues(Canvas c) {\n                             trans.pointValuesToPixel(transformed);\n \n                             for (int k = 0; k < transformed.length; k += 2) {\n-                                \n+\n                                 float x = valuePoints[j];\n                                 float y = transformed[k + 1]\n                                         + (vals[k / 2] >= 0 ? posOffset : negOffset);\n-                                \n+\n                                 if (!mViewPortHandler.isInBoundsRight(x))\n                                     break;\n \n@@ -348,13 +373,18 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n                     continue;\n \n                 float groupspace = mChart.getBarData().getGroupSpace();\n+                boolean isStack = h.getStackIndex() < 0 ? false : true;\n \n                 // calculate the correct x-position\n                 float x = index * setCount + dataSetIndex + groupspace / 2f\n                         + groupspace * index;\n-                float y = h.getStackIndex() < 0 ? e.getVal() : e.getVals()[h.getStackIndex()] + e.getBelowSum(h.getStackIndex());\n+                float y = isStack ? e.getVals()[h.getStackIndex()]\n+                        + e.getBelowSum(h.getStackIndex()) : e.getVal();\n+                \n+                // this is where the bar starts\n+                float from = isStack ? e.getBelowSum(h.getStackIndex()) : 0f;\n \n-                prepareBar(x, y, set.getBarSpace(), trans);\n+                prepareBarHighlight(x, y, set.getBarSpace(), from, trans);\n \n                 c.drawRect(mBarRect, mHighlightPaint);\n \n@@ -376,13 +406,14 @@ public void drawHighlighted(Canvas c, Highlight[] indices) {\n             }\n         }\n     }\n-    \n-    public float[] getTransformedValues(Transformer trans, ArrayList<BarEntry> entries, int dataSetIndex) {\n+\n+    public float[] getTransformedValues(Transformer trans, ArrayList<BarEntry> entries,\n+            int dataSetIndex) {\n         return trans.generateTransformedValuesBarChart(entries, dataSetIndex,\n                 mChart.getBarData(),\n                 mAnimator.getPhaseY());\n     }\n-    \n+\n     protected boolean passesCheck() {\n         return mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount()\n                 * mViewPortHandler.getScaleX();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n@@ -275,6 +275,21 @@ protected void prepareBar(float x, float y, float barspace, Transformer trans) {\n                     mBarRect.bottom);\n         }\n     }\n+    \n+    @Override\n+    protected void prepareBarHighlight(float x, float y, float barspace, float from, Transformer trans) {\n+\n+        float spaceHalf = barspace / 2f;\n+\n+        float top = x - 0.5f + spaceHalf;\n+        float bottom = x + 0.5f - spaceHalf;\n+        float left = y >= from ? y : from;\n+        float right = y <= from ? y : from;\n+\n+        mBarRect.set(left, top, right, bottom);\n+\n+        trans.rectValueToPixel(mBarRect, mAnimator.getPhaseY());\n+    }\n \n     @Override\n     public float[] getTransformedValues(Transformer trans, ArrayList<BarEntry> entries,",
    "output": "Fixed issue #391."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n@@ -77,6 +77,8 @@ protected void onCreate(Bundle savedInstanceState) {\n         // yLabels.setPosition(YLabelPosition.BOTH_SIDED);\n         yLabels.setLabelCount(5);\n         yLabels.setValueFormatter(new MyValueFormatter());\n+        \n+        mChart.getAxisRight().setValueFormatter(new MyValueFormatter());\n \n         XAxis xLabels = mChart.getXAxis();\n         xLabels.setPosition(XAxisPosition.TOP);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n@@ -136,13 +136,28 @@ protected Highlight getHighlight(double xPosition, double yPosition) {\n         // only one dataset exists\n         if (!mData.isGrouped()) {\n \n-            int dataSet = 0;\n+            int dataSetIndex = 0;\n             int xIndex = (int) Math.round(xPosition);\n \n-            if (!mData.getDataSetByIndex(dataSet).isStacked())\n-                return new Highlight(xIndex, dataSet);\n+         // check bounds\n+            if (xIndex < 0) {\n+                xIndex = 0;\n+                dataSetIndex = 0;\n+            } else if (xIndex >= valCount) {\n+                xIndex = valCount - 1;\n+                dataSetIndex = setCount - 1;\n+            }\n+\n+            // check bounds\n+            if (dataSetIndex < 0)\n+                dataSetIndex = 0;\n+            else if (dataSetIndex >= setCount)\n+                dataSetIndex = setCount - 1;\n+\n+            if (!mData.getDataSetByIndex(dataSetIndex).isStacked())\n+                return new Highlight(xIndex, dataSetIndex);\n             else\n-                return getStackedHighlight(xIndex, dataSet, yPosition);\n+                return getStackedHighlight(xIndex, dataSetIndex, yPosition);\n \n             // if this bardata is grouped into more datasets\n         } else {\n@@ -165,7 +180,7 @@ protected Highlight getHighlight(double xPosition, double yPosition) {\n             if (mLogEnabled)\n                 Log.i(LOG_TAG, \"xIndex: \" + xIndex + \", dataSet: \" + dataSetIndex);\n \n-            // check bounds\n+         // check bounds\n             if (xIndex < 0) {\n                 xIndex = 0;\n                 dataSetIndex = 0;\n@@ -199,9 +214,13 @@ else if (dataSetIndex >= setCount)\n     protected Highlight getStackedHighlight(int xIndex, int dataSet, double yValue) {\n \n         BarEntry entry = mData.getDataSetByIndex(dataSet).getEntryForXIndex(xIndex);\n-        int stackIndex = entry.getClosestIndexAbove((float) yValue);\n-        Highlight h = new Highlight(xIndex, dataSet, stackIndex);\n-        return h;\n+\n+        if (entry != null) {\n+            int stackIndex = entry.getClosestIndexAbove((float) yValue);\n+            Highlight h = new Highlight(xIndex, dataSet, stackIndex);\n+            return h;\n+        } else\n+            return null;\n     }\n \n     /**\n@@ -230,7 +249,7 @@ public RectF getBarBounds(BarEntry e) {\n         float right = x + barWidth - spaceHalf;\n         float top = y >= 0 ? y : 0;\n         float bottom = y <= 0 ? y : 0;\n-        \n+\n         RectF bounds = new RectF(left, top, right, bottom);\n \n         getTransformer(set.getAxisDependency()).rectValueToPixel(bounds);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -485,6 +485,10 @@ public void highlightTouch(Highlight high) {\n         if (high == null)\n             mIndicesToHightlight = null;\n         else {\n+            \n+//            if(mLogEnabled) \n+                \n+                Log.i(LOG_TAG, \"Highlighted: \" + high.toString());\n \n             // set the indices to highlight\n             mIndicesToHightlight = new Highlight[] {",
    "output": "Fixed BarChart highlight crash (issue #390)."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -63,6 +63,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart = (BarChart) findViewById(R.id.chart1);\n         mChart.setOnChartValueSelectedListener(this);\n \n+        mChart.setDrawBarShadow(true);\n         mChart.setDrawValueAboveBar(true);\n \n         mChart.setDescription(\"\");",
    "output": "Minor fixes."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -19,7 +19,6 @@\n import com.github.mikephil.charting.components.YAxis;\n import com.github.mikephil.charting.components.YAxis.AxisDependency;\n import com.github.mikephil.charting.data.BarData;\n-import com.github.mikephil.charting.data.BarDataSet;\n import com.github.mikephil.charting.data.BarLineScatterCandleData;\n import com.github.mikephil.charting.data.BarLineScatterCandleDataSet;\n import com.github.mikephil.charting.data.DataSet;",
    "output": "Merged."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java\n@@ -14,6 +14,8 @@ public abstract class AxisBase extends ComponentBase {\n \n     private int mGridColor = Color.GRAY;\n \n+    private float mGridLineWidth = 1f;\n+\n     private int mAxisLineColor = Color.GRAY;\n \n     private float mAxisLineWidth = 1f;\n@@ -108,6 +110,26 @@ public float getAxisLineWidth() {\n         return mAxisLineWidth;\n     }\n \n+    /**\n+     * Sets the width of the grid lines that are drawn away from each axis\n+     * label.\n+     * \n+     * @param width\n+     */\n+    public void setGridLineWidth(float width) {\n+        mGridLineWidth = Utils.convertDpToPixel(width);\n+    }\n+\n+    /**\n+     * Returns the width of the grid lines that are drawn away from each axis\n+     * label.\n+     * \n+     * @return\n+     */\n+    public float getGridLineWidth() {\n+        return mGridLineWidth;\n+    }\n+\n     /**\n      * Sets the color of the border surrounding the chart.\n      * \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n@@ -164,6 +164,7 @@ public void renderGridLines(Canvas c) {\n         };\n \n         mGridPaint.setColor(mXAxis.getGridColor());\n+        mGridPaint.setStrokeWidth(mXAxis.getGridLineWidth());\n \n         for (int i = 0; i < mXAxis.getValues().size(); i += mXAxis.mAxisLabelModulus) {\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererBarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererBarChart.java\n@@ -86,6 +86,9 @@ public void renderGridLines(Canvas c) {\n         float[] position = new float[] {\n                 0f, 0f\n         };\n+        \n+        mGridPaint.setColor(mXAxis.getGridColor());\n+        mGridPaint.setStrokeWidth(mXAxis.getGridLineWidth());\n \n         BarData bd = mChart.getData();\n         // take into consideration that multiple DataSets increase mDeltaX\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java\n@@ -117,6 +117,9 @@ public void renderGridLines(Canvas c) {\n         float[] position = new float[] {\n                 0f, 0f\n         };\n+        \n+        mGridPaint.setColor(mXAxis.getGridColor());\n+        mGridPaint.setStrokeWidth(mXAxis.getGridLineWidth());\n \n         BarData bd = mChart.getData();\n         // take into consideration that multiple DataSets increase mDeltaX\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -245,6 +245,7 @@ public void renderGridLines(Canvas c) {\n         float[] position = new float[2];\n \n         mGridPaint.setColor(mYAxis.getGridColor());\n+        mGridPaint.setStrokeWidth(mYAxis.getGridLineWidth());\n \n         // draw the horizontal grid\n         for (int i = 0; i < mYAxis.mEntryCount; i++) {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java\n@@ -161,6 +161,7 @@ public void renderGridLines(Canvas c) {\n         float[] position = new float[2];\n \n         mGridPaint.setColor(mYAxis.getGridColor());\n+        mGridPaint.setStrokeWidth(mYAxis.getGridLineWidth());\n \n         // draw the horizontal grid\n         for (int i = 0; i < mYAxis.mEntryCount; i++) {",
    "output": "Added feature that allows to set the grid-line width for each axis."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n@@ -201,7 +201,6 @@ protected Highlight getStackedHighlight(int xIndex, int dataSet, double yValue)\n         BarEntry entry = mData.getDataSetByIndex(dataSet).getEntryForXIndex(xIndex);\n         int stackIndex = entry.getClosestIndexAbove((float) yValue);\n         Highlight h = new Highlight(xIndex, dataSet, stackIndex);\n-        Log.i(LOG_TAG, h.toString());\n         return h;\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -285,8 +285,6 @@ protected void calcMinMax() {\n         float bottomSpaceLeft = leftRange / 100f * mAxisLeft.getSpaceBottom();\n         float bottomSpaceRight = rightRange / 100f * mAxisRight.getSpaceBottom();\n \n-        Log.i(LOG_TAG, \"minLeft: \" + minLeft + \", maxLeft: \" + maxLeft);\n-\n         mXChartMax = mData.getXVals().size() - 1;\n         mDeltaX = Math.abs(mXChartMax - mXChartMin);\n ",
    "output": "Removed unneccessary logs."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java\n@@ -15,6 +15,7 @@\n import com.github.mikephil.charting.components.Legend;\n import com.github.mikephil.charting.components.Legend.LegendForm;\n import com.github.mikephil.charting.components.XAxis;\n+import com.github.mikephil.charting.components.YAxis;\n import com.github.mikephil.charting.data.DataSet;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.LineData;\n@@ -59,10 +60,6 @@ protected void onCreate(Bundle savedInstanceState) {\n         // no description text\n         mChart.setDescription(\"\");\n \n-        // invert the y-axis\n-        // MAKE THIS RIGHT\n-//        mChart.setInvertYAxisEnabled(true);\n-\n         // enable value highlighting\n         mChart.setHighlightEnabled(true);\n \n@@ -92,6 +89,12 @@ protected void onCreate(Bundle savedInstanceState) {\n         \n         XAxis xl = mChart.getXAxis();\n         xl.setAvoidFirstLastClipping(true);\n+        \n+        YAxis leftAxis = mChart.getAxisLeft();\n+        leftAxis.setInverted(true);\n+        \n+        YAxis rightAxis = mChart.getAxisRight();\n+        rightAxis.setEnabled(false);\n \n         // add data\n         setData(25, 50);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -932,6 +932,21 @@ public Entry getEntryByTouchPoint(float x, float y) {\n         }\n         return null;\n     }\n+    \n+    /**\n+     * returns the DataSet object displayed at the touched position of the chart\n+     * \n+     * @param x\n+     * @param y\n+     * @return\n+     */\n+    public BarLineScatterCandleDataSet<? extends Entry> getDataSetByTouchPoint(float x, float y) {\n+        Highlight h = getHighlightByTouchPoint(x, y);\n+        if (h != null) {\n+            return mData.getDataSetByIndex(h.getDataSetIndex());\n+        }\n+        return null;\n+    }\n \n     /**\n      * returns the current x-scale factor\n@@ -1096,6 +1111,19 @@ public float getYChartMin() {\n         return Math.min(mAxisLeft.mAxisMinimum, mAxisRight.mAxisMinimum);\n     }\n \n+    /**\n+     * Returns true if either the left or the right or both axes are inverted.\n+     * \n+     * @return\n+     */\n+    public boolean isAnyAxisInverted() {\n+        if (mAxisLeft.isInverted())\n+            return true;\n+        if (mAxisRight.isInverted())\n+            return true;\n+        return false;\n+    }\n+\n     /**\n      * returns the filtered ChartData object depending on approximator settings,\n      * current scale level and x- and y-axis ratio\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n@@ -187,11 +187,11 @@ public boolean isShowOnlyMinMaxEnabled() {\n \n     /**\n      * If this is set to true, the y-axis is inverted which means that low\n-     * values are on top of the chart, high values on bottom.\n+     * values are on top of the chart, high values on bottom. \n      * \n      * @param enabled\n      */\n-    public void setInvertAxis(boolean enabled) {\n+    public void setInverted(boolean enabled) {\n         mInverted = enabled;\n     }\n \n@@ -341,17 +341,17 @@ public float getSpaceBottom() {\n     }\n \n     public float getRequiredWidthSpace(Paint p) {\n-        \n+\n         p.setTextSize(mTextSize);\n-        \n+\n         String label = getLongestLabel();\n         return (float) Utils.calcTextWidth(p, label) + getXOffset() * 2f;\n     }\n \n     public float getRequiredHeightSpace(Paint p) {\n-        \n+\n         p.setTextSize(mTextSize);\n-        \n+\n         String label = getLongestLabel();\n         return (float) Utils.calcTextHeight(p, label) + getYOffset() * 2f;\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -14,6 +14,7 @@\n import com.github.mikephil.charting.charts.BarLineChartBase;\n import com.github.mikephil.charting.data.BarLineScatterCandleData;\n import com.github.mikephil.charting.data.BarLineScatterCandleDataSet;\n+import com.github.mikephil.charting.data.DataSet;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.renderer.ViewPortHandler;\n import com.github.mikephil.charting.utils.Highlight;\n@@ -58,6 +59,8 @@ public class BarLineChartTouchListener<T extends BarLineChartBase<? extends BarL\n     /** the last highlighted object */\n     private Highlight mLastHighlighted;\n \n+    private DataSet<?> mClosestDataSetToTouch;\n+\n     /** the chart the listener represents */\n     private T mChart;\n \n@@ -182,6 +185,8 @@ private void saveTouchStart(MotionEvent event) {\n \n         mSavedMatrix.set(mMatrix);\n         mTouchStartPoint.set(event.getX(), event.getY());\n+\n+        mClosestDataSetToTouch = mChart.getDataSetByTouchPoint(event.getX(), event.getY());\n     }\n \n     /**\n@@ -195,16 +200,16 @@ private void performDrag(MotionEvent event) {\n         PointF dragPoint = new PointF(event.getX(), event.getY());\n \n         // check if axis is inverted\n-//        if (mChart.isInvertYAxisEnabled()) {\n-//            \n-//            \n-//            mMatrix.postTranslate(dragPoint.x - mTouchStartPoint.x, -(dragPoint.y\n-//                    - mTouchStartPoint.y));\n-//        } \n-//        else {\n+        if (mChart.isAnyAxisInverted() && mClosestDataSetToTouch != null\n+                && mChart.getAxis(mClosestDataSetToTouch.getAxisDependency()).isInverted()) {\n+\n+            mMatrix.postTranslate(dragPoint.x - mTouchStartPoint.x, -(dragPoint.y\n+                    - mTouchStartPoint.y));\n+        }\n+        else {\n             mMatrix.postTranslate(dragPoint.x - mTouchStartPoint.x, dragPoint.y\n                     - mTouchStartPoint.y);\n-//        }\n+        }\n     }\n \n     /**\n@@ -336,20 +341,19 @@ private static float getYDist(MotionEvent e) {\n      * @return\n      */\n     public PointF getTrans(float x, float y) {\n-        \n+\n         ViewPortHandler vph = mChart.getViewPortHandler();\n \n         float xTrans = x - vph.offsetLeft();\n         float yTrans = 0f;\n \n         // check if axis is inverted\n-//        if (mChart.isInvertYAxisEnabled()) {\n-//            yTrans = -(y - vph.offsetTop());\n-//        } \n-//        else {\n-                \n+        if (mChart.isAnyAxisInverted() && mClosestDataSetToTouch != null\n+                && mChart.getAxis(mClosestDataSetToTouch.getAxisDependency()).isInverted()) {\n+            yTrans = -(y - vph.offsetTop());\n+        } else {\n             yTrans = -(mChart.getMeasuredHeight() - y - vph.offsetBottom());\n-//        }\n+        }\n \n         return new PointF(xTrans, yTrans);\n     }\n@@ -409,21 +413,21 @@ public void onLongPress(MotionEvent e) {\n \n             l.onChartLongPressed(e);\n         }\n-//        else if (mTouchMode == NONE) {\n-//\n-//            mChart.fitScreen();\n-//\n-//            Log.i(\"BarlineChartTouch\",\n-//                    \"Longpress, resetting zoom and drag, adjusting chart bounds to screen.\");\n-//\n-//            // PointF trans = getTrans(e.getX(), e.getY());\n-//            //\n-//            // mChart.zoomOut(trans.x, trans.y);\n-//            //\n-//            // Log.i(\"BarlineChartTouch\", \"Longpress, Zooming Out, x: \" +\n-//            // trans.x +\n-//            // \", y: \" + trans.y);\n-//        }\n+        // else if (mTouchMode == NONE) {\n+        //\n+        // mChart.fitScreen();\n+        //\n+        // Log.i(\"BarlineChartTouch\",\n+        // \"Longpress, resetting zoom and drag, adjusting chart bounds to screen.\");\n+        //\n+        // // PointF trans = getTrans(e.getX(), e.getY());\n+        // //\n+        // // mChart.zoomOut(trans.x, trans.y);\n+        // //\n+        // // Log.i(\"BarlineChartTouch\", \"Longpress, Zooming Out, x: \" +\n+        // // trans.x +\n+        // // \", y: \" + trans.y);\n+        // }\n     }\n \n     @Override",
    "output": "Inverting chart y-axis is now possible avain."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -202,8 +202,10 @@ protected void onDraw(Canvas canvas) {\n         mXAxisRenderer.renderAxisLine(mDrawCanvas);\n \n         mAxisRendererLeft.renderAxisLabels(mDrawCanvas);\n+        mAxisRendererLeft.renderAxisLine(mDrawCanvas);\n \n         mAxisRendererRight.renderAxisLabels(mDrawCanvas);\n+        mAxisRendererRight.renderAxisLine(mDrawCanvas);\n \n         mRenderer.drawValues(mDrawCanvas);\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -62,7 +62,7 @@ public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entr\n     public static final String LOG_TAG = \"MPAndroidChart\";\n \n     /** flag that indicates if logging is enabled or not */\n-    protected boolean mLogEnabled = true;\n+    protected boolean mLogEnabled = false;\n \n     /**\n      * object that holds all data that was originally set for the chart, before\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -153,28 +153,6 @@ protected void calculateOffsets() {\n                     + \", offsetRight: \" + offsetRight + \", offsetBottom: \" + offsetBottom);\n     }\n \n-    // /**\n-    // * Applys the newly calculated offsets to the matrices.\n-    // */\n-    // private void applyCalculatedOffsets() {\n-    //\n-    // float scaleX = (float) ((getWidth() - mOffsetLeft - mOffsetRight) /\n-    // mDeltaX);\n-    // float scaleY = (float) ((getHeight() - mOffsetBottom - mOffsetTop) /\n-    // mDeltaY);\n-    //\n-    // Matrix val = new Matrix();\n-    // val.postTranslate(0, -mYChartMin);\n-    // val.postScale(scaleX, -scaleY);\n-    //\n-    // mTrans.getValueMatrix().set(val);\n-    //\n-    // Matrix offset = new Matrix();\n-    // offset.postTranslate(mOffsetLeft, getHeight() - mOffsetBottom);\n-    //\n-    // mTrans.getOffsetMatrix().set(offset);\n-    // }\n-\n     /** the angle where the dragging started */\n     private float mStartAngle = 0f;\n ",
    "output": "Code cleanup."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n@@ -95,13 +95,17 @@ protected void onCreate(Bundle savedInstanceState) {\n         // l.setPosition(LegendPosition.LEFT_OF_CHART);\n         l.setForm(LegendForm.LINE);\n         l.setTypeface(tf);\n+        l.setTextSize(11f);\n         l.setTextColor(Color.WHITE);\n         l.setPosition(LegendPosition.BELOW_CHART_LEFT);\n \n         XAxis xAxis = mChart.getXAxis();\n         xAxis.setTypeface(tf);\n+        xAxis.setTextSize(12f);\n         xAxis.setTextColor(Color.WHITE);\n         xAxis.setDrawGridLines(false);\n+        xAxis.setDrawAxisLine(false);\n+        xAxis.setSpaceBetweenLabels(1);\n \n         YAxis leftAxis = mChart.getAxisLeft();\n         leftAxis.setTypeface(tf);\n@@ -113,10 +117,9 @@ protected void onCreate(Bundle savedInstanceState) {\n         rightAxis.setTypeface(tf);\n         rightAxis.setTextColor(Color.RED);\n         rightAxis.setAxisMaxValue(900);\n+        rightAxis.setStartAtZero(false);\n+        rightAxis.setAxisMinValue(-200);\n         rightAxis.setDrawGridLines(false);\n-        \n-//        yl.setAxisMaxValue(300f);\n-//        yl.setAxisMinValue(-100f);\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n@@ -263,7 +263,9 @@ public float getAxisMinValue() {\n     /**\n      * Set a custom minimum value for this axis. If set, this value will not be\n      * calculated automatically depending on the provided data. Use\n-     * resetAxisMinValue() to undo this.\n+     * resetAxisMinValue() to undo this. Do not forget to call\n+     * setStartAtZero(false) if you use this method. Otherwise, the axis-minimum\n+     * value will still be forced to 0.\n      * \n      * @param min\n      */\n@@ -339,11 +341,17 @@ public float getSpaceBottom() {\n     }\n \n     public float getRequiredWidthSpace(Paint p) {\n+        \n+        p.setTextSize(mTextSize);\n+        \n         String label = getLongestLabel();\n         return (float) Utils.calcTextWidth(p, label) + getXOffset() * 2f;\n     }\n \n     public float getRequiredHeightSpace(Paint p) {\n+        \n+        p.setTextSize(mTextSize);\n+        \n         String label = getLongestLabel();\n         return (float) Utils.calcTextHeight(p, label) + getYOffset() * 2f;\n     }\n@@ -377,7 +385,6 @@ public String getFormattedLabel(int index) {\n         else\n             return getValueFormatter().getFormattedValue(mEntries[index]);\n     }\n-    \n \n     /**\n      * Sets the formatter to be used for drawing the values inside the chart. If\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n@@ -27,6 +27,9 @@ public XAxisRenderer(ViewPortHandler viewPortHandler, XAxis xAxis, Transformer t\n     }\n \n     public void computeAxis(float xValAverageLength, ArrayList<String> xValues) {\n+        \n+        mAxisPaint.setTypeface(mXAxis.getTypeface());\n+        mAxisPaint.setTextSize(mXAxis.getTextSize());\n \n         StringBuffer a = new StringBuffer();\n ",
    "output": "Fixed some issues concerning offset calculation."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n@@ -122,44 +122,44 @@ public Highlight getHighlightByTouchPoint(float x, float y) {\n         if (xTouchVal < mXChartMin || xTouchVal > mXChartMax)\n             return null;\n \n-        Log.i(LOG_TAG, \"base: \" + base);\n-\n         int setCount = mData.getDataSetCount();\n-        int valCount = setCount * mData.getXValCount();\n+        int valCount = mData.getXValCount();\n \n         if (setCount <= 1) {\n             return new Highlight((int) Math.round(base), 0);\n         }\n \n-        // calculate the amount of bar-space between index 0 and touch position\n-        float space = (float) ((((float) valCount / (float) setCount) / (mDeltaX / base)));\n-//        \n-        float border = (float) setCount + mData.getGroupSpace();\n-        \n-        float steps = 0.5f + (int) (((float) base + 0.5f) / ((float) setCount));\n-\n-        float reduction = (float) (steps) * mData.getGroupSpace();\n+        int steps = (int) ((float) base / ((float) setCount + mData.getGroupSpace()));\n \n-        Log.i(LOG_TAG, \"reduction: \" + reduction);\n+        float groupSpaceSum = mData.getGroupSpace() * (float) steps;\n \n-        float beforeRound = (float) ((base - reduction) / setCount);\n-        Log.i(LOG_TAG, \"touch x-index before round: \" + beforeRound);\n-        \n-        int xIndex = (int) beforeRound;\n-        Log.i(LOG_TAG, \"touch x-index: \" + xIndex);\n+        float baseNoSpace = (float) base - groupSpaceSum;\n \n-        float dataSetBeforeRound = (float) ((base - reduction) % (setCount - 0.5f));\n+        if (mLogEnabled)\n+            Log.i(LOG_TAG, \"base: \" + base + \", steps: \" + steps + \", groupSpaceSum: \"\n+                    + groupSpaceSum\n+                    + \", baseNoSpace: \" + baseNoSpace);\n \n-        Log.i(LOG_TAG, \"datasetindex before round: \" + dataSetBeforeRound);\n+        int dataSetIndex = (int) baseNoSpace % setCount;\n+        int xIndex = (int) baseNoSpace / setCount;\n \n-        int dataSetIndex = (int) Math.round(dataSetBeforeRound);\n-        Log.i(LOG_TAG, \"touch dataset-index: \" + dataSetIndex);\n-        \n-        if (dataSetIndex < 0 || dataSetIndex >= mData.getDataSetCount())\n-            return null;\n+        if (mLogEnabled)\n+            Log.i(LOG_TAG, \"xIndex: \" + xIndex + \", dataSet: \" + dataSetIndex);\n \n-        if (xIndex < 0)\n+        // check bounds\n+        if (xIndex < 0) {\n             xIndex = 0;\n+            dataSetIndex = 0;\n+        } else if (xIndex >= valCount) {\n+            xIndex = valCount - 1;\n+            dataSetIndex = setCount - 1;\n+        }\n+\n+        // check bounds\n+        if (dataSetIndex < 0)\n+            dataSetIndex = 0;\n+        else if (dataSetIndex >= setCount)\n+            dataSetIndex = setCount - 1;\n \n         return new Highlight(xIndex, dataSetIndex);\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -62,7 +62,7 @@ public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entr\n     public static final String LOG_TAG = \"MPAndroidChart\";\n \n     /** flag that indicates if logging is enabled or not */\n-    protected boolean mLogEnabled = false;\n+    protected boolean mLogEnabled = true;\n \n     /**\n      * object that holds all data that was originally set for the chart, before\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -162,10 +162,12 @@ protected void drawDataSet(Canvas c, BarDataSet dataSet, int index) {\n      * @param barspace the space between bars\n      */\n     protected void prepareBar(float x, float y, float barspace, Transformer trans) {\n+        \n+        float barWidth = 0.5f;\n \n         float spaceHalf = barspace / 2f;\n-        float left = x - 0.5f + spaceHalf;\n-        float right = x + 0.5f - spaceHalf;\n+        float left = x - barWidth + spaceHalf;\n+        float right = x + barWidth - spaceHalf;\n         float top = y >= 0 ? y : 0;\n         float bottom = y <= 0 ? y : 0;\n ",
    "output": "Grouped BarChart highlighting now working."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n@@ -226,6 +226,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n         dataSets.add(set3);\n \n         BarData data = new BarData(xVals, dataSets);\n+        data.setValueFormatter(new LargeValueFormatter());\n \n         // add space between the dataset groups in percent of bar-width\n         data.setGroupSpace(80f);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -105,7 +105,7 @@ protected void onDraw(Canvas canvas) {\n         mLegendRenderer.renderLegend(mDrawCanvas, mLegend);\n \n         drawDescription();\n-        \n+\n         canvas.drawBitmap(mDrawBitmap, 0, 0, mDrawPaint);\n     }\n \n@@ -127,7 +127,7 @@ protected void calculateOffsets() {\n         mCircleBox.set(c.x - boxSize, c.y - boxSize,\n                 c.x + boxSize, c.y + boxSize);\n     }\n-    \n+\n     @Override\n     protected void calcMinMax() {\n         super.calcMinMax();\n@@ -402,13 +402,31 @@ public void setCenterTextTypeface(Typeface t) {\n     }\n \n     /**\n-     * Sets the size of the center text of the piechart.\n+     * Sets the size of the center text of the PieChart in dp.\n      * \n      * @param size\n      */\n-    public void setCenterTextSize(float size) {\n+    public void setCenterTextSize(float sizeDp) {\n         ((PieChartRenderer) mRenderer).getPaintCenterText().setTextSize(\n-                Utils.convertDpToPixel(size));\n+                Utils.convertDpToPixel(sizeDp));\n+    }\n+\n+    /**\n+     * Sets the size of the center text of the PieChart in pixels.\n+     * \n+     * @param size\n+     */\n+    public void setCenterTextSizePixels(float sizePixels) {\n+        ((PieChartRenderer) mRenderer).getPaintCenterText().setTextSize(sizePixels);\n+    }\n+\n+    /**\n+     * Sets the color of the center text of the PieChart.\n+     * \n+     * @param color\n+     */\n+    public void setCenterTextColor(int color) {\n+        ((PieChartRenderer) mRenderer).getPaintCenterText().setColor(color);\n     }\n \n     /**",
    "output": "Added convenience methods for PieChart, issue #380."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n@@ -32,8 +32,6 @@ public class CombinedChartActivity extends DemoBase {\n \n     private CombinedChart mChart;\n     private final int itemcount = 12;\n-    private final int maxYLeft = 40;\n-    private final int maxYRight = 60;\n \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n@@ -48,11 +46,9 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         YAxis rightAxis = mChart.getAxisRight();\n         rightAxis.setDrawGridLines(false);\n-        rightAxis.setAxisMaxValue(maxYRight);\n \n         YAxis leftAxis = mChart.getAxisLeft();\n         leftAxis.setDrawGridLines(false);\n-        leftAxis.setAxisMaxValue(maxYLeft);\n \n         XAxis xAxis = mChart.getXAxis();\n         xAxis.setPosition(XAxisPosition.BOTH_SIDED);\n@@ -74,9 +70,8 @@ private LineData generateLineData() {\n \n         ArrayList<Entry> entries = new ArrayList<Entry>();\n \n-        int minValue = 5;\n         for (int index = 0; index < itemcount; index++)\n-            entries.add(new Entry(getRandom(maxYLeft - minValue, minValue), index));\n+            entries.add(new Entry(getRandom(15, 10), index));\n \n         LineDataSet set = new LineDataSet(entries, \"Line DataSet\");\n         set.setColor(Color.rgb(240, 238, 70));\n@@ -100,15 +95,14 @@ private BarData generateBarData() {\n \n         ArrayList<BarEntry> entries = new ArrayList<BarEntry>();\n \n-        int minValue = 20;\n         for (int index = 0; index < itemcount; index++)\n-            entries.add(new BarEntry(getRandom(maxYRight - minValue, minValue), index));\n+            entries.add(new BarEntry(getRandom(15, 30), index));\n \n         BarDataSet set = new BarDataSet(entries, \"Bar DataSet\");\n         set.setColor(Color.rgb(60, 220, 78));\n         d.addDataSet(set);\n \n-        set.setAxisDependency(YAxis.AxisDependency.RIGHT);\n+        set.setAxisDependency(YAxis.AxisDependency.LEFT);\n \n         return d;\n     }\n@@ -177,28 +171,6 @@ public boolean onOptionsItemSelected(MenuItem item) {\n             set.setDrawValues(!set.isDrawValuesEnabled());\n         }\n \n-        mChart.invalidate();\n-        break;\n-      }\n-      case R.id.actionToggleBarYDependency: {\n-        for (DataSet<?> set : mChart.getData().getDataSets()) {\n-          if(set instanceof BarDataSet) {\n-            YAxis.AxisDependency newAxisDependency = set.getAxisDependency().equals(YAxis.AxisDependency.LEFT) ? YAxis.AxisDependency.RIGHT : YAxis.AxisDependency.LEFT;\n-            set.setAxisDependency(newAxisDependency);\n-          }\n-        }\n-\n-        mChart.invalidate();\n-        break;\n-      }\n-      case R.id.actionToggleLineYDependency: {\n-        for (DataSet<?> set : mChart.getData().getDataSets()) {\n-          if(set instanceof LineDataSet) {\n-            YAxis.AxisDependency newAxisDependency = set.getAxisDependency().equals(YAxis.AxisDependency.LEFT) ? YAxis.AxisDependency.RIGHT : YAxis.AxisDependency.LEFT;\n-            set.setAxisDependency(newAxisDependency);\n-          }\n-        }\n-\n         mChart.invalidate();\n         break;\n       }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -62,7 +62,7 @@ public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entr\n     public static final String LOG_TAG = \"MPAndroidChart\";\n \n     /** flag that indicates if logging is enabled or not */\n-    protected boolean mLogEnabled = true;\n+    protected boolean mLogEnabled = false;\n \n     /**\n      * object that holds all data that was originally set for the chart, before",
    "output": "Minor changes."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n@@ -3,6 +3,8 @@\n \n import android.graphics.Color;\n import android.os.Bundle;\n+import android.view.Menu;\n+import android.view.MenuItem;\n import android.view.WindowManager;\n \n import com.github.mikephil.charting.charts.CombinedChart;\n@@ -16,6 +18,7 @@\n import com.github.mikephil.charting.data.CandleDataSet;\n import com.github.mikephil.charting.data.CandleEntry;\n import com.github.mikephil.charting.data.CombinedData;\n+import com.github.mikephil.charting.data.DataSet;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.LineData;\n import com.github.mikephil.charting.data.LineDataSet;\n@@ -29,6 +32,8 @@ public class CombinedChartActivity extends DemoBase {\n \n     private CombinedChart mChart;\n     private final int itemcount = 12;\n+    private final int maxYLeft = 40;\n+    private final int maxYRight = 60;\n \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n@@ -40,13 +45,15 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart = (CombinedChart) findViewById(R.id.chart1);\n         mChart.setDescription(\"\");\n         mChart.setDrawGridBackground(false);\n-        \n+\n         YAxis rightAxis = mChart.getAxisRight();\n         rightAxis.setDrawGridLines(false);\n-        \n+        rightAxis.setAxisMaxValue(maxYRight);\n+\n         YAxis leftAxis = mChart.getAxisLeft();\n         leftAxis.setDrawGridLines(false);\n-        \n+        leftAxis.setAxisMaxValue(maxYLeft);\n+\n         XAxis xAxis = mChart.getXAxis();\n         xAxis.setPosition(XAxisPosition.BOTH_SIDED);\n \n@@ -67,8 +74,9 @@ private LineData generateLineData() {\n \n         ArrayList<Entry> entries = new ArrayList<Entry>();\n \n+        int minValue = 5;\n         for (int index = 0; index < itemcount; index++)\n-            entries.add(new Entry(getRandom(15, 10), index));\n+            entries.add(new Entry(getRandom(maxYLeft - minValue, minValue), index));\n \n         LineDataSet set = new LineDataSet(entries, \"Line DataSet\");\n         set.setColor(Color.rgb(240, 238, 70));\n@@ -77,9 +85,12 @@ private LineData generateLineData() {\n         set.setCircleSize(5f);\n         set.setFillColor(Color.rgb(240, 238, 70));\n         set.setDrawCubic(true);\n-        set.setDrawValues(false);\n+        set.setDrawValues(true);\n+\n+        set.setAxisDependency(YAxis.AxisDependency.LEFT);\n+\n         d.addDataSet(set);\n-        \n+\n         return d;\n     }\n \n@@ -89,16 +100,19 @@ private BarData generateBarData() {\n \n         ArrayList<BarEntry> entries = new ArrayList<BarEntry>();\n \n+        int minValue = 20;\n         for (int index = 0; index < itemcount; index++)\n-            entries.add(new BarEntry(getRandom(15, 30), index));\n+            entries.add(new BarEntry(getRandom(maxYRight - minValue, minValue), index));\n \n         BarDataSet set = new BarDataSet(entries, \"Bar DataSet\");\n         set.setColor(Color.rgb(60, 220, 78));\n         d.addDataSet(set);\n \n+        set.setAxisDependency(YAxis.AxisDependency.RIGHT);\n+\n         return d;\n     }\n-    \n+\n     private ScatterData generateScatterData() {\n \n         ScatterData d = new ScatterData();\n@@ -116,7 +130,7 @@ private ScatterData generateScatterData() {\n \n         return d;\n     }\n-    \n+\n     private CandleData generateCandleData() {\n \n         CandleData d = new CandleData();\n@@ -138,4 +152,57 @@ private CandleData generateCandleData() {\n     private float getRandom(float range, float startsfrom) {\n         return (float) (Math.random() * range) + startsfrom;\n     }\n+\n+  @Override\n+  public boolean onCreateOptionsMenu(Menu menu) {\n+    getMenuInflater().inflate(R.menu.combined, menu);\n+    return true;\n+  }\n+\n+  @Override\n+  public boolean onOptionsItemSelected(MenuItem item) {\n+    switch (item.getItemId()) {\n+      case R.id.actionToggleLineValues: {\n+        for (DataSet<?> set : mChart.getData().getDataSets()) {\n+          if(set instanceof LineDataSet)\n+            set.setDrawValues(!set.isDrawValuesEnabled());\n+        }\n+\n+        mChart.invalidate();\n+        break;\n+      }\n+      case R.id.actionToggleBarValues: {\n+        for (DataSet<?> set : mChart.getData().getDataSets()) {\n+          if(set instanceof BarDataSet)\n+            set.setDrawValues(!set.isDrawValuesEnabled());\n+        }\n+\n+        mChart.invalidate();\n+        break;\n+      }\n+      case R.id.actionToggleBarYDependency: {\n+        for (DataSet<?> set : mChart.getData().getDataSets()) {\n+          if(set instanceof BarDataSet) {\n+            YAxis.AxisDependency newAxisDependency = set.getAxisDependency().equals(YAxis.AxisDependency.LEFT) ? YAxis.AxisDependency.RIGHT : YAxis.AxisDependency.LEFT;\n+            set.setAxisDependency(newAxisDependency);\n+          }\n+        }\n+\n+        mChart.invalidate();\n+        break;\n+      }\n+      case R.id.actionToggleLineYDependency: {\n+        for (DataSet<?> set : mChart.getData().getDataSets()) {\n+          if(set instanceof LineDataSet) {\n+            YAxis.AxisDependency newAxisDependency = set.getAxisDependency().equals(YAxis.AxisDependency.LEFT) ? YAxis.AxisDependency.RIGHT : YAxis.AxisDependency.LEFT;\n+            set.setAxisDependency(newAxisDependency);\n+          }\n+        }\n+\n+        mChart.invalidate();\n+        break;\n+      }\n+    }\n+    return true;\n+  }\n }",
    "output": "Merge pull request #378 from Maragues/examples-improve-ombinedchart\n\nImproved CombinedChart example"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java\n@@ -3,6 +3,8 @@\n \n import android.graphics.Color;\n import android.os.Bundle;\n+import android.view.Menu;\n+import android.view.MenuItem;\n import android.view.WindowManager;\n \n import com.github.mikephil.charting.charts.CombinedChart;\n@@ -16,6 +18,7 @@\n import com.github.mikephil.charting.data.CandleDataSet;\n import com.github.mikephil.charting.data.CandleEntry;\n import com.github.mikephil.charting.data.CombinedData;\n+import com.github.mikephil.charting.data.DataSet;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.LineData;\n import com.github.mikephil.charting.data.LineDataSet;\n@@ -29,6 +32,8 @@ public class CombinedChartActivity extends DemoBase {\n \n     private CombinedChart mChart;\n     private final int itemcount = 12;\n+    private final int maxYLeft = 40;\n+    private final int maxYRight = 60;\n \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n@@ -40,13 +45,15 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart = (CombinedChart) findViewById(R.id.chart1);\n         mChart.setDescription(\"\");\n         mChart.setDrawGridBackground(false);\n-        \n+\n         YAxis rightAxis = mChart.getAxisRight();\n         rightAxis.setDrawGridLines(false);\n-        \n+        rightAxis.setAxisMaxValue(maxYRight);\n+\n         YAxis leftAxis = mChart.getAxisLeft();\n         leftAxis.setDrawGridLines(false);\n-        \n+        leftAxis.setAxisMaxValue(maxYLeft);\n+\n         XAxis xAxis = mChart.getXAxis();\n         xAxis.setPosition(XAxisPosition.BOTH_SIDED);\n \n@@ -67,8 +74,9 @@ private LineData generateLineData() {\n \n         ArrayList<Entry> entries = new ArrayList<Entry>();\n \n+        int minValue = 5;\n         for (int index = 0; index < itemcount; index++)\n-            entries.add(new Entry(getRandom(15, 10), index));\n+            entries.add(new Entry(getRandom(maxYLeft - minValue, minValue), index));\n \n         LineDataSet set = new LineDataSet(entries, \"Line DataSet\");\n         set.setColor(Color.rgb(240, 238, 70));\n@@ -77,9 +85,12 @@ private LineData generateLineData() {\n         set.setCircleSize(5f);\n         set.setFillColor(Color.rgb(240, 238, 70));\n         set.setDrawCubic(true);\n-        set.setDrawValues(false);\n+        set.setDrawValues(true);\n+\n+        set.setAxisDependency(YAxis.AxisDependency.LEFT);\n+\n         d.addDataSet(set);\n-        \n+\n         return d;\n     }\n \n@@ -89,16 +100,19 @@ private BarData generateBarData() {\n \n         ArrayList<BarEntry> entries = new ArrayList<BarEntry>();\n \n+        int minValue = 20;\n         for (int index = 0; index < itemcount; index++)\n-            entries.add(new BarEntry(getRandom(15, 30), index));\n+            entries.add(new BarEntry(getRandom(maxYRight - minValue, minValue), index));\n \n         BarDataSet set = new BarDataSet(entries, \"Bar DataSet\");\n         set.setColor(Color.rgb(60, 220, 78));\n         d.addDataSet(set);\n \n+        set.setAxisDependency(YAxis.AxisDependency.RIGHT);\n+\n         return d;\n     }\n-    \n+\n     private ScatterData generateScatterData() {\n \n         ScatterData d = new ScatterData();\n@@ -116,7 +130,7 @@ private ScatterData generateScatterData() {\n \n         return d;\n     }\n-    \n+\n     private CandleData generateCandleData() {\n \n         CandleData d = new CandleData();\n@@ -138,4 +152,57 @@ private CandleData generateCandleData() {\n     private float getRandom(float range, float startsfrom) {\n         return (float) (Math.random() * range) + startsfrom;\n     }\n+\n+  @Override\n+  public boolean onCreateOptionsMenu(Menu menu) {\n+    getMenuInflater().inflate(R.menu.combined, menu);\n+    return true;\n+  }\n+\n+  @Override\n+  public boolean onOptionsItemSelected(MenuItem item) {\n+    switch (item.getItemId()) {\n+      case R.id.actionToggleLineValues: {\n+        for (DataSet<?> set : mChart.getData().getDataSets()) {\n+          if(set instanceof LineDataSet)\n+            set.setDrawValues(!set.isDrawValuesEnabled());\n+        }\n+\n+        mChart.invalidate();\n+        break;\n+      }\n+      case R.id.actionToggleBarValues: {\n+        for (DataSet<?> set : mChart.getData().getDataSets()) {\n+          if(set instanceof BarDataSet)\n+            set.setDrawValues(!set.isDrawValuesEnabled());\n+        }\n+\n+        mChart.invalidate();\n+        break;\n+      }\n+      case R.id.actionToggleBarYDependency: {\n+        for (DataSet<?> set : mChart.getData().getDataSets()) {\n+          if(set instanceof BarDataSet) {\n+            YAxis.AxisDependency newAxisDependency = set.getAxisDependency().equals(YAxis.AxisDependency.LEFT) ? YAxis.AxisDependency.RIGHT : YAxis.AxisDependency.LEFT;\n+            set.setAxisDependency(newAxisDependency);\n+          }\n+        }\n+\n+        mChart.invalidate();\n+        break;\n+      }\n+      case R.id.actionToggleLineYDependency: {\n+        for (DataSet<?> set : mChart.getData().getDataSets()) {\n+          if(set instanceof LineDataSet) {\n+            YAxis.AxisDependency newAxisDependency = set.getAxisDependency().equals(YAxis.AxisDependency.LEFT) ? YAxis.AxisDependency.RIGHT : YAxis.AxisDependency.LEFT;\n+            set.setAxisDependency(newAxisDependency);\n+          }\n+        }\n+\n+        mChart.invalidate();\n+        break;\n+      }\n+    }\n+    return true;\n+  }\n }",
    "output": "Improved CombinedChart example. DataSets depend on different YAxis. Added a menu to toggle values annd YAxis dependency."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n@@ -14,6 +14,7 @@\n import com.github.mikephil.charting.charts.CandleStickChart;\n import com.github.mikephil.charting.components.XAxis;\n import com.github.mikephil.charting.components.XAxis.XAxisPosition;\n+import com.github.mikephil.charting.components.YAxis.AxisDependency;\n import com.github.mikephil.charting.components.YAxis;\n import com.github.mikephil.charting.data.CandleData;\n import com.github.mikephil.charting.data.CandleDataSet;\n@@ -57,17 +58,20 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         mChart.setDrawGridBackground(false);\n \n-        XAxis xLabels = mChart.getXAxis();\n-        xLabels.setPosition(XAxisPosition.BOTTOM);\n-        xLabels.setSpaceBetweenLabels(2);\n+        XAxis xAxis = mChart.getXAxis();\n+        xAxis.setPosition(XAxisPosition.BOTTOM);\n+        xAxis.setSpaceBetweenLabels(2);\n \n-        YAxis yLabels = mChart.getAxisLeft();  \n-        yLabels.setLabelCount(7);\n-        yLabels.setDrawGridLines(false);\n-        yLabels.setDrawAxisLine(false);\n+        YAxis leftAxis = mChart.getAxisLeft();  \n+//        leftAxis.setEnabled(false);\n+        leftAxis.setLabelCount(7);\n+        leftAxis.setDrawGridLines(false);\n+        leftAxis.setDrawAxisLine(false);\n+        leftAxis.setStartAtZero(true);\n         \n-        mChart.getAxisRight().setEnabled(false);\n-\n+        YAxis rightAxis = mChart.getAxisRight();\n+        rightAxis.setEnabled(false);\n+//        rightAxis.setStartAtZero(false);\n \n         // setting data\n         mSeekBarX.setProgress(15);\n@@ -186,6 +190,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n         }\n \n         CandleDataSet set1 = new CandleDataSet(yVals1, \"Data Set\");\n+        set1.setAxisDependency(AxisDependency.LEFT);\n         set1.setColor(Color.rgb(80, 80, 80));\n \n         CandleData data = new CandleData(xVals, set1);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -295,6 +295,7 @@ protected void calcMinMax() {\n         // consider starting at zero (0)\n         if (mAxisLeft.isStartAtZeroEnabled())\n             mAxisLeft.mAxisMinimum = 0f;\n+        \n         if (mAxisRight.isStartAtZeroEnabled())\n             mAxisRight.mAxisMinimum = 0f;\n \n@@ -871,10 +872,7 @@ public PointD getValuesByTouchPoint(float x, float y, AxisDependency axis) {\n         pts[0] = x;\n         pts[1] = y;\n \n-        if (axis == AxisDependency.LEFT)\n-            mLeftAxisTransformer.pixelsToValue(pts);\n-        else\n-            mRightAxisTransformer.pixelsToValue(pts);\n+        getTransformer(axis).pixelsToValue(pts);\n \n         double xTouchVal = pts[0];\n         double yTouchVal = pts[1];\n@@ -896,10 +894,7 @@ public PointD getPixelsForValues(float x, float y, AxisDependency axis) {\n                 x, y\n         };\n \n-        if (axis == AxisDependency.LEFT)\n-            mLeftAxisTransformer.pointValuesToPixel(pts);\n-        else\n-            mRightAxisTransformer.pointValuesToPixel(pts);\n+        getTransformer(axis).pointValuesToPixel(pts);\n \n         return new PointD(pts[0], pts[1]);\n     }",
    "output": "Merged."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n@@ -20,7 +20,7 @@\n import com.github.mikephil.charting.data.PieDataSet;\n import com.github.mikephil.charting.interfaces.OnChartValueSelectedListener;\n import com.github.mikephil.charting.utils.ColorTemplate;\n-import com.xxmassdeveloper.mpchartexample.custom.PercentFormatter;\n+import com.github.mikephil.charting.utils.PercentFormatter;\n import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n \n import java.util.ArrayList;\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/PercentFormatter.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/PercentFormatter.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/PercentFormatter.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/PercentFormatter.java\n@@ -1,20 +0,0 @@\n-package com.xxmassdeveloper.mpchartexample.custom;\n-\n-import com.github.mikephil.charting.utils.ValueFormatter;\n-\n-import java.text.DecimalFormat;\n-\n-public class PercentFormatter implements ValueFormatter {\n-\n-    private DecimalFormat mFormat;\n-    \n-    public PercentFormatter() {\n-        mFormat = new DecimalFormat(\"#,##0.0\");\n-    }\n-    \n-    @Override\n-    public String getFormattedValue(float value) {\n-        return mFormat.format(value) + \" %\";\n-    }\n-\n-}\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/PieChartItem.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/PieChartItem.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/PieChartItem.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/PieChartItem.java\n@@ -11,8 +11,8 @@\n import com.github.mikephil.charting.components.Legend.LegendPosition;\n import com.github.mikephil.charting.data.ChartData;\n import com.github.mikephil.charting.data.PieData;\n+import com.github.mikephil.charting.utils.PercentFormatter;\n import com.xxmassdeveloper.mpchartexample.R;\n-import com.xxmassdeveloper.mpchartexample.custom.PercentFormatter;\n \n public class PieChartItem extends ChartItem {\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -3,14 +3,11 @@\n \n import android.content.Context;\n import android.graphics.Canvas;\n-import android.graphics.Color;\n-import android.graphics.Paint;\n import android.graphics.PointF;\n import android.graphics.PorterDuff;\n import android.graphics.PorterDuffXfermode;\n import android.graphics.RectF;\n import android.graphics.Typeface;\n-import android.graphics.Paint.Style;\n import android.util.AttributeSet;\n \n import com.github.mikephil.charting.data.DataSet;\n@@ -476,34 +473,4 @@ public void setUsePercentValues(boolean enabled) {\n     public boolean isUsePercentValuesEnabled() {\n         return mUsePercentValues;\n     }\n-\n-    @Override\n-    public void setPaint(Paint p, int which) {\n-        super.setPaint(p, which);\n-\n-        switch (which) {\n-            case PAINT_HOLE:\n-                // mHolePaint = p;\n-                break;\n-            case PAINT_CENTER_TEXT:\n-                // mCenterTextPaint = p;\n-                break;\n-        }\n-    }\n-\n-    @Override\n-    public Paint getPaint(int which) {\n-        Paint p = super.getPaint(which);\n-        if (p != null)\n-            return p;\n-\n-        switch (which) {\n-            case PAINT_HOLE:\n-                // return mHolePaint;\n-            case PAINT_CENTER_TEXT:\n-                // return mCenterTextPaint;\n-        }\n-\n-        return null;\n-    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/PercentFormatter.java b/MPChartLib/src/com/github/mikephil/charting/utils/PercentFormatter.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/PercentFormatter.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/PercentFormatter.java\n@@ -0,0 +1,24 @@\n+\n+package com.github.mikephil.charting.utils;\n+\n+import java.text.DecimalFormat;\n+\n+/**\n+ * This ValueFormatter is just for convenience and simply puts a \"%\" sign after\n+ * each value. (Recommeded for PieChart)\n+ * \n+ * @author Philipp Jahoda\n+ */\n+public class PercentFormatter implements ValueFormatter {\n+\n+    protected DecimalFormat mFormat;\n+\n+    public PercentFormatter() {\n+        mFormat = new DecimalFormat(\"###,###,##0.0\");\n+    }\n+\n+    @Override\n+    public String getFormattedValue(float value) {\n+        return mFormat.format(value) + \" %\";\n+    }\n+}",
    "output": "Included PercentFormatter into the library."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n@@ -50,6 +50,7 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         mChart = (HorizontalBarChart) findViewById(R.id.chart1);\n         mChart.setOnChartValueSelectedListener(this);\n+        mChart.setHighlightEnabled(false);\n         \n         mChart.setDrawBarShadow(false);\n         \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -372,6 +372,9 @@ protected void calculateOffsets() {\n      */\n     protected void calcModulus() {\n \n+        if (mXAxis == null)\n+            return;\n+\n         float[] values = new float[9];\n         mViewPortHandler.getMatrixTouch().getValues(values);\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -19,7 +19,6 @@\n import android.graphics.drawable.Drawable;\n import android.os.Environment;\n import android.provider.MediaStore.Images;\n-import android.support.v4.view.ViewCompat;\n import android.text.TextUtils;\n import android.util.AttributeSet;\n import android.util.Log;\n@@ -63,7 +62,7 @@ public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entr\n     public static final String LOG_TAG = \"MPAndroidChart\";\n \n     /** flag that indicates if logging is enabled or not */\n-    protected boolean mLogEnabled = true;\n+    protected boolean mLogEnabled = false;\n \n     /** custom formatter that is used instead of the auto-formatter if set */\n     protected ValueFormatter mValueFormatter = null;\n@@ -189,7 +188,8 @@ protected void init() {\n \n                 @Override\n                 public void onAnimationUpdate(ValueAnimator animation) {\n-                    ViewCompat.postInvalidateOnAnimation(Chart.this);\n+                    //ViewCompat.postInvalidateOnAnimation(Chart.this);\n+                    postInvalidate();\n                 }\n             });\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -6,12 +6,8 @@\n import android.animation.ValueAnimator.AnimatorUpdateListener;\n import android.annotation.SuppressLint;\n import android.content.Context;\n-import android.graphics.Color;\n-import android.graphics.Paint;\n-import android.graphics.Paint.Style;\n import android.graphics.PointF;\n import android.graphics.RectF;\n-import android.support.v4.view.ViewCompat;\n import android.util.AttributeSet;\n import android.util.Log;\n import android.view.MotionEvent;\n@@ -470,13 +466,11 @@ public void spin(int durationmillis, float fromangle, float toangle) {\n         mSpinAnimator = ObjectAnimator.ofFloat(this, \"rotationAngle\", fromangle, toangle);\n         mSpinAnimator.setDuration(durationmillis);\n \n-        final ViewGroup view = this;\n-\n         mSpinAnimator.addUpdateListener(new AnimatorUpdateListener() {\n \n             @Override\n             public void onAnimationUpdate(ValueAnimator animation) {\n-                ViewCompat.postInvalidateOnAnimation(view);\n+                postInvalidate();\n             }\n         });\n         mSpinAnimator.start();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java\n@@ -182,8 +182,7 @@ protected void prepareBar(float x, float y, float barspace, Transformer trans) {\n     @Override\n     public void drawValues(Canvas c) {\n         // if values are drawn\n-        if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount()\n-                * mViewPortHandler.getScaleX()) {\n+        if (passesCheck()) {\n \n             ArrayList<BarDataSet> dataSets = mChart.getBarData().getDataSets();\n \n@@ -366,4 +365,9 @@ public float[] getTransformedValues(Transformer trans, ArrayList<BarEntry> entri\n                 mChart.getBarData(),\n                 mAnimator.getPhaseY());\n     }\n+    \n+    protected boolean passesCheck() {\n+        return mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount()\n+                * mViewPortHandler.getScaleX();\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java\n@@ -62,4 +62,9 @@ public float[] getTransformedValues(Transformer trans, ArrayList<BarEntry> entri\n     protected void drawValue(Canvas c, float val, float xPos, float yPos) {\n         super.drawValue(c, val, xPos + xOffset, yPos + yOffset);\n     }\n+    \n+    protected boolean passesCheck() {\n+        return mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount()\n+                * mViewPortHandler.getScaleY();\n+    }\n }",
    "output": "Merged, removed support library."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -114,8 +114,10 @@ protected float[] getMarkerPosition(Entry e, int dataSetIndex) {\n     @Override\n     public void notifyDataSetChanged() {\n         super.notifyDataSetChanged();\n-        mYAxisRenderer.computeAxis(0f, mData.getYMax());\n-        mXAxisRenderer.computeAxis(mData.getXValAverageLength(), mData.getXVals());\n+        if (mData != null) {\n+            mYAxisRenderer.computeAxis(0f, mData.getYMax());\n+            mXAxisRenderer.computeAxis(mData.getXValAverageLength(), mData.getXVals());\n+        }\n     }\n \n     @Override",
    "output": "Merge pull request #371 from gburca/master\n\nFixed null pointer exception in design view (issue #370)"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -114,8 +114,10 @@ protected float[] getMarkerPosition(Entry e, int dataSetIndex) {\n     @Override\n     public void notifyDataSetChanged() {\n         super.notifyDataSetChanged();\n-        mYAxisRenderer.computeAxis(0f, mData.getYMax());\n-        mXAxisRenderer.computeAxis(mData.getXValAverageLength(), mData.getXVals());\n+        if (mData != null) {\n+            mYAxisRenderer.computeAxis(0f, mData.getYMax());\n+            mXAxisRenderer.computeAxis(mData.getXValAverageLength(), mData.getXVals());\n+        }\n     }\n \n     @Override",
    "output": "Fixed null pointer exception in design view (issue #370)\n\n- In the Android Studio Preview mode, mData is null and throws an exception."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -357,7 +357,7 @@ public void drawExtras(Canvas c) {\n         drawCircles(c);\n     }\n \n-    private void drawCircles(Canvas c) {\n+    protected void drawCircles(Canvas c) {\n         mRenderPaint.setStyle(Paint.Style.FILL);\n \n         ArrayList<LineDataSet> dataSets = mChart.getLineData().getDataSets();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -200,7 +200,7 @@ public void drawExtras(Canvas c) {\n      * draws the hole in the center of the chart and the transparent circle /\n      * hole\n      */\n-    private void drawHole(Canvas c) {\n+    protected void drawHole(Canvas c) {\n \n         if (mChart.isDrawHoleEnabled()) {\n \n@@ -234,7 +234,7 @@ private void drawHole(Canvas c) {\n      * draws the description text in the center of the pie chart makes most\n      * sense when center-hole is enabled\n      */\n-    private void drawCenterText(Canvas c) {\n+    protected void drawCenterText(Canvas c) {\n \n         String centerText = mChart.getCenterText();\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n@@ -141,7 +141,7 @@ public void drawExtras(Canvas c) {\n         drawWeb(c);\n     }\n     \n-    private void drawWeb(Canvas c) {\n+    protected void drawWeb(Canvas c) {\n         \n         float sliceangle = mChart.getSliceAngle();\n ",
    "output": "Merge pull request #369 from Maragues/renderers-drawmethods-accesslevel\n\nChange Rendeder's access level modifiers for extra draw methods"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java\n@@ -357,7 +357,7 @@ public void drawExtras(Canvas c) {\n         drawCircles(c);\n     }\n \n-    private void drawCircles(Canvas c) {\n+    protected void drawCircles(Canvas c) {\n         mRenderPaint.setStyle(Paint.Style.FILL);\n \n         ArrayList<LineDataSet> dataSets = mChart.getLineData().getDataSets();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -200,7 +200,7 @@ public void drawExtras(Canvas c) {\n      * draws the hole in the center of the chart and the transparent circle /\n      * hole\n      */\n-    private void drawHole(Canvas c) {\n+    protected void drawHole(Canvas c) {\n \n         if (mChart.isDrawHoleEnabled()) {\n \n@@ -234,7 +234,7 @@ private void drawHole(Canvas c) {\n      * draws the description text in the center of the pie chart makes most\n      * sense when center-hole is enabled\n      */\n-    private void drawCenterText(Canvas c) {\n+    protected void drawCenterText(Canvas c) {\n \n         String centerText = mChart.getCenterText();\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java\n@@ -141,7 +141,7 @@ public void drawExtras(Canvas c) {\n         drawWeb(c);\n     }\n     \n-    private void drawWeb(Canvas c) {\n+    protected void drawWeb(Canvas c) {\n         \n         float sliceangle = mChart.getSliceAngle();\n ",
    "output": "Change Rendeder's access level modifiers for extra draw methods"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -325,26 +325,14 @@ protected void calculateOffsets() {\n \n         // offsets for y-labels\n         if (mAxisLeft.isEnabled()) {\n-            String label = mAxisLeft.getLongestLabel();\n-\n-            // calculate the maximum y-label width (including eventual\n-            // offsets)\n-            float ylabelwidth = Utils.calcTextWidth(mAxisRendererLeft.getAxisPaint(),\n-                    label + (mAxisLeft.mAxisMinimum < 0 ? \"---\" : \"++\")); // offsets\n-            offsetLeft += ylabelwidth + mAxisRendererLeft.getXOffset() / 2f;\n+            offsetLeft += mAxisLeft.getRequiredWidthSpace(mAxisRendererLeft.getAxisPaint());\n         }\n \n         if (mAxisRight.isEnabled()) {\n-            String label = mAxisRight.getLongestLabel();\n-\n-            // calculate the maximum y-label width (including eventual\n-            // offsets)\n-            float ylabelwidth = Utils.calcTextWidth(mAxisRendererRight.getAxisPaint(),\n-                    label + (mAxisLeft.mAxisMinimum < 0 ? \"---\" : \"++\")); // offsets\n-            offsetRight += ylabelwidth + mAxisRendererRight.getXOffset() / 2f;\n+            offsetRight += mAxisRight.getRequiredWidthSpace(mAxisRendererRight.getAxisPaint());\n         }\n \n-        float xlabelheight = Utils.calcTextHeight(mXAxisRenderer.getAxisPaint(), \"Q\") * 2f;\n+        float xlabelheight = mXAxis.mLabelHeight * 2f;\n \n         if (mXAxis.isEnabled()) {\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n@@ -1,6 +1,8 @@\n \n package com.github.mikephil.charting.components;\n \n+import android.graphics.Paint;\n+\n import com.github.mikephil.charting.utils.Utils;\n import com.github.mikephil.charting.utils.ValueFormatter;\n \n@@ -73,6 +75,9 @@ public class YAxis extends AxisBase {\n     /** the total range of values this axis covers */\n     public float mAxisRange = 0f;\n \n+    /** the offset in pixels this axis has on the x-axis */\n+    protected float mXOffset = 5f;\n+\n     /** the position of the y-labels relative to the chart */\n     private YAxisLabelPosition mPosition = YAxisLabelPosition.OUTSIDE_CHART;\n \n@@ -91,6 +96,7 @@ public enum AxisDependency {\n     public YAxis(AxisDependency position) {\n         this.mAxisDependency = position;\n         this.mLimitLines = new ArrayList<LimitLine>();\n+        this.mXOffset = Utils.convertDpToPixel(5f);\n     }\n \n     public AxisDependency getAxisDependency() {\n@@ -367,6 +373,11 @@ public float getSpaceBottom() {\n         return mSpacePercentBottom;\n     }\n \n+    public float getRequiredWidthSpace(Paint p) {\n+        String label = getLongestLabel();\n+        return (float) Utils.calcTextWidth(p, label) + getXOffset() * 2f;\n+    }\n+\n     /**\n      * Returns the longest formatted label (in terms of characters) the y-labels\n      * contain.\n@@ -410,4 +421,23 @@ public String getFormattedLabel(int index) {\n \n         return text;\n     }\n+\n+    /**\n+     * Returns the used offset on the x-axis for drawing the axis labels. This\n+     * offset is applied before and after the label.\n+     * \n+     * @return\n+     */\n+    public float getXOffset() {\n+        return mXOffset;\n+    }\n+\n+    /**\n+     * Sets the used x-axis offset for the labels on this axis.\n+     * \n+     * @param xOffset\n+     */\n+    public void setXOffset(float xOffset) {\n+        mXOffset = Utils.convertDpToPixel(xOffset);\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -24,8 +24,6 @@ public class YAxisRenderer extends AxisRenderer {\n \n     protected YAxis mYAxis;\n \n-    protected float mXOffset = 5f;\n-\n     public YAxisRenderer(ViewPortHandler viewPortHandler, YAxis yAxis, Transformer trans) {\n         super(viewPortHandler, trans);\n \n@@ -38,24 +36,6 @@ public YAxisRenderer(ViewPortHandler viewPortHandler, YAxis yAxis, Transformer t\n         mLimitLinePaint.setStyle(Paint.Style.FILL_AND_STROKE);\n     }\n \n-    /**\n-     * Returns the used offset on the x-axis for drawing the axis labels.\n-     * \n-     * @return\n-     */\n-    public float getXOffset() {\n-        return Utils.convertDpToPixel(mXOffset);\n-    }\n-\n-    /**\n-     * Sets the used offset for the labels on the x-axis.\n-     * \n-     * @param xOffset\n-     */\n-    public void setXOffset(float xOffset) {\n-        mXOffset = xOffset;\n-    }\n-\n     /**\n      * Computes the axis values.\n      * \n@@ -183,7 +163,7 @@ public void renderAxis(Canvas c) {\n         mAxisPaint.setTextSize(mYAxis.getTextSize());\n         mAxisPaint.setColor(mYAxis.getTextColor());\n \n-        float xoffset = getXOffset();\n+        float xoffset = mYAxis.getXOffset();\n         float yoffset = Utils.calcTextHeight(mAxisPaint, \"A\") / 2.5f;\n \n         AxisDependency dependency = mYAxis.getAxisDependency();",
    "output": "Further improved offset calculation."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -3,12 +3,14 @@\n \n import android.content.Context;\n import android.graphics.Canvas;\n+import android.graphics.Color;\n import android.graphics.Paint;\n import android.graphics.PointF;\n import android.graphics.PorterDuff;\n import android.graphics.PorterDuffXfermode;\n import android.graphics.RectF;\n import android.graphics.Typeface;\n+import android.graphics.Paint.Style;\n import android.util.AttributeSet;\n \n import com.github.mikephil.charting.data.DataSet;\n@@ -106,7 +108,7 @@ protected void onDraw(Canvas canvas) {\n         mLegendRenderer.renderLegend(mDrawCanvas, mLegend);\n \n         drawDescription();\n-\n+        \n         canvas.drawBitmap(mDrawBitmap, 0, 0, mDrawPaint);\n     }\n \n@@ -128,26 +130,7 @@ protected void calculateOffsets() {\n         mCircleBox.set(c.x - boxSize, c.y - boxSize,\n                 c.x + boxSize, c.y + boxSize);\n     }\n-\n-    // @Override\n-    // protected void prepareContentRect() {\n-    // super.prepareContentRect();\n-    //\n-    // // prevent nullpointer when no data set\n-    // if (mDataNotSet)\n-    // return;\n-    //\n-    // float diameter = getDiameter();\n-    // float boxSize = diameter / 2f;\n-    //\n-    // PointF c = getCenterOffsets();\n-    //\n-    // // create the circle box that will contain the pie-chart (the bounds of\n-    // // the pie-chart)\n-    // mCircleBox.set(c.x - boxSize, c.y - boxSize,\n-    // c.x + boxSize, c.y + boxSize);\n-    // }\n-\n+    \n     @Override\n     protected void calcMinMax() {\n         super.calcMinMax();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -6,7 +6,9 @@\n import android.animation.ValueAnimator.AnimatorUpdateListener;\n import android.annotation.SuppressLint;\n import android.content.Context;\n-import android.graphics.Paint.Align;\n+import android.graphics.Color;\n+import android.graphics.Paint;\n+import android.graphics.Paint.Style;\n import android.graphics.PointF;\n import android.graphics.RectF;\n import android.support.v4.view.ViewCompat;\n@@ -87,6 +89,9 @@ public void notifyDataSetChanged() {\n         calculateOffsets();\n     }\n \n+    PointF ref;\n+    PointF bot;\n+\n     @Override\n     protected void calculateOffsets() {\n \n@@ -101,42 +106,39 @@ protected void calculateOffsets() {\n \n                 legendRight = getFullLegendWidth() + spacing;\n \n-                mLegendRenderer.getLabelPaint().setTextAlign(Align.LEFT);\n-                // legendTop = mLegend.getFullHeight(mLegendLabelPaint);\n-\n             } else if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART) {\n \n                 // this is the space between the legend and the chart\n-                float spacing = Utils.convertDpToPixel(13f);\n+                float spacing = Utils.convertDpToPixel(8f);\n \n                 float legendWidth = getFullLegendWidth() + spacing;\n \n-                float legendHeight = mLegend.getFullHeight(mLegendRenderer.getLabelPaint());// +\n-                                                                              // mOffsetTop;\n+                float legendHeight = mLegend.mNeededHeight + mLegend.mTextHeightMax;\n \n                 PointF c = getCenter();\n \n-                PointF bottomRight = new PointF(getWidth() - legendWidth, legendHeight);\n-                PointF reference = getPosition(c, getRadius(), 320);\n-\n+                PointF bottomRight = new PointF(getWidth() - legendWidth + 15, legendHeight + 15);\n                 float distLegend = distanceToCenter(bottomRight.x, bottomRight.y);\n+\n+                PointF reference = getPosition(c, getRadius(),\n+                        getAngleForPoint(bottomRight.x, bottomRight.y));\n+\n+                ref = reference;\n+                bot = bottomRight;\n+\n                 float distReference = distanceToCenter(reference.x, reference.y);\n                 float min = Utils.convertDpToPixel(5f);\n \n                 if (distLegend < distReference) {\n \n                     float diff = distReference - distLegend;\n-\n                     legendRight = min + diff;\n-                    legendTop = min + diff;\n                 }\n \n-                if (bottomRight.y >= c.y) {\n+                if (bottomRight.y >= c.y && getHeight() - legendWidth > getWidth()) {\n                     legendRight = legendWidth;\n                 }\n \n-                mLegendRenderer.getLabelPaint().setTextAlign(Align.LEFT);\n-\n             } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n                     || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT\n                     || mLegend.getPosition() == LegendPosition.BELOW_CHART_CENTER) {\n@@ -148,7 +150,7 @@ protected void calculateOffsets() {\n             legendTop += getRequiredBaseOffset();\n         }\n \n-        float min = Utils.convertDpToPixel(11f);\n+        float min = Utils.convertDpToPixel(10f);\n \n         float offsetLeft = Math.max(min, getRequiredBaseOffset());\n         float offsetTop = Math.max(min, legendTop);\n@@ -390,8 +392,7 @@ public float getDiameter() {\n      * @return\n      */\n     private float getFullLegendWidth() {\n-        return mLegend.getMaximumEntryWidth(mLegendRenderer.getLabelPaint())\n-                + mLegend.getFormSize() + mLegend.getFormToTextSpace();\n+        return mLegend.mTextWidthMax + mLegend.getFormSize() + mLegend.getFormToTextSpace();\n     }\n \n     /**\n@@ -468,11 +469,11 @@ public void spin(int durationmillis, float fromangle, float toangle) {\n \n         mSpinAnimator = ObjectAnimator.ofFloat(this, \"rotationAngle\", fromangle, toangle);\n         mSpinAnimator.setDuration(durationmillis);\n-        \n+\n         final ViewGroup view = this;\n-        \n+\n         mSpinAnimator.addUpdateListener(new AnimatorUpdateListener() {\n-            \n+\n             @Override\n             public void onAnimationUpdate(ValueAnimator animation) {\n                 ViewCompat.postInvalidateOnAnimation(view);",
    "output": "Worked on offset calculation for pie- and radarchart."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java\n@@ -62,7 +62,6 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         XAxis xAxis = mChart.getXAxis();\n         xAxis.setPosition(XAxisPosition.BOTTOM);\n-        xAxis.setCenterXLabelText(true);\n         xAxis.setSpaceBetweenLabels(0);\n         xAxis.setDrawGridLines(false);\n         \n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n@@ -85,7 +85,6 @@ protected void onCreate(Bundle savedInstanceState) {\n         l.setTypeface(tf);\n \n         XAxis xl = mChart.getXAxis();\n-        xl.setCenterXLabelText(true);\n         xl.setTypeface(tf);\n \n         YAxis leftAxis = mChart.getAxisLeft();\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java\n@@ -91,7 +91,6 @@ public View getView(int position, View convertView, ViewGroup parent) {\n             holder.chart.setValueTextColor(Color.WHITE);\n \n             XAxis xAxis = holder.chart.getXAxis();\n-            xAxis.setCenterXLabelText(true);\n             xAxis.setPosition(XAxisPosition.BOTTOM);\n             xAxis.setTypeface(mTf);\n             xAxis.setDrawGridLines(false);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n@@ -82,7 +82,6 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         XAxis xLabels = mChart.getXAxis();\n         xLabels.setPosition(XAxisPosition.TOP);\n-        xLabels.setCenterXLabelText(true);\n \n         // mChart.setDrawXLabels(false);\n         // mChart.setDrawYLabels(false);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/BarChartItem.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/BarChartItem.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/BarChartItem.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/BarChartItem.java\n@@ -54,7 +54,6 @@ public View getView(int position, View convertView, Context c) {\n         holder.chart.setDrawBarShadow(false);\n \n         XAxis xAxis = holder.chart.getXAxis();\n-        xAxis.setCenterXLabelText(true);\n         xAxis.setPosition(XAxisPosition.BOTTOM);\n         xAxis.setTypeface(mTf);\n         xAxis.setDrawGridLines(false);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java\n@@ -47,9 +47,6 @@ public class XAxis extends AxisBase {\n      */\n     public int mYAxisLabelModulus = 1;\n \n-    /** if true, x-axis label text is centered when using barcharts */\n-    private boolean mCenterXAxisLabels = false;\n-\n     /**\n      * if set to true, the chart will avoid that the first and last label entry\n      * in the chart \"clip\" off the edge of the chart\n@@ -70,26 +67,6 @@ public enum XAxisPosition {\n         TOP, BOTTOM, BOTH_SIDED, TOP_INSIDE, BOTTOM_INSIDE\n     }\n \n-    /**\n-     * returns true if centering x-axis labels when using barcharts is enabled,\n-     * false if not\n-     * \n-     * @return\n-     */\n-    public boolean isCenterXLabelsEnabled() {\n-        return mCenterXAxisLabels;\n-    }\n-\n-    /**\n-     * set this to true to center the x-label text when using barcharts ,\n-     * default: false\n-     * \n-     * @param enabled\n-     */\n-    public void setCenterXLabelText(boolean enabled) {\n-        mCenterXAxisLabels = enabled;\n-    }\n-\n     /**\n      * if set to true, the x-label entries will adjust themselves when scaling\n      * the graph default: true\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n@@ -121,10 +121,6 @@ protected void drawLabels(Canvas c, float pos) {\n \n             position[0] = i;\n \n-            // center the text\n-            if (mXAxis.isCenterXLabelsEnabled())\n-                position[0] += 0.5f;\n-\n             mTrans.pointValuesToPixel(position);\n \n             if (mViewPortHandler.isInBoundsX(position[0])) {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererBarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRendererBarChart.java\n@@ -39,11 +39,12 @@ protected void drawLabels(Canvas c, float pos) {\n         for (int i = 0; i < mXAxis.getValues().size(); i += mXAxis.mAxisLabelModulus) {\n \n             position[0] = i * step + i * bd.getGroupSpace()\n-                    + bd.getGroupSpace() / 2f - 0.5f;\n+                    + bd.getGroupSpace() / 2f;\n \n-            // center the text\n-            if (mXAxis.isCenterXLabelsEnabled())\n-                position[0] += (step / 2f);\n+            // consider groups (center label for each group)\n+            if (step > 1) {\n+                position[0] += ((float) step - 1f) / 2f;\n+            }\n \n             mTrans.pointValuesToPixel(position);\n ",
    "output": "Fixed bug concerning x-label centering in BarChart."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -81,10 +81,10 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         Typeface tf = Typeface.createFromAsset(getAssets(), \"OpenSans-Regular.ttf\");\n \n-        XAxis xl = mChart.getXAxis();\n-        xl.setPosition(XAxisPosition.BOTTOM);\n-        xl.setTypeface(tf);\n-        xl.setDrawGridLines(false);\n+        XAxis xAxis = mChart.getXAxis();\n+        xAxis.setPosition(XAxisPosition.BOTTOM);\n+        xAxis.setTypeface(tf);\n+        xAxis.setDrawGridLines(false);\n \n         YAxis leftAxis = mChart.getAxisLeft();\n         leftAxis.setTypeface(tf);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -339,6 +339,7 @@ private void setData(int count, float range) {\n         leftAxis.addLimitLine(ll2);\n         leftAxis.setAxisMaxValue(220f);\n         leftAxis.setAxisMinValue(-50f);\n+        leftAxis.setStartAtZero(false);\n \n         mChart.getAxisRight().setEnabled(false);\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -14,7 +14,6 @@\n import com.github.mikephil.charting.utils.PointD;\n import com.github.mikephil.charting.utils.Transformer;\n import com.github.mikephil.charting.utils.Utils;\n-import com.github.mikephil.charting.utils.ValueFormatter;\n \n import java.util.ArrayList;\n \n@@ -315,15 +314,15 @@ public void renderLimitLines(Canvas c) {\n             \n             String label = l.getLabel();\n \n-            // if drawing the limit-value is enabled\n+            // if drawing the limit-value label is enabled\n             if (label != null && !label.equals(\"\")) {\n \n                 float xOffset = Utils.convertDpToPixel(4f);\n-                float yOffset = l.getLineWidth() + xOffset;\n+                float yOffset = l.getLineWidth() + Utils.calcTextHeight(mLimitLinePaint, label) / 2f;\n \n                 mLimitLinePaint.setPathEffect(null);\n                 mLimitLinePaint.setColor(l.getTextColor());\n-                mLimitLinePaint.setStrokeWidth(1f);\n+                mLimitLinePaint.setStrokeWidth(0.5f);\n                 mLimitLinePaint.setTextSize(l.getTextSize());\n \n                 if (l.getLabelPosition() == LimitLabelPosition.POS_RIGHT) {",
    "output": "Fixed issue concerning start-at-zero."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java\n@@ -19,6 +19,7 @@\n import com.github.mikephil.charting.components.LimitLine;\n import com.github.mikephil.charting.components.LimitLine.LimitLabelPosition;\n import com.github.mikephil.charting.components.XAxis;\n+import com.github.mikephil.charting.components.YAxis;\n import com.github.mikephil.charting.data.DataSet;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.LineData;\n@@ -321,20 +322,25 @@ private void setData(int count, float range) {\n         // create a data object with the datasets\n         LineData data = new LineData(xVals, dataSets);\n \n-        LimitLine ll1 = new LimitLine(130f);\n+        LimitLine ll1 = new LimitLine(130f, \"Upper Limit\");\n         ll1.setLineWidth(4f);\n         ll1.enableDashedLine(10f, 10f, 0f);\n-        ll1.setDrawValue(true);\n         ll1.setLabelPosition(LimitLabelPosition.POS_RIGHT);\n+        ll1.setTextSize(10f);\n \n-        LimitLine ll2 = new LimitLine(-30f);\n+        LimitLine ll2 = new LimitLine(-30f, \"Lower Limit\");\n         ll2.setLineWidth(4f);\n         ll2.enableDashedLine(10f, 10f, 0f);\n-        ll2.setDrawValue(true);\n         ll2.setLabelPosition(LimitLabelPosition.POS_RIGHT);\n+        ll2.setTextSize(10f);\n+        \n+        YAxis leftAxis = mChart.getAxisLeft();\n+        leftAxis.addLimitLine(ll1);\n+        leftAxis.addLimitLine(ll2);\n+        leftAxis.setAxisMaxValue(220f);\n+        leftAxis.setAxisMinValue(-50f);\n \n-        mChart.getAxisLeft().addLimitLine(ll1);\n-        mChart.getAxisLeft().addLimitLine(ll2);\n+        mChart.getAxisRight().setEnabled(false);\n \n         // set data\n         mChart.setData(data);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -190,8 +190,8 @@ protected void onDraw(Canvas canvas) {\n \n         mRenderer.drawData(mDrawCanvas);\n \n-        mAxisRendererLeft.renderLimitLines(mDrawCanvas, mValueFormatter);\n-        mAxisRendererRight.renderLimitLines(mDrawCanvas, mValueFormatter);\n+        mAxisRendererLeft.renderLimitLines(mDrawCanvas);\n+        mAxisRendererRight.renderLimitLines(mDrawCanvas);\n \n         // if highlighting is enabled\n         if (mHighlightEnabled && mHighLightIndicatorEnabled && valuesToHighlight())\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -131,7 +131,7 @@ protected void onDraw(Canvas canvas) {\n         if (mDrawWeb)\n             mRenderer.drawExtras(mDrawCanvas);\n \n-        mYAxisRenderer.renderLimitLines(mDrawCanvas, mValueFormatter);\n+        mYAxisRenderer.renderLimitLines(mDrawCanvas);\n \n         mRenderer.drawData(mDrawCanvas);\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/LimitLine.java b/MPChartLib/src/com/github/mikephil/charting/components/LimitLine.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/LimitLine.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/LimitLine.java\n@@ -27,8 +27,11 @@ public class LimitLine {\n     /** the color of the value-text */\n     private int mValueTextColor = Color.BLACK;\n \n-    /** flag that indicates if the value of the limit line is drawn or not */\n-    private boolean mDrawValue = true;\n+    /** the size of the label text */\n+    private float mTextSize = 13f;\n+\n+    /** label string that is drawn next to the limit line */\n+    private String mLabel = \"\";\n \n     /** the path effect of this LimitLine that makes dashed lines possible */\n     private DashPathEffect mDashPathEffect = null;\n@@ -44,12 +47,25 @@ public enum LimitLabelPosition {\n     /**\n      * Constructor with limit.\n      * \n-     * @param limit\n+     * @param limit - the position (the value) on the y-axis where this line\n+     *            should appear\n      */\n     public LimitLine(float limit) {\n         mLimit = limit;\n     }\n \n+    /**\n+     * Constructor with limit and label.\n+     * \n+     * @param limit - the position (the value) on the y-axis where this line\n+     *            should appear\n+     * @param label - provide \"\" if no label is required\n+     */\n+    public LimitLine(float limit, String label) {\n+        mLimit = limit;\n+        mLabel = label;\n+    }\n+\n     /**\n      * Returns the limit that is set for this line.\n      * \n@@ -141,25 +157,6 @@ public DashPathEffect getDashPathEffect() {\n         return mDashPathEffect;\n     }\n \n-    /**\n-     * Set this to true to enable the value of the LimitLine to be drawn next to\n-     * it. Default: true, not supported for RadarChart.\n-     * \n-     * @param enabled\n-     */\n-    public void setDrawValue(boolean enabled) {\n-        mDrawValue = enabled;\n-    }\n-\n-    /**\n-     * Returns true if drawing the value is enabled, false if not.\n-     * \n-     * @return\n-     */\n-    public boolean isDrawValueEnabled() {\n-        return mDrawValue;\n-    }\n-\n     /**\n      * Sets the color of the value-text that is drawn next to the LimitLine.\n      * \n@@ -196,4 +193,41 @@ public void setLabelPosition(LimitLabelPosition pos) {\n     public LimitLabelPosition getLabelPosition() {\n         return mLabelPosition;\n     }\n+\n+    /**\n+     * Sets the label that is drawn next to the limit line. Provide \"\" if no\n+     * label is required.\n+     * \n+     * @param label\n+     */\n+    public void setLabel(String label) {\n+        mLabel = label;\n+    }\n+\n+    /**\n+     * Returns the label that is drawn next to the limit line.\n+     * \n+     * @return\n+     */\n+    public String getLabel() {\n+        return mLabel;\n+    }\n+\n+    /**\n+     * Sets the size of the label-text.\n+     * \n+     * @param size\n+     */\n+    public void setTextSize(float size) {\n+        mTextSize = Utils.convertDpToPixel(size);\n+    }\n+\n+    /**\n+     * Returns the size of the label text.\n+     * \n+     * @return\n+     */\n+    public float getTextSize() {\n+        return mTextSize;\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java\n@@ -7,7 +7,6 @@\n \n import com.github.mikephil.charting.components.XAxis;\n import com.github.mikephil.charting.components.XAxis.XAxisPosition;\n-import com.github.mikephil.charting.components.YAxis.AxisDependency;\n import com.github.mikephil.charting.utils.Transformer;\n import com.github.mikephil.charting.utils.Utils;\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -36,7 +36,7 @@ public YAxisRenderer(ViewPortHandler viewPortHandler, YAxis yAxis, Transformer t\n         mAxisPaint.setTextSize(Utils.convertDpToPixel(10f));\n \n         mLimitLinePaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n-        mLimitLinePaint.setStyle(Paint.Style.STROKE);\n+        mLimitLinePaint.setStyle(Paint.Style.FILL_AND_STROKE);\n     }\n \n     /**\n@@ -286,7 +286,7 @@ public void renderGridLines(Canvas c) {\n      * \n      * @param c\n      */\n-    public void renderLimitLines(Canvas c, ValueFormatter valueFormatter) {\n+    public void renderLimitLines(Canvas c) {\n \n         ArrayList<LimitLine> limitLines = mYAxis.getLimitLines();\n \n@@ -312,16 +312,19 @@ public void renderLimitLines(Canvas c, ValueFormatter valueFormatter) {\n             mLimitLinePaint.setStrokeWidth(l.getLineWidth());\n \n             c.drawLines(pts, mLimitLinePaint);\n+            \n+            String label = l.getLabel();\n \n             // if drawing the limit-value is enabled\n-            if (l.isDrawValueEnabled()) {\n+            if (label != null && !label.equals(\"\")) {\n \n                 float xOffset = Utils.convertDpToPixel(4f);\n                 float yOffset = l.getLineWidth() + xOffset;\n-                String label = valueFormatter.getFormattedValue(l.getLimit());\n \n                 mLimitLinePaint.setPathEffect(null);\n                 mLimitLinePaint.setColor(l.getTextColor());\n+                mLimitLinePaint.setStrokeWidth(1f);\n+                mLimitLinePaint.setTextSize(l.getTextSize());\n \n                 if (l.getLabelPosition() == LimitLabelPosition.POS_RIGHT) {\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java\n@@ -92,7 +92,7 @@ public void renderAxis(Canvas c) {\n     }\n \n     @Override\n-    public void renderLimitLines(Canvas c, ValueFormatter valueFormatter) {\n+    public void renderLimitLines(Canvas c) {\n \n         ArrayList<LimitLine> limitLines = mYAxis.getLimitLines();\n ",
    "output": "Fixed issues concerning limit lines."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n@@ -20,6 +20,7 @@\n import com.github.mikephil.charting.data.PieDataSet;\n import com.github.mikephil.charting.interfaces.OnChartValueSelectedListener;\n import com.github.mikephil.charting.utils.ColorTemplate;\n+import com.xxmassdeveloper.mpchartexample.custom.PercentFormatter;\n import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n \n import java.util.ArrayList;\n@@ -50,6 +51,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         mSeekBarY.setOnSeekBarChangeListener(this);\n \n         mChart = (PieChart) findViewById(R.id.chart1);\n+        mChart.setValueFormatter(new PercentFormatter());\n \n         // change the color of the center-hole\n         // mChart.setHoleColor(Color.rgb(235, 235, 235));\n@@ -137,6 +139,10 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 mChart.saveToPath(\"title\" + System.currentTimeMillis(), \"\");\n                 break;\n             }\n+            case R.id.actionTogglePercent:\n+                mChart.setUsePercentValues(!mChart.isUsePercentValuesEnabled());\n+                mChart.invalidate();\n+                break;\n             case R.id.animateX: {\n                 mChart.animateX(1800);\n                 break;\n@@ -180,8 +186,8 @@ private void setData(int count, float range) {\n         for (int i = 0; i < count + 1; i++)\n             xVals.add(mParties[i % mParties.length]);\n \n-        PieDataSet set1 = new PieDataSet(yVals1, \"Election Results\");\n-        set1.setSliceSpace(3f);\n+        PieDataSet dataSet = new PieDataSet(yVals1, \"Election Results\");\n+        dataSet.setSliceSpace(3f);\n \n         // add a lot of colors\n \n@@ -204,9 +210,9 @@ private void setData(int count, float range) {\n \n         colors.add(ColorTemplate.getHoloBlue());\n \n-        set1.setColors(colors);\n+        dataSet.setColors(colors);\n \n-        PieData data = new PieData(xVals, set1);\n+        PieData data = new PieData(xVals, dataSet);\n         mChart.setData(data);\n \n         // undo all highlights\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/PercentFormatter.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/PercentFormatter.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/PercentFormatter.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/PercentFormatter.java\n@@ -1,23 +1,20 @@\n package com.xxmassdeveloper.mpchartexample.custom;\n \n-import com.github.mikephil.charting.charts.PieChart;\n import com.github.mikephil.charting.utils.ValueFormatter;\n \n import java.text.DecimalFormat;\n \n public class PercentFormatter implements ValueFormatter {\n \n     private DecimalFormat mFormat;\n-    private PieChart mChart;\n     \n-    public PercentFormatter(PieChart chart) {\n+    public PercentFormatter() {\n         mFormat = new DecimalFormat(\"#,##0.0\");\n-        this.mChart = chart;\n     }\n     \n     @Override\n     public String getFormattedValue(float value) {\n-        return mFormat.format(mChart.getPercentOfTotal(value)) + \" %\";\n+        return mFormat.format(value) + \" %\";\n     }\n \n }\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/PieChartItem.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/PieChartItem.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/PieChartItem.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/PieChartItem.java\n@@ -57,7 +57,7 @@ public View getView(int position, View convertView, Context c) {\n         holder.chart.setCenterTextTypeface(mTf);\n         holder.chart.setCenterTextSize(18f);\n         holder.chart.setValueTextSize(11f);\n-        holder.chart.setValueFormatter(new PercentFormatter(holder.chart));\n+        holder.chart.setValueFormatter(new PercentFormatter());\n \n         // set data\n         holder.chart.setData((PieData) mChartData);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -32,7 +32,7 @@ public class PieChart extends PieRadarChartBase<PieData> {\n      * drawing the circle\n      */\n     private RectF mCircleBox = new RectF();\n-    \n+\n     /** flag indicating if the x-labels should be drawn or not */\n     protected boolean mDrawXLabels = true;\n \n@@ -45,6 +45,9 @@ public class PieChart extends PieRadarChartBase<PieData> {\n     /** if true, the white hole inside the chart will be drawn */\n     private boolean mDrawHole = true;\n \n+    /** if true, the values inside the piechart are drawn as percent values */\n+    private boolean mUsePercentValues = false;\n+\n     /**\n      * variable for the text that is drawn in the center of the pie-chart. If\n      * this value is null, the default is \"Total Value\\n + getYValueSum()\"\n@@ -456,7 +459,7 @@ public void setTransparentCircleRadius(final float percent) {\n \n     public float getTransparentCircleRadius() {\n         return mTransparentCircleRadiusPercent;\n-    }    \n+    }\n \n     /**\n      * set this to true to draw the x-value text into the pie slices\n@@ -476,6 +479,21 @@ public boolean isDrawSliceTextEnabled() {\n         return mDrawXLabels;\n     }\n \n+    /**\n+     * If this is enabled, values inside the PieChart are drawn in percent and\n+     * not with their original value. Values provided for the ValueFormatter to\n+     * format are then provided in percent.\n+     * \n+     * @param enabled\n+     */\n+    public void setUsePercentValues(boolean enabled) {\n+        mUsePercentValues = enabled;\n+    }\n+\n+    public boolean isUsePercentValuesEnabled() {\n+        return mUsePercentValues;\n+    }\n+\n     @Override\n     public void setPaint(Paint p, int which) {\n         super.setPaint(p, which);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/PieData.java b/MPChartLib/src/com/github/mikephil/charting/data/PieData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/PieData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/PieData.java\n@@ -6,20 +6,21 @@\n /**\n  * A PieData object can only represent one DataSet. Unlike all other charts, the\n  * legend labels of the PieChart are created from the x-values array, and not\n- * from the DataSet labels.\n+ * from the DataSet labels. Each PieData object can only represent one\n+ * PieDataSet (multiple PieDataSets inside a single PieChart are not possible).\n  * \n  * @author Philipp Jahoda\n  */\n public class PieData extends ChartData<PieDataSet> {\n-    \n+\n     public PieData() {\n         super();\n     }\n-    \n+\n     public PieData(ArrayList<String> xVals) {\n         super(xVals);\n     }\n-    \n+\n     public PieData(String[] xVals) {\n         super(xVals);\n     }\n@@ -31,19 +32,42 @@ public PieData(ArrayList<String> xVals, PieDataSet dataSet) {\n     public PieData(String[] xVals, PieDataSet dataSet) {\n         super(xVals, toArrayList(dataSet));\n     }\n-    \n+\n     private static ArrayList<PieDataSet> toArrayList(PieDataSet dataSet) {\n         ArrayList<PieDataSet> sets = new ArrayList<PieDataSet>();\n         sets.add(dataSet);\n         return sets;\n     }\n \n     /**\n-     * Returns the DataSet this PieData object represents.\n+     * Sets the PieDataSet this data object should represent.\n+     * \n+     * @param dataSet\n+     */\n+    public void setDataSet(PieDataSet dataSet) {\n+        mDataSets.clear();\n+        mDataSets.add(dataSet);\n+        init(mDataSets);\n+    }\n+\n+    /**\n+     * Returns the DataSet this PieData object represents. A PieData object can\n+     * only contain one DataSet.\n      * \n      * @return\n      */\n     public PieDataSet getDataSet() {\n-        return (PieDataSet) mDataSets.get(0);\n+        return mDataSets.get(0);\n+    }\n+\n+    @Override\n+    public PieDataSet getDataSetByIndex(int index) {\n+        return index == 0 ? getDataSet() : null;\n+    }\n+\n+    @Override\n+    public PieDataSet getDataSetByLabel(String label, boolean ignorecase) {\n+        return ignorecase ? label.equalsIgnoreCase(mDataSets.get(0).getLabel()) ? mDataSets.get(0)\n+                : null : label.equals(mDataSets.get(0).getLabel()) ? mDataSets.get(0) : null;\n     }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java\n@@ -51,11 +51,11 @@ public PieChartRenderer(PieChart chart, ChartAnimator animator,\n         mValuePaint.setColor(Color.WHITE);\n         mValuePaint.setTextAlign(Align.CENTER);\n     }\n-    \n+\n     public Paint getPaintHole() {\n         return mHolePaint;\n     }\n-    \n+\n     public Paint getPaintCenterText() {\n         return mCenterTextPaint;\n     }\n@@ -155,7 +155,8 @@ public void drawValues(Canvas c) {\n                         * Math.sin(Math.toRadians((rotationAngle + absoluteAngles[cnt] - offset)\n                                 * mAnimator.getPhaseY())) + center.y);\n \n-                float value = entries.get(j).getVal();\n+                float value = mChart.isUsePercentValuesEnabled() ? entries.get(j).getVal()\n+                        / mChart.getYValueSum() * 100f : entries.get(j).getVal();\n \n                 String val = mChart.getValueFormatter().getFormattedValue(value);\n ",
    "output": "PieChart can now again represent percent values."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n@@ -17,6 +17,7 @@\n import com.github.mikephil.charting.charts.LineChart;\n import com.github.mikephil.charting.components.Legend;\n import com.github.mikephil.charting.components.Legend.LegendForm;\n+import com.github.mikephil.charting.components.YAxis.AxisDependency;\n import com.github.mikephil.charting.components.XAxis;\n import com.github.mikephil.charting.components.YAxis;\n import com.github.mikephil.charting.data.DataSet;\n@@ -108,11 +109,16 @@ protected void onCreate(Bundle savedInstanceState) {\n         xl.setTypeface(tf);\n         xl.setTextColor(Color.WHITE);\n \n-        YAxis yl = mChart.getAxisLeft();\n-        yl.setTypeface(tf);\n-        yl.setTextColor(Color.WHITE);\n-        yl.setAxisMaxValue(300);\n-        yl.setAxisMinValue(-100f);\n+        YAxis leftAxis = mChart.getAxisLeft();\n+        leftAxis.setTypeface(tf);\n+        leftAxis.setTextColor(ColorTemplate.getHoloBlue());\n+        \n+        YAxis rightAxis = mChart.getAxisRight();\n+        rightAxis.setTypeface(tf);\n+        rightAxis.setTextColor(Color.RED);\n+        \n+//        yl.setAxisMaxValue(300f);\n+//        yl.setAxisMinValue(-100f);\n     }\n \n     @Override\n@@ -265,18 +271,19 @@ private void setData(int count, float range) {\n             xVals.add((i) + \"\");\n         }\n \n-        ArrayList<Entry> yVals = new ArrayList<Entry>();\n+        ArrayList<Entry> yVals1 = new ArrayList<Entry>();\n \n         for (int i = 0; i < count; i++) {\n             float mult = (range + 1);\n             float val = (float) (Math.random() * mult) + 3;// + (float)\n                                                            // ((mult *\n                                                            // 0.1) / 10);\n-            yVals.add(new Entry(val, i));\n+            yVals1.add(new Entry(val, i));\n         }\n \n         // create a dataset and give it a type\n-        LineDataSet set1 = new LineDataSet(yVals, \"DataSet 1\");\n+        LineDataSet set1 = new LineDataSet(yVals1, \"DataSet 1\");\n+        set1.setAxisDependency(AxisDependency.LEFT);\n         set1.setColor(ColorTemplate.getHoloBlue());\n         set1.setCircleColor(ColorTemplate.getHoloBlue());\n         set1.setLineWidth(2f);\n@@ -285,8 +292,30 @@ private void setData(int count, float range) {\n         set1.setFillColor(ColorTemplate.getHoloBlue());\n         set1.setHighLightColor(Color.rgb(244, 117, 117));\n \n+        ArrayList<Entry> yVals2 = new ArrayList<Entry>();\n+\n+        for (int i = 0; i < count; i++) {\n+            float mult = (range / 10);\n+            float val = (float) (Math.random() * mult) + 500;// + (float)\n+                                                           // ((mult *\n+                                                           // 0.1) / 10);\n+            yVals2.add(new Entry(val, i));\n+        }\n+\n+        // create a dataset and give it a type\n+        LineDataSet set2 = new LineDataSet(yVals2, \"DataSet 2\");\n+        set2.setAxisDependency(AxisDependency.RIGHT);\n+        set2.setColor(Color.RED);\n+        set2.setCircleColor(Color.RED);\n+        set2.setLineWidth(2f);\n+        set2.setCircleSize(4f);\n+        set2.setFillAlpha(65);\n+        set2.setFillColor(Color.RED);\n+        set2.setHighLightColor(Color.rgb(244, 117, 117));\n+\n         ArrayList<LineDataSet> dataSets = new ArrayList<LineDataSet>();\n-        dataSets.add(set1); // add the datasets\n+        dataSets.add(set1);\n+        dataSets.add(set2); // add the datasets\n \n         // create a data object with the datasets\n         LineData data = new LineData(xVals, dataSets);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -224,7 +224,7 @@ protected void calcMinMax(ArrayList<T> dataSets) {\n             }\n \n             // right axis\n-            T firstRight = getFirstLeft();\n+            T firstRight = getFirstRight();\n \n             if (firstRight != null) {\n \n@@ -241,12 +241,12 @@ protected void calcMinMax(ArrayList<T> dataSets) {\n                     }\n                 }\n             }\n-\n+            \n             // in case there is only one axis, adjust the second axis\n             if (firstLeft == null) {\n                 mLeftAxisMax = mRightAxisMax;\n                 mLeftAxisMin = mRightAxisMin;\n-            } else {\n+            } else if (firstRight == null) {\n                 mRightAxisMax = mLeftAxisMax;\n                 mRightAxisMin = mLeftAxisMin;\n             }\n@@ -311,7 +311,7 @@ public int getDataSetCount() {\n     public float getYMin() {\n         return mYMin;\n     }\n-    \n+\n     /**\n      * Returns the minimum y-value for the specified axis.\n      * ",
    "output": "Now possible to plot with 2 different axes."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java\n@@ -111,6 +111,8 @@ protected void onCreate(Bundle savedInstanceState) {\n         YAxis yl = mChart.getAxisLeft();\n         yl.setTypeface(tf);\n         yl.setTextColor(Color.WHITE);\n+        yl.setAxisMaxValue(300);\n+        yl.setAxisMinValue(-100f);\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -104,9 +104,6 @@ public abstract class BarLineChartBase<T extends BarLineScatterCandleData<? exte\n     /** the listener for user drawing on the chart */\n     protected OnDrawListener mDrawListener;\n \n-    protected float mDeltaYLeft = 0f;\n-    protected float mDeltaYRight = 0f;\n-\n     /**\n      * the object representing the labels on the y-axis, this object is prepared\n      * in the pepareYLabels() method\n@@ -200,7 +197,7 @@ protected void onDraw(Canvas canvas) {\n \n         mAxisRendererLeft.computeAxis(mAxisLeft.mAxisMinimum, mAxisLeft.mAxisMaximum);\n         mAxisRendererRight.computeAxis(mAxisRight.mAxisMinimum, mAxisRight.mAxisMaximum);\n-        \n+\n         // make sure the graph values and grid cannot be drawn outside the\n         // content-rect\n         int clipRestoreCount = mDrawCanvas.save();\n@@ -252,12 +249,12 @@ protected void onDraw(Canvas canvas) {\n     private void prepareValuePxMatrix() {\n \n         if (mLogEnabled)\n-            Log.i(LOG_TAG, \"Preparing Value-Px Matrix, deltaLeft: \" + mDeltaYLeft\n-                    + \", deltaRight: \" + mDeltaYRight);\n+            Log.i(LOG_TAG, \"Preparing Value-Px Matrix, deltaLeft: \" + mAxisLeft.mAxisRange\n+                    + \", deltaRight: \" + mAxisRight.mAxisRange);\n \n-        mRightAxisTransformer.prepareMatrixValuePx(mDeltaX, mDeltaYRight,\n+        mRightAxisTransformer.prepareMatrixValuePx(mDeltaX, mAxisRight.mAxisRange,\n                 mAxisRight.mAxisMinimum);\n-        mLeftAxisTransformer.prepareMatrixValuePx(mDeltaX, mDeltaYLeft,\n+        mLeftAxisTransformer.prepareMatrixValuePx(mDeltaX, mAxisLeft.mAxisRange,\n                 mAxisLeft.mAxisMinimum);\n     }\n \n@@ -298,25 +295,29 @@ protected void calcMinMax() {\n         float maxLeft = mData.getYMax(AxisDependency.LEFT);\n         float minRight = mData.getYMin(AxisDependency.RIGHT);\n         float maxRight = mData.getYMax(AxisDependency.RIGHT);\n-        \n+\n         float leftRange = Math.abs(maxLeft - minLeft);\n         float rightRange = Math.abs(maxRight - minRight);\n-        \n+\n         float topSpaceLeft = leftRange / 100f * mAxisLeft.getSpaceTop();\n         float topSpaceRight = rightRange / 100f * mAxisRight.getSpaceTop();\n         float bottomSpaceLeft = leftRange / 100f * mAxisLeft.getSpaceBottom();\n         float bottomSpaceRight = rightRange / 100f * mAxisRight.getSpaceBottom();\n \n         mDeltaX = mData.getXVals().size() - 1;\n \n-        mAxisLeft.mAxisMaximum = maxLeft + topSpaceLeft;\n-        mAxisRight.mAxisMaximum = maxRight + topSpaceRight;\n-        mAxisLeft.mAxisMinimum = minLeft - bottomSpaceLeft;\n-        mAxisRight.mAxisMinimum = minRight - bottomSpaceRight;\n-\n-        mDeltaYLeft = Math.abs(mAxisLeft.mAxisMaximum - mAxisLeft.mAxisMinimum);\n-        mDeltaYRight = Math.abs(mAxisRight.mAxisMaximum - mAxisRight.mAxisMinimum);\n-\n+        mAxisLeft.mAxisMaximum = !Float.isNaN(mAxisLeft.getAxisMaxValue()) ? mAxisLeft\n+                .getAxisMaxValue() : maxLeft + topSpaceLeft;\n+        mAxisRight.mAxisMaximum = !Float.isNaN(mAxisRight.getAxisMaxValue()) ? mAxisRight\n+                .getAxisMaxValue() : maxRight + topSpaceRight;\n+        mAxisLeft.mAxisMinimum = !Float.isNaN(mAxisLeft.getAxisMinValue()) ? mAxisLeft\n+                .getAxisMinValue() : minLeft - bottomSpaceLeft;\n+        mAxisRight.mAxisMinimum = !Float.isNaN(mAxisRight.getAxisMinValue()) ? mAxisRight\n+                .getAxisMinValue() : minRight - bottomSpaceRight;\n+\n+        mAxisLeft.mAxisRange = Math.abs(mAxisLeft.mAxisMaximum - mAxisLeft.mAxisMinimum);\n+        mAxisRight.mAxisRange = Math.abs(mAxisRight.mAxisMaximum - mAxisRight.mAxisMinimum);\n+        //\n         // // only calculate values if not fixed values\n         // if (!fixedValues) {\n         // mYChartMin = mData.getYMin();\n@@ -731,9 +732,9 @@ public synchronized void centerViewPort(final int xIndex, final float yVal, Axis\n      */\n     public float getDeltaY(AxisDependency axis) {\n         if (axis == AxisDependency.LEFT)\n-            return mDeltaYLeft;\n+            return mAxisLeft.mAxisRange;\n         else\n-            return mDeltaYRight;\n+            return mAxisRight.mAxisRange;\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -61,10 +61,10 @@ public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entr\n         ViewGroup\n         implements AnimatorUpdateListener, ChartInterface {\n \n-    public static final String LOG_TAG = \"MPChart\";\n+    public static final String LOG_TAG = \"MPAndroidChart\";\n \n     /** flag that indicates if logging is enabled or not */\n-    protected boolean mLogEnabled = true;\n+    protected boolean mLogEnabled = false;\n \n     /** custom formatter that is used instead of the auto-formatter if set */\n     protected ValueFormatter mValueFormatter = null;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n--- a/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java\n@@ -60,6 +60,8 @@ public class YAxis extends AxisBase {\n \n     public float mAxisMaximum = 0f;\n     public float mAxisMinimum = 0f;\n+    \n+    public float mAxisRange = 0f;\n \n     /** the position of the y-labels relative to the chart */\n     private YLabelPosition mPosition = YLabelPosition.OUTSIDE_CHART;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java\n@@ -5,7 +5,6 @@\n import android.graphics.Color;\n import android.graphics.Paint;\n import android.graphics.Paint.Align;\n-import android.util.Log;\n \n import com.github.mikephil.charting.components.LimitLine;\n import com.github.mikephil.charting.components.LimitLine.LimitLabelPosition;\n@@ -85,18 +84,6 @@ public void computeAxis(float yMin, float yMax) {\n                     yMin = 0;\n                 yMax = (float) Math.max(p1.y, p2.y);\n             }\n-\n-        } else {\n-            \n-            // in case a custom maximum is set\n-            if(!Float.isNaN(mYAxis.getAxisMaxValue())) {\n-                yMax = mYAxis.getAxisMaxValue(); \n-            } \n-            \n-            // in case a custom minimum is set\n-            if(!Float.isNaN(mYAxis.getAxisMinValue())) {\n-                yMin = mYAxis.getAxisMinValue();\n-            } \n         }\n \n         computeAxisValues(yMin, yMax);",
    "output": "Fixed more issues concerning axis, custom axis range now working."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n@@ -1,7 +1,6 @@\n \n package com.xxmassdeveloper.mpchartexample;\n \n-import android.graphics.Color;\n import android.graphics.Typeface;\n import android.os.Bundle;\n import android.util.Log;\n@@ -52,7 +51,8 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart = (PieChart) findViewById(R.id.chart1);\n \n         // change the color of the center-hole\n-        mChart.setHoleColor(Color.rgb(235, 235, 235));\n+//        mChart.setHoleColor(Color.rgb(235, 235, 235));\n+        mChart.setHoleColorTransparent(true);\n \n         Typeface tf = Typeface.createFromAsset(getAssets(), \"OpenSans-Regular.ttf\");\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1661,15 +1661,17 @@ public Transformer getTransformer() {\n      */\n     public void disableScroll() {\n         ViewParent parent = getParent();\n-        parent.requestDisallowInterceptTouchEvent(true);\n+        if (parent != null)\n+            parent.requestDisallowInterceptTouchEvent(true);\n     }\n \n     /**\n      * enables intercept touchevents\n      */\n     public void enableScroll() {\n         ViewParent parent = getParent();\n-        parent.requestDisallowInterceptTouchEvent(false);\n+        if (parent != null)\n+            parent.requestDisallowInterceptTouchEvent(false);\n     }\n \n     /** paint for the grid lines (only line and barchart) */\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -231,8 +231,6 @@ protected void drawHighlights() {\n \n                 float sliceDegrees = mDrawAngles[xIndex];\n \n-                float shiftangle = (float) Math.toRadians(angle + sliceDegrees / 2f);\n-\n                 PieDataSet set = mData\n                         .getDataSetByIndex(mIndicesToHightlight[i]\n                                 .getDataSetIndex());\n@@ -241,12 +239,12 @@ protected void drawHighlights() {\n                     continue;\n \n                 float shift = set.getSelectionShift();\n-                float xShift = shift * (float) Math.cos(shiftangle);\n-                float yShift = shift * (float) Math.sin(shiftangle);\n-\n-                RectF highlighted = new RectF(mCircleBox.left + xShift, mCircleBox.top + yShift,\n-                        mCircleBox.right\n-                                + xShift, mCircleBox.bottom + yShift);\n+                // make the box containing current arc larger equally\n+                // in every dimension, to preserve shape of arc\n+                RectF highlighted = new RectF(mCircleBox.left - shift,\n+                        mCircleBox.top - shift,\n+                        mCircleBox.right + shift,\n+                        mCircleBox.bottom + shift);\n \n                 mRenderPaint.setColor(set.getColor(xIndex));\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -14,7 +14,6 @@\n import com.github.mikephil.charting.listener.PieRadarChartTouchListener;\n import com.github.mikephil.charting.utils.Legend.LegendPosition;\n import com.github.mikephil.charting.utils.Utils;\n-import com.github.mikephil.charting.utils.Legend.LegendPosition;\n import com.nineoldandroids.animation.ObjectAnimator;\n \n /**",
    "output": "Fixed PieChart highligting math."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n@@ -169,8 +169,11 @@ protected void drawCubic(LineDataSet dataSet, ArrayList<Entry> entries)\n \t\tPath spline = new Path();\n \n \t\tArrayList<CPoint> points = new ArrayList<CPoint>();\n-\t\tfor (Entry e : entries)\n-\t\t\tpoints.add(new CPoint(e.getXIndex(), e.getVal()));\n+\t\t\n+\t\tfor (Entry e : entries) {\t    \n+\t\t    if(e != null)\n+\t\t        points.add(new CPoint(e.getXIndex(), e.getVal()));\n+\t\t}\n \n \t\tif (points.size() > 1) {\n \t\t\tfor (int j = 0; j < points.size() * mPhaseX; j++) {\n@@ -209,23 +212,22 @@ else if (j == points.size() - 1) {\n \n \t\t// if filled is enabled, close the path\n \t\tif (dataSet.isDrawFilledEnabled()) {\n-\t\t\tdrawCubicFill(dataSet, entries, spline);\n+\t\t\tdrawCubicFill(dataSet, spline);\n \t\t} else {\n \t\t\tmRenderPaint.setStyle(Paint.Style.STROKE);\n \t\t}\n \n \t\tmTrans.pathValueToPixel(spline);\n \n \t\tmDrawCanvas.drawPath(spline, mRenderPaint);\n-\n \t}\n \n-\tprotected void drawCubicFill(LineDataSet dataSet, ArrayList<Entry> entries, Path spline)\n+\tprotected void drawCubicFill(LineDataSet dataSet, Path spline)\n \t{\n \t\tfloat fillMin = mFillFormatter\n \t\t\t\t.getFillLinePosition(dataSet, mData, mYChartMax, mYChartMin);\n \n-\t\tspline.lineTo((entries.size() - 1) * mPhaseX, fillMin);\n+\t\tspline.lineTo((mDeltaX + 1) * mPhaseX, fillMin);\n \t\tspline.lineTo(0, fillMin);\n \t\tspline.close();\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -7,6 +7,8 @@\n import android.graphics.Paint;\n import android.graphics.Paint.Align;\n import android.graphics.PointF;\n+import android.graphics.PorterDuff;\n+import android.graphics.PorterDuffXfermode;\n import android.graphics.RectF;\n import android.graphics.Typeface;\n import android.util.AttributeSet;\n@@ -543,15 +545,40 @@ public float[] getAbsoluteAngles() {\n     }\n \n     /**\n-     * Sets the color for the hole that is drawn in the center of the piechart\n-     * (if enabled).\n+     * Sets the color for the hole that is drawn in the center of the PieChart\n+     * (if enabled). NOTE: Use setHoleColorTransparent(boolean enabled) to make\n+     * the hole transparent.\n      * \n      * @param color\n      */\n     public void setHoleColor(int color) {\n+        mHolePaint.setXfermode(null);\n         mHolePaint.setColor(color);\n     }\n \n+    /**\n+     * Set the hole in the center of the PieChart transparent.\n+     *\n+     * @param enable\n+     */\n+    public void setHoleColorTransparent(boolean enable) {\n+        if (enable) {\n+            mHolePaint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.DST_OUT));\n+        } else {\n+            mHolePaint.setXfermode(null);\n+        }\n+    }\n+\n+    /**\n+     * Returns true if the hole in the center of the PieChart is transparent,\n+     * false if not.\n+     *\n+     * @return true if hole is transparent.\n+     */\n+    public boolean isHoleTransparent() {\n+        return mHolePaint.getXfermode() != null;\n+    }\n+\n     /**\n      * set this to true to draw the pie center empty\n      * \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -90,11 +90,14 @@ protected void calcMinMax() {\n \n             Entry e = mYVals.get(i);\n \n-            if (e.getVal() < mYMin)\n-                mYMin = e.getVal();\n+            if (e != null) {\n \n-            if (e.getVal() > mYMax)\n-                mYMax = e.getVal();\n+                if (e.getVal() < mYMin)\n+                    mYMin = e.getVal();\n+\n+                if (e.getVal() > mYMax)\n+                    mYMax = e.getVal();\n+            }\n         }\n     }\n \n@@ -106,7 +109,9 @@ private void calcYValueSum() {\n         mYValueSum = 0;\n \n         for (int i = 0; i < mYVals.size(); i++) {\n-            mYValueSum += Math.abs(mYVals.get(i).getVal());\n+            Entry e = mYVals.get(i);\n+            if (e != null)\n+                mYValueSum += Math.abs(e.getVal());\n         }\n     }\n \n@@ -462,7 +467,7 @@ public ArrayList<Integer> getColors() {\n     public int getColor(int index) {\n         return mColors.get(index % mColors.size());\n     }\n-    \n+\n     /**\n      * Returns the first color (index 0) of the colors-array this DataSet\n      * contains.\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/Transformer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/Transformer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/Transformer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/Transformer.java\n@@ -116,8 +116,10 @@ public float[] generateTransformedValuesLineScatter(ArrayList<? extends Entry> e\n \n             Entry e = entries.get(j / 2);\n \n-            valuePoints[j] = e.getXIndex();\n-            valuePoints[j + 1] = e.getVal() * phaseY;\n+            if (e != null) {\n+                valuePoints[j] = e.getXIndex();\n+                valuePoints[j + 1] = e.getVal() * phaseY;\n+            }\n         }\n \n         pointValuesToPixel(valuePoints);",
    "output": "Minor fixes, added PieChart transparent hole."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java b/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java\n@@ -344,7 +344,7 @@ public void drawForm(Canvas c, float x, float y, Paint p, int index) {\n                 c.drawRect(x, y, x + mFormSize, y + mFormSize, p);\n                 break;\n             case LINE:\n-                c.drawLine(x - half, y + half, x + half, y + half, p);\n+                c.drawLine(x, y + half, x + mFormSize, y + half, p);\n                 break;\n         }\n     }",
    "output": "Merge pull request #273 from pingany/linear-form-pos-fix\n\nFix position of linear legend form."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1350,7 +1350,7 @@ public float getYMax() {\n      * @return\n      */\n     @Override\n-\tpublic float getYChartMin() {\n+    public float getYChartMin() {\n         return mYChartMin;\n     }\n \n@@ -1360,7 +1360,7 @@ public float getYChartMin() {\n      * @return\n      */\n     @Override\n-\tpublic float getYChartMax() {\n+    public float getYChartMax() {\n         return mYChartMax;\n     }\n \n@@ -1379,7 +1379,7 @@ public float getYMin() {\n      * @return\n      */\n     @Override\n-\tpublic float getDeltaX() {\n+    public float getDeltaX() {\n         return mDeltaX;\n     }\n \n@@ -1389,7 +1389,7 @@ public float getDeltaX() {\n      * @return\n      */\n     @Override\n-\tpublic float getDeltaY() {\n+    public float getDeltaY() {\n         return mDeltaY;\n     }\n \n@@ -1519,22 +1519,22 @@ public void setOffsets(float left, float top, float right, float bottom) {\n     }\n \n     @Override\n-\tpublic float getOffsetLeft() {\n+    public float getOffsetLeft() {\n         return mOffsetLeft;\n     }\n \n     @Override\n-\tpublic float getOffsetBottom() {\n+    public float getOffsetBottom() {\n         return mOffsetBottom;\n     }\n \n     @Override\n-\tpublic float getOffsetRight() {\n+    public float getOffsetRight() {\n         return mOffsetRight;\n     }\n \n     @Override\n-\tpublic float getOffsetTop() {\n+    public float getOffsetTop() {\n         return mOffsetTop;\n     }\n \n@@ -1641,7 +1641,7 @@ public Legend getLegend() {\n      * @return\n      */\n     @Override\n-\tpublic RectF getContentRect() {\n+    public RectF getContentRect() {\n         return mContentRect;\n     }\n \n@@ -2204,11 +2204,11 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto\n \n     @Override\n     protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n-    \tif (w > 0 && h > 0) {\n-\t        // create a new bitmap with the new dimensions\n-\t        mDrawBitmap = Bitmap.createBitmap(w, h, Bitmap.Config.ARGB_4444);\n-\t        mDrawCanvas = new Canvas(mDrawBitmap);\n-    \t}\n+        if (w > 0 && h > 0) {\n+            // create a new bitmap with the new dimensions\n+            mDrawBitmap = Bitmap.createBitmap(w, h, Bitmap.Config.ARGB_4444);\n+            mDrawCanvas = new Canvas(mDrawBitmap);\n+        }\n \n         // prepare content rect and matrices\n         prepareContentRect();",
    "output": "Reverted spacing to match source repo"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n@@ -12,6 +12,7 @@ protected void onCreate(Bundle savedInstanceState)\n \n \t\t//FIXME:  Bar Shadow is not yet supported\n \t\tmChart.setDrawBarShadow(false);\n+\t\tmChart.setDrawXLabels(true);\n \t}\n \n \t@Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -56,7 +56,8 @@\n  * \n  * @author Philipp Jahoda\n  */\n-public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entry>>> extends View\n+public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entry>>> extends\n+        ViewGroup\n         implements AnimatorUpdateListener, ChartInterface {\n \n     public static final String LOG_TAG = \"MPChart\";\n@@ -224,7 +225,7 @@ public Chart(Context context, AttributeSet attrs, int defStyle) {\n      */\n     protected void init() {\n \n-\t\tsetWillNotDraw(false);\n+        setWillNotDraw(false);\n         // setLayerType(View.LAYER_TYPE_SOFTWARE, null);\n \n         mTrans = new Transformer();\n@@ -2181,11 +2182,10 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n     protected void onLayout(boolean changed, int left, int top, int right, int bottom) {\n \n         prepareContentRect();\n-\n-\t\tfor (int i=0; i < getChildCount(); i++)\n-\t\t{\n-\t\t\tgetChildAt(i).layout(left, top, right, bottom);\n-\t\t}\n+        for (int i = 0; i < getChildCount(); i++)\n+        {\n+            getChildAt(i).layout(left, top, right, bottom);\n+        }\n         //\n         // prepareContentRect();\n         // Log.i(LOG_TAG,\n@@ -2230,7 +2230,7 @@ public String getFormattedValue(float value) {\n             return mFormat.format(value);\n         }\n     }\n-    \n+\n     @Override\n     public View getChartView() {\n         return this;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n@@ -1,6 +1,7 @@\n package com.github.mikephil.charting.charts;\n \n import android.content.Context;\n+import android.graphics.Matrix;\n import android.graphics.Paint;\n import android.graphics.Rect;\n import android.util.AttributeSet;\n@@ -62,6 +63,17 @@ protected void prepareBar(float x, float y, float barspace) {\n \t\t\tmBarShadow.set(mBarRect.left, mOffsetTop, mBarRect.right, getHeight() - mOffsetBottom);\n \t\t}\n \t}\n+\t\n+\t@Override\n+\tprotected void calcModulus() {\n+\t    \n+        float[] values = new float[9];\n+        mTrans.getTouchMatrix().getValues(values);\n+\n+        mXLabels.mYAxisLabelModulus = (int) Math\n+                .ceil((mData.getXValCount() * mXLabels.mLabelHeight)\n+                        / (mContentRect.height() * values[Matrix.MSCALE_Y]));\n+\t}\n \n \t@Override\n \tprotected void drawXLabels(float yPos)\n@@ -76,7 +88,7 @@ protected void drawXLabels(float yPos)\n \n \t\tint step = mData.getDataSetCount();\n \n-\t\tfor (int i = 0; i < mData.getXValCount(); i ++) {\n+\t\tfor (int i = 0; i < mData.getXValCount(); i += mXLabels.mYAxisLabelModulus) {\n \n \t\t\tposition[1] = i * step + i * mData.getGroupSpace()\n \t\t\t\t\t+ mData.getGroupSpace() / 2f;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/XLabels.java b/MPChartLib/src/com/github/mikephil/charting/utils/XLabels.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/XLabels.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/XLabels.java\n@@ -34,6 +34,13 @@ public class XLabels extends LabelBase {\n      * 0 DRAW, else dont draw.\n      */\n     public int mXAxisLabelModulus = 1;\n+    \n+    /**\n+     * the modulus that indicates if a value at a specified index in an\n+     * array(list) for the y-axis-labels is drawn or not. If index % modulus ==\n+     * 0 DRAW, else dont draw. THIS IS ONLY FOR HORIZONTAL BARCHART.\n+     */\n+    public int mYAxisLabelModulus = 1;\n \n     /** if true, x-axis label text is centered when using barcharts */\n     private boolean mCenterXAxisLabels = false;",
    "output": "Removed resource folder."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -36,7 +36,7 @@\n public class BarChartActivity extends DemoBase implements OnSeekBarChangeListener,\n         OnChartValueSelectedListener {\n \n-    private BarChart mChart;\n+    protected BarChart mChart;\n     private SeekBar mSeekBarX, mSeekBarY;\n     private TextView tvX, tvY;\n \n@@ -45,7 +45,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,\n                 WindowManager.LayoutParams.FLAG_FULLSCREEN);\n-        setContentView(R.layout.activity_barchart);\n+        setContentView(getLayout());\n \n         tvX = (TextView) findViewById(R.id.tvXMax);\n         tvY = (TextView) findViewById(R.id.tvYMax);\n@@ -123,6 +123,11 @@ protected void onCreate(Bundle savedInstanceState) {\n         // mChart.setDrawLegend(false);\n     }\n \n+\tprotected int getLayout()\n+\t{\n+\t\treturn R.layout.activity_barchart;\n+\t}\n+\n     @Override\n     public boolean onCreateOptionsMenu(Menu menu) {\n         getMenuInflater().inflate(R.menu.bar, menu);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java\n@@ -0,0 +1,22 @@\n+\n+package com.xxmassdeveloper.mpchartexample;\n+\n+import android.os.Bundle;\n+\n+public class HorizontalBarChartActivity extends BarChartActivity\n+{\n+\t@Override\n+\tprotected void onCreate(Bundle savedInstanceState)\n+\t{\n+\t\tsuper.onCreate(savedInstanceState);\n+\n+\t\t//FIXME:  Bar Shadow is not yet supported\n+\t\tmChart.setDrawBarShadow(false);\n+\t}\n+\n+\t@Override\n+\tprotected int getLayout()\n+\t{\n+\t\treturn R.layout.activity_horizontalbarchart;\n+\t}\n+}\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n@@ -26,6 +26,7 @@\n import com.xxmassdeveloper.mpchartexample.CandleStickChartActivity;\n import com.xxmassdeveloper.mpchartexample.CubicLineChartActivity;\n import com.xxmassdeveloper.mpchartexample.DynamicalAddingActivity;\n+import com.xxmassdeveloper.mpchartexample.HorizontalBarChartActivity;\n import com.xxmassdeveloper.mpchartexample.InvertedLineChartActivity;\n import com.xxmassdeveloper.mpchartexample.LineChartActivity1;\n import com.xxmassdeveloper.mpchartexample.LineChartActivity2;\n@@ -59,7 +60,8 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         objects.add(new ContentItem(\"Line Chart 1\", \"A simple demonstration of the linechart.\"));\n         objects.add(new ContentItem(\"Line Chart 2\", \"Another simple demonstration of the linechart.\"));\n-        objects.add(new ContentItem(\"Bar Chart\", \"A simple demonstration of the bar chart.\"));\n+\t\tobjects.add(new ContentItem(\"Bar Chart\", \"A simple demonstration of the bar chart.\"));\n+\t\tobjects.add(new ContentItem(\"Horizontal Bar Chart\", \"A simple demonstration of the horizontal bar chart.\"));\n         objects.add(new ContentItem(\"Pie Chart\", \"A simple demonstration of the pie chart.\"));\n         objects.add(new ContentItem(\"Scatter Chart\", \"A simple demonstration of the scatter chart.\"));\n         objects.add(new ContentItem(\"Stacked Bar Chart\",\n@@ -122,35 +124,39 @@ public void onItemClick(AdapterView<?> av, View v, int pos, long arg3) {\n                 i = new Intent(this, LineChartActivity2.class);\n                 startActivity(i);\n                 break;\n-            case 2:\n-                i = new Intent(this, BarChartActivity.class);\n-                startActivity(i);\n-                break;\n-            case 3:\n+\t\t\tcase 2:\n+\t\t\t\ti = new Intent(this, BarChartActivity.class);\n+\t\t\t\tstartActivity(i);\n+\t\t\t\tbreak;\n+\t\t\tcase 3:\n+\t\t\t\ti = new Intent(this, HorizontalBarChartActivity.class);\n+\t\t\t\tstartActivity(i);\n+\t\t\t\tbreak;\n+            case 4:\n                 i = new Intent(this, PieChartActivity.class);\n                 startActivity(i);\n                 break;\n-            case 4:\n+            case 5:\n                 i = new Intent(this, ScatterChartActivity.class);\n                 startActivity(i);\n                 break;\n-            case 5:\n+            case 6:\n                 i = new Intent(this, StackedBarActivity.class);\n                 startActivity(i);\n                 break;\n-            case 6:\n+            case 7:\n                 i = new Intent(this, AnotherBarActivity.class);\n                 startActivity(i);\n                 break;\n-            case 7:\n+            case 8:\n                 i = new Intent(this, MultiLineChartActivity.class);\n                 startActivity(i);\n                 break;\n-            case 8:\n+            case 9:\n                 i = new Intent(this, BarChartActivityMultiDataset.class);\n                 startActivity(i);\n                 break;\n-            case 9:\n+            case 10:\n //                 i = new Intent(this, DrawChartActivity.class);\n //                 startActivity(i);\n \n@@ -160,39 +166,39 @@ public void onItemClick(AdapterView<?> av, View v, int pos, long arg3) {\n                 b.setPositiveButton(\"OK\", null);\n                 b.create().show();\n                 break;\n-            case 10:\n+            case 11:\n                 i = new Intent(this, SimpleChartDemo.class);\n                 startActivity(i);\n                 break;\n-            case 11:\n+            case 12:\n                 i = new Intent(this, ListViewBarChartActivity.class);\n                 startActivity(i);\n                 break;\n-            case 12:\n+            case 13:\n                 i = new Intent(this, ListViewMultiChartActivity.class);\n                 startActivity(i);\n                 break;\n-            case 13:\n+            case 14:\n                 i = new Intent(this, InvertedLineChartActivity.class);\n                 startActivity(i);\n                 break;\n-            case 14:\n+            case 15:\n                 i = new Intent(this, CandleStickChartActivity.class);\n                 startActivity(i);\n                 break;\n-            case 15:\n+            case 16:\n                 i = new Intent(this, CubicLineChartActivity.class);\n                 startActivity(i);\n                 break;\n-            case 16:\n+            case 17:\n                 i = new Intent(this, RadarChartActivitry.class);\n                 startActivity(i);\n                 break;\n-            case 17:\n+            case 18:\n                 i = new Intent(this, LineChartActivityColored.class);\n                 startActivity(i);\n                 break;\n-            case 18:\n+            case 19:\n                 i = new Intent(this, DynamicalAddingActivity.class);\n                 startActivity(i);\n                 break;",
    "output": "Simple Horizontal bar chart example"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1,8 +1,6 @@\n \n package com.github.mikephil.charting.charts;\n \n-import android.animation.ObjectAnimator;\n-import android.animation.ValueAnimator;\n import android.content.ContentValues;\n import android.content.Context;\n import android.graphics.Bitmap;\n@@ -42,6 +40,9 @@\n import com.github.mikephil.charting.utils.SelInfo;\n import com.github.mikephil.charting.utils.Utils;\n import com.github.mikephil.charting.utils.ValueFormatter;\n+import com.nineoldandroids.animation.ObjectAnimator;\n+import com.nineoldandroids.animation.ValueAnimator;\n+import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;\n \n import java.io.File;\n import java.io.FileOutputStream;\n@@ -55,9 +56,8 @@\n  * \n  * @author Philipp Jahoda\n  */\n-public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entry>>>\n-\t\textends ViewGroup\n-        implements ValueAnimator.AnimatorUpdateListener, ChartInterface {\n+public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entry>>> extends View\n+        implements AnimatorUpdateListener, ChartInterface {\n \n     public static final String LOG_TAG = \"MPChart\";\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -1,7 +1,6 @@\n \n package com.github.mikephil.charting.charts;\n \n-import android.animation.ObjectAnimator;\n import android.content.Context;\n import android.graphics.Matrix;\n import android.graphics.Paint.Align;\n@@ -15,6 +14,8 @@\n import com.github.mikephil.charting.listener.PieRadarChartTouchListener;\n import com.github.mikephil.charting.utils.Legend.LegendPosition;\n import com.github.mikephil.charting.utils.Utils;\n+import com.github.mikephil.charting.utils.Legend.LegendPosition;\n+import com.nineoldandroids.animation.ObjectAnimator;\n \n /**\n  * Baseclass of PieChart and RadarChart.",
    "output": "Undo changes not meant for pull request"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1443,18 +1443,18 @@ public PointF getCenterOffsets() {\n     }\n \n     /**\n-     * sets the size of the description text in pixels, min 7f, max 14f\n+     * sets the size of the description text in pixels, min 6f, max 16f\n      * \n      * @param size\n      */\n     public void setDescriptionTextSize(float size) {\n \n-        if (size > 14f)\n-            size = 14f;\n-        if (size < 7f)\n-            size = 7f;\n+        if (size > 16f)\n+            size = 16f;\n+        if (size < 6f)\n+            size = 6f;\n \n-        mInfoPaint.setTextSize(Utils.convertDpToPixel(size));\n+        mDescPaint.setTextSize(Utils.convertDpToPixel(size));\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -415,7 +415,7 @@ public T getDataSetByLabel(String label, boolean ignorecase) {\n \n         int index = getDataSetIndexByLabel(mDataSets, label, ignorecase);\n \n-        if (index <= 0 || index >= mDataSets.size())\n+        if (index < 0 || index >= mDataSets.size())\n             return null;\n         else\n             return mDataSets.get(index);",
    "output": "Merge branch 'refs/heads/github/philjay/master' into github/rds/opensource"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -365,11 +365,11 @@ protected void calculateOffsets() {\n         // all required offsets are calculated, now find largest and apply\n         float min = Utils.convertDpToPixel(11f);\n \n-        mOffsetBottom = Math.max(min, xbottom + legendBottom);\n-        mOffsetTop = Math.max(min, xtop);\n+        mOffsetBottom = calcOffsetBottom(min, xbottom + legendBottom);\n+        mOffsetTop = calcOffsetTop(min, xtop);\n \n-        mOffsetLeft = Math.max(min, yleft);\n-        mOffsetRight = Math.max(min, yright + legendRight);\n+        mOffsetLeft = calcOffsetLeft(min, yleft);\n+        mOffsetRight = calcOffsetRight(min, yright + legendRight);\n \n         if (mLegend != null) {\n \n@@ -384,6 +384,50 @@ protected void calculateOffsets() {\n         prepareMatrix();\n     }\n \n+\t/**\n+\t * returns the maximum of the two values.  Allows subclasses to independently change this offset\n+\t * @param min\n+\t * @param left\n+\t * @return\n+\t */\n+\tprotected float calcOffsetLeft(float min, float left)\n+\t{\n+\t\treturn Math.max(min, left);\n+\t}\n+\n+\n+\t/**\n+\t * returns the maximum of the two values.  Allows subclasses to independently change this offset\n+\t * @param min\n+\t * @param top\n+\t * @return\n+\t */\tprotected float calcOffsetTop(float min, float top)\n+\t{\n+\t\treturn Math.max(min, top);\n+\t}\n+\n+\n+\t/**\n+\t * returns the maximum of the two values.  Allows subclasses to independently change this offset\n+\t * @param min\n+\t * @param right\n+\t * @return\n+\t */\tprotected float calcOffsetRight(float min, float right)\n+\t{\n+\t\treturn Math.max(min, right);\n+\t}\n+\n+\n+\t/**\n+\t * returns the maximum of the two values.  Allows subclasses to independently change this offset\n+\t * @param min\n+\t * @param bottom\n+\t * @return\n+\t */\tprotected float calcOffsetBottom(float min, float bottom)\n+\t{\n+\t\treturn Math.max(min, bottom);\n+\t}\n+\n     /**\n      * Calculates the offsets that belong to the legend, this method is only\n      * relevant when drawing into the chart. It can be used to refresh the",
    "output": "Add flexibility to offsets"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java b/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java\n@@ -344,7 +344,7 @@ public void drawForm(Canvas c, float x, float y, Paint p, int index) {\n                 c.drawRect(x, y, x + mFormSize, y + mFormSize, p);\n                 break;\n             case LINE:\n-                c.drawLine(x - half, y + half, x + half, y + half, p);\n+                c.drawLine(x, y + half, x + mFormSize, y + half, p);\n                 break;\n         }\n     }",
    "output": "Fix wrong position of linear legend form"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n@@ -76,7 +76,7 @@ protected void drawXLabels(float yPos)\n \n \t\tint step = mData.getDataSetCount();\n \n-\t\tfor (int i = 0; i < mData.getXValCount(); i += mXLabels.mXAxisLabelModulus) {\n+\t\tfor (int i = 0; i < mData.getXValCount(); i ++) {\n \n \t\t\tposition[1] = i * step + i * mData.getGroupSpace()\n \t\t\t\t\t+ mData.getGroupSpace() / 2f;\n@@ -138,7 +138,7 @@ public String getLongestLabel()\n \t\t{\n \t\t\tString longest = \"\";\n \n-\t\t\tfor (int i = 0; i < mData.getXValCount(); i += mXLabels.mXAxisLabelModulus)\n+\t\t\tfor (int i = 0; i < mData.getXValCount(); i ++)\n \t\t\t{\n \t\t\t\tString text = mData.getXVals().get(i);\n ",
    "output": "remove reliance on xLabelModulus."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1441,18 +1441,18 @@ public PointF getCenterOffsets() {\n     }\n \n     /**\n-     * sets the size of the description text in pixels, min 7f, max 14f\n+     * sets the size of the description text in pixels, min 6f, max 16f\n      * \n      * @param size\n      */\n     public void setDescriptionTextSize(float size) {\n \n-        if (size > 14f)\n-            size = 14f;\n-        if (size < 7f)\n-            size = 7f;\n+        if (size > 16f)\n+            size = 16f;\n+        if (size < 6f)\n+            size = 6f;\n \n-        mInfoPaint.setTextSize(Utils.convertDpToPixel(size));\n+        mDescPaint.setTextSize(Utils.convertDpToPixel(size));\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -415,7 +415,7 @@ public T getDataSetByLabel(String label, boolean ignorecase) {\n \n         int index = getDataSetIndexByLabel(mDataSets, label, ignorecase);\n \n-        if (index <= 0 || index >= mDataSets.size())\n+        if (index < 0 || index >= mDataSets.size())\n             return null;\n         else\n             return mDataSets.get(index);",
    "output": "Fixed issue #255 and #258."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n@@ -8,7 +8,7 @@\n import com.github.mikephil.charting.renderer.ColumnToBarTransformer;\n import com.github.mikephil.charting.utils.YLabels;\n \n-public class HorizontalBarChart extends ColumnChart\n+public class HorizontalBarChart extends BarChart\n {\n \tpublic HorizontalBarChart(Context context)\n \t{\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/ColumnToBarTransformer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/ColumnToBarTransformer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/ColumnToBarTransformer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/ColumnToBarTransformer.java\n@@ -3,7 +3,6 @@\n import com.github.mikephil.charting.data.BarData;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.interfaces.ChartInterface;\n-import com.github.mikephil.charting.renderer.Transformer;\n \n import java.util.ArrayList;\n ",
    "output": "Fix bug in HorizontalBarChart"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n@@ -8,7 +8,7 @@\n import com.github.mikephil.charting.renderer.ColumnToBarTransformer;\n import com.github.mikephil.charting.utils.YLabels;\n \n-public class HorizontalBarChart extends ColumnChart\n+public class HorizontalBarChart extends BarChart\n {\n \tpublic HorizontalBarChart(Context context)\n \t{",
    "output": "Fix extend"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n@@ -0,0 +1,169 @@\n+package com.github.mikephil.charting.charts;\n+\n+import android.content.Context;\n+import android.graphics.Paint;\n+import android.graphics.Rect;\n+import android.util.AttributeSet;\n+\n+import com.github.mikephil.charting.renderer.ColumnToBarTransformer;\n+import com.github.mikephil.charting.utils.YLabels;\n+\n+public class HorizontalBarChart extends ColumnChart\n+{\n+\tpublic HorizontalBarChart(Context context)\n+\t{\n+\t\tsuper(context);\n+\t}\n+\n+\tpublic HorizontalBarChart(Context context, AttributeSet attrs)\n+\t{\n+\t\tsuper(context, attrs);\n+\t}\n+\n+\tpublic HorizontalBarChart(Context context, AttributeSet attrs,\n+\t\t\t\t\t\t\t  int defStyle)\n+\t{\n+\t\tsuper(context, attrs, defStyle);\n+\t}\n+\n+\t@Override\n+\tprotected void init()\n+\t{\n+\t\tsuper.init();\n+\t\tsetDrawXLabels(false);\n+\t\tsetDrawYLabels(true);\n+\t\tmTrans = new ColumnToBarTransformer();\n+\t\tmValuePaint.setTextAlign(Paint.Align.LEFT);\n+\t}\n+\n+\t/**\n+\t * Prepares a bar for drawing on the specified x-index and y-position. Also\n+\t * prepares the shadow-bar if enabled.\n+\t *\n+\t * @param x the x-position\n+\t * @param y the y-position\n+\t * @param barspace the space between bars\n+\t */\n+\t@Override\n+\tprotected void prepareBar(float x, float y, float barspace) {\n+\n+\t\tsuper.prepareBar(x, y, barspace);\n+\t\tfloat spaceHalf = barspace / 2f;\n+\n+\t\tfloat top = x + spaceHalf;\n+\t\tfloat bottom = x + 1f - spaceHalf;\n+\n+\t\tmBarRect.set(0, top, y, bottom);\n+\n+\t\tmTrans.rectValueToPixel(mBarRect, mPhaseY);\n+\n+\t\t// if a shadow is drawn, prepare it too\n+\t\tif (mDrawBarShadow) {\n+\t\t\tmBarShadow.set(mBarRect.left, mOffsetTop, mBarRect.right, getHeight() - mOffsetBottom);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tprotected void drawXLabels(float yPos)\n+\t{\n+\t\tif (!mDrawXLabels) return;\n+\n+\t\tmXLabelPaint.setTextAlign(Paint.Align.RIGHT);\n+\t\t// pre allocate to save performance (dont allocate in loop)\n+\t\tfloat[] position = new float[] {\n+\t\t\t\t0f, 0f\n+\t\t};\n+\n+\t\tint step = mData.getDataSetCount();\n+\n+\t\tfor (int i = 0; i < mData.getXValCount(); i += mXLabels.mXAxisLabelModulus) {\n+\n+\t\t\tposition[1] = i * step + i * mData.getGroupSpace()\n+\t\t\t\t\t+ mData.getGroupSpace() / 2f;\n+\n+\t\t\t// center the text\n+\t\t\tif (mXLabels.isCenterXLabelsEnabled())\n+\t\t\t\tposition[1] += (step / 2f);\n+\n+\t\t\tmTrans.pointValuesToPixel(position);\n+\n+\t\t\tif (position[1] >= mOffsetTop && position[1] <= getHeight() - mOffsetBottom)\n+\t\t\t{\n+\t\t\t\tString label = mData.getXVals().get(i);\n+\n+\t\t\t\tmDrawCanvas.drawText(label, mOffsetLeft-10, position[1],\tmXLabelPaint);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate static String TALL_VALUE = \"100%\";\n+\t@Override\n+\tprotected float getPositiveYOffset(boolean drawAboveValueBar)\n+\t{\n+\t\tRect bounds = new Rect();\n+\t\tmValuePaint.getTextBounds(TALL_VALUE,0,TALL_VALUE.length(),bounds);\n+\n+\t\treturn bounds.height()/2;\n+\t}\n+\n+\t@Override\n+\tprotected float getNegativeYOffset(boolean drawAboveValueBar)\n+\t{\n+\t\treturn getPositiveYOffset(drawAboveValueBar);\n+\t}\n+\n+\t/**\n+\t * Sets up the y-axis labels. Computes the desired number of labels between\n+\t * the two given extremes. Unlike the papareXLabels() method, this method\n+\t * needs to be called upon every refresh of the view.\n+\t *\n+\t * @return\n+\t */\n+\t@Override\n+\tprotected void prepareYLabels()\n+\t{\n+\t\tmYLabels = new XLabelsAsYLabels();\n+\t}\n+\n+\tprivate class XLabelsAsYLabels extends YLabels\n+\t{\n+\t\t/**\n+\t\t * Returns the longest formatted label (in terms of characters) the y-labels\n+\t\t * contain.\n+\t\t *\n+\t\t * @return\n+\t\t */\n+\t\t@Override\n+\t\tpublic String getLongestLabel()\n+\t\t{\n+\t\t\tString longest = \"\";\n+\n+\t\t\tfor (int i = 0; i < mData.getXValCount(); i += mXLabels.mXAxisLabelModulus)\n+\t\t\t{\n+\t\t\t\tString text = mData.getXVals().get(i);\n+\n+\t\t\t\tif (longest.length() < text.length())\n+\t\t\t\t\tlongest = text;\n+\t\t\t}\n+\n+\t\t\treturn longest;\n+\t\t}\n+\n+\t\t/**\n+\t\t * Returns the formatted y-label at the specified index. This will either\n+\t\t * use the auto-formatter or the custom formatter (if one is set).\n+\t\t *\n+\t\t * @param index\n+\t\t * @return\n+\t\t */\n+\t\t@Override\n+\t\tpublic String getFormattedLabel(int index)\n+\t\t{\n+\t\t\tsuper.getFormattedLabel(index);\n+\t\t\tif (index < 0)\n+\t\t\t\treturn \"\";\n+\n+\t\t\treturn mData.getXVals().get(index);\n+\t\t}\n+\t}\n+}\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/ColumnToBarTransformer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/ColumnToBarTransformer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/ColumnToBarTransformer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/ColumnToBarTransformer.java\n@@ -0,0 +1,66 @@\n+package com.github.mikephil.charting.renderer;\n+\n+import com.github.mikephil.charting.data.BarData;\n+import com.github.mikephil.charting.data.Entry;\n+import com.github.mikephil.charting.interfaces.ChartInterface;\n+import com.github.mikephil.charting.renderer.Transformer;\n+\n+import java.util.ArrayList;\n+\n+public class ColumnToBarTransformer extends Transformer\n+{\n+\t/**\n+\t * Prepares the matrix that transforms values to pixels.\n+\t *\n+\t * @param chart\n+\t */\n+\t@Override\n+\tpublic void prepareMatrixValuePx(ChartInterface chart)\n+\t{\n+\t\tfloat scaleX = (chart.getWidth() - chart.getOffsetRight() - chart.getOffsetLeft()) / chart.getDeltaY();\n+\t\tfloat scaleY = (chart.getHeight() - chart.getOffsetTop() - chart.getOffsetBottom()) / chart.getDeltaX();\n+\n+\t\t// setup all matrices\n+\t\tmMatrixValueToPx.reset();\n+\t\tmMatrixValueToPx.postTranslate(0, -chart.getYChartMin());\n+\t\tmMatrixValueToPx.postScale(scaleX, -scaleY);\n+\t}\n+\n+\n+\t/**\n+\t * Transforms an arraylist of Entry into a float array containing the x and\n+\t * y values transformed with all matrices for the BARCHART.\n+\t *\n+\t * @param entries\n+\t * @param dataSet the dataset index\n+\t * @return\n+\t */\n+\tpublic float[] generateTransformedValuesBarChart(ArrayList<? extends Entry> entries,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t int dataSet, BarData bd, float phaseY) {\n+\n+\t\tfloat[] valuePoints = new float[entries.size() * 2];\n+\n+\t\tint setCount = bd.getDataSetCount();\n+\t\tfloat space = bd.getGroupSpace();\n+\n+\t\tfor (int j = 0; j < valuePoints.length; j += 2) {\n+\n+\t\t\tint index = j/2;\n+\t\t\tEntry e = entries.get(index);\n+\n+\t\t\t//TODO: Need to find a better value than 1, should be dependant on yMax, I think\n+\t\t\tfloat x = e.getVal() + 1;\n+\t\t\t// calculate the y-position, depending on datasetcount\n+\t\t\tfloat y = e.getXIndex() + (index * (setCount - 1)) + dataSet + 0.5f + space * index\n+\t\t\t\t\t+ space / 2f;\n+\n+\t\t\tvaluePoints[j] = x;\n+\t\t\tvaluePoints[j + 1] = y;\n+\t\t}\n+\n+\t\tpointValuesToPixel(valuePoints);\n+\n+\t\treturn valuePoints;\n+\t}\n+\n+}",
    "output": "Merge pull request #2 in JAVA/mpandroidchart from OpenSource to develop\n\n* commit 'e1b5fc1aa1bcc39207edb3d7c8eb1dfb752b6342':\n  Add HorizontalBarChart and ColumnToBarTransformer"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java\n@@ -0,0 +1,169 @@\n+package com.github.mikephil.charting.charts;\n+\n+import android.content.Context;\n+import android.graphics.Paint;\n+import android.graphics.Rect;\n+import android.util.AttributeSet;\n+\n+import com.github.mikephil.charting.renderer.ColumnToBarTransformer;\n+import com.github.mikephil.charting.utils.YLabels;\n+\n+public class HorizontalBarChart extends ColumnChart\n+{\n+\tpublic HorizontalBarChart(Context context)\n+\t{\n+\t\tsuper(context);\n+\t}\n+\n+\tpublic HorizontalBarChart(Context context, AttributeSet attrs)\n+\t{\n+\t\tsuper(context, attrs);\n+\t}\n+\n+\tpublic HorizontalBarChart(Context context, AttributeSet attrs,\n+\t\t\t\t\t\t\t  int defStyle)\n+\t{\n+\t\tsuper(context, attrs, defStyle);\n+\t}\n+\n+\t@Override\n+\tprotected void init()\n+\t{\n+\t\tsuper.init();\n+\t\tsetDrawXLabels(false);\n+\t\tsetDrawYLabels(true);\n+\t\tmTrans = new ColumnToBarTransformer();\n+\t\tmValuePaint.setTextAlign(Paint.Align.LEFT);\n+\t}\n+\n+\t/**\n+\t * Prepares a bar for drawing on the specified x-index and y-position. Also\n+\t * prepares the shadow-bar if enabled.\n+\t *\n+\t * @param x the x-position\n+\t * @param y the y-position\n+\t * @param barspace the space between bars\n+\t */\n+\t@Override\n+\tprotected void prepareBar(float x, float y, float barspace) {\n+\n+\t\tsuper.prepareBar(x, y, barspace);\n+\t\tfloat spaceHalf = barspace / 2f;\n+\n+\t\tfloat top = x + spaceHalf;\n+\t\tfloat bottom = x + 1f - spaceHalf;\n+\n+\t\tmBarRect.set(0, top, y, bottom);\n+\n+\t\tmTrans.rectValueToPixel(mBarRect, mPhaseY);\n+\n+\t\t// if a shadow is drawn, prepare it too\n+\t\tif (mDrawBarShadow) {\n+\t\t\tmBarShadow.set(mBarRect.left, mOffsetTop, mBarRect.right, getHeight() - mOffsetBottom);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tprotected void drawXLabels(float yPos)\n+\t{\n+\t\tif (!mDrawXLabels) return;\n+\n+\t\tmXLabelPaint.setTextAlign(Paint.Align.RIGHT);\n+\t\t// pre allocate to save performance (dont allocate in loop)\n+\t\tfloat[] position = new float[] {\n+\t\t\t\t0f, 0f\n+\t\t};\n+\n+\t\tint step = mData.getDataSetCount();\n+\n+\t\tfor (int i = 0; i < mData.getXValCount(); i += mXLabels.mXAxisLabelModulus) {\n+\n+\t\t\tposition[1] = i * step + i * mData.getGroupSpace()\n+\t\t\t\t\t+ mData.getGroupSpace() / 2f;\n+\n+\t\t\t// center the text\n+\t\t\tif (mXLabels.isCenterXLabelsEnabled())\n+\t\t\t\tposition[1] += (step / 2f);\n+\n+\t\t\tmTrans.pointValuesToPixel(position);\n+\n+\t\t\tif (position[1] >= mOffsetTop && position[1] <= getHeight() - mOffsetBottom)\n+\t\t\t{\n+\t\t\t\tString label = mData.getXVals().get(i);\n+\n+\t\t\t\tmDrawCanvas.drawText(label, mOffsetLeft-10, position[1],\tmXLabelPaint);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate static String TALL_VALUE = \"100%\";\n+\t@Override\n+\tprotected float getPositiveYOffset(boolean drawAboveValueBar)\n+\t{\n+\t\tRect bounds = new Rect();\n+\t\tmValuePaint.getTextBounds(TALL_VALUE,0,TALL_VALUE.length(),bounds);\n+\n+\t\treturn bounds.height()/2;\n+\t}\n+\n+\t@Override\n+\tprotected float getNegativeYOffset(boolean drawAboveValueBar)\n+\t{\n+\t\treturn getPositiveYOffset(drawAboveValueBar);\n+\t}\n+\n+\t/**\n+\t * Sets up the y-axis labels. Computes the desired number of labels between\n+\t * the two given extremes. Unlike the papareXLabels() method, this method\n+\t * needs to be called upon every refresh of the view.\n+\t *\n+\t * @return\n+\t */\n+\t@Override\n+\tprotected void prepareYLabels()\n+\t{\n+\t\tmYLabels = new XLabelsAsYLabels();\n+\t}\n+\n+\tprivate class XLabelsAsYLabels extends YLabels\n+\t{\n+\t\t/**\n+\t\t * Returns the longest formatted label (in terms of characters) the y-labels\n+\t\t * contain.\n+\t\t *\n+\t\t * @return\n+\t\t */\n+\t\t@Override\n+\t\tpublic String getLongestLabel()\n+\t\t{\n+\t\t\tString longest = \"\";\n+\n+\t\t\tfor (int i = 0; i < mData.getXValCount(); i += mXLabels.mXAxisLabelModulus)\n+\t\t\t{\n+\t\t\t\tString text = mData.getXVals().get(i);\n+\n+\t\t\t\tif (longest.length() < text.length())\n+\t\t\t\t\tlongest = text;\n+\t\t\t}\n+\n+\t\t\treturn longest;\n+\t\t}\n+\n+\t\t/**\n+\t\t * Returns the formatted y-label at the specified index. This will either\n+\t\t * use the auto-formatter or the custom formatter (if one is set).\n+\t\t *\n+\t\t * @param index\n+\t\t * @return\n+\t\t */\n+\t\t@Override\n+\t\tpublic String getFormattedLabel(int index)\n+\t\t{\n+\t\t\tsuper.getFormattedLabel(index);\n+\t\t\tif (index < 0)\n+\t\t\t\treturn \"\";\n+\n+\t\t\treturn mData.getXVals().get(index);\n+\t\t}\n+\t}\n+}\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/ColumnToBarTransformer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/ColumnToBarTransformer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/ColumnToBarTransformer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/ColumnToBarTransformer.java\n@@ -0,0 +1,66 @@\n+package com.github.mikephil.charting.renderer;\n+\n+import com.github.mikephil.charting.data.BarData;\n+import com.github.mikephil.charting.data.Entry;\n+import com.github.mikephil.charting.interfaces.ChartInterface;\n+import com.github.mikephil.charting.renderer.Transformer;\n+\n+import java.util.ArrayList;\n+\n+public class ColumnToBarTransformer extends Transformer\n+{\n+\t/**\n+\t * Prepares the matrix that transforms values to pixels.\n+\t *\n+\t * @param chart\n+\t */\n+\t@Override\n+\tpublic void prepareMatrixValuePx(ChartInterface chart)\n+\t{\n+\t\tfloat scaleX = (chart.getWidth() - chart.getOffsetRight() - chart.getOffsetLeft()) / chart.getDeltaY();\n+\t\tfloat scaleY = (chart.getHeight() - chart.getOffsetTop() - chart.getOffsetBottom()) / chart.getDeltaX();\n+\n+\t\t// setup all matrices\n+\t\tmMatrixValueToPx.reset();\n+\t\tmMatrixValueToPx.postTranslate(0, -chart.getYChartMin());\n+\t\tmMatrixValueToPx.postScale(scaleX, -scaleY);\n+\t}\n+\n+\n+\t/**\n+\t * Transforms an arraylist of Entry into a float array containing the x and\n+\t * y values transformed with all matrices for the BARCHART.\n+\t *\n+\t * @param entries\n+\t * @param dataSet the dataset index\n+\t * @return\n+\t */\n+\tpublic float[] generateTransformedValuesBarChart(ArrayList<? extends Entry> entries,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t int dataSet, BarData bd, float phaseY) {\n+\n+\t\tfloat[] valuePoints = new float[entries.size() * 2];\n+\n+\t\tint setCount = bd.getDataSetCount();\n+\t\tfloat space = bd.getGroupSpace();\n+\n+\t\tfor (int j = 0; j < valuePoints.length; j += 2) {\n+\n+\t\t\tint index = j/2;\n+\t\t\tEntry e = entries.get(index);\n+\n+\t\t\t//TODO: Need to find a better value than 1, should be dependant on yMax, I think\n+\t\t\tfloat x = e.getVal() + 1;\n+\t\t\t// calculate the y-position, depending on datasetcount\n+\t\t\tfloat y = e.getXIndex() + (index * (setCount - 1)) + dataSet + 0.5f + space * index\n+\t\t\t\t\t+ space / 2f;\n+\n+\t\t\tvaluePoints[j] = x;\n+\t\t\tvaluePoints[j + 1] = y;\n+\t\t}\n+\n+\t\tpointValuesToPixel(valuePoints);\n+\n+\t\treturn valuePoints;\n+\t}\n+\n+}",
    "output": "Add HorizontalBarChart and ColumnToBarTransformer"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n@@ -384,13 +384,8 @@ protected void drawValues() {\n \n             // calculate the correct offset depending on the draw position of\n             // the value\n-            if (mDrawValueAboveBar) {\n-                posOffset = -Utils.convertDpToPixel(5);\n-                negOffset = Utils.calcTextHeight(mValuePaint, \"8\") * 1.5f;\n-            } else {\n-                posOffset = Utils.calcTextHeight(mValuePaint, \"8\") * 1.5f;\n-                negOffset = -Utils.convertDpToPixel(5);\n-            }\n+\t\t\tposOffset = getPositiveYOffset(mDrawValueAboveBar);\n+\t\t\tnegOffset = getNegativeYOffset(mDrawValueAboveBar);\n \n             for (int i = 0; i < mData.getDataSetCount(); i++) {\n \n@@ -468,6 +463,16 @@ protected void drawValues() {\n         }\n     }\n \n+\tprotected float getPositiveYOffset(boolean drawAboveValueBar)\n+\t{\n+\t\treturn (mDrawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint, \"8\") * 1.5f);\n+\t}\n+\n+\tprotected float getNegativeYOffset(boolean drawAboveValueBar)\n+\t{\n+\t\treturn (mDrawValueAboveBar ? Utils.calcTextHeight(mValuePaint, \"8\") * 1.5f : -Utils.convertDpToPixel(5));\n+\t}\n+\n     /**\n      * Draws a value at the specified x and y position.\n      * \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -485,7 +485,7 @@ protected void prepareXLabels() {\n      * \n      * @return\n      */\n-    private void prepareYLabels() {\n+    protected void prepareYLabels() {\n \n         float yMin = 0f;\n         float yMax = 0f;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/Transformer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/Transformer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/Transformer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/Transformer.java\n@@ -22,7 +22,7 @@\n public class Transformer {\n \n     /** matrix to map the values to the screen pixels */\n-    private Matrix mMatrixValueToPx = new Matrix();\n+    protected Matrix mMatrixValueToPx = new Matrix();\n \n     /** matrix for handling the different offsets of the chart */\n     private Matrix mMatrixOffset = new Matrix();",
    "output": "Merge branch 'refs/heads/OpenSource' into develop"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n@@ -384,13 +384,8 @@ protected void drawValues() {\n \n             // calculate the correct offset depending on the draw position of\n             // the value\n-            if (mDrawValueAboveBar) {\n-                posOffset = -Utils.convertDpToPixel(5);\n-                negOffset = Utils.calcTextHeight(mValuePaint, \"8\") * 1.5f;\n-            } else {\n-                posOffset = Utils.calcTextHeight(mValuePaint, \"8\") * 1.5f;\n-                negOffset = -Utils.convertDpToPixel(5);\n-            }\n+\t\t\tposOffset = getPositiveYOffset(mDrawValueAboveBar);\n+\t\t\tnegOffset = getNegativeYOffset(mDrawValueAboveBar);\n \n             for (int i = 0; i < mData.getDataSetCount(); i++) {\n \n@@ -468,6 +463,16 @@ protected void drawValues() {\n         }\n     }\n \n+\tprotected float getPositiveYOffset(boolean drawAboveValueBar)\n+\t{\n+\t\treturn (mDrawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint, \"8\") * 1.5f);\n+\t}\n+\n+\tprotected float getNegativeYOffset(boolean drawAboveValueBar)\n+\t{\n+\t\treturn (mDrawValueAboveBar ? Utils.calcTextHeight(mValuePaint, \"8\") * 1.5f : -Utils.convertDpToPixel(5));\n+\t}\n+\n     /**\n      * Draws a value at the specified x and y position.\n      * \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -485,7 +485,7 @@ protected void prepareXLabels() {\n      * \n      * @return\n      */\n-    private void prepareYLabels() {\n+    protected void prepareYLabels() {\n \n         float yMin = 0f;\n         float yMax = 0f;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/Transformer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/Transformer.java\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/Transformer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/Transformer.java\n@@ -22,7 +22,7 @@\n public class Transformer {\n \n     /** matrix to map the values to the screen pixels */\n-    private Matrix mMatrixValueToPx = new Matrix();\n+    protected Matrix mMatrixValueToPx = new Matrix();\n \n     /** matrix for handling the different offsets of the chart */\n     private Matrix mMatrixOffset = new Matrix();",
    "output": "Add extensibility elements to BarCharts"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -224,6 +224,7 @@ public Chart(Context context, AttributeSet attrs, int defStyle) {\n      */\n     protected void init() {\n \n+\t\tsetWillNotDraw(false);\n         // setLayerType(View.LAYER_TYPE_SOFTWARE, null);\n \n         mTrans = new Transformer();",
    "output": "Fix willNotDraw in Chart.java"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -225,6 +225,7 @@ public Chart(Context context, AttributeSet attrs, int defStyle) {\n      */\n     protected void init() {\n \n+\t\tsetWillNotDraw(false);\n         // setLayerType(View.LAYER_TYPE_SOFTWARE, null);\n \n         mTrans = new Transformer();",
    "output": "set WillNotDraw to false - needed since now a ViewGroup"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n@@ -54,13 +54,13 @@ public class BarChart extends BarLineChartBase<BarData> {\n      * if set to true, a grey area is darawn behind each bar that indicates the\n      * maximum value\n      */\n-    private boolean mDrawBarShadow = true;\n+    protected boolean mDrawBarShadow = true;\n \n     /** the rect object that is used for drawing the bar shadow */\n-    private RectF mBarShadow = new RectF();\n+    protected RectF mBarShadow = new RectF();\n \n     /** the rect object that is used for drawing the bars */\n-    private RectF mBarRect = new RectF();\n+    protected RectF mBarRect = new RectF();\n \n     public BarChart(Context context) {\n         super(context);",
    "output": "Make member bar objects protected"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n@@ -54,13 +54,13 @@ public class BarChart extends BarLineChartBase<BarData> {\n      * if set to true, a grey area is darawn behind each bar that indicates the\n      * maximum value\n      */\n-    private boolean mDrawBarShadow = true;\n+    protected boolean mDrawBarShadow = true;\n \n     /** the rect object that is used for drawing the bar shadow */\n-    private RectF mBarShadow = new RectF();\n+    protected RectF mBarShadow = new RectF();\n \n     /** the rect object that is used for drawing the bars */\n-    private RectF mBarRect = new RectF();\n+    protected RectF mBarRect = new RectF();\n \n     public BarChart(Context context) {\n         super(context);",
    "output": "make members protected"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n@@ -3,7 +3,6 @@\n \n import android.content.Context;\n import android.graphics.Color;\n-import android.graphics.Matrix;\n import android.graphics.Paint;\n import android.graphics.Path;\n import android.graphics.RectF;\n@@ -279,7 +278,7 @@ protected void drawData() {\n      * @param y the y-position\n      * @param barspace the space between bars\n      */\n-    private void prepareBar(float x, float y, float barspace) {\n+    protected void prepareBar(float x, float y, float barspace) {\n \n         float spaceHalf = barspace / 2f;\n         float left = x + spaceHalf;",
    "output": "Merge branch 'refs/heads/OpenSource' into develop\n\nConflicts:\n\tMPChartLib/src/com/github/mikephil/charting/charts/Chart.java"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n@@ -3,7 +3,6 @@\n \n import android.content.Context;\n import android.graphics.Color;\n-import android.graphics.Matrix;\n import android.graphics.Paint;\n import android.graphics.Path;\n import android.graphics.RectF;\n@@ -279,7 +278,7 @@ protected void drawData() {\n      * @param y the y-position\n      * @param barspace the space between bars\n      */\n-    private void prepareBar(float x, float y, float barspace) {\n+    protected void prepareBar(float x, float y, float barspace) {\n \n         float spaceHalf = barspace / 2f;\n         float left = x + spaceHalf;",
    "output": "Make BarChart more extendable"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -2182,6 +2182,11 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto\n \n         prepareContentRect();\n \n+\t\tfor (int i=0; i < getChildCount(); i++)\n+\t\t{\n+\t\t\tgetChildAt(i).layout(left, top, right, bottom);\n+\t\t}\n+\n         //\n         // prepareContentRect();\n         // Log.i(LOG_TAG,",
    "output": "Make Chart pass layout on to children"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -2181,6 +2181,10 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto\n \n         prepareContentRect();\n \n+\t\tfor (int i=0; i < getChildCount(); i++)\n+\t\t{\n+\t\t\tgetChildAt(i).layout(left, top, right, bottom);\n+\t\t}\n         //\n         // prepareContentRect();\n         // Log.i(LOG_TAG,",
    "output": "Make Chart tell children to do layout"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n@@ -108,7 +108,7 @@ protected void drawHighlights() {\n      * \n      * @author Philipp Jahoda\n      */\n-    private class CPoint {\n+    protected class CPoint {\n \n         public float x = 0f;\n         public float y = 0f;",
    "output": "Make CPoint accessible to subclass"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n@@ -108,7 +108,7 @@ protected void drawHighlights() {\n      * \n      * @author Philipp Jahoda\n      */\n-    private class CPoint {\n+    protected class CPoint {\n \n         public float x = 0f;\n         public float y = 0f;",
    "output": "make CPoint accessible to subclasses"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -20,6 +20,7 @@\n import android.util.AttributeSet;\n import android.util.Log;\n import android.view.View;\n+import android.view.ViewGroup;\n import android.view.ViewParent;\n \n import com.github.mikephil.charting.data.BarData;\n@@ -55,7 +56,8 @@\n  * \n  * @author Philipp Jahoda\n  */\n-public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entry>>> extends View\n+public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entry>>>\n+\t\textends ViewGroup\n         implements AnimatorUpdateListener, ChartInterface {\n \n     public static final String LOG_TAG = \"MPChart\";\n@@ -2177,7 +2179,6 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n \n     @Override\n     protected void onLayout(boolean changed, int left, int top, int right, int bottom) {\n-        super.onLayout(changed, left, top, right, bottom);\n \n         prepareContentRect();\n ",
    "output": "Refactor Chart from View to ViewGroup"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -22,6 +22,7 @@\n import android.util.AttributeSet;\n import android.util.Log;\n import android.view.View;\n+import android.view.ViewGroup;\n import android.view.ViewParent;\n \n import com.github.mikephil.charting.data.BarData;\n@@ -54,7 +55,8 @@\n  * \n  * @author Philipp Jahoda\n  */\n-public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entry>>> extends View\n+public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entry>>>\n+\t\textends ViewGroup\n         implements ValueAnimator.AnimatorUpdateListener, ChartInterface {\n \n     public static final String LOG_TAG = \"MPChart\";\n@@ -2176,7 +2178,6 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n \n     @Override\n     protected void onLayout(boolean changed, int left, int top, int right, int bottom) {\n-        super.onLayout(changed, left, top, right, bottom);\n \n         prepareContentRect();\n ",
    "output": "Convert chart from View to ViewGroup"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1,6 +1,8 @@\n \n package com.github.mikephil.charting.charts;\n \n+import android.animation.ObjectAnimator;\n+import android.animation.ValueAnimator;\n import android.content.ContentValues;\n import android.content.Context;\n import android.graphics.Bitmap;\n@@ -39,9 +41,6 @@\n import com.github.mikephil.charting.utils.SelInfo;\n import com.github.mikephil.charting.utils.Utils;\n import com.github.mikephil.charting.utils.ValueFormatter;\n-import com.nineoldandroids.animation.ObjectAnimator;\n-import com.nineoldandroids.animation.ValueAnimator;\n-import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;\n \n import java.io.File;\n import java.io.FileOutputStream;\n@@ -56,7 +55,7 @@\n  * @author Philipp Jahoda\n  */\n public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entry>>> extends View\n-        implements AnimatorUpdateListener, ChartInterface {\n+        implements ValueAnimator.AnimatorUpdateListener, ChartInterface {\n \n     public static final String LOG_TAG = \"MPChart\";\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java\n@@ -1,20 +1,20 @@\n \n package com.github.mikephil.charting.charts;\n \n+import android.animation.ObjectAnimator;\n import android.content.Context;\n import android.graphics.Matrix;\n-import android.graphics.PointF;\n import android.graphics.Paint.Align;\n+import android.graphics.PointF;\n import android.util.AttributeSet;\n import android.view.MotionEvent;\n \n import com.github.mikephil.charting.data.ChartData;\n import com.github.mikephil.charting.data.DataSet;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.listener.PieRadarChartTouchListener;\n-import com.github.mikephil.charting.utils.Utils;\n import com.github.mikephil.charting.utils.Legend.LegendPosition;\n-import com.nineoldandroids.animation.ObjectAnimator;\n+import com.github.mikephil.charting.utils.Utils;\n \n /**\n  * Baseclass of PieChart and RadarChart.",
    "output": "Adjust gradle to be more compatible.  Eliminate the dependency on nineoldandroids"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n@@ -240,7 +240,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n         tvX.setText(\"\" + (mSeekBarX.getProgress() + 1));\n         tvY.setText(\"\" + (mSeekBarY.getProgress()));\n \n-        setData(mSeekBarX.getProgress() + 1, mSeekBarY.getProgress() - 100);\n+        setData(mSeekBarX.getProgress() + 1, mSeekBarY.getProgress());\n \n         // redraw\n         mChart.invalidate();",
    "output": "Minor changes."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n@@ -240,7 +240,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n         tvX.setText(\"\" + (mSeekBarX.getProgress() + 1));\n         tvY.setText(\"\" + (mSeekBarY.getProgress()));\n \n-        setData(mSeekBarX.getProgress() + 1, mSeekBarY.getProgress());\n+        setData(mSeekBarX.getProgress() + 1, mSeekBarY.getProgress() - 100);\n \n         // redraw\n         mChart.invalidate();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n@@ -198,7 +198,8 @@ else if (j == points.size() - 1) {\n                 // if filled is enabled, close the path\n                 if (dataSet.isDrawFilledEnabled()) {\n \n-                    float fillMin = dataSet.getYMin() >= 0 ? mYChartMin : 0;\n+                    float fillMin = mFillFormatter\n+                            .getFillLinePosition(dataSet, mOriginalData, mYChartMax, mYChartMin);\n \n                     spline.lineTo((entries.size() - 1) * mPhaseX, fillMin);\n                     spline.lineTo(0, fillMin);",
    "output": "Minor fixes."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n@@ -7,8 +7,6 @@\n import android.graphics.Path;\n import android.util.AttributeSet;\n \n-import com.github.mikephil.charting.data.ChartData;\n-import com.github.mikephil.charting.data.DataSet;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.LineData;\n import com.github.mikephil.charting.data.LineDataSet;\n@@ -477,6 +475,20 @@ public Paint getPaint(int which) {\n         return null;\n     }\n \n+    /**\n+     * Sets a custom FillFormatter to the chart that handles the position of the\n+     * filled-line for each DataSet. Set this to null to use the default logic.\n+     * \n+     * @param formatter\n+     */\n+    public void setFillFormatter(FillFormatter formatter) {\n+\n+        if (formatter == null)\n+            formatter = new DefaultFillFormatter();\n+\n+        mFillFormatter = formatter;\n+    }\n+\n     /**\n      * Default formatter that calculates the position of the filled line.\n      * ",
    "output": "Minor changes."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -492,13 +492,16 @@ protected void calcMinMax(boolean fixedValues) {\n             // additional handling for space (default 15% space)\n             // float space = Math.abs(mDeltaY / 100f * 15f);\n             float space = Math\n-                    .abs(Math.max(Math.abs(mYChartMax), Math.abs(mYChartMin)) / 100f * 15f);\n-            if (Math.abs(mYChartMax) - Math.abs(mYChartMin) < 0.00001f) {\n+                    .abs(Math.abs(Math.max(Math.abs(mYChartMax), Math.abs(mYChartMin))) / 100f * 20f);\n+            \n+            if (Math.abs(mYChartMax - mYChartMin) < 0.00001f) {\n                 if (Math.abs(mYChartMax) < 10f)\n                     space = 1f;\n                 else\n-                    space = Math.abs(mYChartMax / 100f * 15f);\n+                    space = Math.abs(mYChartMax / 100f * 20f);\n             }\n+            \n+            Log.i(LOG_TAG, \"Space: \" + space);\n \n             if (mStartAtZero) {\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n@@ -7,9 +7,12 @@\n import android.graphics.Path;\n import android.util.AttributeSet;\n \n+import com.github.mikephil.charting.data.ChartData;\n+import com.github.mikephil.charting.data.DataSet;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.LineData;\n import com.github.mikephil.charting.data.LineDataSet;\n+import com.github.mikephil.charting.utils.FillFormatter;\n \n import java.util.ArrayList;\n \n@@ -26,6 +29,8 @@ public class LineChart extends BarLineChartBase<LineData> {\n     /** paint for the inner circle of the value indicators */\n     protected Paint mCirclePaintInner;\n \n+    private FillFormatter mFillFormatter;\n+\n     public LineChart(Context context) {\n         super(context);\n     }\n@@ -42,6 +47,8 @@ public LineChart(Context context, AttributeSet attrs, int defStyle) {\n     protected void init() {\n         super.init();\n \n+        mFillFormatter = new DefaultFillFormatter();\n+\n         mCirclePaintInner = new Paint(Paint.ANTI_ALIAS_FLAG);\n         mCirclePaintInner.setStyle(Paint.Style.FILL);\n         mCirclePaintInner.setColor(Color.WHITE);\n@@ -263,9 +270,9 @@ && isOffContentBottom(valuePoints[j + 1]))\n \n                     // mRenderPaint.setShader(dataSet.getShader());\n \n-                    float fillMin = dataSet.getYMin() >= 0 ? mYChartMin : 0;\n-\n-                    Path filled = generateFilledPath(entries, fillMin);\n+                    Path filled = generateFilledPath(entries,\n+                            mFillFormatter.getFillLinePosition(dataSet, mOriginalData, mYChartMax,\n+                                    mYChartMin));\n \n                     transformPath(filled);\n \n@@ -469,4 +476,45 @@ public Paint getPaint(int which) {\n \n         return null;\n     }\n+\n+    /**\n+     * Default formatter that calculates the position of the filled line.\n+     * \n+     * @author Philipp Jahoda\n+     */\n+    private class DefaultFillFormatter implements FillFormatter {\n+\n+        @Override\n+        public float getFillLinePosition(LineDataSet dataSet, LineData data,\n+                float chartMaxY, float chartMinY) {\n+\n+            float fillMin = 0f;\n+\n+            if (dataSet.getYMax() > 0 && dataSet.getYMin() < 0) {\n+                fillMin = 0f;\n+            } else {\n+\n+                if (!mStartAtZero) {\n+\n+                    float max, min;\n+\n+                    if (data.getYMax() > 0)\n+                        max = 0f;\n+                    else\n+                        max = chartMaxY;\n+                    if (data.getYMin() < 0)\n+                        min = 0f;\n+                    else\n+                        min = chartMinY;\n+\n+                    fillMin = dataSet.getYMin() >= 0 ? min : max;\n+                } else {\n+                    fillMin = 0f;\n+                }\n+\n+            }\n+\n+            return fillMin;\n+        }\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/FillFormatter.java b/MPChartLib/src/com/github/mikephil/charting/utils/FillFormatter.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/FillFormatter.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/FillFormatter.java\n@@ -0,0 +1,27 @@\n+\n+package com.github.mikephil.charting.utils;\n+\n+import com.github.mikephil.charting.data.LineData;\n+import com.github.mikephil.charting.data.LineDataSet;\n+\n+/**\n+ * Interface for providing a custom logic to where the filling line of a DataSet\n+ * should end. If setFillEnabled(...) is set to true.\n+ * \n+ * @author Philipp Jahoda\n+ */\n+public interface FillFormatter {\n+\n+    /**\n+     * Returns the vertical (y-axis) position where the filled-line of the\n+     * DataSet should end.\n+     * \n+     * @param dataSet\n+     * @param data\n+     * @param chartMaxY\n+     * @param chartMinY\n+     * @return\n+     */\n+    public float getFillLinePosition(LineDataSet dataSet, LineData data, float chartMaxY,\n+            float chartMinY);\n+}",
    "output": "Fixed issue concering LineChart filling (#179). Made changes to the logic of filling and added FillFormatter interface for implementing a custom fill logic."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -134,7 +134,7 @@ private void calcXValAverageLength() {\n             return;\n         }\n \n-        float sum = 0f;\n+        float sum = 1f;\n \n         for (int i = 0; i < mXVals.size(); i++) {\n             sum += mXVals.get(i).length();",
    "output": "Fixed issue concerning XLabels crash (issue #176)."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java\n@@ -122,14 +122,14 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         // add data\n         setData(45, 100);\n-        \n+\n         mChart.animateX(2500);\n-        \n-//         // restrain the maximum scale-out factor\n-//         mChart.setScaleMinima(3f, 3f);\n-//        \n-//         // center the view to a specific position inside the chart\n-//         mChart.centerViewPort(10, 50);\n+\n+        // // restrain the maximum scale-out factor\n+        // mChart.setScaleMinima(3f, 3f);\n+        //\n+        // // center the view to a specific position inside the chart\n+        // mChart.centerViewPort(10, 50);\n \n         // get the legend (only possible after setting data)\n         Legend l = mChart.getLegend();\n@@ -386,10 +386,10 @@ public void onChartDoubleTapped(MotionEvent me) {\n     public void onChartSingleTapped(MotionEvent me) {\n         Log.i(\"SingleTap\", \"Chart single-tapped.\");\n     }\n-    \n+\n     @Override\n     public void onChartFling(MotionEvent me1, MotionEvent me2, float velocityX, float velocityY) {\n-        Log.i(\"Fling\", \"Chart flinged.\");\n+        Log.i(\"Fling\", \"Chart flinged. VeloX: \" + velocityX + \", VeloY: \" + velocityY);\n     }\n \n     @Override",
    "output": "Added new .jar file."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java\n@@ -386,6 +386,11 @@ public void onChartDoubleTapped(MotionEvent me) {\n     public void onChartSingleTapped(MotionEvent me) {\n         Log.i(\"SingleTap\", \"Chart single-tapped.\");\n     }\n+    \n+    @Override\n+    public void onChartFling(MotionEvent me1, MotionEvent me2, float velocityX, float velocityY) {\n+        Log.i(\"Fling\", \"Chart flinged.\");\n+    }\n \n     @Override\n     public void onValueSelected(Entry e, int dataSetIndex) {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/interfaces/OnChartGestureListener.java b/MPChartLib/src/com/github/mikephil/charting/interfaces/OnChartGestureListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/interfaces/OnChartGestureListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/OnChartGestureListener.java\n@@ -30,4 +30,14 @@ public interface OnChartGestureListener {\n      * @param me\n      */\n     public void onChartSingleTapped(MotionEvent me);\n+\n+    /**\n+     * Callbacks then a fling gesture is made on the chart.\n+     * \n+     * @param me1\n+     * @param me2\n+     * @param velocityX\n+     * @param velocityY\n+     */\n+    public void onChartFling(MotionEvent me1, MotionEvent me2, float velocityX, float velocityY);\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -445,4 +445,15 @@ public boolean onSingleTapUp(MotionEvent e) {\n     public boolean onSingleTapConfirmed(MotionEvent e) {\n         return super.onSingleTapConfirmed(e);\n     }\n+\n+    @Override\n+    public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {\n+\n+        OnChartGestureListener l = mChart.getOnChartGestureListener();\n+\n+        if (l != null)\n+            l.onChartFling(e1, e2, velocityX, velocityY);\n+\n+        return super.onFling(e1, e2, velocityX, velocityY);\n+    }\n }",
    "output": "Added callbacks for fling gestures on the chart (OnChartGestureListener) (issue #165)."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java b/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java\n@@ -18,7 +18,7 @@\n public class Legend {\n \n     public enum LegendPosition {\n-        RIGHT_OF_CHART, RIGHT_OF_CHART_CENTER, BELOW_CHART_LEFT, BELOW_CHART_RIGHT, BELOW_CHART_CENTER, PIECHART_CENTER\n+        RIGHT_OF_CHART, RIGHT_OF_CHART_CENTER, BELOW_CHART_LEFT, BELOW_CHART_RIGHT, BELOW_CHART_CENTER, PIECHART_CENTER, NONE\n     }\n \n     public enum LegendForm {",
    "output": "Merge pull request #170 from vicktor/master\n\nAdded NONE to LegendPosition"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java b/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java\n@@ -18,7 +18,7 @@\n public class Legend {\n \n     public enum LegendPosition {\n-        RIGHT_OF_CHART, RIGHT_OF_CHART_CENTER, BELOW_CHART_LEFT, BELOW_CHART_RIGHT, BELOW_CHART_CENTER, PIECHART_CENTER\n+        RIGHT_OF_CHART, RIGHT_OF_CHART_CENTER, BELOW_CHART_LEFT, BELOW_CHART_RIGHT, BELOW_CHART_CENTER, PIECHART_CENTER, NONE\n     }\n \n     public enum LegendForm {",
    "output": "Added NONE to LegendPosition\n\nAdded NONE to LegendPosition, useful to hide Legend in certain cases"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n@@ -99,47 +99,47 @@ protected void onCreate(Bundle savedInstanceState) {\n \n     }\n \n-    // private void removeLastEntry() {\n-    //\n-    // PieData data = mChart.getDataOriginal();\n-    //\n-    // if (data != null) {\n-    //\n-    // PieDataSet set = data.getDataSet();\n-    //\n-    // if (set != null) {\n-    //\n-    // Entry e = set.getEntryForXIndex(set.getEntryCount() - 1);\n-    //\n-    // data.removeEntry(e, 0);\n-    // // or remove by index\n-    // // mData.removeEntry(xIndex, dataSetIndex);\n-    //\n-    // mChart.notifyDataSetChanged();\n-    // mChart.invalidate();\n-    // }\n-    // }\n-    // }\n-    //\n-    // private void addEntry() {\n-    //\n-    // PieData data = mChart.getDataOriginal();\n-    //\n-    // if(data != null) {\n-    //\n-    // PieDataSet set = data.getDataSet();\n-    // // set.addEntry(...);\n-    //\n-    // data.addEntry(new Entry((float) (Math.random() * 50) + 50f,\n-    // set.getEntryCount()), 0);\n-    //\n-    // // let the chart know it's data has changed\n-    // mChart.notifyDataSetChanged();\n-    //\n-    // // redraw the chart\n-    // mChart.invalidate();\n-    // }\n-    // }\n+     private void removeLastEntry() {\n+    \n+     PieData data = mChart.getDataOriginal();\n+    \n+     if (data != null) {\n+    \n+     PieDataSet set = data.getDataSet();\n+    \n+     if (set != null) {\n+    \n+     Entry e = set.getEntryForXIndex(set.getEntryCount() - 1);\n+    \n+     data.removeEntry(e, 0);\n+     // or remove by index\n+     // mData.removeEntry(xIndex, dataSetIndex);\n+    \n+     mChart.notifyDataSetChanged();\n+     mChart.invalidate();\n+     }\n+     }\n+     }\n+    \n+     private void addEntry() {\n+    \n+     PieData data = mChart.getDataOriginal();\n+    \n+     if(data != null) {\n+    \n+     PieDataSet set = data.getDataSet();\n+     // set.addEntry(...);\n+    \n+     data.addEntry(new Entry((float) (Math.random() * 25) + 20f,\n+     set.getEntryCount()), 0);\n+    \n+     // let the chart know it's data has changed\n+     mChart.notifyDataSetChanged();\n+    \n+     // redraw the chart\n+     mChart.invalidate();\n+     }\n+     }\n \n     @Override\n     public boolean onCreateOptionsMenu(Menu menu) {\n@@ -157,7 +157,6 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 else\n                     mChart.setDrawYValues(true);\n                 mChart.invalidate();\n-                // removeLastEntry();\n                 break;\n             }\n             case R.id.actionTogglePercent: {\n@@ -166,7 +165,6 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 else\n                     mChart.setUsePercentValues(true);\n                 mChart.invalidate();\n-                // addEntry();\n                 break;\n             }\n             case R.id.actionToggleHole: {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1035,31 +1035,6 @@ protected void drawDescription() {\n      */\n     protected Highlight[] mIndicesToHightlight = new Highlight[0];\n \n-    /**\n-     * checks if the given index in the given DataSet is set for highlighting or\n-     * not\n-     * \n-     * @param xIndex\n-     * @param dataSetIndex\n-     * @return\n-     */\n-    public boolean needsHighlight(int xIndex, int dataSetIndex) {\n-\n-        // no highlight\n-        if (!valuesToHighlight())\n-            return false;\n-\n-        for (int i = 0; i < mIndicesToHightlight.length; i++)\n-\n-            // check if the xvalue for the given dataset needs highlight\n-            if (mIndicesToHightlight[i].getXIndex() == xIndex\n-                    && mIndicesToHightlight[i].getDataSetIndex() == dataSetIndex\n-                    && xIndex <= mDeltaX)\n-                return true;\n-\n-        return false;\n-    }\n-\n     /**\n      * Returns true if there are values to highlight, false if there are no\n      * values to highlight. Checks if the highlight array is null, has a length\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -218,7 +218,7 @@ protected void drawHighlights() {\n \n                 // get the index to highlight\n                 int xIndex = mIndicesToHightlight[i].getXIndex();\n-                if (xIndex >= mDrawAngles.length || xIndex > mDeltaX * mPhaseX)\n+                if (xIndex >= mDrawAngles.length)\n                     continue;\n \n                 if (xIndex == 0)\n@@ -239,9 +239,6 @@ protected void drawHighlights() {\n                 if (set == null)\n                     continue;\n \n-                if (set.getEntryForXIndex(xIndex) == null)\n-                    continue;\n-\n                 float shift = set.getSelectionShift();\n                 float xShift = shift * (float) Math.cos(shiftangle);\n                 float yShift = shift * (float) Math.sin(shiftangle);\n@@ -305,6 +302,30 @@ protected void drawData() {\n         }\n     }\n \n+    /**\n+     * checks if the given index in the given DataSet is set for highlighting or\n+     * not\n+     * \n+     * @param xIndex\n+     * @param dataSetIndex\n+     * @return\n+     */\n+    private boolean needsHighlight(int xIndex, int dataSetIndex) {\n+\n+        // no highlight\n+        if (!valuesToHighlight())\n+            return false;\n+\n+        for (int i = 0; i < mIndicesToHightlight.length; i++)\n+\n+            // check if the xvalue for the given dataset needs highlight\n+            if (mIndicesToHightlight[i].getXIndex() == xIndex\n+                    && mIndicesToHightlight[i].getDataSetIndex() == dataSetIndex)\n+                return true;\n+\n+        return false;\n+    }\n+\n     /**\n      * draws the hole in the center of the chart and the transparent circle /\n      * hole\n@@ -437,11 +458,13 @@ protected void drawValues() {\n                     y -= lineHeight / 2;\n \n                     mDrawCanvas.drawText(val, x, y, mValuePaint);\n-                    mDrawCanvas.drawText(mCurrentData.getXVals().get(j), x, y + lineHeight,\n-                            mValuePaint);\n+                    if (j < mCurrentData.getXValCount())\n+                        mDrawCanvas.drawText(mCurrentData.getXVals().get(j), x, y + lineHeight,\n+                                mValuePaint);\n \n                 } else if (mDrawXVals && !mDrawYValues) {\n-                    mDrawCanvas.drawText(mCurrentData.getXVals().get(j), x, y, mValuePaint);\n+                    if (j < mCurrentData.getXValCount())\n+                        mDrawCanvas.drawText(mCurrentData.getXVals().get(j), x, y, mValuePaint);\n                 } else if (!mDrawXVals && mDrawYValues) {\n \n                     mDrawCanvas.drawText(val, x, y, mValuePaint);\n@@ -627,7 +650,7 @@ public boolean isDrawXValuesEnabled() {\n     protected float getRequiredBottomOffset() {\n         return mLegendLabelPaint.getTextSize() * 4f;\n     }\n-    \n+\n     @Override\n     protected float getRequiredBaseOffset() {\n         return 0;",
    "output": "Added feature to add and remove Entrys from PieChart (PieDataSet) dynamically."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n@@ -133,6 +133,9 @@ protected void drawData() {\n             LineDataSet dataSet = dataSets.get(i);\n             ArrayList<Entry> entries = dataSet.getYVals();\n \n+            if (entries.size() < 1)\n+                continue;\n+\n             mRenderPaint.setStrokeWidth(dataSet.getLineWidth());\n             mRenderPaint.setPathEffect(dataSet.getDashPathEffect());\n \n@@ -240,7 +243,7 @@ && isOffContentBottom(valuePoints[j + 1]))\n \n                     Path line = generateLinePath(entries);\n                     transformPath(line);\n-                    \n+\n                     mDrawCanvas.drawPath(line, mRenderPaint);\n                 }\n \n@@ -303,7 +306,7 @@ private Path generateFilledPath(ArrayList<Entry> entries, float fillMin) {\n \n         return filled;\n     }\n-    \n+\n     /**\n      * Generates the path that is used for drawing a single line.\n      * ",
    "output": "Fixed issue that caused LineChart to crash."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -77,7 +77,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         // mChart.setDrawBarShadow(true);\n \n         mChart.setUnit(\" €\");\n-\n+        \n         // mChart.setDrawXLabels(false);\n \n         mChart.setDrawGridBackground(false);\n@@ -265,7 +265,7 @@ private void setData(int count, float range) {\n \n         for (int i = 0; i < count; i++) {\n             float mult = (range + 1);\n-            float val = (float) (Math.random() * mult) - 50;\n+            float val = (float) (Math.random() * mult);\n             yVals1.add(new BarEntry(val, i));\n         }\n \n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MyMarkerView.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MyMarkerView.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MyMarkerView.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MyMarkerView.java\n@@ -2,36 +2,45 @@\n package com.xxmassdeveloper.mpchartexample;\n \n import android.content.Context;\n+import android.view.View;\n+import android.view.View.OnClickListener;\n import android.widget.TextView;\n+import android.widget.Toast;\n \n import com.github.mikephil.charting.data.CandleEntry;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.utils.MarkerView;\n import com.github.mikephil.charting.utils.Utils;\n \n-public class MyMarkerView extends MarkerView {\n+public class MyMarkerView extends MarkerView implements OnClickListener {\n \n     private TextView tvContent;\n \n     public MyMarkerView(Context context, int layoutResource) {\n         super(context, layoutResource);\n \n         tvContent = (TextView) findViewById(R.id.tvContent);\n+        setOnClickListener(this);\n     }\n \n     // callbacks everytime the MarkerView is redrawn, can be used to update the\n     // content\n     @Override\n     public void refreshContent(Entry e, int dataSetIndex) {\n-        \n-        if(e instanceof CandleEntry) {\n-            \n+\n+        if (e instanceof CandleEntry) {\n+\n             CandleEntry ce = (CandleEntry) e;\n-            \n+\n             tvContent.setText(\"\" + Utils.formatNumber(ce.getHigh(), 0, true));\n         } else {\n-         \n+\n             tvContent.setText(\"\" + Utils.formatNumber(e.getVal(), 0, true));\n         }\n     }\n+\n+    @Override\n+    public void onClick(View v) {\n+        Toast.makeText(getContext(), \"Marker clicked!\", Toast.LENGTH_SHORT).show();\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -1040,6 +1040,7 @@ protected boolean isOffContentBottom(float p) {\n \n     @Override\n     public boolean onTouchEvent(MotionEvent event) {\n+        super.onTouchEvent(event);\n \n         if (mListener == null || mDataNotSet)\n             return false;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -488,7 +488,6 @@ protected void onDraw(Canvas canvas) {\n \n         if (mDrawBitmap == null || mDrawCanvas == null) {\n \n-            // use RGB_565 for best performance\n             mDrawBitmap = Bitmap.createBitmap(getWidth(), getHeight(),\n                     Bitmap.Config.ARGB_4444);\n             mDrawCanvas = new Canvas(mDrawBitmap);\n@@ -2238,6 +2237,15 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto\n \n     @Override\n     protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n+        \n+        // create a new bitmap with the new dimensions\n+        mDrawBitmap = Bitmap.createBitmap(w, h, Bitmap.Config.ARGB_4444);\n+        mDrawCanvas = new Canvas(mDrawBitmap);        \n+        \n+        // prepare content rect and matrices\n+        prepareContentRect();\n+        prepare();\n+        \n         super.onSizeChanged(w, h, oldw, oldh);\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -176,17 +176,16 @@ protected void calcMinMax(boolean fixedValues) {\n     @Override\n     protected void calculateOffsets() {\n \n-        // setup offsets for legend\n-        if (mDrawLegend) {\n+        float legendRight = 0f, legendBottom = 0f;\n \n-            float legendRight = 0f, legendBottom = 0f;\n+        if (mDrawLegend) {\n \n             if (mLegend == null)\n                 return;\n \n-            if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART \n+            if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART\n                     || mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART_CENTER) {\n-                \n+\n                 // this is the space between the legend and the chart\n                 float spacing = Utils.convertDpToPixel(13f);\n \n@@ -202,21 +201,23 @@ protected void calculateOffsets() {\n \n                 legendBottom = mLegendLabelPaint.getTextSize() * 4f;\n             }\n-\n+            \n             mLegend.setOffsetBottom(legendBottom);\n             mLegend.setOffsetRight(legendRight);\n+        }\n \n-            float min = Utils.convertDpToPixel(11f);\n+        float min = Utils.convertDpToPixel(11f);\n \n-            mLegend.setOffsetTop(min);\n-            mLegend.setOffsetLeft(min);\n+        mLegend.setOffsetTop(min);\n+        mLegend.setOffsetLeft(min);\n \n-            mOffsetTop = min;\n-            mOffsetRight = Math.max(min, legendRight);\n-            mOffsetBottom = Math.max(min, legendBottom);\n+        mOffsetLeft = min;\n+        mOffsetTop = min;\n+        mOffsetRight = Math.max(min, legendRight);\n+        mOffsetBottom = Math.max(min, legendBottom);\n+\n+        applyCalculatedOffsets();\n \n-            applyCalculatedOffsets();\n-        }\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -109,11 +109,11 @@ public void prepare() {\n     @Override\n     protected void calculateOffsets() {\n \n+        float legendRight = 0f, legendBottom = 0f;\n+\n         // setup offsets for legend\n         if (mDrawLegend) {\n \n-            float legendRight = 0f, legendBottom = 0f;\n-\n             if (mLegend == null)\n                 return;\n \n@@ -124,7 +124,8 @@ protected void calculateOffsets() {\n                 float spacing = Utils.convertDpToPixel(8f);\n \n                 legendRight = mLegend.getMaximumEntryLength(mLegendLabelPaint)\n-                        + mLegend.getFormSize() + mLegend.getFormToTextSpace() + spacing + mXLabels.mLabelWidth;\n+                        + mLegend.getFormSize() + mLegend.getFormToTextSpace() + spacing\n+                        + mXLabels.mLabelWidth;\n \n                 mLegendLabelPaint.setTextAlign(Align.LEFT);\n \n@@ -137,23 +138,24 @@ protected void calculateOffsets() {\n \n             mLegend.setOffsetBottom(legendBottom);\n             mLegend.setOffsetRight(legendRight);\n+        }\n \n-            // all required offsets are calculated, now find largest and apply\n-            float min = Utils.convertDpToPixel(11f);\n+        // all required offsets are calculated, now find largest and apply\n+        float min = Utils.convertDpToPixel(11f);\n \n-            mOffsetBottom = Math.max(mXLabels.mLabelWidth, min);\n-            mOffsetTop = Math.max(mXLabels.mLabelWidth, min);\n-            mOffsetRight = Math.max(legendRight, min);\n-            mOffsetLeft = Math.max(mXLabels.mLabelWidth, min);\n+        mOffsetBottom = Math.max(mXLabels.mLabelWidth, min);\n+        mOffsetTop = Math.max(mXLabels.mLabelWidth, min);\n+        mOffsetRight = Math.max(legendRight, min);\n+        mOffsetLeft = Math.max(mXLabels.mLabelWidth, min);\n \n-            mOffsetBottom = Math.max(mOffsetBottom, legendBottom);\n-            mOffsetRight = Math.max(mOffsetRight, legendRight / 3f * 2f);\n+        mOffsetBottom = Math.max(mOffsetBottom, legendBottom);\n+        mOffsetRight = Math.max(mOffsetRight, legendRight / 3f * 2f);\n \n-            mLegend.setOffsetTop(min);\n-            mLegend.setOffsetLeft(min);\n+        mLegend.setOffsetTop(min);\n+        mLegend.setOffsetLeft(min);\n+\n+        applyCalculatedOffsets();\n \n-            applyCalculatedOffsets();\n-        }\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -436,7 +436,7 @@ public boolean onSingleTapUp(MotionEvent e) {\n             mChart.highlightTouch(h);\n         }\n \n-        return true;\n+        return super.onSingleTapUp(e);\n     }\n \n     @Override",
    "output": "Fixed issue concerning Activity attribute 'screenSize|orientation' (issue #15, #114, #153)."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -58,6 +58,8 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         // enable the drawing of values\n         mChart.setDrawYValues(true);\n+        \n+        mChart.setDrawValueAboveBar(true);\n \n         mChart.setDescription(\"\");\n \n@@ -263,7 +265,7 @@ private void setData(int count, float range) {\n \n         for (int i = 0; i < count; i++) {\n             float mult = (range + 1);\n-            float val = (float) (Math.random() * mult);\n+            float val = (float) (Math.random() * mult) - 50;\n             yVals1.add(new BarEntry(val, i));\n         }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n@@ -381,14 +381,17 @@ protected void drawValues() {\n \n             ArrayList<BarDataSet> dataSets = ((BarData) mCurrentData).getDataSets();\n \n-            float offset = 0f;\n+            float posOffset = 0f; float negOffset = 0f;\n \n             // calculate the correct offset depending on the draw position of\n             // the value\n-            if (mDrawValueAboveBar)\n-                offset = -Utils.convertDpToPixel(5);\n-            else\n-                offset = Utils.calcTextHeight(mValuePaint, \"8\") * 1.5f;\n+            if (mDrawValueAboveBar) {\n+                posOffset = -Utils.convertDpToPixel(5);\n+                negOffset = Utils.calcTextHeight(mValuePaint, \"8\") * 1.5f;\n+            } else {\n+                posOffset = Utils.calcTextHeight(mValuePaint, \"8\") * 1.5f;\n+                negOffset = -Utils.convertDpToPixel(5);\n+            }\n \n             for (int i = 0; i < mCurrentData.getDataSetCount(); i++) {\n \n@@ -411,8 +414,8 @@ protected void drawValues() {\n \n                         float val = entries.get(j / 2).getVal();\n \n-                        drawValue(mValueFormatter.getFormattedValue(val), valuePoints[j],\n-                                valuePoints[j + 1] + offset);\n+                        drawValue(val, valuePoints[j],\n+                                valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n                     }\n \n                     // if each value of a potential stack should be drawn\n@@ -436,8 +439,8 @@ protected void drawValues() {\n                         // in between\n                         if (vals == null) {\n \n-                            drawValue(mValueFormatter.getFormattedValue(e.getVal()), valuePoints[j],\n-                                    valuePoints[j + 1] + offset);\n+                            drawValue(e.getVal(), valuePoints[j],\n+                                    valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n \n                         } else {\n \n@@ -456,8 +459,8 @@ protected void drawValues() {\n \n                             for (int k = 0; k < transformed.length; k += 2) {\n \n-                                drawValue(mValueFormatter.getFormattedValue(vals[k / 2]), valuePoints[j],\n-                                        transformed[k + 1] + offset);\n+                                drawValue(vals[k / 2], valuePoints[j],\n+                                        transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n                             }\n                         }\n                     }\n@@ -473,15 +476,17 @@ protected void drawValues() {\n      * @param xPos\n      * @param yPos\n      */\n-    private void drawValue(String val, float xPos, float yPos) {\n+    private void drawValue(float val, float xPos, float yPos) {\n+        \n+        String value = mValueFormatter.getFormattedValue(val);     \n \n         if (mDrawUnitInChart) {\n \n-            mDrawCanvas.drawText(val + mUnit, xPos, yPos,\n+            mDrawCanvas.drawText(value + mUnit, xPos, yPos,\n                     mValuePaint);\n         } else {\n \n-            mDrawCanvas.drawText(val, xPos, yPos,\n+            mDrawCanvas.drawText(value, xPos, yPos,\n                     mValuePaint);\n         }\n     }",
    "output": "Fixed issue concerning values position in BarChart (issue #146)."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n@@ -238,27 +238,10 @@ && isOffContentBottom(valuePoints[j + 1]))\n \n                     mRenderPaint.setColor(dataSet.getColor());\n \n-                    float[] valuePoints = generateTransformedValuesLineScatter(entries);\n-\n-                    for (int j = 0; j < (valuePoints.length - 2) * mPhaseX; j += 2) {\n-\n-                        if (isOffContentRight(valuePoints[j]))\n-                            break;\n-\n-                        // make sure the lines don't do shitty things outside\n-                        // bounds\n-                        if (j != 0 && isOffContentLeft(valuePoints[j - 1])\n-                                && isOffContentTop(valuePoints[j + 1])\n-                                && isOffContentBottom(valuePoints[j + 1]))\n-                            continue;\n-\n-                        mDrawCanvas.drawLine(valuePoints[j], valuePoints[j + 1],\n-                                valuePoints[j + 2], valuePoints[j + 3], mRenderPaint);\n-                    }\n-\n-                    // Path line = generateLinePath(entries);\n-                    // transformPath(line);\n-                    // mDrawCanvas.drawPath(line, mRenderPaint);\n+                    Path line = generateLinePath(entries);\n+                    transformPath(line);\n+                    \n+                    mDrawCanvas.drawPath(line, mRenderPaint);\n                 }\n \n                 mRenderPaint.setPathEffect(null);\n@@ -320,6 +303,27 @@ private Path generateFilledPath(ArrayList<Entry> entries, float fillMin) {\n \n         return filled;\n     }\n+    \n+    /**\n+     * Generates the path that is used for drawing a single line.\n+     * \n+     * @param entries\n+     * @return\n+     */\n+    private Path generateLinePath(ArrayList<Entry> entries) {\n+\n+        Path line = new Path();\n+        line.moveTo(entries.get(0).getXIndex(), entries.get(0).getVal() * mPhaseY);\n+\n+        // create a new path\n+        for (int x = 1; x < entries.size() * mPhaseX; x++) {\n+\n+            Entry e = entries.get(x);\n+            line.lineTo(e.getXIndex(), e.getVal() * mPhaseY);\n+        }\n+\n+        return line;\n+    }\n \n     @Override\n     protected void drawValues() {",
    "output": "Fixed issue concerning static Resources reference (issue #145)."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n@@ -239,7 +239,7 @@ && isOffContentBottom(valuePoints[j + 1]))\n                     mRenderPaint.setColor(dataSet.getColor());\n \n                     float[] valuePoints = generateTransformedValuesLineScatter(entries);\n-\n+                    Path path = new Path();\n                     for (int j = 0; j < (valuePoints.length - 2) * mPhaseX; j += 2) {\n \n                         if (isOffContentRight(valuePoints[j]))\n@@ -252,10 +252,13 @@ && isOffContentTop(valuePoints[j + 1])\n                                 && isOffContentBottom(valuePoints[j + 1]))\n                             continue;\n \n-                        mDrawCanvas.drawLine(valuePoints[j], valuePoints[j + 1],\n-                                valuePoints[j + 2], valuePoints[j + 3], mRenderPaint);\n+                        if (j == 0) {\n+                            path.moveTo(valuePoints[j], valuePoints[j + 1]);\n+                        } else {\n+                            path.lineTo(valuePoints[j + 2], valuePoints[j + 3]);\n+                        }\n                     }\n-\n+                    mDrawCanvas.drawPath(path, mRenderPaint);\n                     // Path line = generateLinePath(entries);\n                     // transformPath(line);\n                     // mDrawCanvas.drawPath(line, mRenderPaint);",
    "output": "Merge pull request #150 from driventokill/master\n\ndraw line by path to prevent thick line looks fractured"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n@@ -239,7 +239,7 @@ && isOffContentBottom(valuePoints[j + 1]))\n                     mRenderPaint.setColor(dataSet.getColor());\n \n                     float[] valuePoints = generateTransformedValuesLineScatter(entries);\n-\n+                    Path path = new Path();\n                     for (int j = 0; j < (valuePoints.length - 2) * mPhaseX; j += 2) {\n \n                         if (isOffContentRight(valuePoints[j]))\n@@ -252,10 +252,13 @@ && isOffContentTop(valuePoints[j + 1])\n                                 && isOffContentBottom(valuePoints[j + 1]))\n                             continue;\n \n-                        mDrawCanvas.drawLine(valuePoints[j], valuePoints[j + 1],\n-                                valuePoints[j + 2], valuePoints[j + 3], mRenderPaint);\n+                        if (j == 0) {\n+                            path.moveTo(valuePoints[j], valuePoints[j + 1]);\n+                        } else {\n+                            path.lineTo(valuePoints[j + 2], valuePoints[j + 3]);\n+                        }\n                     }\n-\n+                    mDrawCanvas.drawPath(path, mRenderPaint);\n                     // Path line = generateLinePath(entries);\n                     // transformPath(line);\n                     // mDrawCanvas.drawPath(line, mRenderPaint);",
    "output": "draw line by path to prevent thick line looks fractured"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -179,7 +179,7 @@ protected void calculateOffsets() {\n         // setup offsets for legend\n         if (mDrawLegend) {\n \n-            float legendRight = 0f, legendBottom = 0f;\n+            float legendRight = 0f, legendBottom = 0f, legendTop = 0f;\n \n             if (mLegend == null)\n                 return;\n@@ -193,6 +193,7 @@ protected void calculateOffsets() {\n                         + mLegend.getFormSize() + mLegend.getFormToTextSpace() + spacing;\n \n                 mLegendLabelPaint.setTextAlign(Align.LEFT);\n+                legendTop = mLegend.getFullHeight(mLegendLabelPaint);\n \n             } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n                     || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT\n@@ -208,8 +209,9 @@ protected void calculateOffsets() {\n \n             mLegend.setOffsetTop(min);\n             mLegend.setOffsetLeft(min);\n-\n-            mOffsetTop = Math.max(mLegend.getFullHeight(mLegendLabelPaint), min);\n+           \n+            mOffsetTop = Math.max(min, legendTop);\n+            mOffsetBottom = Math.max(min, legendBottom);\n \n             applyCalculatedOffsets();\n         }",
    "output": "Fixed issue concerning PieChart legend offsets (issue #137)."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -119,7 +119,7 @@ public boolean onTouch(View v, MotionEvent event) {\n                     }\n \n                     // determine the touch-pointer center\n-                    midPoint(mTouchPointCenter, event);\n+                    midPoint(mTouchPointCenter, event); \n                 }\n                 break;\n             case MotionEvent.ACTION_MOVE:\n@@ -138,7 +138,7 @@ public boolean onTouch(View v, MotionEvent event) {\n \n                 } else if (mTouchMode == NONE\n                         && Math.abs(distance(event.getX(), mTouchStartPoint.x, event.getY(),\n-                                mTouchStartPoint.y)) > 5f) {\n+                                mTouchStartPoint.y)) > 25f) {\n \n                     if (mChart.hasNoDragOffset()) {\n \n@@ -399,7 +399,7 @@ public void onLongPress(MotionEvent e) {\n         if (l != null) {\n \n             l.onChartLongPressed(e);\n-        } else {\n+        } else if(mTouchMode == NONE) {\n \n             mChart.fitScreen();\n ",
    "output": "Fixed longpress-drag issue."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n@@ -84,6 +84,8 @@ protected void onCreate(Bundle savedInstanceState) {\n         // add a selection listener\n         mChart.setOnChartValueSelectedListener(this);\n         // mChart.setTouchEnabled(false);\n+        \n+        mChart.setCenterText(\"MPAndroidChart\\nLibrary\");\n \n         setData(3, 100);\n \n@@ -257,9 +259,6 @@ private void setData(int count, float range) {\n \n         // undo all highlights\n         mChart.highlightValues(null);\n-\n-        // set a text for the chart center\n-        mChart.setCenterText(\"MPAndroid\\nChart\");\n         \n         mChart.invalidate();\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -46,7 +46,7 @@ public class PieChart extends PieRadarChartBase<PieData> {\n      * variable for the text that is drawn in the center of the pie-chart. If\n      * this value is null, the default is \"Total Value\\n + getYValueSum()\"\n      */\n-    private String mCenterText = null;\n+    private String mCenterText = \"\";\n \n     /**\n      * indicates the size of the hole in the center of the piechart, default:\n@@ -385,7 +385,7 @@ private void drawHole() {\n      */\n     private void drawCenterText() {\n \n-        if (mDrawCenterText) {\n+        if (mDrawCenterText && mCenterText != null) {\n \n             PointF c = getCenterCircleBox();\n ",
    "output": "Fixed issue concerning PieChart center-text crash (issue #135)."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n@@ -14,8 +14,6 @@\n \n import com.github.mikephil.charting.charts.PieChart;\n import com.github.mikephil.charting.data.Entry;\n-import com.github.mikephil.charting.data.LineData;\n-import com.github.mikephil.charting.data.LineDataSet;\n import com.github.mikephil.charting.data.PieData;\n import com.github.mikephil.charting.data.PieDataSet;\n import com.github.mikephil.charting.interfaces.OnChartValueSelectedListener;\n@@ -45,6 +43,8 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         mSeekBarX = (SeekBar) findViewById(R.id.seekBar1);\n         mSeekBarY = (SeekBar) findViewById(R.id.seekBar2);\n+        \n+        mSeekBarY.setProgress(10);\n \n         mSeekBarX.setOnSeekBarChangeListener(this);\n         mSeekBarY.setOnSeekBarChangeListener(this);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java\n@@ -1,6 +1,7 @@\n \n package com.github.mikephil.charting.listener;\n \n+import android.util.Log;\n import android.view.GestureDetector;\n import android.view.GestureDetector.SimpleOnGestureListener;\n import android.view.MotionEvent;\n@@ -99,29 +100,41 @@ public boolean onSingleTapUp(MotionEvent e) {\n \n         } else {\n \n-            int index = mChart.getIndexForAngle(mChart.getAngleForPoint(e.getX(), e.getY()));\n-            ArrayList<SelInfo> valsAtIndex = mChart.getYValsAtIndex(index);\n+            float angle = mChart.getAngleForPoint(e.getX(), e.getY());\n+            int index = mChart.getIndexForAngle(angle);\n \n-            int dataSetIndex = 0;\n+            // check if the index could be found\n+            if (index < 0) {\n+                \n+                mChart.highlightValues(null);\n+                mLastHighlight = null;\n+                \n+            } else {\n \n-            // get the dataset that is closest to the selection (PieChart only\n-            // has one DataSet)\n-            if (mChart instanceof RadarChart) {\n+                ArrayList<SelInfo> valsAtIndex = mChart.getYValsAtIndex(index);\n \n-                dataSetIndex = Utils.getClosestDataSetIndex(valsAtIndex, distance\n-                        / ((RadarChart) mChart).getFactor());\n-            }\n+                int dataSetIndex = 0;\n \n-            Highlight h = new Highlight(index, dataSetIndex);\n+                // get the dataset that is closest to the selection (PieChart\n+                // only\n+                // has one DataSet)\n+                if (mChart instanceof RadarChart) {\n \n-            if (h.equalTo(mLastHighlight)) {\n+                    dataSetIndex = Utils.getClosestDataSetIndex(valsAtIndex, distance\n+                            / ((RadarChart) mChart).getFactor());\n+                }\n \n-                mChart.highlightTouch(null);\n-                mLastHighlight = null;\n-            } else {\n+                Highlight h = new Highlight(index, dataSetIndex);\n+\n+                if (h.equalTo(mLastHighlight)) {\n+\n+                    mChart.highlightTouch(null);\n+                    mLastHighlight = null;\n+                } else {\n \n-                mChart.highlightTouch(h);\n-                mLastHighlight = h;\n+                    mChart.highlightTouch(h);\n+                    mLastHighlight = h;\n+                }\n             }\n         }\n ",
    "output": "Fixed issue concerning PieChart crashing when tapped empty (issue #134)."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java\n@@ -35,6 +35,21 @@ public ScatterChart(Context context, AttributeSet attrs) {\n     public ScatterChart(Context context, AttributeSet attrs, int defStyle) {\n         super(context, attrs, defStyle);\n     }\n+    \n+    @Override\n+    protected void prepareContentRect() {\n+        if(isEmpty()) {\n+            super.prepareContentRect();\n+        } else {\n+            \n+            float offset = mOriginalData.getGreatestShapeSize() / 2f;\n+            \n+            mContentRect.set(mOffsetLeft - offset,\n+                    mOffsetTop,\n+                    getWidth() - mOffsetRight + offset,\n+                    getHeight() - mOffsetBottom);\n+        }\n+    }\n \n     @Override\n     protected void calcMinMax(boolean fixedValues) {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/ScatterData.java b/MPChartLib/src/com/github/mikephil/charting/data/ScatterData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ScatterData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ScatterData.java\n@@ -4,34 +4,53 @@\n import java.util.ArrayList;\n \n public class ScatterData extends BarLineScatterCandleData<ScatterDataSet> {\n-    \n+\n     public ScatterData(ArrayList<String> xVals) {\n         super(xVals);\n     }\n-    \n+\n     public ScatterData(String[] xVals) {\n         super(xVals);\n     }\n-    \n+\n     public ScatterData(ArrayList<String> xVals, ArrayList<ScatterDataSet> dataSets) {\n         super(xVals, dataSets);\n     }\n \n     public ScatterData(String[] xVals, ArrayList<ScatterDataSet> dataSets) {\n         super(xVals, dataSets);\n     }\n-    \n+\n     public ScatterData(ArrayList<String> xVals, ScatterDataSet dataSet) {\n-        super(xVals, toArrayList(dataSet));        \n+        super(xVals, toArrayList(dataSet));\n     }\n-    \n+\n     public ScatterData(String[] xVals, ScatterDataSet dataSet) {\n         super(xVals, toArrayList(dataSet));\n     }\n-    \n+\n     private static ArrayList<ScatterDataSet> toArrayList(ScatterDataSet dataSet) {\n         ArrayList<ScatterDataSet> sets = new ArrayList<ScatterDataSet>();\n         sets.add(dataSet);\n         return sets;\n     }\n+\n+    /**\n+     * Returns the maximum shape-size across all DataSets.\n+     * \n+     * @return\n+     */\n+    public float getGreatestShapeSize() {\n+\n+        float max = 0f;\n+\n+        for (ScatterDataSet set : mDataSets) {\n+            float size = set.getScatterShapeSize();\n+\n+            if (size > max)\n+                max = size;\n+        }\n+\n+        return max;\n+    }\n }",
    "output": "Fixed issue concerning ScatterChart shape clipping."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -91,7 +91,7 @@ public boolean onTouch(View v, MotionEvent event) {\n             case MotionEvent.ACTION_POINTER_DOWN:\n \n                 if (event.getPointerCount() >= 2) {\n-                    \n+\n                     mChart.disableScroll();\n \n                     saveTouchStart(event);\n@@ -122,21 +122,23 @@ public boolean onTouch(View v, MotionEvent event) {\n                 }\n                 break;\n             case MotionEvent.ACTION_MOVE:\n-                \n-                mChart.disableScroll();\n \n                 if (mTouchMode == DRAG) {\n \n+                    mChart.disableScroll();\n+\n                     performDrag(event);\n \n                 } else if (mTouchMode == X_ZOOM || mTouchMode == Y_ZOOM || mTouchMode == PINCH_ZOOM) {\n+ \n+                    mChart.disableScroll();\n \n                     performZoom(event);\n \n                 } else if (((mTouchMode == NONE) || (mTouchMode != DRAG && event\n                         .getPointerCount() == 3))\n                         && Math.abs(distance(event.getX(), mTouchStartPoint.x, event.getY(),\n-                                mTouchStartPoint.y)) > 25f)  {\n+                                mTouchStartPoint.y)) > 25f) {\n \n                     mTouchMode = DRAG;\n                 }\n@@ -179,7 +181,7 @@ private void saveTouchStart(MotionEvent event) {\n      * @param event\n      */\n     private void performDrag(MotionEvent event) {\n-        \n+\n         mMatrix.set(mSavedMatrix);\n         PointF dragPoint = new PointF(event.getX(), event.getY());\n \n@@ -199,9 +201,9 @@ private void performDrag(MotionEvent event) {\n      * @param event\n      */\n     private void performZoom(MotionEvent event) {\n-        \n-        if(event.getPointerCount() >= 2) {\n-         \n+\n+        if (event.getPointerCount() >= 2) {\n+\n             // get the distance between the pointers of the touch\n             // event\n             float totalDist = spacing(event);",
    "output": "Fixed issue concerning scrolling in ListView."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java\n@@ -131,7 +131,7 @@ private BarData generateData(int cnt) {\n \n         BarDataSet d = new BarDataSet(entries, \"New DataSet \" + cnt);    \n         d.setBarSpacePercent(20f);\n-        d.setColors(ColorTemplate.VORDIPLOM_COLORS, getApplicationContext());\n+        d.setColors(ColorTemplate.VORDIPLOM_COLORS);\n         d.setBarShadowColor(Color.rgb(203, 203, 203));\n         \n         ArrayList<BarDataSet> sets = new ArrayList<BarDataSet>();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -347,9 +347,9 @@ public void setData(T data) {\n                     \"Cannot set data for chart. Provided data object is null.\");\n             return;\n         }\n-        \n-//        Log.i(LOG_TAG, \"xvalcount: \" + data.getXValCount());\n-//        Log.i(LOG_TAG, \"entrycount: \" + data.getYValCount());\n+\n+        // Log.i(LOG_TAG, \"xvalcount: \" + data.getXValCount());\n+        // Log.i(LOG_TAG, \"entrycount: \" + data.getYValCount());\n \n         // LET THE CHART KNOW THERE IS DATA\n         mDataNotSet = false;\n@@ -633,9 +633,9 @@ protected float[] generateTransformedValuesLineScatter(ArrayList<? extends Entry\n         float[] valuePoints = new float[entries.size() * 2];\n \n         for (int j = 0; j < valuePoints.length; j += 2) {\n-            \n+\n             Entry e = entries.get(j / 2);\n-            \n+\n             valuePoints[j] = e.getXIndex();\n             valuePoints[j + 1] = e.getVal() * mPhaseY;\n         }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n@@ -56,11 +56,14 @@ protected void init() {\n     protected void calcMinMax(boolean fixedValues) {\n         super.calcMinMax(fixedValues);\n \n-        // if there is only one value in the chart\n-        if (mOriginalData.getYValCount() == 1\n-                || mOriginalData.getYValCount() <= mOriginalData.getDataSetCount()) {\n+        // // if there is only one value in the chart\n+        // if (mOriginalData.getYValCount() == 1\n+        // || mOriginalData.getYValCount() <= mOriginalData.getDataSetCount()) {\n+        // mDeltaX = 1;\n+        // }\n+\n+        if (mDeltaX == 0 && mOriginalData.getYValCount() > 0)\n             mDeltaX = 1;\n-        }\n     }\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java\n@@ -36,6 +36,14 @@ public ScatterChart(Context context, AttributeSet attrs, int defStyle) {\n         super(context, attrs, defStyle);\n     }\n \n+    @Override\n+    protected void calcMinMax(boolean fixedValues) {\n+        super.calcMinMax(fixedValues);\n+\n+        if (mDeltaX == 0 && mOriginalData.getYValCount() > 0)\n+            mDeltaX = 1;\n+    }\n+\n     @Override\n     protected void drawData() {\n \n@@ -144,7 +152,8 @@ protected void drawValues() {\n \n                     if (mDrawUnitInChart) {\n \n-                        mDrawCanvas.drawText(mValueFormatter.getFormattedValue(val) + mUnit, positions[j],\n+                        mDrawCanvas.drawText(mValueFormatter.getFormattedValue(val) + mUnit,\n+                                positions[j],\n                                 positions[j + 1] - shapeSize, mValuePaint);\n                     } else {\n \n@@ -162,8 +171,9 @@ protected void drawHighlights() {\n \n         for (int i = 0; i < mIndicesToHightlight.length; i++) {\n \n-            ScatterDataSet set = mCurrentData.getDataSetByIndex(mIndicesToHightlight[i].getDataSetIndex());\n-            \n+            ScatterDataSet set = mCurrentData.getDataSetByIndex(mIndicesToHightlight[i]\n+                    .getDataSetIndex());\n+\n             mHighlightPaint.setColor(set.getHighLightColor());\n \n             int xIndex = mIndicesToHightlight[i].getXIndex(); // get the",
    "output": "Fixed example project crash, fixed issues concerning dynamical data adding."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -87,11 +87,12 @@ public boolean onTouch(View v, MotionEvent event) {\n             case MotionEvent.ACTION_DOWN:\n \n                 saveTouchStart(event);\n-\n                 break;\n             case MotionEvent.ACTION_POINTER_DOWN:\n \n-                if (event.getPointerCount() == 2) {\n+                if (event.getPointerCount() >= 2) {\n+                    \n+                    mChart.disableScroll();\n \n                     saveTouchStart(event);\n \n@@ -121,6 +122,8 @@ public boolean onTouch(View v, MotionEvent event) {\n                 }\n                 break;\n             case MotionEvent.ACTION_MOVE:\n+                \n+                mChart.disableScroll();\n \n                 if (mTouchMode == DRAG) {\n \n@@ -141,6 +144,7 @@ public boolean onTouch(View v, MotionEvent event) {\n \n             case MotionEvent.ACTION_UP:\n                 mTouchMode = NONE;\n+                mChart.enableScroll();\n                 break;\n             case MotionEvent.ACTION_POINTER_UP:\n                 mTouchMode = POST_ZOOM;\n@@ -175,7 +179,7 @@ private void saveTouchStart(MotionEvent event) {\n      * @param event\n      */\n     private void performDrag(MotionEvent event) {\n-\n+        \n         mMatrix.set(mSavedMatrix);\n         PointF dragPoint = new PointF(event.getX(), event.getY());\n \n@@ -195,46 +199,49 @@ private void performDrag(MotionEvent event) {\n      * @param event\n      */\n     private void performZoom(MotionEvent event) {\n+        \n+        if(event.getPointerCount() >= 2) {\n+         \n+            // get the distance between the pointers of the touch\n+            // event\n+            float totalDist = spacing(event);\n \n-        // get the distance between the pointers of the touch\n-        // event\n-        float totalDist = spacing(event);\n+            if (totalDist > 10f) {\n \n-        if (totalDist > 10f) {\n+                // get the translation\n+                PointF t = getTrans(mTouchPointCenter.x, mTouchPointCenter.y);\n \n-            // get the translation\n-            PointF t = getTrans(mTouchPointCenter.x, mTouchPointCenter.y);\n+                // take actions depending on the activated touch\n+                // mode\n+                if (mTouchMode == PINCH_ZOOM) {\n \n-            // take actions depending on the activated touch\n-            // mode\n-            if (mTouchMode == PINCH_ZOOM) {\n+                    float scale = totalDist / mSavedDist; // total\n+                                                          // scale\n \n-                float scale = totalDist / mSavedDist; // total\n-                                                      // scale\n+                    mMatrix.set(mSavedMatrix);\n+                    mMatrix.postScale(scale, scale, t.x, t.y);\n \n-                mMatrix.set(mSavedMatrix);\n-                mMatrix.postScale(scale, scale, t.x, t.y);\n+                } else if (mTouchMode == X_ZOOM) {\n \n-            } else if (mTouchMode == X_ZOOM) {\n+                    float xDist = getXDist(event);\n+                    float scaleX = xDist / mSavedXDist; // x-axis\n+                                                        // scale\n \n-                float xDist = getXDist(event);\n-                float scaleX = xDist / mSavedXDist; // x-axis\n-                                                    // scale\n+                    mMatrix.set(mSavedMatrix);\n+                    mMatrix.postScale(scaleX, 1f, t.x, t.y);\n \n-                mMatrix.set(mSavedMatrix);\n-                mMatrix.postScale(scaleX, 1f, t.x, t.y);\n+                } else if (mTouchMode == Y_ZOOM) {\n \n-            } else if (mTouchMode == Y_ZOOM) {\n+                    float yDist = getYDist(event);\n+                    float scaleY = yDist / mSavedYDist; // y-axis\n+                                                        // scale\n \n-                float yDist = getYDist(event);\n-                float scaleY = yDist / mSavedYDist; // y-axis\n-                                                    // scale\n+                    mMatrix.set(mSavedMatrix);\n \n-                mMatrix.set(mSavedMatrix);\n-\n-                // y-axis comes from top to bottom, revert y\n-                mMatrix.postScale(1f, scaleY, t.x, t.y);\n+                    // y-axis comes from top to bottom, revert y\n+                    mMatrix.postScale(1f, scaleY, t.x, t.y);\n \n+                }\n             }\n         }\n     }",
    "output": "Fixed some zooming and scaling issues above other scrollabel surfaces like ListView or ViewPager."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DrawChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DrawChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DrawChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DrawChartActivity.java\n@@ -1,4 +1,3 @@\n-\n package com.xxmassdeveloper.mpchartexample;\n \n import android.graphics.Typeface;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java b/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java\n@@ -4,8 +4,6 @@\n import android.content.res.Resources;\n import android.graphics.Color;\n \n-import com.github.mikephil.charting.R;\n-\n import java.util.ArrayList;\n \n /**",
    "output": "Created .jar cile, added support for jar files."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java\n@@ -117,7 +117,7 @@ private void addDataSet() {\n         set.setLineWidth(2.5f);\n         set.setCircleSize(4.5f);\n         \n-        int color = getResources().getColor(mColors[count % mColors.length]);\n+        int color = mColors[count % mColors.length];\n         \n         set.setColor(color);\n         set.setCircleColor(color);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java\n@@ -19,6 +19,7 @@\n import com.github.mikephil.charting.data.filter.Approximator;\n import com.github.mikephil.charting.data.filter.Approximator.ApproximatorType;\n import com.github.mikephil.charting.interfaces.OnChartValueSelectedListener;\n+import com.github.mikephil.charting.utils.ColorTemplate;\n import com.github.mikephil.charting.utils.Legend;\n import com.github.mikephil.charting.utils.Legend.LegendPosition;\n import com.github.mikephil.charting.utils.XLabels;\n@@ -49,15 +50,15 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         mSeekBarY = (SeekBar) findViewById(R.id.seekBar2);\n         mSeekBarY.setOnSeekBarChangeListener(this);\n-        \n+\n         mChart = (ScatterChart) findViewById(R.id.chart1);\n         mChart.setDescription(\"\");\n-        \n+\n         Typeface tf = Typeface.createFromAsset(getAssets(), \"OpenSans-Regular.ttf\");\n         mChart.setValueTypeface(tf);\n-        \n+\n         mChart.setOnChartValueSelectedListener(this);\n-        \n+\n         mChart.setDrawGridBackground(false);\n \n         mChart.setTouchEnabled(true);\n@@ -71,14 +72,14 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         mSeekBarX.setProgress(45);\n         mSeekBarY.setProgress(100);\n-        \n+\n         Legend l = mChart.getLegend();\n         l.setPosition(LegendPosition.RIGHT_OF_CHART);\n         l.setTypeface(tf);\n-        \n+\n         YLabels yl = mChart.getYLabels();\n         yl.setTypeface(tf);\n-        \n+\n         XLabels xl = mChart.getXLabels();\n         xl.setTypeface(tf);\n     }\n@@ -129,7 +130,7 @@ public boolean onOptionsItemSelected(MenuItem item) {\n             }\n             case R.id.actionToggleAdjustXLegend: {\n                 XLabels xLabels = mChart.getXLabels();\n-                \n+\n                 if (xLabels.isAdjustXLabelsEnabled())\n                     xLabels.setAdjustXLabels(false);\n                 else\n@@ -139,9 +140,9 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 break;\n             }\n             case R.id.actionToggleFilter: {\n-                \n+\n                 Approximator a = new Approximator(ApproximatorType.DOUGLAS_PEUCKER, 25);\n-                \n+\n                 if (!mChart.isFilteringEnabled()) {\n                     mChart.enableFiltering(a);\n                 } else {\n@@ -174,7 +175,7 @@ public boolean onOptionsItemSelected(MenuItem item) {\n \n     @Override\n     public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n-        \n+\n         tvX.setText(\"\" + (mSeekBarX.getProgress() + 1));\n         tvY.setText(\"\" + (mSeekBarY.getProgress()));\n \n@@ -205,14 +206,14 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n         // create a dataset and give it a type\n         ScatterDataSet set1 = new ScatterDataSet(yVals1, \"DS 1\");\n         set1.setScatterShape(ScatterShape.SQUARE);\n-        set1.setColor(getResources().getColor(R.color.colorful_1));\n+        set1.setColor(ColorTemplate.COLORFUL_COLORS[0]);\n         ScatterDataSet set2 = new ScatterDataSet(yVals2, \"DS 2\");\n         set2.setScatterShape(ScatterShape.CIRCLE);\n-        set2.setColor(getResources().getColor(R.color.colorful_2));\n+        set2.setColor(ColorTemplate.COLORFUL_COLORS[1]);\n         ScatterDataSet set3 = new ScatterDataSet(yVals3, \"DS 3\");\n         set3.setScatterShape(ScatterShape.TRIANGLE);\n-        set3.setColor(getResources().getColor(R.color.colorful_3));\n-        \n+        set3.setColor(ColorTemplate.COLORFUL_COLORS[2]);\n+\n         set1.setScatterShapeSize(8f);\n         set2.setScatterShapeSize(8f);\n         set3.setScatterShapeSize(8f);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SimpleFragment.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SimpleFragment.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SimpleFragment.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SimpleFragment.java\n@@ -38,7 +38,7 @@ protected BarData generateBarData(int dataSets, float range, int count) {\n             }\n             \n             BarDataSet ds = new BarDataSet(entries, getLabel(i));\n-            ds.setColors(ColorTemplate.VORDIPLOM_COLORS, getActivity());\n+            ds.setColors(ColorTemplate.VORDIPLOM_COLORS);\n             sets.add(ds);\n         }\n         \n@@ -63,7 +63,7 @@ protected ScatterData generateScatterData(int dataSets, float range, int count)\n             ScatterDataSet ds = new ScatterDataSet(entries, getLabel(i));\n             ds.setScatterShapeSize(12f);\n             ds.setScatterShape(shapes[i % shapes.length]);\n-            ds.setColors(ColorTemplate.COLORFUL_COLORS, getActivity());\n+            ds.setColors(ColorTemplate.COLORFUL_COLORS);\n             ds.setScatterShapeSize(9f);\n             sets.add(ds);\n         }\n@@ -95,7 +95,7 @@ protected PieData generatePieData() {\n         }\n         \n         PieDataSet ds1 = new PieDataSet(entries1, \"Quarterly Revenues 2014\");\n-        ds1.setColors(ColorTemplate.VORDIPLOM_COLORS, getActivity());\n+        ds1.setColors(ColorTemplate.VORDIPLOM_COLORS);\n         ds1.setSliceSpace(2f);\n         \n         PieData d = new PieData(xVals, ds1);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java b/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java\n@@ -9,7 +9,7 @@\n import java.util.ArrayList;\n \n /**\n- * Class that holds predefined color arrays (e.g.\n+ * Class that holds predefined color integer arrays (e.g.\n  * ColorTemplate.VORDIPLOM_COLORS) and convenience methods for loading colors\n  * from resources.\n  * \n@@ -21,38 +21,40 @@ public class ColorTemplate {\n      * THE COLOR THEMES ARE PREDEFINED (predefined color integer arrays), FEEL\n      * FREE TO CREATE YOUR OWN WITH AS MANY DIFFERENT COLORS AS YOU WANT\n      */\n-\n-    public static final int[] FRESH_COLORS = {\n-            R.color.fresh_1, R.color.fresh_2, R.color.fresh_3, R.color.fresh_4, R.color.fresh_5\n-    };\n-    public static final int[] MONO_COLORS = {\n-            R.color.mono_1, R.color.mono_2, R.color.mono_3, R.color.mono_4, R.color.mono_5\n-    };\n     public static final int[] LIBERTY_COLORS = {\n-            R.color.liberty_1, R.color.liberty_2, R.color.liberty_3, R.color.liberty_4,\n-            R.color.liberty_5\n-    };\n-    public static final int[] COLORFUL_COLORS = {\n-            R.color.colorful_1, R.color.colorful_2, R.color.colorful_3, R.color.colorful_4,\n-            R.color.colorful_5\n-    };\n-    public static final int[] GREEN_COLORS = {\n-            R.color.greens_1, R.color.greens_2, R.color.greens_3, R.color.greens_4,\n-            R.color.greens_5\n+            Color.rgb(207, 248, 246), Color.rgb(148, 212, 212), Color.rgb(136, 180, 187),\n+            Color.rgb(118, 174, 175), Color.rgb(42, 109, 130)\n     };\n     public static final int[] JOYFUL_COLORS = {\n-            R.color.joyful_1, R.color.joyful_2, R.color.joyful_3, R.color.joyful_4,\n-            R.color.joyful_5\n+            Color.rgb(217, 80, 138), Color.rgb(254, 149, 7), Color.rgb(254, 247, 120),\n+            Color.rgb(106, 167, 134), Color.rgb(53, 194, 209)\n     };\n     public static final int[] PASTEL_COLORS = {\n-            R.color.pastel_1, R.color.pastel_2, R.color.pastel_3, R.color.pastel_4,\n-            R.color.pastel_5\n+            Color.rgb(64, 89, 128), Color.rgb(149, 165, 124), Color.rgb(217, 184, 162),\n+            Color.rgb(191, 134, 134), Color.rgb(179, 48, 80)\n+    };\n+    public static final int[] COLORFUL_COLORS = {\n+            Color.rgb(193, 37, 82), Color.rgb(255, 102, 0), Color.rgb(245, 199, 0),\n+            Color.rgb(106, 150, 31), Color.rgb(179, 100, 53)\n     };\n     public static final int[] VORDIPLOM_COLORS = {\n             Color.rgb(192, 255, 140), Color.rgb(255, 247, 140), Color.rgb(255, 208, 140),\n             Color.rgb(140, 234, 255), Color.rgb(255, 140, 157)\n     };\n \n+    // public static final int[] FRESH_COLORS = {\n+    // R.color.fresh_1, R.color.fresh_2, R.color.fresh_3, R.color.fresh_4,\n+    // R.color.fresh_5\n+    // };\n+    // public static final int[] MONO_COLORS = {\n+    // R.color.mono_1, R.color.mono_2, R.color.mono_3, R.color.mono_4,\n+    // R.color.mono_5\n+    // };\n+    // public static final int[] GREEN_COLORS = {\n+    // R.color.greens_1, R.color.greens_2, R.color.greens_3, R.color.greens_4,\n+    // R.color.greens_5\n+    // };\n+\n     /**\n      * turn an array of resource-colors (contains resource-id integers) into an\n      * array list of actual color integers",
    "output": "Refactored ColorTemplate, library is now no longer dependant on .xml resources."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -24,7 +24,8 @@\n  * \n  * @author Philipp Jahoda\n  */\n-public class BarLineChartTouchListener<T extends BarLineChartBase<? extends BarLineScatterCandleData<? extends BarLineScatterCandleRadarDataSet<? extends Entry>>>> extends SimpleOnGestureListener implements OnTouchListener {\n+public class BarLineChartTouchListener<T extends BarLineChartBase<? extends BarLineScatterCandleData<? extends BarLineScatterCandleRadarDataSet<? extends Entry>>>>\n+        extends SimpleOnGestureListener implements OnTouchListener {\n \n     private Matrix mMatrix = new Matrix();\n     private Matrix mSavedMatrix = new Matrix();\n@@ -38,12 +39,13 @@ public class BarLineChartTouchListener<T extends BarLineChartBase<? extends BarL\n     // states\n     private static final int NONE = 0;\n     private static final int DRAG = 1;\n-    private static final int DRAWING = 2;\n-    private static final int MOVE_POINT = 3;\n+    private static final int CANCEL = 2;\n+    private static final int DRAWING = 3;\n+    private static final int MOVE_POINT = 4;\n \n-    private static final int X_ZOOM = 4;\n-    private static final int Y_ZOOM = 5;\n-    private static final int PINCH_ZOOM = 6;\n+    private static final int X_ZOOM = 5;\n+    private static final int Y_ZOOM = 6;\n+    private static final int PINCH_ZOOM = 7;\n \n     /** if true, user can draw on the chart */\n     private boolean mDrawingEnabled = false;\n@@ -82,7 +84,8 @@ public boolean onTouch(View v, MotionEvent event) {\n \n         mDrawingContext.init(mChart.getDrawListener(), mChart.isAutoFinishEnabled());\n \n-        BarLineScatterCandleData<? extends BarLineScatterCandleRadarDataSet<? extends Entry>> data = mChart.getDataCurrent();\n+        BarLineScatterCandleData<? extends BarLineScatterCandleRadarDataSet<? extends Entry>> data = mChart\n+                .getDataCurrent();\n \n         // Handle touch events here...\n         switch (event.getAction() & MotionEvent.ACTION_MASK) {\n@@ -161,6 +164,9 @@ public boolean onTouch(View v, MotionEvent event) {\n                 mDrawingContext.setMovingEntry(null);\n                 mTouchMode = NONE;\n                 break;\n+            case MotionEvent.ACTION_POINTER_UP:\n+                mTouchMode = CANCEL;\n+                break;\n             case MotionEvent.ACTION_MOVE:\n                 if (mTouchMode == DRAWING || mTouchMode == MOVE_POINT) {\n                     PointD p = mChart.getValuesByTouchPoint(event.getX(), event.getY());\n@@ -257,7 +263,7 @@ public boolean onTouch(View v, MotionEvent event) {\n \n                         }\n                     }\n-                } \n+                }\n \n                 break;\n         }\n@@ -415,14 +421,13 @@ public void onLongPress(MotionEvent e) {\n         //\n         // Log.i(\"BarlineChartTouch\", \"Longpress, Zooming Out, x: \" + trans.x +\n         // \", y: \" + trans.y);\n-    }\n+    };\n \n     @Override\n     public boolean onSingleTapUp(MotionEvent e) {\n \n         Highlight h = mChart.getHighlightByTouchPoint(e.getX(), e.getY());\n \n-        // check if the same was highlighted again\n         if (h == null || h.equalTo(mLastHighlighted)) {\n             mChart.highlightTouch(null);\n             mLastHighlighted = null;",
    "output": "Fixed issue concerning crash when zooming (issue #119)."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n@@ -270,12 +270,16 @@ public static String formatNumber(float number, int digitCount, boolean separate\n         }\n \n         // if number around zero (between 1 and -1)\n-        if (zero)\n+        if (zero) {\n             out[ind--] = '0';\n+            charCount += 1;\n+        }\n \n         // if the number is negative\n-        if (neg)\n+        if (neg) {\n             out[ind--] = '-';\n+            charCount += 1;\n+        }\n \n         int start = out.length - charCount;\n ",
    "output": "Fixed issue that caused the minus sign not to be displayed for negative values int he y-labels."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java\n@@ -2,6 +2,8 @@\n package com.xxmassdeveloper.mpchartexample;\n \n import android.graphics.Color;\n+import android.graphics.LinearGradient;\n+import android.graphics.Shader;\n import android.os.Bundle;\n import android.util.Log;\n import android.view.Menu;\n@@ -112,7 +114,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         // enable/disable highlight indicators (the lines that indicate the\n         // highlighted Entry)\n         mChart.setHighlightIndicatorEnabled(false);\n-\n+               \n         // add data\n         setData(45, 100);\n         \n@@ -340,8 +342,13 @@ private void setData(int count, float range) {\n \n         // set the line to be drawn like this \"- - - - - -\"\n         set1.enableDashedLine(10f, 5f, 0f);\n+        set1.setColor(Color.BLACK);\n+        set1.setCircleColor(Color.BLACK);\n         set1.setLineWidth(1f);\n         set1.setCircleSize(4f);\n+        set1.setFillAlpha(65);\n+        set1.setFillColor(Color.BLACK);\n+//        set1.setShader(new LinearGradient(0, 0, 0, mChart.getHeight(), Color.BLACK, Color.WHITE, Shader.TileMode.MIRROR));\n \n         ArrayList<LineDataSet> dataSets = new ArrayList<LineDataSet>();\n         dataSets.add(set1); // add the datasets\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -544,8 +544,8 @@ protected void prepareMatrixOffset() {\n      */\n     protected void prepareContentRect() {\n \n-        mContentRect.set((int) mOffsetLeft, (int) mOffsetTop, getMeasuredWidth()\n-                - (int) mOffsetRight,\n+        mContentRect.set((int) mOffsetLeft - 1, (int) mOffsetTop, getMeasuredWidth()\n+                - (int) mOffsetRight + 1,\n                 getMeasuredHeight()\n                         - (int) mOffsetBottom + 1);\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n@@ -228,7 +228,9 @@ && isOffContentBottom(valuePoints[j + 1]))\n \n                     mRenderPaint.setColor(dataSet.getFillColor());\n                     // filled is drawn with less alpha\n-                    mRenderPaint.setAlpha(dataSet.getFillAlpha());                    \n+                    mRenderPaint.setAlpha(dataSet.getFillAlpha());  \n+\n+//                    mRenderPaint.setShader(dataSet.getShader());\n                     \n                     float fillMin = dataSet.getYMin() >= 0 ? mYChartMin : 0;\n \n@@ -240,6 +242,7 @@ && isOffContentBottom(valuePoints[j + 1]))\n \n                     // restore alpha\n                     mRenderPaint.setAlpha(255);\n+//                    mRenderPaint.setShader(null);\n                 }\n             }\n         }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/LineRadarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/LineRadarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/LineRadarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/LineRadarDataSet.java\n@@ -2,6 +2,7 @@\n package com.github.mikephil.charting.data;\n \n import android.graphics.Color;\n+import android.graphics.Shader;\n \n import com.github.mikephil.charting.utils.Utils;\n \n@@ -26,6 +27,8 @@ public abstract class LineRadarDataSet<T extends Entry> extends BarLineScatterCa\n     /** if true, the data will also be drawn filled */\n     private boolean mDrawFilled = false;\n     \n+//    private Shader mShader;\n+    \n     public LineRadarDataSet(ArrayList<T> yVals, String label) {\n         super(yVals, label);\n     }\n@@ -111,4 +114,12 @@ public void setDrawFilled(boolean filled) {\n     public boolean isDrawFilledEnabled() {\n         return mDrawFilled;\n     }\n+    \n+//    public void setShader(Shader s) {\n+//        mShader = s;\n+//    }\n+//    \n+//    public Shader getShader() {\n+//        return mShader;\n+//    }\n }",
    "output": "Fixed issue that caused vertical grid line to be clipped (issue #117)."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n@@ -198,7 +198,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n         set1.setSliceSpace(3f);\n         set1.setColors(ColorTemplate.createColors(getApplicationContext(),\n                 ColorTemplate.VORDIPLOM_COLORS));\n-\n+        \n         PieData data = new PieData(xVals, set1);\n         mChart.setData(data);\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -1265,7 +1265,7 @@ public void setOnDrawListener(OnDrawListener drawListener) {\n      */\n     public void setDrawingEnabled(boolean drawingEnabled) {\n         if (mListener instanceof BarLineChartTouchListener) {\n-            ((BarLineChartTouchListener) mListener).setDrawingEnabled(drawingEnabled);\n+            ((BarLineChartTouchListener<?>) mListener).setDrawingEnabled(drawingEnabled);\n         }\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/BarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/BarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/BarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/BarDataSet.java\n@@ -27,9 +27,6 @@ public class BarDataSet extends BarLineScatterCandleRadarDataSet<BarEntry> {\n      */\n     private int mEntryCountStacks = 0;\n \n-    /** the size of rounded corners */\n-    private float mRoundedCornerSize = 0f;\n-\n     /**\n      * array of labels used to describe the different values of the stacked bars\n      */\n@@ -47,8 +44,8 @@ public BarDataSet(ArrayList<BarEntry> yVals, String label) {\n     }\n \n     @Override\n-    public DataSet copy() {\n-\n+    public DataSet<BarEntry> copy() {\n+        \n         ArrayList<BarEntry> yVals = new ArrayList<BarEntry>();\n \n         for (int i = 0; i < mYVals.size(); i++) {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n@@ -23,7 +23,7 @@ public CandleDataSet(ArrayList<CandleEntry> yVals, String label) {\n     }\n \n     @Override\n-    public DataSet copy() {\n+    public DataSet<CandleEntry> copy() {\n \n         ArrayList<CandleEntry> yVals = new ArrayList<CandleEntry>();\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -265,7 +265,7 @@ public int getIndexInEntries(int xIndex) {\n      * \n      * @return\n      */\n-    public abstract DataSet copy();\n+    public abstract DataSet<T> copy();\n \n     @Override\n     public String toString() {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java\n@@ -45,7 +45,7 @@ public LineDataSet(ArrayList<Entry> yVals, String label) {\n     }\n \n     @Override\n-    public DataSet copy() {\n+    public DataSet<Entry> copy() {\n \n         ArrayList<Entry> yVals = new ArrayList<Entry>();\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/PieDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/PieDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/PieDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/PieDataSet.java\n@@ -20,7 +20,7 @@ public PieDataSet(ArrayList<Entry> yVals, String label) {\n     }\n \n     @Override\n-    public DataSet copy() {\n+    public DataSet<Entry> copy() {\n \n         ArrayList<Entry> yVals = new ArrayList<Entry>();\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/RadarDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/RadarDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/RadarDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/RadarDataSet.java\n@@ -5,13 +5,12 @@\n \n public class RadarDataSet extends LineRadarDataSet<Entry> {\n     \n-\n     public RadarDataSet(ArrayList<Entry> yVals, String label) {\n         super(yVals, label);\n     }\n \n     @Override\n-    public DataSet copy() {\n+    public DataSet<Entry> copy() {\n \n         ArrayList<Entry> yVals = new ArrayList<Entry>();\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/ScatterDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/ScatterDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ScatterDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ScatterDataSet.java\n@@ -32,7 +32,7 @@ public ScatterDataSet(ArrayList<Entry> yVals, String label) {\n     }\n \n     @Override\n-    public DataSet copy() {\n+    public DataSet<Entry> copy() {\n \n         ArrayList<Entry> yVals = new ArrayList<Entry>();\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -15,7 +15,6 @@\n import com.github.mikephil.charting.data.BarLineScatterCandleRadarDataSet;\n import com.github.mikephil.charting.data.DrawingContext;\n import com.github.mikephil.charting.data.Entry;\n-import com.github.mikephil.charting.data.LineData;\n import com.github.mikephil.charting.utils.Highlight;\n import com.github.mikephil.charting.utils.PointD;\n \n@@ -39,14 +38,12 @@ public class BarLineChartTouchListener<T extends BarLineChartBase<? extends BarL\n     // states\n     private static final int NONE = 0;\n     private static final int DRAG = 1;\n-    private static final int POSTZOOM = 3;\n-    private static final int LONGPRESS = 4;\n-    private static final int DRAWING = 5;\n-    private static final int MOVE_POINT = 6;\n+    private static final int DRAWING = 2;\n+    private static final int MOVE_POINT = 3;\n \n-    private static final int X_ZOOM = 7;\n-    private static final int Y_ZOOM = 8;\n-    private static final int PINCH_ZOOM = 9;\n+    private static final int X_ZOOM = 4;\n+    private static final int Y_ZOOM = 5;\n+    private static final int PINCH_ZOOM = 6;\n \n     /** if true, user can draw on the chart */\n     private boolean mDrawingEnabled = false;\n@@ -146,8 +143,6 @@ public boolean onTouch(View v, MotionEvent event) {\n                     }\n                 }\n                 break;\n-\n-            case MotionEvent.ACTION_CANCEL:\n             case MotionEvent.ACTION_UP:\n                 if (mTouchMode == DRAWING) {\n                     long deltaT = System.currentTimeMillis() - mStartTimestamp;\n@@ -166,9 +161,6 @@ public boolean onTouch(View v, MotionEvent event) {\n                 mDrawingContext.setMovingEntry(null);\n                 mTouchMode = NONE;\n                 break;\n-            case MotionEvent.ACTION_POINTER_UP:\n-                mTouchMode = POSTZOOM;\n-                break;\n             case MotionEvent.ACTION_MOVE:\n                 if (mTouchMode == DRAWING || mTouchMode == MOVE_POINT) {\n                     PointD p = mChart.getValuesByTouchPoint(event.getX(), event.getY());\n@@ -265,9 +257,7 @@ public boolean onTouch(View v, MotionEvent event) {\n \n                         }\n                     }\n-                } else if (mTouchMode == LONGPRESS) {\n-                    mChart.disableScroll();\n-                }\n+                } \n \n                 break;\n         }\n@@ -392,7 +382,6 @@ public Matrix getMatrix() {\n \n     @Override\n     public boolean onSingleTapConfirmed(MotionEvent e) {\n-\n         return super.onSingleTapConfirmed(e);\n     }\n \n@@ -426,13 +415,14 @@ public void onLongPress(MotionEvent e) {\n         //\n         // Log.i(\"BarlineChartTouch\", \"Longpress, Zooming Out, x: \" + trans.x +\n         // \", y: \" + trans.y);\n-    };\n+    }\n \n     @Override\n     public boolean onSingleTapUp(MotionEvent e) {\n \n         Highlight h = mChart.getHighlightByTouchPoint(e.getX(), e.getY());\n \n+        // check if the same was highlighted again\n         if (h == null || h.equalTo(mLastHighlighted)) {\n             mChart.highlightTouch(null);\n             mLastHighlighted = null;\n@@ -443,5 +433,4 @@ public boolean onSingleTapUp(MotionEvent e) {\n \n         return true;\n     }\n-\n }",
    "output": "Fixed DataSet copy issue."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -147,8 +147,8 @@ public abstract class BarLineChartBase extends Chart {\n     /** the object representing the labels on the x-axis */\n     protected XLabels mXLabels = new XLabels();\n \n-//    /** the approximator object used for data filtering */\n-//    private Approximator mApproximator;\n+    // /** the approximator object used for data filtering */\n+    // private Approximator mApproximator;\n \n     public BarLineChartBase(Context context, AttributeSet attrs, int defStyle) {\n         super(context, attrs, defStyle);\n@@ -561,25 +561,36 @@ private void prepareYLabels() {\n             interval = Math.floor(10 * intervalMagnitude);\n         }\n \n-        double first = Math.ceil(yMin / interval) * interval;\n-        double last = Utils.nextUp(Math.floor(yMax / interval) * interval);\n+        // if the labels should only show min and max\n+        if (mYLabels.isShowOnlyMinMaxEnabled()) {\n \n-        double f;\n-        int i;\n-        int n = 0;\n-        for (f = first; f <= last; f += interval) {\n-            ++n;\n-        }\n+            mYLabels.mEntryCount = 2;\n+            mYLabels.mEntries = new float[2];\n+            mYLabels.mEntries[0] = mYChartMin;\n+            mYLabels.mEntries[1] = mYChartMax;\n \n-        mYLabels.mEntryCount = n;\n+        } else {\n \n-        if (mYLabels.mEntries.length < n) {\n-            // Ensure stops contains at least numStops elements.\n-            mYLabels.mEntries = new float[n];\n-        }\n+            double first = Math.ceil(yMin / interval) * interval;\n+            double last = Utils.nextUp(Math.floor(yMax / interval) * interval);\n+\n+            double f;\n+            int i;\n+            int n = 0;\n+            for (f = first; f <= last; f += interval) {\n+                ++n;\n+            }\n \n-        for (f = first, i = 0; i < n; f += interval, ++i) {\n-            mYLabels.mEntries[i] = (float) f;\n+            mYLabels.mEntryCount = n;\n+\n+            if (mYLabels.mEntries.length < n) {\n+                // Ensure stops contains at least numStops elements.\n+                mYLabels.mEntries = new float[n];\n+            }\n+\n+            for (f = first, i = 0; i < n; f += interval, ++i) {\n+                mYLabels.mEntries[i] = (float) f;\n+            }\n         }\n \n         if (interval < 1) {\n@@ -1834,7 +1845,7 @@ public XLabels getXLabels() {\n      */\n     public void enableFiltering(Approximator a) {\n         mFilterData = true;\n-//        mApproximator = a;\n+        // mApproximator = a;\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/YLabels.java b/MPChartLib/src/com/github/mikephil/charting/utils/YLabels.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/YLabels.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/YLabels.java\n@@ -34,6 +34,9 @@ public class YLabels extends LabelBase {\n     /** if true, thousands ylabel values are separated by a dot */\n     protected boolean mSeparateTousands = true;\n \n+    /** if true, the y-labels show only the minimum and maximum value */\n+    protected boolean mShowOnlyMinMax = false;\n+\n     /** the formatter used to customly format the y-labels */\n     private YLabelFormatter mFormatter = null;\n \n@@ -160,4 +163,23 @@ public YLabelFormatter getFormatter() {\n     public void setFormatter(YLabelFormatter f) {\n         this.mFormatter = f;\n     }\n+\n+    /**\n+     * If enabled, the YLabels will only show the minimum and maximum value of\n+     * the chart. This will ignore/override the set label count.\n+     * \n+     * @param enabled\n+     */\n+    public void setShowOnlyMinMax(boolean enabled) {\n+        mShowOnlyMinMax = enabled;\n+    }\n+\n+    /**\n+     * Returns true if showing only min and max value is enabled.\n+     * \n+     * @return\n+     */\n+    public boolean isShowOnlyMinMaxEnabled() {\n+        return mShowOnlyMinMax;\n+    }\n }",
    "output": "Indluded feature to show only minimum and maximum YLabel entries (issue #102)."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -392,8 +392,12 @@ private void drawYLabels() {\n \n             PointF p = getPosition(c, r, mRotationAngle);\n \n-            mDrawCanvas.drawText(Utils.formatNumber(r / factor, mYLabels.mDecimals,\n-                    mYLabels.isSeparateThousandsEnabled()), p.x + 10, p.y - 5, mYLabelPaint);\n+            float val = r / factor;\n+            \n+            String label = Utils.formatNumber(val, mYLabels.mDecimals,\n+                    mYLabels.isSeparateThousandsEnabled());\n+            \n+            mDrawCanvas.drawText(label, p.x + 10, p.y - 5, mYLabelPaint);\n         }\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n@@ -140,7 +140,7 @@ public static int getFormatDigits(float delta) {\n             return 6;\n         } else if (delta <= 1) {\n             return 4;\n-        } else if(delta < 4) {\n+        } else if (delta < 4) {\n             return 3;\n         } else if (delta < 20) {\n             return 2;\n@@ -277,7 +277,10 @@ public static String formatNumber(float number, int digitCount, boolean separate\n         if (neg)\n             out[ind--] = '-';\n \n-        return new String(out);\n+        int start = out.length - charCount;\n+\n+        // use this instead of \"new String(...)\" because of issue < Android 4.0\n+        return String.valueOf(out, start, out.length - start);\n     }\n \n     /**\n@@ -344,8 +347,6 @@ public static double nextUp(double d) {\n                     ((d >= 0.0d) ? +1L : -1L));\n         }\n     }\n-    \n-    \n \n     /**\n      * Returns the index of the DataSet that contains the closest value on the",
    "output": "Fixed problems with RadarChart y-labels position (issue #94)."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -104,7 +104,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         YLabels yl = mChart.getYLabels();\n         yl.setTypeface(tf);\n         yl.setLabelCount(8);\n-        \n+\n         mChart.setValueTypeface(tf);\n \n         // setting data\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java\n@@ -9,7 +9,6 @@\n import android.widget.Toast;\n \n import com.github.mikephil.charting.charts.LineChart;\n-import com.github.mikephil.charting.data.BarEntry;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.LineData;\n import com.github.mikephil.charting.data.LineDataSet;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -729,12 +729,12 @@ private void drawYLabels() {\n \n         transformPointArray(positions);\n \n-        float xoffset = Utils.convertDpToPixel(5f);\n-        float yoffset = Utils.calcTextHeight(mYLabelPaint, \"A\") / 2.5f;\n-\n         mYLabelPaint.setTypeface(mYLabels.getTypeface());\n         mYLabelPaint.setTextSize(mYLabels.getTextSize());\n         mYLabelPaint.setColor(mYLabels.getTextColor());\n+        \n+        float xoffset = Utils.convertDpToPixel(5f);\n+        float yoffset = Utils.calcTextHeight(mYLabelPaint, \"A\") / 2.5f;\n \n         // determine position and draw adequately\n         if (mYLabels.getPosition() == YLabelPosition.LEFT) {\n@@ -780,8 +780,14 @@ private void drawYLabels(float xPos, float[] positions, float yOffset) {\n         // draw\n         for (int i = 0; i < mYLabels.mEntryCount; i++) {\n \n-            String text = Utils.formatNumber(mYLabels.mEntries[i], mYLabels.mDecimals,\n-                    mSeparateTousands);\n+            String text = null;\n+\n+            // if there is no formatter\n+            if (mYLabels.getFormatter() == null)\n+                text = Utils.formatNumber(mYLabels.mEntries[i], mYLabels.mDecimals,\n+                        mSeparateTousands);\n+            else\n+                text = mYLabels.getFormatter().getFormattedLabel(mYLabels.mEntries[i]);\n \n             if (!mYLabels.isDrawTopYLabelEntryEnabled() && i >= mYLabels.mEntryCount - 1)\n                 return;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/YLabelFormatter.java b/MPChartLib/src/com/github/mikephil/charting/utils/YLabelFormatter.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/YLabelFormatter.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/YLabelFormatter.java\n@@ -0,0 +1,26 @@\n+\n+package com.github.mikephil.charting.utils;\n+\n+/**\n+ * Interface that allows custom formatting of all values displayed on the y-axis\n+ * (YLabels).\n+ * \n+ * @author Philipp Jahoda\n+ */\n+public interface YLabelFormatter {\n+\n+    /**\n+     * Called when a label is customly-formatted before being drawn.\n+     * \n+     * @param value\n+     * @return the formatted label for the y-axis\n+     */\n+    public String getFormattedLabel(float value);\n+\n+//    /**\n+//     * Should return the width of the largest label in pixels.\n+//     * \n+//     * @return\n+//     */\n+//    public int getLabelWidth();\n+}\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/YLabels.java b/MPChartLib/src/com/github/mikephil/charting/utils/YLabels.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/YLabels.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/YLabels.java\n@@ -31,6 +31,9 @@ public class YLabels extends LabelBase {\n     /** indicates if the top y-label entry is drawn or not */\n     private boolean mDrawTopYLabelEntry = true;\n \n+    /** the formatter used to customly format the y-labels */\n+    private YLabelFormatter mFormatter = null;\n+\n     /** the position of the y-labels relative to the chart */\n     private YLabelPosition mPosition = YLabelPosition.LEFT;\n \n@@ -118,4 +121,22 @@ public void setLabelCount(int yCount) {\n     public int getLabelCount() {\n         return mLabelCount;\n     }\n+\n+    /**\n+     * Returns the custom formatter used to format the YLabels.\n+     * \n+     * @return\n+     */\n+    public YLabelFormatter getFormatter() {\n+        return mFormatter;\n+    }\n+\n+    /**\n+     * Sets a custom formatter that will be used to format the YLabels.\n+     * \n+     * @param f\n+     */\n+    public void setFormatter(YLabelFormatter f) {\n+        this.mFormatter = f;\n+    }\n }",
    "output": "Worked on custom formatter for YLabels (issue #68)."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -79,6 +79,9 @@ public abstract class BarLineChartBase extends Chart {\n      */\n     protected boolean mPinchZoomEnabled = false;\n \n+    /** flat that indicates if double tap zoom is enabled or not */\n+    protected boolean mDoubleTapToZoomEnabled = true;\n+\n     /** if true, dragging / scaling is enabled for the chart */\n     protected boolean mDragScaleEnabled = true;\n \n@@ -279,7 +282,7 @@ public void prepare() {\n     public void notifyDataSetChanged() {\n         if (!mFixedYValues) {\n             prepare();\n-//            prepareContentRect();\n+            // prepareContentRect();\n             prepareMatrixValuePx();\n         } else {\n             calcMinMax(mFixedYValues);\n@@ -399,17 +402,19 @@ protected void calculateOffsets() {\n         mLegend.setOffsetLeft(mOffsetLeft);\n \n         prepareContentRect();\n-        \n+\n         prepareMatrixValuePx();\n \n-//        float scaleX = (float) ((getWidth() - mOffsetLeft - mOffsetRight) / mDeltaX);\n-//        float scaleY = (float) ((getHeight() - mOffsetBottom - mOffsetTop) / mDeltaY);\n-//\n-//        Matrix val = new Matrix();\n-//        val.postTranslate(0, -mYChartMin);\n-//        val.postScale(scaleX, -scaleY);\n-//\n-//        mMatrixValueToPx.set(val);\n+        // float scaleX = (float) ((getWidth() - mOffsetLeft - mOffsetRight) /\n+        // mDeltaX);\n+        // float scaleY = (float) ((getHeight() - mOffsetBottom - mOffsetTop) /\n+        // mDeltaY);\n+        //\n+        // Matrix val = new Matrix();\n+        // val.postTranslate(0, -mYChartMin);\n+        // val.postScale(scaleX, -scaleY);\n+        //\n+        // mMatrixValueToPx.set(val);\n \n         Matrix offset = new Matrix();\n         // offset.postTranslate(mOffsetLeft, getHeight() - mOffsetBottom);\n@@ -640,14 +645,14 @@ private void drawXLabels() {\n \n             drawXLabels(getHeight() - mOffsetBottom + mXLabels.mLabelHeight + yoffset * 1.5f);\n \n-        } else if(mXLabels.getPosition() == XLabelPosition.BOTTOM_INSIDE) { \n-            \n+        } else if (mXLabels.getPosition() == XLabelPosition.BOTTOM_INSIDE) {\n+\n             drawXLabels(getHeight() - getOffsetBottom() - yoffset);\n-            \n-        } else if(mXLabels.getPosition() == XLabelPosition.TOP_INSIDE) { \n-            \n+\n+        } else if (mXLabels.getPosition() == XLabelPosition.TOP_INSIDE) {\n+\n             drawXLabels(getOffsetTop() + yoffset + mXLabels.mLabelHeight);\n-            \n+\n         } else { // BOTH SIDED\n \n             drawXLabels(getOffsetTop() - 7);\n@@ -1092,15 +1097,15 @@ public void fitScreen() {\n         save.set(mMatrixTouch);\n \n         float[] vals = new float[9];\n-        \n+\n         save.getValues(vals);\n-        \n+\n         // reset all translations and scaling\n         vals[Matrix.MTRANS_X] = 0f;\n         vals[Matrix.MTRANS_Y] = 0f;\n         vals[Matrix.MSCALE_X] = 1f;\n         vals[Matrix.MSCALE_Y] = 1f;\n-        \n+\n         save.setValues(vals);\n \n         refreshTouch(save);\n@@ -1474,6 +1479,25 @@ public boolean isDragScaleEnabled() {\n         return mDragScaleEnabled;\n     }\n \n+    /**\n+     * Set this to true to enable zooming in by double-tap on the chart.\n+     * Default: enabled\n+     * \n+     * @param enabled\n+     */\n+    public void setDoubleTapToZoomEnabled(boolean enabled) {\n+        mDoubleTapToZoomEnabled = enabled;\n+    }\n+\n+    /**\n+     * Returns true if zooming via double-tap is enabled false if not.\n+     * \n+     * @return\n+     */\n+    public boolean isDoubleTapToZoomEnabled() {\n+        return mDoubleTapToZoomEnabled;\n+    }\n+\n     /**\n      * if set to true, the vertical grid will be drawn, default: true\n      * \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/BarLineScatterCandleRadarData.java b/MPChartLib/src/com/github/mikephil/charting/data/BarLineScatterCandleRadarData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/BarLineScatterCandleRadarData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/BarLineScatterCandleRadarData.java\n@@ -6,11 +6,12 @@\n import java.util.ArrayList;\n \n /**\n- * Baseclass for all Line, Bar and ScatterData.\n+ * Baseclass for all Line, Bar and ScatterData. Supports LimitLines.\n  * \n  * @author Philipp Jahoda\n  */\n-public abstract class BarLineScatterCandleRadarData<T extends BarLineScatterCandleRadarDataSet<? extends Entry>> extends ChartData<T> {\n+public abstract class BarLineScatterCandleRadarData<T extends BarLineScatterCandleRadarDataSet<? extends Entry>>\n+        extends ChartData<T> {\n \n     /** array of limit-lines that are set for this data object */\n     private ArrayList<LimitLine> mLimitLines;\n@@ -24,7 +25,7 @@ public BarLineScatterCandleRadarData(String[] xVals, ArrayList<T> sets) {\n     }\n \n     /**\n-     * Adds a new limit line to the data.\n+     * Adds a new LimitLine to the data.\n      * \n      * @param limitLine\n      */\n@@ -51,22 +52,39 @@ public void addLimitLines(ArrayList<LimitLine> lines) {\n      */\n     public void resetLimitLines() {\n         mLimitLines = null;\n+        calcMinMax(mDataSets);\n     }\n \n     /**\n-     * Returns the limitline array of this data object.\n+     * Returns the LimitLine array of this data object.\n      * \n      * @return\n      */\n     public ArrayList<LimitLine> getLimitLines() {\n         return mLimitLines;\n     }\n \n+    /**\n+     * Returns the LimitLine from the limitlines array at the specified index.\n+     * \n+     * @param index\n+     * @return\n+     */\n+    public LimitLine getLimitLine(int index) {\n+        if (mLimitLines == null || mLimitLines.size() <= index)\n+            return null;\n+        else\n+            return mLimitLines.get(index);\n+    }\n+\n     /**\n      * Updates the min and max y-value according to the set limits.\n      */\n     private void updateMinMax() {\n \n+        if (mLimitLines == null)\n+            return;\n+\n         for (int i = 0; i < mLimitLines.size(); i++) {\n \n             LimitLine l = mLimitLines.get(i);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -397,24 +397,30 @@ public boolean onSingleTapConfirmed(MotionEvent e) {\n \n     @Override\n     public boolean onDoubleTap(MotionEvent e) {\n+        \n+        // check if double-tap zooming is enabled\n+        if(mChart.isDoubleTapToZoomEnabled()) {\n+         \n+            PointF trans = getTrans(e.getX(), e.getY());\n \n-        PointF trans = getTrans(e.getX(), e.getY());\n+            mChart.zoomIn(trans.x, trans.y);\n \n-        mChart.zoomIn(trans.x, trans.y);\n-\n-        Log.i(\"BarlineChartTouch\", \"Double-Tap, Zooming In, x: \" + trans.x + \", y: \" + trans.y);\n+            Log.i(\"BarlineChartTouch\", \"Double-Tap, Zooming In, x: \" + trans.x + \", y: \" + trans.y);\n+        }\n \n         return super.onDoubleTap(e);\n     }\n \n     @Override\n     public void onLongPress(MotionEvent e) {\n-\n-        PointF trans = getTrans(e.getX(), e.getY());\n-\n-        mChart.zoomOut(trans.x, trans.y);\n-\n-        Log.i(\"BarlineChartTouch\", \"Longpress, Zooming Out, x: \" + trans.x + \", y: \" + trans.y);\n+        \n+        mChart.fitScreen();\n+\n+//        PointF trans = getTrans(e.getX(), e.getY());\n+//\n+//        mChart.zoomOut(trans.x, trans.y);\n+//\n+//        Log.i(\"BarlineChartTouch\", \"Longpress, Zooming Out, x: \" + trans.x + \", y: \" + trans.y);\n     };\n \n     @Override\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/LimitLine.java b/MPChartLib/src/com/github/mikephil/charting/utils/LimitLine.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/LimitLine.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/LimitLine.java\n@@ -52,7 +52,7 @@ public float getLimit() {\n     public void setLineWidth(float width) {\n \n         if (width < 0.2f)\n-            width = 0.5f;\n+            width = 0.2f;\n         if (width > 12.0f)\n             width = 12.0f;\n         mLineWidth = Utils.convertDpToPixel(width);",
    "output": "Added feature to disable zooming the chart via double-tap (issue #96)."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n@@ -11,13 +11,15 @@\n import android.widget.TextView;\n import android.widget.Toast;\n \n+import com.github.mikephil.charting.charts.BarLineChartBase.BorderPosition;\n import com.github.mikephil.charting.charts.CandleStickChart;\n import com.github.mikephil.charting.data.CandleData;\n import com.github.mikephil.charting.data.CandleDataSet;\n import com.github.mikephil.charting.data.CandleEntry;\n import com.github.mikephil.charting.utils.XLabels;\n import com.github.mikephil.charting.utils.XLabels.XLabelPosition;\n import com.github.mikephil.charting.utils.YLabels;\n+import com.github.mikephil.charting.utils.YLabels.YLabelPosition;\n import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n \n import java.util.ArrayList;\n@@ -63,8 +65,9 @@ protected void onCreate(Bundle savedInstanceState) {\n         xLabels.setCenterXLabelText(true);\n         xLabels.setSpaceBetweenLabels(2);\n \n-        YLabels yLabels = mChart.getYLabels();\n+        YLabels yLabels = mChart.getYLabels();  \n         yLabels.setLabelCount(7);\n+        yLabels.setPosition(YLabelPosition.RIGHT_INSIDE);\n \n         mChart.setDrawYLabels(true);\n         mChart.setDrawLegend(false);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -540,7 +540,7 @@ protected void prepareXLabels() {\n         }\n \n         mXLabels.mLabelWidth = Utils.calcTextWidth(mXLabelPaint, a.toString());\n-        mXLabels.mLabelHeight = Utils.calcTextWidth(mXLabelPaint, \"Q\");\n+        mXLabels.mLabelHeight = Utils.calcTextHeight(mXLabelPaint, \"Q\");\n     }\n \n     /**\n@@ -643,6 +643,14 @@ private void drawXLabels() {\n \n             drawXLabels(getHeight() - mOffsetBottom + mXLabels.mLabelHeight + yoffset * 1.5f);\n \n+        } else if(mXLabels.getPosition() == XLabelPosition.BOTTOM_INSIDE) { \n+            \n+            drawXLabels(getHeight() - getOffsetBottom() - yoffset);\n+            \n+        } else if(mXLabels.getPosition() == XLabelPosition.TOP_INSIDE) { \n+            \n+            drawXLabels(getOffsetTop() + yoffset + mXLabels.mLabelHeight);\n+            \n         } else { // BOTH SIDED\n \n             drawXLabels(getOffsetTop() - 7);\n@@ -737,6 +745,16 @@ private void drawYLabels() {\n             mYLabelPaint.setTextAlign(Align.LEFT);\n             drawYLabels(getWidth() - mOffsetRight + xoffset, positions, yoffset);\n \n+        } else if (mYLabels.getPosition() == YLabelPosition.RIGHT_INSIDE) {\n+\n+            mYLabelPaint.setTextAlign(Align.RIGHT);\n+            drawYLabels(getWidth() - mOffsetRight - xoffset, positions, yoffset);\n+\n+        } else if (mYLabels.getPosition() == YLabelPosition.LEFT_INSIDE) {\n+\n+            mYLabelPaint.setTextAlign(Align.LEFT);\n+            drawYLabels(mOffsetLeft + xoffset, positions, yoffset);\n+\n         } else { // BOTH SIDED Y-AXIS LABELS\n \n             // draw left legend\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/XLabels.java b/MPChartLib/src/com/github/mikephil/charting/utils/XLabels.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/XLabels.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/XLabels.java\n@@ -55,7 +55,7 @@ public class XLabels extends LabelBase {\n \n     /** enum for the position of the x-labels relative to the chart */\n     public enum XLabelPosition {\n-        TOP, BOTTOM, BOTH_SIDED\n+        TOP, BOTTOM, BOTH_SIDED, TOP_INSIDE, BOTTOM_INSIDE\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/YLabels.java b/MPChartLib/src/com/github/mikephil/charting/utils/YLabels.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/YLabels.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/YLabels.java\n@@ -36,7 +36,7 @@ public class YLabels extends LabelBase {\n \n     /** enum for the position of the y-labels relative to the chart */\n     public enum YLabelPosition {\n-        LEFT, RIGHT, BOTH_SIDED\n+        LEFT, RIGHT, BOTH_SIDED, LEFT_INSIDE, RIGHT_INSIDE\n     }\n \n     /**",
    "output": "YLabelPosition can now be set to LEFT_INSIDE and RIGHT_INSIDE, XLabelPosition can now be set to BOTTOM_INSIDE and TOP_INSIDE (issue #69)."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MyMarkerView.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MyMarkerView.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MyMarkerView.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MyMarkerView.java\n@@ -28,10 +28,10 @@ public void refreshContent(Entry e, int dataSetIndex) {\n             \n             CandleEntry ce = (CandleEntry) e;\n             \n-            tvContent.setText(\" \" + Utils.formatNumber(ce.getHigh(), 0, true));\n+            tvContent.setText(\"\" + Utils.formatNumber(ce.getHigh(), 0, true));\n         } else {\n          \n-            tvContent.setText(\" \" + Utils.formatNumber(e.getVal(), 0, true));\n+            tvContent.setText(\"\" + Utils.formatNumber(e.getVal(), 0, true));\n         }\n     }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -21,6 +21,7 @@\n import android.util.AttributeSet;\n import android.util.Log;\n import android.view.View;\n+import android.view.View.MeasureSpec;\n \n import com.github.mikephil.charting.data.BarData;\n import com.github.mikephil.charting.data.BarDataSet;\n@@ -1065,6 +1066,9 @@ protected void drawMarkers() {\n                 // callbacks to update the content\n                 mMarkerView.refreshContent(e, dataSetIndex);\n \n+                mMarkerView.measure(MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED),\n+                        MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED));\n+                mMarkerView.layout(0, 0, mMarkerView.getMeasuredWidth(), mMarkerView.getMeasuredHeight());\n                 mMarkerView.draw(mDrawCanvas, pos[0], pos[1]);\n             }\n         }",
    "output": "Improvements of MarkerView (possibly fixed issue #76)."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -1066,6 +1066,30 @@ public void zoom(float scaleX, float scaleY, float x, float y) {\n         refreshTouch(save);\n     }\n \n+    /**\n+     * Resets all zooming and dragging and makes the chart fit exactly it's\n+     * bounds.\n+     */\n+    public void fitScreen() {\n+\n+        Matrix save = new Matrix();\n+        save.set(mMatrixTouch);\n+\n+        float[] vals = new float[9];\n+        \n+        save.getValues(vals);\n+        \n+        // reset all translations and scaling\n+        vals[Matrix.MTRANS_X] = 0f;\n+        vals[Matrix.MTRANS_Y] = 0f;\n+        vals[Matrix.MSCALE_X] = 1f;\n+        vals[Matrix.MSCALE_Y] = 1f;\n+        \n+        save.setValues(vals);\n+\n+        refreshTouch(save);\n+    }\n+\n     /**\n      * If this is set to true, the y-axis is inverted which means that low\n      * values are on top of the chart, high values on bottom.\n@@ -1272,8 +1296,7 @@ public OnDrawListener getDrawListener() {\n     /**\n      * Sets the minimum scale values for both axes. This limits the extent to\n      * which the user can zoom-out. Scale 2f means the user cannot zoom out\n-     * further than 2x zoom, ...\n-     * Min = 1f\n+     * further than 2x zoom, ... Min = 1f\n      * \n      * @param scaleXmin\n      * @param scaleYmin",
    "output": "Added method fitScreen() that resets all dragging and scaling and lets the chart fit exactly on the screen."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -66,6 +66,12 @@ public abstract class BarLineChartBase extends Chart {\n     /** the width of the grid lines */\n     protected float mGridWidth = 1f;\n \n+    /** offset that allows the chart to be dragged over its bounds on the x-axis */\n+    private float mTransOffsetX = 0f;\n+\n+    /** offset that allows the chart to be dragged over its bounds on the x-axis */\n+    private float mTransOffsetY = 0f;\n+\n     /**\n      * flag that indicates if pinch-zoom is enabled. if true, both x and y axis\n      * can be scaled with 2 fingers, if false, x and y axis can be scaled\n@@ -241,11 +247,11 @@ protected void onDraw(Canvas canvas) {\n         drawLegend();\n \n         drawMarkers();\n- \n+\n         drawDescription();\n \n         canvas.drawBitmap(mDrawBitmap, 0, 0, mDrawPaint);\n-        \n+\n         Log.i(LOG_TAG, \"DrawTime: \" + (System.currentTimeMillis() - starttime) + \" ms\");\n     }\n \n@@ -585,7 +591,7 @@ private void prepareYLabels() {\n             // 90\n             interval = Math.floor(10 * intervalMagnitude);\n         }\n-        \n+\n         double first = Math.ceil(yMin / interval) * interval;\n         double last = Utils.nextUp(Math.floor(yMax / interval) * interval);\n \n@@ -1147,24 +1153,6 @@ public Matrix refreshTouch(Matrix newTouchMatrix) {\n         return newTouchMatrix;\n     }\n \n-    /**\n-     * call this method to refresh the graph with a given touch matrix without\n-     * calling invalidate()\n-     * \n-     * @param newTouchMatrix\n-     * @return\n-     */\n-    public Matrix refreshTouchNoInvalidate(Matrix newTouchMatrix) {\n-\n-        mMatrixTouch.set(newTouchMatrix);\n-\n-        // make sure scale and translation are within their bounds\n-        limitTransAndScale(mMatrixTouch);\n-\n-        newTouchMatrix.set(mMatrixTouch);\n-        return newTouchMatrix;\n-    }\n-\n     /**\n      * limits the maximum scale and X translation of the given matrix\n      * \n@@ -1196,10 +1184,10 @@ protected void limitTransAndScale(Matrix matrix) {\n             return;\n \n         float maxTransX = -(float) mContentRect.width() * (mScaleX - 1f);\n-        float newTransX = Math.min(Math.max(curTransX, maxTransX), 0f);\n+        float newTransX = Math.min(Math.max(curTransX, maxTransX - mTransOffsetX), mTransOffsetX);\n \n         float maxTransY = (float) mContentRect.height() * (mScaleY - 1f);\n-        float newTransY = Math.max(Math.min(curTransY, maxTransY), 0f);\n+        float newTransY = Math.max(Math.min(curTransY, maxTransY + mTransOffsetY), -mTransOffsetY);\n \n         // Log.i(LOG_TAG, \"scale-X: \" + mScaleX + \", maxTransX: \" + maxTransX +\n         // \", newTransX: \"\n@@ -1283,15 +1271,20 @@ public OnDrawListener getDrawListener() {\n \n     /**\n      * Sets the minimum scale values for both axes. This limits the extent to\n-     * which the user can zoom-out. Scale 0.5f means 0.5x zoom (zoomed out by\n-     * factor 2), scale 0.1f means maximum zoomed out by factor 10, scale 2f\n-     * means the user cannot zoom out further than 2x zoom, ...\n+     * which the user can zoom-out. Scale 2f means the user cannot zoom out\n+     * further than 2x zoom, ...\n+     * Min = 1f\n      * \n      * @param scaleXmin\n      * @param scaleYmin\n      */\n     public void setScaleMinima(float scaleXmin, float scaleYmin) {\n \n+        if (scaleXmin < 1f)\n+            scaleXmin = 1f;\n+        if (scaleYmin < 1f)\n+            scaleYmin = 1f;\n+\n         mMinScaleX = scaleXmin;\n         mMinScaleY = scaleYmin;\n \n@@ -1513,7 +1506,7 @@ public void setDrawXLabels(boolean enabled) {\n     public void setDrawYLabels(boolean enabled) {\n         mDrawYLabels = enabled;\n     }\n-    \n+\n     /**\n      * Returns true if drawing y-labels is enabled, false if not.\n      * \n@@ -1632,7 +1625,6 @@ public Highlight getHighlightByTouchPoint(float x, float y) {\n         return new Highlight(xIndex, dataSetIndex);\n     }\n \n-\n     /**\n      * Returns the x and y values in the chart at the given touch point\n      * (encapsulated in a PointD). This method transforms pixel coordinates to\n@@ -1845,6 +1837,26 @@ public boolean isPinchZoomEnabled() {\n         return mPinchZoomEnabled;\n     }\n \n+    /**\n+     * Set an offset in dp that allows the user to drag the chart over it's\n+     * bounds on the x-axis.\n+     * \n+     * @param offset\n+     */\n+    public void setDragOffsetX(float offset) {\n+        mTransOffsetX = Utils.convertDpToPixel(offset);\n+    }\n+\n+    /**\n+     * Set an offset in dp that allows the user to drag the chart over it's\n+     * bounds on the y-axis.\n+     * \n+     * @param offset\n+     */\n+    public void setDragOffsetY(float offset) {\n+        mTransOffsetY = Utils.convertDpToPixel(offset);\n+    }\n+\n     /**\n      * returns the filtered ChartData object depending on approximator settings,\n      * current scale level and x- and y-axis ratio",
    "output": "Added feature to over-drag the chart over it's bounds (issue #71)."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n@@ -62,6 +62,17 @@ protected void onCreate(Bundle savedInstanceState) {\n         \n         mChart.setDrawGridBackground(false);\n         mChart.setDrawHorizontalGrid(false);\n+        \n+        // create a custom MarkerView (extend MarkerView) and specify the layout\n+        // to use for it\n+        MyMarkerView mv = new MyMarkerView(this, R.layout.custom_marker_view);\n+\n+        // define an offset to change the original position of the marker\n+        // (optional)\n+        mv.setOffsets(-mv.getMeasuredWidth() / 2, -mv.getMeasuredHeight());\n+\n+        // set the marker to the chart\n+        mChart.setMarkerView(mv);\n \n         mSeekBarX.setProgress(10);\n         mSeekBarY.setProgress(100);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n@@ -247,6 +247,9 @@ protected void drawData() {\n \n         ArrayList<BarDataSet> dataSets = (ArrayList<BarDataSet>) bd.getDataSets();\n         int setCount = bd.getDataSetCount();\n+        \n+        // the space between bar-groups\n+        float space = bd.getGroupSpace();\n \n         // 2D drawing\n         for (int i = 0; i < setCount; i++) {\n@@ -256,18 +259,14 @@ protected void drawData() {\n \n             ArrayList<BarEntry> entries = (ArrayList<BarEntry>) dataSet.getYVals();\n \n-            // the space between bar-groups\n-            float spaceSum = bd.getGroupSpace() / 2f;\n-\n             // do the drawing\n             for (int j = 0; j < dataSet.getEntryCount() * mPhaseX; j++) {\n \n                 BarEntry e = entries.get(j);\n \n                 // calculate the x-position, depending on datasetcount\n-                float x = e.getXIndex() + j * (setCount - 1) + i + spaceSum;\n+                float x = e.getXIndex() + j * (setCount - 1) + i + space * j + space / 2f;\n                 float y = e.getVal();\n-                spaceSum += bd.getGroupSpace();\n \n                 // no stacks\n                 if (noStacks) {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1053,8 +1053,19 @@ private void drawMarkerView(int xIndex, int dataSetIndex) {\n \n         // make sure the marker is in the center of the bars in BarChart and\n         // CandleStickChart\n-        if (this instanceof BarChart || this instanceof CandleStickChart)\n+        if (this instanceof CandleStickChart)\n             xPos += 0.5f;\n+        \n+        else if(this instanceof BarChart) { \n+            \n+            BarData bd = (BarData) mCurrentData;\n+            float space = bd.getGroupSpace();\n+            float j = mCurrentData.getDataSetByIndex(dataSetIndex).getEntryPosition(e);\n+            \n+            float x = (j * (mCurrentData.getDataSetCount() - 1)) + dataSetIndex + space * j + space / 2f + 0.5f;\n+            \n+            xPos += x; \n+        }\n \n         // position of the marker depends on selected value index and value\n         float[] pts = new float[] {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -421,6 +421,20 @@ public void resetColors() {\n         mColors = new ArrayList<Integer>();\n     }\n \n+    /**\n+     * Returns the position of the provided entry in the DataSets Entry array. Returns -1 if doesnt exist.\n+     * @param e\n+     * @return\n+     */\n+    public int getEntryPosition(Entry e) {\n+        \n+        for(int i = 0; i < mYVals.size(); i++) {\n+            if(e.equalTo(mYVals.get(i))) return i;\n+        }\n+        \n+        return -1;\n+    }\n+\n     // /**\n     // * Convenience method to create multiple DataSets of different types with\n     // * various double value arrays. Each double array represents the data of\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/Entry.java b/MPChartLib/src/com/github/mikephil/charting/data/Entry.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/Entry.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/Entry.java\n@@ -132,6 +132,26 @@ public Entry copy() {\n         return e;\n     }\n \n+    /**\n+     * Compares value, xIndex and data of the entries. Returns true if entries\n+     * are equal, false if not.\n+     * \n+     * @param e\n+     * @return\n+     */\n+    public boolean equalTo(Entry e) {\n+\n+        if (e.mData != this.mData)\n+            return false;\n+        if (e.mXIndex != this.mXIndex)\n+            return false;\n+\n+        if (Math.abs(e.mVal - this.mVal) > 0.0001)\n+            return false;\n+\n+        return true;\n+    }\n+\n     /**\n      * returns a string representation of the entry containing x-index and value\n      */",
    "output": "Fixed issue concerning grouped BarChart and MarkerView."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -23,6 +23,7 @@\n import android.util.Log;\n import android.view.View;\n \n+import com.github.mikephil.charting.data.BarData;\n import com.github.mikephil.charting.data.BarDataSet;\n import com.github.mikephil.charting.data.ChartData;\n import com.github.mikephil.charting.data.DataSet;\n@@ -591,13 +592,16 @@ protected float[] generateTransformedValuesBarChart(ArrayList<? extends Entry> e\n         float[] valuePoints = new float[entries.size() * 2];\n \n         int setCount = mOriginalData.getDataSetCount();\n+        BarData bd = (BarData) mOriginalData;\n+        float space = bd.getGroupSpace();\n \n         for (int j = 0; j < valuePoints.length; j += 2) {\n \n             Entry e = entries.get(j / 2);\n \n             // calculate the x-position, depending on datasetcount\n-            float x = e.getXIndex() + (j / 2 * (setCount - 1)) + dataSet + 0.5f;\n+            float x = e.getXIndex() + (j / 2 * (setCount - 1)) + dataSet + 0.5f + space * (j / 2)\n+                    + space / 2f;\n             float y = e.getVal();\n \n             valuePoints[j] = x;\n@@ -1598,7 +1602,7 @@ public Rect getContentRect() {\n \n     /** paint object used for the limit lines */\n     public static final int PAINT_LIMIT_LINE = 19;\n-    \n+\n     /** paint object used for the limit lines */\n     public static final int PAINT_RADAR_WEB = 20;\n ",
    "output": "Values are now drawn correctly in the grouped barchart (issue #67)."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java\n@@ -26,18 +26,26 @@\n  */\n public class RadarChart extends PieRadarChartBase {\n \n+    /** paint for drawing the web */\n     private Paint mWebPaint;\n \n     private Paint mYLabelPaint;\n \n+    private float mOffsetAngle = 270f;\n+\n+    /** width of the main web lines */\n     private float mWebLineWidth = 2.5f;\n \n+    /** width of the inner web lines */\n     private float mInnerWebLineWidth = 1.5f;\n \n+    /** color for the main web lines */\n     private int mWebColor = Color.rgb(122, 122, 122);\n \n+    /** color for the inner web */\n     private int mWebColorInner = Color.rgb(122, 122, 122);\n \n+    /** transparency the grid is drawn with (0-255) */\n     private int mWebAlpha = 255;\n \n     /** the object reprsenting the y-axis labels */\n@@ -97,6 +105,8 @@ protected void onDraw(Canvas canvas) {\n         drawHighlights();\n \n         drawValues();\n+        \n+        drawYLabels();\n \n         drawLegend();\n \n@@ -127,7 +137,7 @@ private void drawWeb() {\n \n         for (int i = 0; i < mCurrentData.getXValCount(); i++) {\n \n-            PointF p = getPosition(c, mYChartMax * factor, sliceangle * i);\n+            PointF p = getPosition(c, mYChartMax * factor, sliceangle * i + mOffsetAngle);\n \n             mDrawCanvas.drawLine(c.x, c.y, p.x, p.y, mWebPaint);\n         }\n@@ -145,8 +155,8 @@ private void drawWeb() {\n \n                 float r = ((mYChartMax / labelCount) * (j + 1)) * factor;\n \n-                PointF p1 = getPosition(c, r, sliceangle * i);\n-                PointF p2 = getPosition(c, r, sliceangle * (i + 1));\n+                PointF p1 = getPosition(c, r, sliceangle * i + mOffsetAngle);\n+                PointF p2 = getPosition(c, r, sliceangle * (i + 1) + mOffsetAngle);\n \n                 mDrawCanvas.drawLine(p1.x, p1.y, p2.x, p2.y, mWebPaint);\n             }\n@@ -179,7 +189,7 @@ protected void drawData() {\n \n                 Entry e = entries.get(j);\n \n-                PointF p = getPosition(c, e.getVal() * factor, sliceangle * j);\n+                PointF p = getPosition(c, e.getVal() * factor, sliceangle * j + mOffsetAngle);\n \n                 if (j == 0)\n                     surface.moveTo(p.x, p.y);\n@@ -206,6 +216,29 @@ protected void drawData() {\n         }\n     }\n \n+    /**\n+     * Draws the y-labels of the RadarChart.\n+     */\n+    private void drawYLabels() {\n+\n+        PointF c = getCenter();\n+        float factor = getFactor();\n+\n+        int labelCount = mYLabels.getLabelCount();\n+\n+        for (int j = 0; j < labelCount; j++) {\n+\n+            for (int i = 0; i < mCurrentData.getXValCount(); i++) {\n+\n+                float r = ((mYChartMax / labelCount) * (j + 1)) * factor;\n+\n+                PointF p = getPosition(c, r, mOffsetAngle);\n+                \n+                mDrawCanvas.drawText(\"\" + r, p.x, p.y, mYLabelPaint);\n+            }\n+        }\n+    }\n+\n     /**\n      * Calculates the position on the RadarChart depending on the center of the\n      * chart, the value and angle.\n@@ -325,6 +358,17 @@ public void setWebColorInner(int color) {\n         mWebColorInner = color;\n     }\n \n+    /**\n+     * Set an offset for the rotation of the RadarChart in degrees. Default 270f\n+     * \n+     * @param angle\n+     */\n+    public void setRotation(float angle) {\n+        \n+        angle = Math.abs(angle % 360f);\n+        mOffsetAngle = angle;\n+    }\n+\n     @Override\n     public void setPaint(Paint p, int which) {\n         super.setPaint(p, which);",
    "output": "Worked on RadarChart."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java\n@@ -4,6 +4,7 @@\n import android.graphics.Color;\n import android.graphics.Typeface;\n import android.os.Bundle;\n+import android.util.Log;\n import android.view.Menu;\n import android.view.MenuItem;\n import android.view.WindowManager;\n@@ -15,6 +16,8 @@\n import com.github.mikephil.charting.data.BarData;\n import com.github.mikephil.charting.data.BarDataSet;\n import com.github.mikephil.charting.data.BarEntry;\n+import com.github.mikephil.charting.data.Entry;\n+import com.github.mikephil.charting.interfaces.OnChartValueSelectedListener;\n import com.github.mikephil.charting.utils.Legend;\n import com.github.mikephil.charting.utils.Legend.LegendPosition;\n import com.github.mikephil.charting.utils.XLabels;\n@@ -23,7 +26,7 @@\n \n import java.util.ArrayList;\n \n-public class BarChartActivityMultiDataset extends DemoBase implements OnSeekBarChangeListener {\n+public class BarChartActivityMultiDataset extends DemoBase implements OnSeekBarChangeListener, OnChartValueSelectedListener {\n \n     private BarChart mChart;\n     private SeekBar mSeekBarX, mSeekBarY;\n@@ -46,6 +49,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         mSeekBarY.setOnSeekBarChangeListener(this);\n \n         mChart = (BarChart) findViewById(R.id.chart1);\n+        mChart.setOnChartValueSelectedListener(this);\n         mChart.setDescription(\"\");\n         \n         // disable the drawing of values\n@@ -235,4 +239,14 @@ public void onStopTrackingTouch(SeekBar seekBar) {\n         // TODO Auto-generated method stub\n \n     }\n+    \n+    @Override\n+    public void onValueSelected(Entry e, int dataSetIndex) {\n+        Log.i(\"Activity\", \"Selected: \" + e.toString() + \", dataSet: \" + dataSetIndex);\n+    }\n+    \n+    @Override\n+    public void onNothingSelected() {\n+        Log.i(\"Activity\", \"Nothing selected.\");\n+    }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n@@ -16,7 +16,6 @@\n import com.github.mikephil.charting.data.DataSet;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.utils.Highlight;\n-import com.github.mikephil.charting.utils.SelInfo;\n import com.github.mikephil.charting.utils.Utils;\n \n import java.util.ArrayList;\n@@ -748,22 +747,19 @@ public Highlight getHighlightByTouchPoint(float x, float y) {\n             base = mDeltaX - 1;\n \n         int setCount = mOriginalData.getDataSetCount();\n-        int valCount = setCount * mOriginalData.getXValCount() + 1;\n+        int valCount = setCount * mOriginalData.getXValCount();\n \n         BarData bd = (BarData) mCurrentData;\n \n-        // number of group-spaces\n-        int spaces = (int) (((float) valCount / (float) setCount) / (mDeltaX / base));\n+        // calculate the amount of bar-space between index 0 and touch position\n+        float space = (float) (((float) valCount / (float) setCount) / (mDeltaX / base));\n \n-        float reduction = (float) spaces * bd.getGroupSpace() + bd.getGroupSpace() / 2f;\n+        float reduction = (float) space * bd.getGroupSpace();\n \n         int xIndex = (int) ((base - reduction) / setCount);\n \n         int dataSetIndex = ((int) (base - reduction)) % setCount;\n \n-        Log.i(LOG_TAG, \"XIndex: \" + xIndex + \", dataSet: \" + dataSetIndex + \", base: \" + base\n-                + \", spaces: \" + spaces + \", reduction: \" + reduction);\n-\n         if (dataSetIndex == -1)\n             return null;\n ",
    "output": "Completed implementation of grouped BarChart."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n@@ -3,17 +3,20 @@\n \n import android.content.Context;\n import android.graphics.Color;\n+import android.graphics.Matrix;\n import android.graphics.Paint;\n import android.graphics.Path;\n import android.graphics.RectF;\n import android.util.AttributeSet;\n+import android.util.Log;\n \n import com.github.mikephil.charting.data.BarData;\n import com.github.mikephil.charting.data.BarDataSet;\n import com.github.mikephil.charting.data.BarEntry;\n import com.github.mikephil.charting.data.DataSet;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.utils.Highlight;\n+import com.github.mikephil.charting.utils.SelInfo;\n import com.github.mikephil.charting.utils.Utils;\n \n import java.util.ArrayList;\n@@ -315,6 +318,7 @@ protected void drawData() {\n                             mDrawCanvas.drawRect(mBarShadow, mRenderPaint);\n                         }\n \n+                        // draw the stack\n                         for (int k = 0; k < vals.length; k++) {\n \n                             all -= vals[k];\n@@ -610,6 +614,64 @@ private void drawValue(String val, float xPos, float yPos) {\n         }\n     }\n \n+    /**\n+     * Returns the Highlight object (contains x-index and DataSet index) of the\n+     * selected value at the given touch point inside the BarChart.\n+     * \n+     * @param x\n+     * @param y\n+     * @return\n+     */\n+    @Override\n+    public Highlight getHighlightByTouchPoint(float x, float y) {\n+\n+        if (mDataNotSet) {\n+            Log.e(LOG_TAG, \"Can't select by touch. No data set.\");\n+            return null;\n+        }\n+\n+        // create an array of the touch-point\n+        float[] pts = new float[2];\n+        pts[0] = x;\n+        pts[1] = y;\n+\n+        Matrix tmp = new Matrix();\n+\n+        // invert all matrixes to convert back to the original value\n+        mMatrixOffset.invert(tmp);\n+        tmp.mapPoints(pts);\n+\n+        mMatrixTouch.invert(tmp);\n+        tmp.mapPoints(pts);\n+\n+        mMatrixValueToPx.invert(tmp);\n+        tmp.mapPoints(pts);\n+\n+        // for barchart, we only need x-val\n+        double xTouchVal = pts[0];\n+        double base = Math.floor(xTouchVal);\n+\n+        if (xTouchVal < 0 || xTouchVal > mDeltaX)\n+            return null;\n+\n+        if (base < 0)\n+            base = 0;\n+        if (base >= mDeltaX)\n+            base = mDeltaX - 1;\n+\n+        int xIndex = (int) base;\n+        // reduce x-index depending on DataSet count (because bars are next\n+        // to each other)\n+        xIndex /= mOriginalData.getDataSetCount();\n+\n+        int dataSetIndex = ((int) base) % mOriginalData.getDataSetCount();\n+\n+        if (dataSetIndex == -1)\n+            return null;\n+\n+        return new Highlight(xIndex, dataSetIndex);\n+    }\n+\n     /**\n      * sets the skew (default 0.3f), the skew indicates how much the 3D effect\n      * of the chart is turned to the right\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -1,7 +1,6 @@\n \n package com.github.mikephil.charting.charts;\n \n-import android.annotation.TargetApi;\n import android.content.Context;\n import android.graphics.Canvas;\n import android.graphics.Color;\n@@ -11,13 +10,10 @@\n import android.graphics.Paint.Style;\n import android.graphics.Path;\n import android.graphics.Rect;\n-import android.os.Build;\n import android.util.AttributeSet;\n import android.util.Log;\n import android.view.MotionEvent;\n import android.view.ViewParent;\n-import android.view.View.OnTouchListener;\n-import android.widget.Toast;\n \n import com.github.mikephil.charting.data.BarLineScatterCandleData;\n import com.github.mikephil.charting.data.ChartData;\n@@ -1568,15 +1564,21 @@ public BorderPosition[] getBorderPositions() {\n     }\n \n     /**\n-     * returns the Highlight object (contains x-index and DataSet index) of the\n-     * selected value at the given touch point.\n+     * Returns the Highlight object (contains x-index and DataSet index) of the\n+     * selected value at the given touch point inside the Line-, Scatter-, or\n+     * CandleStick-Chart.\n      * \n      * @param x\n      * @param y\n      * @return\n      */\n     public Highlight getHighlightByTouchPoint(float x, float y) {\n \n+        if (mDataNotSet) {\n+            Log.e(LOG_TAG, \"Can't select by touch. No data set.\");\n+            return null;\n+        }\n+\n         // create an array of the touch-point\n         float[] pts = new float[2];\n         pts[0] = x;\n@@ -1607,11 +1609,10 @@ public Highlight getHighlightByTouchPoint(float x, float y) {\n         // Toast.LENGTH_SHORT).show();\n \n         // touch out of chart\n-        if ((this instanceof LineChart || this instanceof ScatterChart)\n-                && (xTouchVal < -touchOffset || xTouchVal > mDeltaX + touchOffset))\n-            return null;\n-        if (this instanceof BarChart && (xTouchVal < 0 || xTouchVal > mDeltaX))\n+        if (xTouchVal < -touchOffset || xTouchVal > mDeltaX + touchOffset)\n             return null;\n+        \n+        if(this instanceof CandleStickChart) base -= 0.5;\n \n         if (base < 0)\n             base = 0;\n@@ -1620,49 +1621,31 @@ public Highlight getHighlightByTouchPoint(float x, float y) {\n \n         int xIndex = (int) base;\n \n-        if (this instanceof BarChart) {\n-\n-            // reduce x-index depending on DataSet count (because bars are next\n-            // to each other)\n-            xIndex /= mOriginalData.getDataSetCount();\n-        }\n-\n         int dataSetIndex = 0; // index of the DataSet inside the ChartData\n                               // object\n \n-        if (this instanceof LineChart || this instanceof ScatterChart) {\n-\n-            // check if we are more than half of a x-value or not\n-            if (xTouchVal - base > 0.5) {\n-                xIndex = (int) base + 1;\n-            }\n-        }\n-\n-        if (mDataNotSet) {\n-            Log.e(LOG_TAG, \"Can't select by touch. No data set.\");\n-            return null;\n+        // check if we are more than half of a x-value or not\n+        if (xTouchVal - base > 0.5) {\n+            xIndex = (int) base + 1;\n         }\n \n         ArrayList<SelInfo> valsAtIndex = getYValsAtIndex(xIndex);\n \n-        if (this instanceof BarChart) {\n-\n-            dataSetIndex = ((int) base) % mOriginalData.getDataSetCount();\n-        } else {\n-            dataSetIndex = getClosestDataSetIndex(valsAtIndex, (float) yTouchVal);\n-        }\n+        dataSetIndex = getClosestDataSetIndex(valsAtIndex, (float) yTouchVal);\n \n         if (dataSetIndex == -1)\n             return null;\n \n-//        Toast.makeText(getContext(), \"xindex: \" + xIndex + \", dataSetIndex: \" + dataSetIndex,\n-//                Toast.LENGTH_SHORT).show();\n+        // Toast.makeText(getContext(), \"xindex: \" + xIndex + \", dataSetIndex: \"\n+        // + dataSetIndex,\n+        // Toast.LENGTH_SHORT).show();\n \n         return new Highlight(xIndex, dataSetIndex);\n     }\n \n     /**\n-     * returns the index of the DataSet that contains the closest value\n+     * Returns the index of the DataSet that contains the closest value on the\n+     * y-axis.\n      * \n      * @param valsAtIndex all the values at a specific index\n      * @return\n@@ -1681,7 +1664,7 @@ private int getClosestDataSetIndex(ArrayList<SelInfo> valsAtIndex, float val) {\n             }\n         }\n \n-        Log.i(LOG_TAG, \"Closest DataSet index: \" + index);\n+        // Log.i(LOG_TAG, \"Closest DataSet index: \" + index);\n \n         return index;\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -17,6 +17,12 @@\n import com.github.mikephil.charting.utils.Highlight;\n import com.github.mikephil.charting.utils.PointD;\n \n+/**\n+ * TouchListener for Bar-, Line-, Scatter- and CandleStickChart with handles all\n+ * touch interaction. Longpress == Zoom out. Double-Tap == Zoom in.\n+ * \n+ * @author Philipp Jahoda\n+ */\n public class BarLineChartTouchListener extends SimpleOnGestureListener implements OnTouchListener {\n \n     private Matrix mMatrix = new Matrix();\n@@ -413,7 +419,7 @@ public void onLongPress(MotionEvent e) {\n \n     @Override\n     public boolean onSingleTapUp(MotionEvent e) {\n-        \n+\n         Highlight h = mChart.getHighlightByTouchPoint(e.getX(), e.getY());\n \n         if (h == null || h.equalTo(mLastHighlighted)) {\n@@ -423,7 +429,7 @@ public boolean onSingleTapUp(MotionEvent e) {\n             mLastHighlighted = h;\n             mChart.highlightTouch(h);\n         }\n-        \n+\n         return true;\n     }\n ",
    "output": "Refactored highlighting detection."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java\n@@ -80,7 +80,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart.setTouchEnabled(true);\n \n         // enable scaling and dragging\n-        mChart.setDragScaleEnabled(false);\n+        mChart.setDragScaleEnabled(true);\n \n         // if disabled, scaling can be done on x- and y-axis separately\n         mChart.setPinchZoom(true);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n@@ -11,6 +11,7 @@\n import com.github.mikephil.charting.data.BarData;\n import com.github.mikephil.charting.data.BarDataSet;\n import com.github.mikephil.charting.data.BarEntry;\n+import com.github.mikephil.charting.data.DataSet;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.utils.Highlight;\n import com.github.mikephil.charting.utils.Utils;\n@@ -172,6 +173,19 @@ protected void calcMinMax(boolean fixedValues) {\n \n         // extend xDelta to make space for multiple datasets (if ther are one)\n         mDeltaX *= mOriginalData.getDataSetCount();\n+\n+        // int maxEntry = 0;\n+        //\n+        // for(int i = 0; i < mOriginalData.getDataSetCount(); i++) {\n+        //\n+        // DataSet set = mOriginalData.getDataSetByIndex(i);\n+        //\n+        // if(maxEntry < set.getEntryCount())\n+        // maxEntry = set.getEntryCount();\n+        // }\n+        //\n+        // float groupSpace = 0.5f;\n+        // mDeltaX += maxEntry * groupSpace;\n     }\n \n     @Override\n@@ -189,13 +203,16 @@ protected void drawHighlights() {\n             mHighlightPaint.setAlpha(ds.getHighLightAlpha());\n \n             // check outofbounds\n-            if (index < mCurrentData.getYValCount() && index >= 0 && index < mDeltaX * mPhaseX) {\n+            if (index < mCurrentData.getYValCount() && index >= 0\n+                    && index < (mDeltaX * mPhaseX) / mOriginalData.getDataSetCount()) {\n \n                 Entry e = getEntryByDataSetIndex(index, dataSetIndex);\n \n+                // calculate the correct x-position\n                 float x = index * mOriginalData.getDataSetCount() + dataSetIndex;\n-                \n-                prepareBar(x, e.getVal(), ds.getBarSpace());\n+                float y = e.getVal();\n+\n+                prepareBar(x, y, ds.getBarSpace());\n \n                 mDrawCanvas.drawRect(mBarRect, mHighlightPaint);\n \n@@ -205,12 +222,11 @@ protected void drawHighlights() {\n \n                     // distance between highlight arrow and bar\n                     float offsetY = mDeltaY * 0.07f;\n-                    float y = e.getVal();\n \n                     Path arrow = new Path();\n-                    arrow.moveTo(index + 0.5f, y + offsetY * 0.3f);\n-                    arrow.lineTo(index + 0.2f, y + offsetY);\n-                    arrow.lineTo(index + 0.8f, y + offsetY);\n+                    arrow.moveTo(x + 0.5f, y + offsetY * 0.3f);\n+                    arrow.lineTo(x + 0.2f, y + offsetY);\n+                    arrow.lineTo(x + 0.8f, y + offsetY);\n \n                     transformPath(arrow);\n                     mDrawCanvas.drawPath(arrow, mHighlightPaint);\n@@ -324,11 +340,11 @@ protected void drawData() {\n      * \n      * @param x the x-position\n      * @param y the y-position\n-     * @param space the space between bars\n+     * @param barspace the space between bars\n      */\n-    private void prepareBar(float x, float y, float space) {\n+    private void prepareBar(float x, float y, float barspace) {\n \n-        float spaceHalf = space / 2f;\n+        float spaceHalf = barspace / 2f;\n         float left = x + spaceHalf;\n         float right = x + 1f - spaceHalf;\n         float top = y >= 0 ? y : 0;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -681,7 +681,9 @@ private void drawXLabels(float yPos) {\n                 0f, 0f\n         };\n \n-        int step = mCurrentData.getDataSetCount();\n+        int step = 1;\n+        if (this instanceof BarChart)\n+            step = mCurrentData.getDataSetCount();\n \n         for (int i = 0; i < mCurrentData.getXValCount(); i += mXLabels.mXAxisLabelModulus) {\n \n@@ -893,7 +895,10 @@ protected void drawVerticalGrid() {\n                 0f, 0f\n         };\n \n-        int step = mCurrentData.getDataSetCount();\n+        // take into consideration that multiple DataSets increase mDeltaX\n+        int step = 1;\n+        if (this instanceof BarChart)\n+            step = mCurrentData.getDataSetCount();\n \n         for (int i = 0; i < mCurrentData.getXValCount(); i += mXLabels.mXAxisLabelModulus) {\n \n@@ -1640,17 +1645,18 @@ public Highlight getHighlightByTouchPoint(float x, float y) {\n \n         ArrayList<SelInfo> valsAtIndex = getYValsAtIndex(xIndex);\n \n-        if(this instanceof BarChart) {\n-            \n-            dataSetIndex = ((int) base) % mOriginalData.getDataSetCount();            \n+        if (this instanceof BarChart) {\n+\n+            dataSetIndex = ((int) base) % mOriginalData.getDataSetCount();\n         } else {\n             dataSetIndex = getClosestDataSetIndex(valsAtIndex, (float) yTouchVal);\n         }\n \n         if (dataSetIndex == -1)\n             return null;\n-        \n-        Toast.makeText(getContext(), \"xindex: \" + xIndex + \", dataSetIndex: \" + dataSetIndex, Toast.LENGTH_SHORT).show();\n+\n+//        Toast.makeText(getContext(), \"xindex: \" + xIndex + \", dataSetIndex: \" + dataSetIndex,\n+//                Toast.LENGTH_SHORT).show();\n \n         return new Highlight(xIndex, dataSetIndex);\n     }",
    "output": "Minor bugfixes."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n@@ -172,9 +172,11 @@ else if (j == points.size() - 1) {\n \n                 // if filled is enabled, close the path\n                 if (dataSet.isDrawFilledEnabled()) {\n+                    \n+                    float fillMin = dataSet.getYMin() >= 0 ? mYChartMin : 0;\n \n-                    spline.lineTo((entries.size() - 1) * mPhaseX, mYChartMin);\n-                    spline.lineTo(0, mYChartMin);\n+                    spline.lineTo((entries.size() - 1) * mPhaseX, fillMin);\n+                    spline.lineTo(0, fillMin);\n                     spline.close();\n \n                     mRenderPaint.setStyle(Paint.Style.FILL);\n@@ -225,9 +227,11 @@ && isOffContentBottom(valuePoints[j + 1]))\n \n                     mRenderPaint.setColor(dataSet.getFillColor());\n                     // filled is drawn with less alpha\n-                    mRenderPaint.setAlpha(dataSet.getFillAlpha());\n+                    mRenderPaint.setAlpha(dataSet.getFillAlpha());                    \n+                    \n+                    float fillMin = dataSet.getYMin() >= 0 ? mYChartMin : 0;\n \n-                    Path filled = generateFilledPath(entries);\n+                    Path filled = generateFilledPath(entries, fillMin);\n \n                     transformPath(filled);\n \n@@ -246,7 +250,7 @@ && isOffContentBottom(valuePoints[j + 1]))\n      * @param entries\n      * @return\n      */\n-    private Path generateFilledPath(ArrayList<? extends Entry> entries) {\n+    private Path generateFilledPath(ArrayList<? extends Entry> entries, float fillMin) {\n \n         Path filled = new Path();\n         filled.moveTo(entries.get(0).getXIndex(), entries.get(0).getVal() * mPhaseY);\n@@ -259,8 +263,8 @@ private Path generateFilledPath(ArrayList<? extends Entry> entries) {\n         }\n \n         // close up\n-        filled.lineTo(entries.get((int) ((entries.size() - 1) * mPhaseX)).getXIndex(), mYChartMin);\n-        filled.lineTo(entries.get(0).getXIndex(), mYChartMin);\n+        filled.lineTo(entries.get((int) ((entries.size() - 1) * mPhaseX)).getXIndex(), fillMin);\n+        filled.lineTo(entries.get(0).getXIndex(), fillMin);\n         filled.close();\n \n         return filled;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -146,11 +146,6 @@ public float getYValForXIndex(int xIndex) {\n      */\n     public Entry getEntryForXIndex(int x) {\n \n-//        for (int i = 0; i < mYVals.size(); i++) {\n-//            if (xIndex == mYVals.get(i).getXIndex())\n-//                return mYVals.get(i);\n-//        }\n-\n         int low = 0;\n         int high = mYVals.size()-1;\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n@@ -5,6 +5,7 @@\n import android.graphics.Paint;\n import android.graphics.Rect;\n import android.util.DisplayMetrics;\n+import android.util.Log;\n \n import java.text.DecimalFormat;\n import java.util.ArrayList;\n@@ -63,9 +64,14 @@ public static String formatDecimal(double number, int digits) {\n      */\n     public static float convertDpToPixel(float dp) {\n \n-        if (mRes == null)\n-            throw new IllegalStateException(\n-                    \"Utils NOT INITIALIZED. You need to call Utils.init(...) at least once before calling Utils.convertDpToPixel(...).\");\n+        if (mRes == null) {\n+\n+            Log.e(\"MPChartLib-Utils\",\n+                    \"Utils NOT INITIALIZED. You need to call Utils.init(...) at least once before calling Utils.convertDpToPixel(...). Otherwise conversion does not take place.\");\n+            return dp;\n+            // throw new IllegalStateException(\n+            // \"Utils NOT INITIALIZED. You need to call Utils.init(...) at least once before calling Utils.convertDpToPixel(...).\");\n+        }\n \n         DisplayMetrics metrics = mRes.getDisplayMetrics();\n         float px = dp * (metrics.densityDpi / 160f);\n@@ -81,9 +87,14 @@ public static float convertDpToPixel(float dp) {\n      */\n     public static float convertPixelsToDp(float px) {\n \n-        if (mRes == null)\n-            throw new IllegalStateException(\n-                    \"Utils NOT INITIALIZED. You need to call Utils.init(...) at least once before calling Utils.convertPixelsToDp(...).\");\n+        if (mRes == null) {\n+\n+            Log.e(\"MPChartLib-Utils\",\n+                    \"Utils NOT INITIALIZED. You need to call Utils.init(...) at least once before calling Utils.convertPixelsToDp(...). Otherwise conversion does not take place.\");\n+            return px;\n+            // throw new IllegalStateException(\n+            // \"Utils NOT INITIALIZED. You need to call Utils.init(...) at least once before calling Utils.convertPixelsToDp(...).\");\n+        }\n \n         DisplayMetrics metrics = mRes.getDisplayMetrics();\n         float dp = px / (metrics.densityDpi / 160f);",
    "output": "Fixed Utils crash, instead logcat error message (issue #64). Fixed filling bug concerning LineChart."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -152,7 +152,7 @@ public Entry getEntryForXIndex(int x) {\n //        }\n \n         int low = 0;\n-        int high = mYVals.size();\n+        int high = mYVals.size()-1;\n \n         while (low <= high) {\n             int m = (high + low) / 2;",
    "output": "Fix IndexOutOfBoundsException in binary search (issue #63)."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -43,7 +43,6 @@\n  * \n  * @author Philipp Jahoda\n  */\n-@TargetApi(Build.VERSION_CODES.HONEYCOMB)\n public abstract class BarLineChartBase extends Chart {\n \n     /** if set to true, the y-axis is inverted and low values start at the top */\n@@ -614,7 +613,7 @@ private void prepareYLabels() {\n         }\n \n         double first = Math.ceil(yMin / interval) * interval;\n-        double last = Math.nextUp(Math.floor(yMax / interval) * interval);\n+        double last = Utils.nextUp(Math.floor(yMax / interval) * interval);\n \n         double f;\n         int i;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -409,7 +409,6 @@ protected void calcMinMax(boolean fixedValues) {\n         mDeltaX = mCurrentData.getXVals().size() - 1;\n     }\n \n-    @SuppressLint(\"NewApi\")\n     @Override\n     protected void onDraw(Canvas canvas) {\n         super.onDraw(canvas);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n@@ -314,4 +314,21 @@ public static String[] convertStrings(ArrayList<String> strings) {\n \n         return ret;\n     }\n+\n+    /**\n+     * Replacement for the Math.nextUp(...) method that is only available in\n+     * HONEYCOMB and higher.\n+     * \n+     * @param d\n+     * @return\n+     */\n+    public static double nextUp(double d) {\n+        if (d == Double.POSITIVE_INFINITY)\n+            return d;\n+        else {\n+            d += 0.0d;\n+            return Double.longBitsToDouble(Double.doubleToRawLongBits(d) +\n+                    ((d >= 0.0d) ? +1L : -1L));\n+        }\n+    }\n }",
    "output": "Added support for Android 2.2 (API level 8)."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java\n@@ -12,15 +12,12 @@\n import android.widget.TextView;\n import android.widget.Toast;\n \n-import com.github.mikephil.charting.charts.BarLineChartBase.BorderPosition;\n import com.github.mikephil.charting.charts.LineChart;\n import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.data.LineData;\n import com.github.mikephil.charting.data.LineDataSet;\n import com.github.mikephil.charting.data.filter.Approximator;\n import com.github.mikephil.charting.data.filter.Approximator.ApproximatorType;\n-import com.github.mikephil.charting.utils.Legend;\n-import com.github.mikephil.charting.utils.Legend.LegendForm;\n import com.github.mikephil.charting.utils.XLabels;\n import com.github.mikephil.charting.utils.YLabels;\n import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n@@ -280,6 +277,7 @@ private void setData(int count, float range) {\n         // create a dataset and give it a type\n         LineDataSet set1 = new LineDataSet(vals1, \"DataSet 1\");\n         set1.setDrawCubic(true);\n+        set1.setCubicIntensity(0.2f);\n         set1.setDrawFilled(true);\n         set1.setDrawCircles(false); \n         set1.setLineWidth(2f);",
    "output": "Added screenshot."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/BarEntry.java b/MPChartLib/src/com/github/mikephil/charting/data/BarEntry.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/BarEntry.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/BarEntry.java\n@@ -19,7 +19,7 @@ public class BarEntry extends Entry {\n      */\n     public BarEntry(float[] vals, int xIndex) {\n         super(calcSum(vals), xIndex);\n-        \n+\n         this.mVals = vals;\n     }\n \n@@ -33,12 +33,36 @@ public BarEntry(float val, int xIndex) {\n         super(val, xIndex);\n     }\n \n+    /**\n+     * Constructor for stacked bar entries.\n+     * \n+     * @param vals\n+     * @param xIndex\n+     * @param label Additional description label.\n+     */\n+    public BarEntry(float[] vals, int xIndex, String label) {\n+        super(calcSum(vals), xIndex, label);\n+\n+        this.mVals = vals;\n+    }\n+\n+    /**\n+     * Constructor for normal bars (not stacked).\n+     * \n+     * @param val\n+     * @param xIndex\n+     * @param data Spot for additional data this Entry represents.\n+     */\n+    public BarEntry(float val, int xIndex, Object data) {\n+        super(val, xIndex, data);\n+    }\n+\n     /**\n      * Returns an exact copy of the BarEntry.\n      */\n     public BarEntry copy() {\n \n-        BarEntry copied = new BarEntry(getVal(), getXIndex());\n+        BarEntry copied = new BarEntry(getVal(), getXIndex(), getData());\n         copied.mVals = mVals;\n         return copied;\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/CandleEntry.java b/MPChartLib/src/com/github/mikephil/charting/data/CandleEntry.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/CandleEntry.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/CandleEntry.java\n@@ -8,14 +8,27 @@\n  */\n public class CandleEntry extends Entry {\n \n+    /** shadow-high value */\n     private float mShadowHigh = 0f;\n \n+    /** shadow-low value */\n     private float mShadowLow = 0f;\n \n+    /** close value */\n     private float mClose = 0f;\n \n+    /** open value */\n     private float mOpen = 0f;\n \n+    /**\n+     * Constructor.\n+     * \n+     * @param xIndex The index on the x-axis.\n+     * @param shadowH The (shadow) high value.\n+     * @param shadowL The (shadow) low value.\n+     * @param open\n+     * @param close\n+     */\n     public CandleEntry(int xIndex, float shadowH, float shadowL, float open, float close) {\n         super((shadowH + shadowL) / 2f, xIndex);\n \n@@ -25,6 +38,26 @@ public CandleEntry(int xIndex, float shadowH, float shadowL, float open, float c\n         this.mClose = close;\n     }\n \n+    /**\n+     * Constructor.\n+     * \n+     * @param xIndex The index on the x-axis.\n+     * @param shadowH The (shadow) high value.\n+     * @param shadowL The (shadow) low value.\n+     * @param open\n+     * @param close\n+     * @param data Spot for additional data this Entry represents.\n+     */\n+    public CandleEntry(int xIndex, float shadowH, float shadowL, float open, float close,\n+            Object data) {\n+        super((shadowH + shadowL) / 2f, xIndex, data);\n+\n+        this.mShadowHigh = shadowH;\n+        this.mShadowLow = shadowL;\n+        this.mOpen = open;\n+        this.mClose = close;\n+    }\n+\n     /**\n      * Returns the overall range (difference) between shadow-high and\n      * shadow-low.\n@@ -56,7 +89,7 @@ public float getVal() {\n     public CandleEntry copy() {\n \n         CandleEntry c = new CandleEntry(getXIndex(), mShadowHigh, mShadowLow, mOpen,\n-                mClose);\n+                mClose, getData());\n \n         return c;\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/Entry.java b/MPChartLib/src/com/github/mikephil/charting/data/Entry.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/Entry.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/Entry.java\n@@ -15,6 +15,9 @@ public class Entry {\n     /** the index on the x-axis */\n     private int mXIndex = 0;\n \n+    /** optional spot for additional data this Entry represents */\n+    private Object mData = null;\n+\n     /**\n      * A Entry represents one single entry in the chart.\n      * \n@@ -28,20 +31,20 @@ public Entry(float val, int xIndex) {\n         mXIndex = xIndex;\n     }\n \n-    // /**\n-    // * A Entry represents one single entry in the chart.\n-    // *\n-    // * @param vals the y values (the actual value of the entry) this entry\n-    // * should represent. E.g. multiple values for a stacked BarChart.\n-    // * @param xIndex the corresponding index in the x value array (index on\n-    // the\n-    // * x-axis of the chart, must NOT be higher than the length of the\n-    // * x-values String array)\n-    // */\n-    // public Entry(float[] vals, int xIndex) {\n-    // mVals = vals;\n-    // mXIndex = xIndex;\n-    // }\n+    /**\n+     * A Entry represents one single entry in the chart.\n+     * \n+     * @param val the y value (the actual value of the entry)\n+     * @param xIndex the corresponding index in the x value array (index on the\n+     *            x-axis of the chart, must NOT be higher than the length of the\n+     *            x-values String array)\n+     * @param data Spot for additional data this Entry represents.\n+     */\n+    public Entry(float val, int xIndex, Object data) {\n+        this(val, xIndex);\n+\n+        this.mData = data;\n+    }\n \n     /**\n      * returns the x-index the value of this object is mapped to\n@@ -79,6 +82,25 @@ public void setVal(float val) {\n         this.mVal = val;\n     }\n \n+    /**\n+     * Returns the data, additional information that this Entry represents, or\n+     * null, if no data has been specified.\n+     * \n+     * @return\n+     */\n+    public Object getData() {\n+        return mData;\n+    }\n+\n+    /**\n+     * Sets additional data this Entry should represents.\n+     * \n+     * @param data\n+     */\n+    public void setData(Object data) {\n+        this.mData = data;\n+    }\n+\n     // /**\n     // * If this Enry represents mulitple values (e.g. Stacked BarChart), it\n     // will\n@@ -106,7 +128,7 @@ public void setVal(float val) {\n      * @return\n      */\n     public Entry copy() {\n-        Entry e = new Entry(mVal, mXIndex);\n+        Entry e = new Entry(mVal, mXIndex, mData);\n         return e;\n     }\n ",
    "output": "Each Entry now has a data field that can store additional information about the Entry. (e.g. a description string, ...)"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewMultiChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewMultiChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewMultiChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewMultiChartActivity.java\n@@ -2,6 +2,7 @@\n package com.xxmassdeveloper.mpchartexample;\n \n import android.content.Context;\n+import android.graphics.Color;\n import android.os.Bundle;\n import android.view.View;\n import android.view.ViewGroup;\n@@ -103,6 +104,7 @@ private ChartData generateDataLine(int cnt) {\n         LineDataSet d1 = new LineDataSet(e1, \"New DataSet \" + cnt + \", (1)\");\n         d1.setLineWidth(3f);\n         d1.setCircleSize(5f);\n+        d1.setHighLightColor(Color.rgb(244, 117, 117));\n         \n         ArrayList<Entry> e2 = new ArrayList<Entry>();\n \n@@ -113,6 +115,7 @@ private ChartData generateDataLine(int cnt) {\n         LineDataSet d2 = new LineDataSet(e2, \"New DataSet \" + cnt + \", (2)\");\n         d2.setLineWidth(3f);\n         d2.setCircleSize(5f);\n+        d2.setHighLightColor(Color.rgb(244, 117, 117));\n         d2.setColor(getResources().getColor(R.color.vordiplom_1));\n         d2.setCircleColor(getResources().getColor(R.color.vordiplom_1));\n         \n@@ -142,6 +145,8 @@ private ChartData generateDataBar(int cnt) {\n         BarDataSet d = new BarDataSet(entries, \"New DataSet \" + cnt);\n         d.setBarSpacePercent(20f);\n         d.setColors(ColorTemplate.VORDIPLOM_COLORS, getApplicationContext());\n+        d.setHighLightAlpha(255);\n+        \n         BarData cd = new BarData(getMonths(), d);\n         return cd;\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n@@ -4,6 +4,7 @@\n import android.content.Context;\n import android.graphics.Color;\n import android.graphics.Paint;\n+import android.graphics.Path;\n import android.graphics.RectF;\n import android.util.AttributeSet;\n import android.util.Log;\n@@ -194,30 +195,28 @@ protected void drawHighlights() {\n             // check outofbounds\n             if (index < mCurrentData.getYValCount() && index >= 0 && index < mDeltaX * mPhaseX) {\n \n-                mHighlightPaint.setAlpha(120);\n-\n                 Entry e = getEntryByDataSetIndex(index, dataSetIndex);\n \n                 prepareBar(e.getXIndex(), e.getVal(), ds.getBarSpace());\n \n                 mDrawCanvas.drawRect(mBarRect, mHighlightPaint);\n \n-                // if (mDrawHighlightArrow) {\n-                //\n-                //\n-                // // distance between highlight arrow and bar\n-                // float offsetY = mDeltaY * 0.04f;\n-                //\n-                // mHighlightPaint.setAlpha(200);\n-                //\n-                // Path arrow = new Path();\n-                // arrow.moveTo(index + 0.5f, y + offsetY * 0.3f);\n-                // arrow.lineTo(index + 0.2f, y + offsetY);\n-                // arrow.lineTo(index + 0.8f, y + offsetY);\n-                //\n-                // transformPath(arrow);\n-                // mDrawCanvas.drawPath(arrow, mHighlightPaint);\n-                // }\n+                if (mDrawHighlightArrow) {\n+                    \n+                    mHighlightPaint.setAlpha(255);\n+\n+                    // distance between highlight arrow and bar\n+                    float offsetY = mDeltaY * 0.07f;\n+                    float y = e.getVal();\n+\n+                    Path arrow = new Path();\n+                    arrow.moveTo(index + 0.5f, y + offsetY * 0.3f);\n+                    arrow.lineTo(index + 0.2f, y + offsetY);\n+                    arrow.lineTo(index + 0.8f, y + offsetY);\n+\n+                    transformPath(arrow);\n+                    mDrawCanvas.drawPath(arrow, mHighlightPaint);\n+                }\n             }\n         }\n     }",
    "output": "Re-enabled highlight-arrow for BarChart."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MyMarkerView.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MyMarkerView.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MyMarkerView.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MyMarkerView.java\n@@ -4,6 +4,8 @@\n import android.content.Context;\n import android.widget.TextView;\n \n+import com.github.mikephil.charting.data.CandleEntry;\n+import com.github.mikephil.charting.data.Entry;\n import com.github.mikephil.charting.utils.MarkerView;\n import com.github.mikephil.charting.utils.Utils;\n \n@@ -20,7 +22,16 @@ public MyMarkerView(Context context, int layoutResource) {\n     // callbacks everytime the MarkerView is redrawn, can be used to update the\n     // content\n     @Override\n-    public void refreshContent(int xIndex, float value, int dataSetIndex) {\n-        tvContent.setText(\" \" + Utils.formatNumber(value, 0, true));\n+    public void refreshContent(Entry e, int dataSetIndex) {\n+        \n+        if(e instanceof CandleEntry) {\n+            \n+            CandleEntry ce = (CandleEntry) e;\n+            \n+            tvContent.setText(\" \" + Utils.formatNumber(ce.getHigh(), 0, true));\n+        } else {\n+         \n+            tvContent.setText(\" \" + Utils.formatNumber(e.getVal(), 0, true));\n+        }\n     }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -990,8 +990,9 @@ protected void drawMarkers() {\n      * @param dataSetIndex the index of the selected DataSet\n      */\n     private void drawMarkerView(int xIndex, int dataSetIndex) {\n+        \n+        Entry e = getEntryByDataSetIndex(xIndex, dataSetIndex);\n \n-        float value = getYValueByDataSetIndex(xIndex, dataSetIndex);\n         float xPos = (float) xIndex;\n \n         // make sure the marker is in the center of the bars in BarChart\n@@ -1000,15 +1001,15 @@ private void drawMarkerView(int xIndex, int dataSetIndex) {\n \n         // position of the marker depends on selected value index and value\n         float[] pts = new float[] {\n-                xPos, value * mPhaseY\n+                xPos, e.getVal() * mPhaseY\n         };\n         transformPointArray(pts);\n \n         float posX = pts[0];\n         float posY = pts[1];\n \n         // callbacks to update the content\n-        mMarkerView.refreshContent(xIndex, value, dataSetIndex);\n+        mMarkerView.refreshContent(e, dataSetIndex);\n \n         // call the draw method of the markerview that will translate to the\n         // given position and draw the view\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/MarkerView.java b/MPChartLib/src/com/github/mikephil/charting/utils/MarkerView.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/MarkerView.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/MarkerView.java\n@@ -7,6 +7,8 @@\n import android.view.View;\n import android.widget.RelativeLayout;\n \n+import com.github.mikephil.charting.data.Entry;\n+\n /**\n  * View that can be displayed when selecting values in the chart. Extend this\n  * class to provide custom layouts for your markers.\n@@ -41,7 +43,8 @@ private void setupLayoutResource(int layoutResource) {\n \n         View inflated = LayoutInflater.from(getContext()).inflate(layoutResource, this);\n \n-        inflated.setLayoutParams(new LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT));\n+        inflated.setLayoutParams(new LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT,\n+                RelativeLayout.LayoutParams.WRAP_CONTENT));\n         inflated.measure(MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED),\n                 MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED));\n \n@@ -70,14 +73,14 @@ public void draw(Canvas canvas, float posx, float posy) {\n     }\n \n     /**\n-     * this method enables a specified custom MarkerView to update it's content\n-     * everytime the MarkerView is redrawn\n+     * This method enables a specified custom MarkerView to update it's content\n+     * everytime the MarkerView is redrawn.\n      * \n-     * @param xIndex the index on the x-axis\n-     * @param value the actual selected value\n+     * @param e The Entry the MarkerView belongs to. This can also be any\n+     *            subclass of Entry, like BarEntry or CandleEntry.\n      * @param dataSetIndex the index of the DataSet the selected value is in\n      */\n-    public abstract void refreshContent(int xIndex, float value, int dataSetIndex);\n+    public abstract void refreshContent(Entry e, int dataSetIndex);\n \n     /**\n      * Set the position offset of the MarkerView. By default, the top left edge",
    "output": "MarkerView refresh callback now returns Entry, not just value."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n@@ -46,9 +46,6 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         mChart = (CandleStickChart) findViewById(R.id.chart1);\n \n-        mChart.setDrawYValues(false);\n-\n-        mChart.setUnit(\" €\");\n         mChart.setDescription(\"\");\n \n         // if more than 60 entries are displayed in the chart, no values will be\n@@ -170,7 +167,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n \n         for (int i = 0; i < prog; i++) {\n             float mult = (mSeekBarY.getProgress() + 1);\n-            float val = (float) (Math.random() * 50) + mult;\n+            float val = (float) (Math.random() * 40) + mult;\n             \n             float high = (float) (Math.random() * 9) + 8f;\n             float low = (float) (Math.random() * 9) + 8f;",
    "output": "Added screenshot of candlestickchart."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java\n@@ -46,7 +46,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         mSeekBarY.setOnSeekBarChangeListener(this);\n \n         mChart = (CandleStickChart) findViewById(R.id.chart1);\n-        \n+\n         mChart.setDrawYValues(false);\n \n         mChart.setUnit(\" €\");\n@@ -58,28 +58,27 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         // scaling can now only be done on x- and y-axis separately\n         mChart.setPinchZoom(false);\n-        \n+\n         mChart.setDrawVerticalGrid(false);\n-        mChart.setDrawHorizontalGrid(false);\n         mChart.setDrawGridBackground(false);\n \n         XLabels xLabels = mChart.getXLabels();\n         xLabels.setPosition(XLabelPosition.BOTTOM);\n         xLabels.setCenterXLabelText(true);\n-        xLabels.setSpaceBetweenLabels(0);\n+        xLabels.setSpaceBetweenLabels(2);\n \n-         mChart.setDrawYLabels(false);\n-         mChart.setDrawLegend(false);\n+        mChart.setDrawYLabels(true);\n+        mChart.setDrawLegend(false);\n \n         // setting data\n-        mSeekBarX.setProgress(10);\n+        mSeekBarX.setProgress(30);\n         mSeekBarY.setProgress(100);\n \n-//        Legend l = mChart.getLegend();\n-//        l.setPosition(LegendPosition.BELOW_CHART_CENTER);\n-//        l.setFormSize(8f);\n-//        l.setFormToTextSpace(4f);\n-//        l.setXEntrySpace(6f);\n+        // Legend l = mChart.getLegend();\n+        // l.setPosition(LegendPosition.BELOW_CHART_CENTER);\n+        // l.setFormSize(8f);\n+        // l.setFormToTextSpace(4f);\n+        // l.setXEntrySpace(6f);\n \n         // mChart.setDrawLegend(false);\n     }\n@@ -185,15 +184,18 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n \n         ArrayList<CandleEntry> yVals1 = new ArrayList<CandleEntry>();\n \n-        for (int i = 0; i < mSeekBarX.getProgress()+1; i++) {\n+        for (int i = 0; i < mSeekBarX.getProgress() + 1; i++) {\n             float mult = (mSeekBarY.getProgress() + 1);\n-            float val = (float) (Math.sin(i) * mult) + 100f;\n-            yVals1.add(new CandleEntry(i, val+7, val-7, val+4, val-4));\n+            float val = (float) (Math.sin(i) * mult) + 400f;\n+            boolean even = i % 2 == 0;\n+\n+            yVals1.add(new CandleEntry(i, even ? val + 10 : val - 10, even ? val - 10 : val + 10,\n+                    even ? val + 5 : val - 5, even ? val - 5 : val + 5));\n         }\n-        \n+\n         ArrayList<String> xVals = new ArrayList<String>();\n-        for (int i = 0; i < mSeekBarX.getProgress()+1; i++) {\n-            xVals.add((int) yVals1.get(i).getVal() + \" \" + mChart.getUnit());\n+        for (int i = 0; i < mSeekBarX.getProgress() + 1; i++) {\n+            xVals.add(\"\" + (i + 1));\n         }\n \n         CandleDataSet set1 = new CandleDataSet(yVals1, \"Data Set\");\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -478,7 +478,7 @@ protected void calcModulus() {\n         mMatrixTouch.getValues(values);\n \n         mXLabels.mXAxisLabelModulus = (int) Math\n-                .ceil((mCurrentData.getXValCount() * mXLabels.mXLabelWidth)\n+                .ceil((mCurrentData.getXValCount() * mXLabels.mLabelWidth)\n                         / (mContentRect.width() * values[Matrix.MSCALE_X]));\n     }\n \n@@ -549,13 +549,15 @@ protected void prepareXLabels() {\n         // .getXVals()\n         // .get(mCurrentData.getXValCount() - 1)\n         // .length())));\n+        \n+        int max = (int) Math.round(mCurrentData.getXValAverageLength() + mXLabels.getSpaceBetweenLabels());\n \n-        for (int i = 0; i < mCurrentData.getXValAverageLength() + mXLabels.getSpaceBetweenLabels(); i++) {\n+        for (int i = 0; i < max; i++) {\n             a.append(\"h\");\n         }\n \n-        mXLabels.mXLabelWidth = Utils.calcTextWidth(mXLabelPaint, a.toString());\n-        mXLabels.mXLabelHeight = Utils.calcTextWidth(mXLabelPaint, \"Q\");\n+        mXLabels.mLabelWidth = Utils.calcTextWidth(mXLabelPaint, a.toString());\n+        mXLabels.mLabelHeight = Utils.calcTextWidth(mXLabelPaint, \"Q\");\n     }\n \n     /**\n@@ -655,12 +657,12 @@ protected void drawXLabels() {\n \n         } else if (mXLabels.getPosition() == XLabelPosition.BOTTOM) {\n \n-            drawXLabels(getHeight() - mOffsetBottom + mXLabels.mXLabelHeight + yoffset * 1.5f);\n+            drawXLabels(getHeight() - mOffsetBottom + mXLabels.mLabelHeight + yoffset * 1.5f);\n \n         } else { // BOTH SIDED\n \n             drawXLabels(getOffsetTop() - 7);\n-            drawXLabels(getHeight() - mOffsetBottom + mXLabels.mXLabelHeight + yoffset * 1.6f);\n+            drawXLabels(getHeight() - mOffsetBottom + mXLabels.mLabelHeight + yoffset * 1.6f);\n         }\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/CandleStickChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/CandleStickChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/CandleStickChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/CandleStickChart.java\n@@ -44,13 +44,11 @@ protected void drawData() {\n \n         ArrayList<CandleDataSet> dataSets = (ArrayList<CandleDataSet>) mCurrentData.getDataSets();\n \n-        mRenderPaint.setStyle(Paint.Style.FILL);\n-\n         for (int i = 0; i < mCurrentData.getDataSetCount(); i++) {\n \n             CandleDataSet dataSet = dataSets.get(i);\n             ArrayList<CandleEntry> entries = (ArrayList<CandleEntry>) dataSet.getYVals();\n-            \n+\n             mRenderPaint.setStrokeWidth(dataSet.getShadowWidth());\n \n             float[] shadowPoints = new float[4];\n@@ -90,6 +88,11 @@ && isOffContentBottom(high))\n                 // draw the shadow\n                 mDrawCanvas.drawLine(xShadow, low, xShadow, high, mRenderPaint);\n \n+                if (open > close)\n+                    mRenderPaint.setStyle(Paint.Style.FILL);\n+                else\n+                    mRenderPaint.setStyle(Paint.Style.STROKE);\n+\n                 // draw the body\n                 mDrawCanvas.drawRect(leftBody, open, rightBody, close, mRenderPaint);\n             }\n@@ -102,7 +105,6 @@ && isOffContentBottom(high))\n      * @param bodyPoints\n      * @param e\n      * @param bodySpace\n-     * \n      */\n     private void transformBody(float[] bodyPoints, CandleEntry e, float bodySpace) {\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -30,7 +30,7 @@ public abstract class ChartData {\n      * contains the average length (in characters) an entry in the x-vals array\n      * has\n      */\n-    private int mXValAverageLength = 0;\n+    private float mXValAverageLength = 0;\n \n     /** holds all x-values the chart represents */\n     protected ArrayList<String> mXVals;\n@@ -97,13 +97,13 @@ private void calcXValAverageLength() {\n             return;\n         }\n \n-        int sum = 0;\n+        float sum = 0f;\n \n         for (int i = 0; i < mXVals.size(); i++) {\n             sum += mXVals.get(i).length();\n         }\n \n-        mXValAverageLength = sum / mXVals.size();\n+        mXValAverageLength = sum / (float) mXVals.size();\n     }\n \n     protected static ArrayList<? extends DataSet> toArrayList(DataSet dataSet) {\n@@ -224,7 +224,7 @@ public float getYMax() {\n      * \n      * @return\n      */\n-    public int getXValAverageLength() {\n+    public float getXValAverageLength() {\n         return mXValAverageLength;\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/XLabels.java b/MPChartLib/src/com/github/mikephil/charting/utils/XLabels.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/XLabels.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/XLabels.java\n@@ -13,13 +13,13 @@ public class XLabels extends LabelBase {\n      * width of the x-axis labels in pixels - this is calculated by the\n      * calcTextWidth() method of the utils\n      */\n-    public int mXLabelWidth = 1;\n+    public int mLabelWidth = 1;\n \n     /**\n      * height of the x-axis labels in pixels - this is calculated by the\n      * calcTextHeight() method of the utils\n      */\n-    public int mXLabelHeight = 1;\n+    public int mLabelHeight = 1;\n \n     /**\n      * the space that should be left out (in characters) between the x-axis",
    "output": "Worked on CandleStickChart, bugfix in x-labels."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n@@ -310,7 +310,7 @@ protected void drawAdditional() {\n                     // Set the color for the currently drawn value. If the index\n                     // is\n                     // out of bounds, reuse colors.\n-                    mRenderPaint.setColor(dataSet.getCircleColor(j));\n+                    mRenderPaint.setColor(dataSet.getCircleColor(j / 2));\n \n                     if (isOffContentRight(positions[j]))\n                         break;",
    "output": "Fixed issue #55 concerning linechart circle coloring."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java\n@@ -1,6 +1,7 @@\n \n package com.xxmassdeveloper.mpchartexample;\n \n+import android.graphics.Color;\n import android.os.Bundle;\n import android.util.Log;\n import android.view.Menu;\n@@ -21,8 +22,8 @@\n import com.github.mikephil.charting.interfaces.OnChartValueSelectedListener;\n import com.github.mikephil.charting.utils.Highlight;\n import com.github.mikephil.charting.utils.Legend;\n-import com.github.mikephil.charting.utils.LimitLine;\n import com.github.mikephil.charting.utils.Legend.LegendForm;\n+import com.github.mikephil.charting.utils.LimitLine;\n import com.github.mikephil.charting.utils.XLabels;\n import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n \n@@ -321,6 +322,8 @@ private void setData(int count, float range) {\n         \n         // create a dataset and give it a type\n         LineDataSet set1 = new LineDataSet(yVals, \"DataSet 1\");\n+//        set1.setFillAlpha(110);\n+//        set1.setFillColor(Color.RED);\n \n         // set the line to be drawn like this \"- - - - - -\"\n         set1.enableDashedLine(10f, 5f, 0f);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n@@ -25,9 +25,6 @@ public class LineChart extends BarLineChartBase {\n     /** the width of the highlighning line */\n     protected float mHighlightWidth = 3f;\n \n-    /** paint for the filled are (if enabled) below the chart line */\n-    protected Paint mFilledPaint;\n-\n     /** paint for the inner circle of the value indicators */\n     protected Paint mCirclePaintInner;\n \n@@ -50,11 +47,6 @@ public LineChart(Context context, AttributeSet attrs, int defStyle) {\n     protected void init() {\n         super.init();\n \n-        mFilledPaint = new Paint();\n-        mFilledPaint.setStyle(Paint.Style.FILL);\n-        mFilledPaint.setColor(mColorDarkBlue);\n-        mFilledPaint.setAlpha(130); // alpha ~55%\n-\n         mCirclePaintInner = new Paint(Paint.ANTI_ALIAS_FLAG);\n         mCirclePaintInner.setStyle(Paint.Style.FILL);\n         mCirclePaintInner.setColor(Color.WHITE);\n@@ -185,8 +177,9 @@ && isOffContentBottom(valuePoints[j + 1]))\n \n                 mRenderPaint.setStyle(Paint.Style.FILL);\n \n+                mRenderPaint.setColor(dataSet.getFillColor());\n                 // filled is drawn with less alpha\n-                mRenderPaint.setAlpha(85);\n+                mRenderPaint.setAlpha(dataSet.getFillAlpha());\n \n                 Path filled = generateFilledPath(entries);\n \n@@ -339,15 +332,6 @@ protected void drawAdditional() {\n         }\n     }\n \n-    /**\n-     * sets the color for the fill-paint\n-     * \n-     * @param color\n-     */\n-    public void setFillColor(int color) {\n-        mFilledPaint.setColor(color);\n-    }\n-\n     /**\n      * set the width of the highlightning lines, default 3f\n      * \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java\n@@ -15,6 +15,12 @@ public class LineDataSet extends DataSet {\n     /** arraylist representing all colors that are used for the circles */\n     private ArrayList<Integer> mCircleColors = null;\n \n+    /** the color that is used for filling the line surface */\n+    private int mFillColor = Color.rgb(140, 234, 255);\n+    \n+    /** transparency used for filling line surface */\n+    private int mFillAlpha = 85;\n+\n     /** the radius of the circle-shaped value indicators */\n     private float mCircleSize = 4f;\n \n@@ -33,8 +39,8 @@ public class LineDataSet extends DataSet {\n     public LineDataSet(ArrayList<Entry> yVals, String label) {\n         super(yVals, label);\n \n-//        mCircleSize = Utils.convertDpToPixel(4f);\n-//        mLineWidth = Utils.convertDpToPixel(1f);\n+        // mCircleSize = Utils.convertDpToPixel(4f);\n+        // mLineWidth = Utils.convertDpToPixel(1f);\n \n         mCircleColors = new ArrayList<Integer>();\n \n@@ -64,6 +70,44 @@ public DataSet copy() {\n         return copied;\n     }\n \n+    /**\n+     * returns the color that is used for filling the line surface\n+     * \n+     * @return\n+     */\n+    public int getFillColor() {\n+        return mFillColor;\n+    }\n+\n+    /**\n+     * sets the color that is used for filling the line surface\n+     * \n+     * @param color\n+     */\n+    public void setFillColor(int color) {\n+        mFillColor = color;\n+    }\n+\n+    /**\n+     * returns the alpha value that is used for filling the line surface,\n+     * default: 85\n+     * \n+     * @return\n+     */\n+    public int getFillAlpha() {\n+        return mFillAlpha;\n+    }\n+\n+    /**\n+     * sets the alpha value (transparency) that is used for filling the line\n+     * surface (0-255), default: 85\n+     * \n+     * @param color\n+     */\n+    public void setFillAlpha(int alpha) {\n+        mFillAlpha = alpha;\n+    }\n+\n     /**\n      * set the line width of the chart (min = 0.2f, max = 10f); default 1f NOTE:\n      * thinner line == better performance, thicker line == worse performance",
    "output": "Fixed issue #46 concerning LineDataSet filling."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java\n@@ -1,6 +1,7 @@\n \n package com.xxmassdeveloper.mpchartexample;\n \n+import android.graphics.Color;\n import android.os.Bundle;\n import android.util.Log;\n import android.view.Menu;\n@@ -21,8 +22,8 @@\n import com.github.mikephil.charting.interfaces.OnChartValueSelectedListener;\n import com.github.mikephil.charting.utils.Highlight;\n import com.github.mikephil.charting.utils.Legend;\n-import com.github.mikephil.charting.utils.LimitLine;\n import com.github.mikephil.charting.utils.Legend.LegendForm;\n+import com.github.mikephil.charting.utils.LimitLine;\n import com.github.mikephil.charting.utils.XLabels;\n import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n \n@@ -321,6 +322,8 @@ private void setData(int count, float range) {\n         \n         // create a dataset and give it a type\n         LineDataSet set1 = new LineDataSet(yVals, \"DataSet 1\");\n+//        set1.setFillAlpha(110);\n+//        set1.setFillColor(Color.RED);\n \n         // set the line to be drawn like this \"- - - - - -\"\n         set1.enableDashedLine(10f, 5f, 0f);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n@@ -25,9 +25,6 @@ public class LineChart extends BarLineChartBase {\n     /** the width of the highlighning line */\n     protected float mHighlightWidth = 3f;\n \n-    /** paint for the filled are (if enabled) below the chart line */\n-    protected Paint mFilledPaint;\n-\n     /** paint for the inner circle of the value indicators */\n     protected Paint mCirclePaintInner;\n \n@@ -50,11 +47,6 @@ public LineChart(Context context, AttributeSet attrs, int defStyle) {\n     protected void init() {\n         super.init();\n \n-        mFilledPaint = new Paint();\n-        mFilledPaint.setStyle(Paint.Style.FILL);\n-        mFilledPaint.setColor(mColorDarkBlue);\n-        mFilledPaint.setAlpha(130); // alpha ~55%\n-\n         mCirclePaintInner = new Paint(Paint.ANTI_ALIAS_FLAG);\n         mCirclePaintInner.setStyle(Paint.Style.FILL);\n         mCirclePaintInner.setColor(Color.WHITE);\n@@ -185,8 +177,9 @@ && isOffContentBottom(valuePoints[j + 1]))\n \n                 mRenderPaint.setStyle(Paint.Style.FILL);\n \n+                mRenderPaint.setColor(dataSet.getFillColor());\n                 // filled is drawn with less alpha\n-                mRenderPaint.setAlpha(85);\n+                mRenderPaint.setAlpha(dataSet.getFillAlpha());\n \n                 Path filled = generateFilledPath(entries);\n \n@@ -339,15 +332,6 @@ protected void drawAdditional() {\n         }\n     }\n \n-    /**\n-     * sets the color for the fill-paint\n-     * \n-     * @param color\n-     */\n-    public void setFillColor(int color) {\n-        mFilledPaint.setColor(color);\n-    }\n-\n     /**\n      * set the width of the highlightning lines, default 3f\n      * \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java\n@@ -15,6 +15,12 @@ public class LineDataSet extends DataSet {\n     /** arraylist representing all colors that are used for the circles */\n     private ArrayList<Integer> mCircleColors = null;\n \n+    /** the color that is used for filling the line surface */\n+    private int mFillColor = Color.rgb(140, 234, 255);\n+    \n+    /** transparency used for filling line surface */\n+    private int mFillAlpha = 85;\n+\n     /** the radius of the circle-shaped value indicators */\n     private float mCircleSize = 4f;\n \n@@ -33,8 +39,8 @@ public class LineDataSet extends DataSet {\n     public LineDataSet(ArrayList<Entry> yVals, String label) {\n         super(yVals, label);\n \n-//        mCircleSize = Utils.convertDpToPixel(4f);\n-//        mLineWidth = Utils.convertDpToPixel(1f);\n+        // mCircleSize = Utils.convertDpToPixel(4f);\n+        // mLineWidth = Utils.convertDpToPixel(1f);\n \n         mCircleColors = new ArrayList<Integer>();\n \n@@ -64,6 +70,44 @@ public DataSet copy() {\n         return copied;\n     }\n \n+    /**\n+     * returns the color that is used for filling the line surface\n+     * \n+     * @return\n+     */\n+    public int getFillColor() {\n+        return mFillColor;\n+    }\n+\n+    /**\n+     * sets the color that is used for filling the line surface\n+     * \n+     * @param color\n+     */\n+    public void setFillColor(int color) {\n+        mFillColor = color;\n+    }\n+\n+    /**\n+     * returns the alpha value that is used for filling the line surface,\n+     * default: 85\n+     * \n+     * @return\n+     */\n+    public int getFillAlpha() {\n+        return mFillAlpha;\n+    }\n+\n+    /**\n+     * sets the alpha value (transparency) that is used for filling the line\n+     * surface (0-255), default: 85\n+     * \n+     * @param color\n+     */\n+    public void setFillAlpha(int alpha) {\n+        mFillAlpha = alpha;\n+    }\n+\n     /**\n      * set the line width of the chart (min = 0.2f, max = 10f); default 1f NOTE:\n      * thinner line == better performance, thicker line == worse performance",
    "output": "Fixed issue #45 concerning LineDataSet filling."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/CandleStickChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/CandleStickChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/CandleStickChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/CandleStickChart.java\n@@ -0,0 +1,50 @@\n+\n+package com.github.mikephil.charting.charts;\n+\n+import android.content.Context;\n+import android.util.AttributeSet;\n+\n+/**\n+ * Chart that draws candle-sticks.\n+ * \n+ * @author Philipp Jahoda\n+ */\n+public class CandleStickChart extends BarLineChartBase {\n+\n+    public CandleStickChart(Context context) {\n+        super(context);\n+    }\n+\n+    public CandleStickChart(Context context, AttributeSet attrs) {\n+        super(context, attrs);\n+    }\n+\n+    public CandleStickChart(Context context, AttributeSet attrs, int defStyle) {\n+        super(context, attrs, defStyle);\n+    }\n+\n+    @Override\n+    protected void drawData() {\n+        // TODO Auto-generated method stub\n+\n+    }\n+    \n+    @Override\n+    protected void drawValues() {\n+        // TODO Auto-generated method stub\n+\n+    }\n+\n+    @Override\n+    protected void drawAdditional() {\n+        // TODO Auto-generated method stub\n+\n+    }\n+\n+    @Override\n+    protected void drawHighlights() {\n+        // TODO Auto-generated method stub\n+\n+    }\n+\n+}\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/CandleData.java b/MPChartLib/src/com/github/mikephil/charting/data/CandleData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/CandleData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/CandleData.java\n@@ -0,0 +1,22 @@\n+package com.github.mikephil.charting.data;\n+\n+import java.util.ArrayList;\n+\n+public class CandleData extends BarLineScatterData {\n+\n+    public CandleData(ArrayList<String> xVals, ArrayList<CandleDataSet> dataSets) {\n+        super(xVals, dataSets);\n+    }\n+\n+    public CandleData(String[] xVals, ArrayList<CandleDataSet> dataSets) {\n+        super(xVals, dataSets);\n+    }\n+    \n+    public CandleData(ArrayList<String> xVals, CandleDataSet dataSet) {\n+        super(xVals, toArrayList(dataSet));        \n+    }\n+    \n+    public CandleData(String[] xVals, CandleDataSet dataSet) {\n+        super(xVals, toArrayList(dataSet));\n+    }\n+}\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java\n@@ -0,0 +1,25 @@\n+package com.github.mikephil.charting.data;\n+\n+import java.util.ArrayList;\n+\n+public class CandleDataSet extends DataSet {\n+\n+    public CandleDataSet(ArrayList<Entry> yVals, String label) {\n+        super(yVals, label);\n+    }\n+    \n+    @Override\n+    public DataSet copy() {\n+        \n+        ArrayList<Entry> yVals = new ArrayList<Entry>();\n+\n+        for (int i = 0; i < mYVals.size(); i++) {\n+            yVals.add(mYVals.get(i).copy());\n+        }\n+        \n+        CandleDataSet copied = new CandleDataSet(yVals, getLabel());\n+        copied.mColors = mColors;\n+        return copied;\n+    }\n+\n+}\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -36,11 +36,6 @@ public abstract class DataSet {\n     /** label that describes the DataSet or the data the DataSet represents */\n     private String mLabel = \"DataSet\";\n \n-    /** default constructor */\n-    protected DataSet() {\n-\n-    }\n-\n     /**\n      * Creates a new DataSet object with the given values it represents. Also, a\n      * label that describes the DataSet can be specified. The label can also be",
    "output": "Added basis to start CandleStickChart implementation."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MultiLineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MultiLineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MultiLineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MultiLineChartActivity.java\n@@ -68,7 +68,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         // if disabled, scaling can be done on x- and y-axis separately\n         mChart.setPinchZoom(false);\n \n-        mSeekBarX.setProgress(45);\n+        mSeekBarX.setProgress(20);\n         mSeekBarY.setProgress(100);\n \n         Legend l = mChart.getLegend();\n@@ -190,6 +190,8 @@ public boolean onOptionsItemSelected(MenuItem item) {\n         }\n         return true;\n     }\n+    \n+    private int[] mColors = new int[] { R.color.vordiplom_1, R.color.vordiplom_2, R.color.vordiplom_3 };\n \n     @Override\n     public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n@@ -216,6 +218,10 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n             LineDataSet d = new LineDataSet(values, \"DataSet \" + (z + 1));\n             d.setLineWidth(2.5f);\n             d.setCircleSize(4f);\n+            \n+            int color = getResources().getColor(mColors[z % mColors.length]);\n+            d.setColor(color);\n+            d.setCircleColor(color);\n             dataSets.add(d);\n         }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -511,9 +511,9 @@ protected void calcFormats() {\n     protected void calcMinMax(boolean fixedValues) {\n         super.calcMinMax(fixedValues); // calc min and max in the super class\n \n-        // additional handling for space (default 10% space), spacing only\n-        // applies with non-rounded y-label\n-        float space = Math.abs(mDeltaY / 100f * 15f);\n+        // additional handling for space (default 15% space)\n+//        float space = Math.abs(mDeltaY / 100f * 15f);\n+        float space = Math.abs(Math.max(Math.abs(mYChartMax), Math.abs(mYChartMin)) / 100f * 15f);\n \n         if (mStartAtZero) {\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -251,8 +251,13 @@ protected void calculateOffsets() {\n     protected void calcFormats() {\n \n         // -1 means calculate digits\n-        if (mValueDigitsToUse == -1)\n-            mValueFormatDigits = Utils.getPieFormatDigits(mDeltaY);\n+        if (mValueDigitsToUse == -1) {\n+            if (mOriginalData.getXValCount() <= 1)\n+                mValueFormatDigits = 0;\n+            else\n+                mValueFormatDigits = Utils.getPieFormatDigits(mDeltaY);\n+        }\n+\n         else\n             mValueFormatDigits = mValueDigitsToUse;\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -91,6 +91,11 @@ private void init() {\n      * calculates the average length (in characters) across all x-value strings\n      */\n     private void calcXValAverageLength() {\n+        \n+        if(mXVals.size() == 0) {\n+            mXValAverageLength = 1;\n+            return;\n+        }\n \n         int sum = 0;\n \n@@ -249,7 +254,7 @@ public int getYValCount() {\n      * @return\n      */\n     public boolean isValid() {\n-        if (mXVals == null || mXVals.size() <= 1)\n+        if (mXVals == null || mXVals.size() < 1)\n             return false;\n \n         if (mDataSets == null || mDataSets.size() < 1)",
    "output": "Minor bugfixes."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -313,6 +313,10 @@ public void updateRotation(float x, float y) {\n     protected void prepareContentRect() {\n         super.prepareContentRect();\n \n+        // prevent nullpointer when no data set\n+        if (mDataNotSet)\n+            return;\n+\n         float width = mContentRect.width() + mOffsetLeft + mOffsetRight;\n         float height = mContentRect.height() + mOffsetTop + mOffsetBottom;\n \n@@ -386,7 +390,7 @@ protected void drawHighlights() {\n                     angle = mChartAngle;\n                 else\n                     angle = mChartAngle + mAbsoluteAngles[xIndex - 1];\n-                \n+\n                 angle *= mPhaseY;\n \n                 float sliceDegrees = mDrawAngles[xIndex];\n@@ -548,9 +552,11 @@ protected void drawValues() {\n \n                 // calculate the text position\n                 float x = (float) (r\n-                        * Math.cos(Math.toRadians((mChartAngle + mAbsoluteAngles[cnt] - offset) * mPhaseY)) + center.x);\n+                        * Math.cos(Math.toRadians((mChartAngle + mAbsoluteAngles[cnt] - offset)\n+                                * mPhaseY)) + center.x);\n                 float y = (float) (r\n-                        * Math.sin(Math.toRadians((mChartAngle + mAbsoluteAngles[cnt] - offset) * mPhaseY)) + center.y);\n+                        * Math.sin(Math.toRadians((mChartAngle + mAbsoluteAngles[cnt] - offset)\n+                                * mPhaseY)) + center.y);\n \n                 String val = \"\";\n                 float value = entries.get(j).getVal();\n@@ -559,8 +565,8 @@ protected void drawValues() {\n                     val = mFormatValue.format(getPercentOfTotal(value)) + \" %\";\n                 else\n                     val = mFormatValue.format(value);\n-                \n-                if(mDrawUnitInChart)\n+\n+                if (mDrawUnitInChart)\n                     val = val + mUnit;\n \n                 // draw everything, depending on settings",
    "output": "Fixed issue concerning nullpointerexception in piechart (#39)."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/ComplexityFragment.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/ComplexityFragment.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/ComplexityFragment.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/ComplexityFragment.java\n@@ -0,0 +1,56 @@\n+package com.xxmassdeveloper.mpchartexample.fragments;\n+import android.graphics.Typeface;\n+import android.os.Bundle;\n+import android.support.v4.app.Fragment;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+\n+import com.github.mikephil.charting.charts.LineChart;\n+import com.github.mikephil.charting.utils.Legend;\n+import com.github.mikephil.charting.utils.YLabels;\n+import com.xxmassdeveloper.mpchartexample.R;\n+\n+\n+public class ComplexityFragment extends SimpleFragment {\n+\n+    public static Fragment newInstance() {\n+        return new ComplexityFragment();\n+    }\n+\n+    private LineChart mChart;\n+    \n+    @Override\n+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n+        View v = inflater.inflate(R.layout.frag_simple_line, container, false);\n+        \n+        mChart = (LineChart) v.findViewById(R.id.lineChart1);\n+        \n+        mChart.setDescription(\"\");\n+        mChart.setDrawYValues(false);\n+        \n+        mChart.setHighlightIndicatorEnabled(false); \n+        mChart.setDrawBorder(false);\n+        mChart.setDrawGridBackground(false);\n+        mChart.setDrawVerticalGrid(false);\n+        mChart.setDrawXLabels(false);\n+        mChart.setDrawYValues(false);\n+        mChart.setStartAtZero(false);\n+        \n+        mChart.setData(getComplexity());\n+        mChart.animateX(3000);\n+        \n+//        mChart.setScaleMinima(3f, 3f);\n+//        mChart.centerViewPort(300, 0);\n+        \n+        Typeface tf = Typeface.createFromAsset(getActivity().getAssets(),\"OpenSans-Light.ttf\");\n+        \n+        Legend l = mChart.getLegend();\n+        l.setTypeface(tf);\n+        \n+        YLabels labels = mChart.getYLabels();\n+        labels.setTypeface(tf);\n+        \n+        return v;\n+    }\n+}\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SimpleChartDemo.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SimpleChartDemo.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SimpleChartDemo.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SimpleChartDemo.java\n@@ -61,15 +61,18 @@ public Fragment getItem(int pos) {\n             \n             switch(pos) {\n             case 0:\n-                f = LineChartFrag.newInstance();\n+                f = SineCosineFragment.newInstance();\n                 break;\n             case 1:\n-                f = BarChartFrag.newInstance();\n+                f = ComplexityFragment.newInstance();\n                 break;\n             case 2:\n-                f = ScatterChartFrag.newInstance();\n+                f = BarChartFrag.newInstance();\n                 break;\n             case 3:\n+                f = ScatterChartFrag.newInstance();\n+                break;\n+            case 4:\n                 f = PieChartFrag.newInstance();\n                 break;\n             }\n@@ -79,7 +82,7 @@ public Fragment getItem(int pos) {\n \n         @Override\n         public int getCount() {\n-            return 4;\n+            return 5;\n         }       \n     }\n }\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SimpleFragment.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SimpleFragment.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SimpleFragment.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SimpleFragment.java\n@@ -2,6 +2,7 @@\n \n import android.support.v4.app.Fragment;\n \n+import com.github.mikephil.charting.charts.Chart;\n import com.github.mikephil.charting.charts.ScatterChart;\n import com.github.mikephil.charting.charts.ScatterChart.ScatterShape;\n import com.github.mikephil.charting.data.BarData;\n@@ -137,6 +138,45 @@ protected LineData generateLineData() {\n         return d;\n     }\n     \n+    protected LineData getComplexity() {\n+        \n+        ArrayList<LineDataSet> sets = new ArrayList<LineDataSet>();\n+        \n+        LineDataSet ds1 = new LineDataSet(FileUtils.loadEntriesFromAssets(getActivity().getAssets(), \"n.txt\"), \"O(n)\");\n+        LineDataSet ds2 = new LineDataSet(FileUtils.loadEntriesFromAssets(getActivity().getAssets(), \"nlogn.txt\"), \"O(nlogn)\");\n+        LineDataSet ds3 = new LineDataSet(FileUtils.loadEntriesFromAssets(getActivity().getAssets(), \"square.txt\"), \"O(n\\u00B2)\");\n+        LineDataSet ds4 = new LineDataSet(FileUtils.loadEntriesFromAssets(getActivity().getAssets(), \"three.txt\"), \"O(n\\u00B3)\");\n+        \n+        ds1.setColor(getResources().getColor(R.color.vordiplom_1));\n+        ds2.setColor(getResources().getColor(R.color.vordiplom_2));\n+        ds3.setColor(getResources().getColor(R.color.vordiplom_3));\n+        ds4.setColor(getResources().getColor(R.color.vordiplom_4));\n+        \n+        ds1.setCircleColor(getResources().getColor(R.color.vordiplom_1));\n+        ds2.setCircleColor(getResources().getColor(R.color.vordiplom_2));\n+        ds3.setCircleColor(getResources().getColor(R.color.vordiplom_3));\n+        ds4.setCircleColor(getResources().getColor(R.color.vordiplom_4));\n+        \n+        ds1.setLineWidth(2.5f);\n+        ds1.setCircleSize(3f);\n+        ds2.setLineWidth(2.5f);\n+        ds2.setCircleSize(3f);\n+        ds3.setLineWidth(2.5f);\n+        ds3.setCircleSize(3f);\n+        ds4.setLineWidth(2.5f);\n+        ds4.setCircleSize(3f);\n+        \n+        \n+        // load DataSets from textfiles in assets folders\n+        sets.add(ds1);        \n+        sets.add(ds2);\n+        sets.add(ds3);\n+        sets.add(ds4);\n+        \n+        LineData d = new LineData(ChartData.generateXVals(0, ds1.getEntryCount()), sets);\n+        return d;\n+    }\n+    \n     private String[] mLabels = new String[] { \"Company A\", \"Company B\", \"Company C\", \"Company D\", \"Company E\", \"Company F\" };\n //    private String[] mXVals = new String[] { \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dec\" };\n     \n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SineCosineFragment.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SineCosineFragment.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SineCosineFragment.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SineCosineFragment.java\n@@ -12,10 +12,10 @@\n import com.xxmassdeveloper.mpchartexample.R;\n \n \n-public class LineChartFrag extends SimpleFragment {\n+public class SineCosineFragment extends SimpleFragment {\n \n     public static Fragment newInstance() {\n-        return new LineChartFrag();\n+        return new SineCosineFragment();\n     }\n \n     private LineChart mChart;\n@@ -41,6 +41,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa\n         mChart.setYRange(-1.2f, 1.2f, false);\n         \n         mChart.setData(generateLineData());\n+        mChart.animateX(3000);\n         \n //        mChart.setScaleMinima(3f, 3f);\n //        mChart.centerViewPort(300, 0);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n@@ -159,7 +159,7 @@ protected void drawData() {\n                     // get the color that is specified for this position from\n                     // the DataSet, this will reuse colors, if the index is out\n                     // of bounds\n-                    mRenderPaint.setColor(dataSet.getColor(j));\n+                    mRenderPaint.setColor(dataSet.getColor(j / 2));\n \n                     if (isOffContentRight(valuePoints[j]))\n                         break;",
    "output": "Improved example, fixed small bug."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java\n@@ -195,14 +195,14 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n \n         ArrayList<Entry> yVals1 = new ArrayList<Entry>();\n \n-        for (int i = 0; i < mSeekBarX.getProgress(); i++) {\n+        for (int i = 0; i < mSeekBarX.getProgress()+1; i++) {\n             float mult = (mSeekBarY.getProgress() + 1);\n             float val1 = (float) (Math.random() * mult) + mult / 3;\n             yVals1.add(new Entry((int) val1, i));\n         }\n         \n         ArrayList<String> xVals = new ArrayList<String>();\n-        for (int i = 0; i < mSeekBarX.getProgress(); i++) {\n+        for (int i = 0; i < mSeekBarX.getProgress()+1; i++) {\n             xVals.add((int) yVals1.get(i).getVal() + \" \" + mChart.getUnit());\n         }\n \n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java\n@@ -69,6 +69,7 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         // no description text\n         mChart.setDescription(\"\");\n+        mChart.setNoDataTextDescription(\"You need to provide data for the chart.\");\n \n         // // enable / disable grid lines\n         // mChart.setDrawVerticalGrid(false);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n@@ -72,7 +72,7 @@ protected void onCreate(Bundle savedInstanceState) {\n \t\t// add a selection listener\n \t\tmChart.setOnChartValueSelectedListener(this);\n \n-\t\tmSeekBarX.setProgress(4);\n+\t\tmSeekBarX.setProgress(3);\n \t\tmSeekBarY.setProgress(100);\n \t\t\n \t\tLegend l = mChart.getLegend();\n@@ -145,7 +145,7 @@ public boolean onOptionsItemSelected(MenuItem item) {\n \t@Override\n \tpublic void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\t    \n \n-        tvX.setText(\"\" + (mSeekBarX.getProgress()));\n+        tvX.setText(\"\" + (mSeekBarX.getProgress()+1));\n         tvY.setText(\"\" + (mSeekBarY.getProgress())); \n \n         float mult = (float) mSeekBarY.getProgress();\n@@ -154,7 +154,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n //\t\tArrayList<Entry> yVals2 = new ArrayList<Entry>();\n \t\t\n \t\t// IMPORTANT: In a PieChart, no values (Entry) should have the same xIndex (even if from different DataSets), since no values can be drawn above each other.\n-\t\tfor (int i = 0; i < mSeekBarX.getProgress(); i++) {\n+\t\tfor (int i = 0; i < mSeekBarX.getProgress()+1; i++) {\n \t\t\tyVals1.add(new Entry((float) (Math.random() * mult) + mult / 5, i));\n \t\t}\n \t\t\n@@ -164,7 +164,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n \n \t\tArrayList<String> xVals = new ArrayList<String>();\n \n-\t\tfor (int i = 0; i < mSeekBarX.getProgress(); i++)\n+\t\tfor (int i = 0; i < mSeekBarX.getProgress()+1; i++)\n \t\t\txVals.add(mParties[i % mParties.length]);\n \t\t \n \t\tPieDataSet set1 = new PieDataSet(yVals1, \"Election Results\");\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java\n@@ -203,13 +203,13 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n         tvY.setText(\"\" + (mSeekBarY.getProgress()));\n \n         ArrayList<String> xVals = new ArrayList<String>();\n-        for (int i = 0; i < mSeekBarX.getProgress(); i++) {\n+        for (int i = 0; i < mSeekBarX.getProgress()+1; i++) {\n             xVals.add(mMonths[i % mMonths.length]);\n         }\n \n         ArrayList<Entry> yVals1 = new ArrayList<Entry>();\n \n-        for (int i = 0; i < mSeekBarX.getProgress(); i++) {\n+        for (int i = 0; i < mSeekBarX.getProgress()+1; i++) {\n             float mult = (mSeekBarY.getProgress() + 1) * 1000;\n             float val1 = (float) (Math.random() * mult) + mult / 3;\n             float val2 = (float) (Math.random() * mult) + mult / 3;",
    "output": "Fixed crashes in the example."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -222,13 +222,13 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n         tvY.setText(\"\" + (mSeekBarY.getProgress()));\n \n         ArrayList<String> xVals = new ArrayList<String>();\n-        for (int i = 0; i < mSeekBarX.getProgress(); i++) {\n+        for (int i = 0; i < mSeekBarX.getProgress()+1; i++) {\n             xVals.add(mMonths[i % 12]);\n         }\n \n         ArrayList<Entry> yVals1 = new ArrayList<Entry>();\n \n-        for (int i = 0; i < mSeekBarX.getProgress(); i++) {\n+        for (int i = 0; i < mSeekBarX.getProgress()+1; i++) {\n             float mult = (mSeekBarY.getProgress() + 1);\n             float val = (float) (Math.random() * mult) + 3;\n             yVals1.add(new Entry(val, i));\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n@@ -2,6 +2,7 @@\n package com.xxmassdeveloper.mpchartexample.notimportant;\n \n import android.app.Activity;\n+import android.app.AlertDialog;\n import android.content.Context;\n import android.content.Intent;\n import android.net.Uri;\n@@ -22,7 +23,6 @@\n import com.xxmassdeveloper.mpchartexample.AnotherBarActivity;\n import com.xxmassdeveloper.mpchartexample.BarChartActivity;\n import com.xxmassdeveloper.mpchartexample.BarChartActivityMultiDataset;\n-import com.xxmassdeveloper.mpchartexample.DrawChartActivity;\n import com.xxmassdeveloper.mpchartexample.InvertedLineChartActivity;\n import com.xxmassdeveloper.mpchartexample.LineChartActivity;\n import com.xxmassdeveloper.mpchartexample.ListViewBarChartActivity;\n@@ -48,7 +48,7 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         // initialize the utilities\n         Utils.init(getResources());\n-        \n+\n         ArrayList<ContentItem> objects = new ArrayList<ContentItem>();\n \n         objects.add(new ContentItem(\"Line Chart\", \"A simple demonstration of the linechart.\"));\n@@ -126,8 +126,14 @@ public void onItemClick(AdapterView<?> av, View v, int pos, long arg3) {\n                 startActivity(i);\n                 break;\n             case 8:\n-                i = new Intent(this, DrawChartActivity.class);\n-                startActivity(i);\n+                // i = new Intent(this, DrawChartActivity.class);\n+                // startActivity(i);\n+\n+                AlertDialog.Builder b = new AlertDialog.Builder(this);\n+                b.setTitle(\"Feature not available\");\n+                b.setMessage(\"Due to recent changes to the data model of the library, this feature is temporarily not available.\");\n+                b.setPositiveButton(\"OK\", null);\n+                b.create().show();\n                 break;\n             case 9:\n                 i = new Intent(this, SimpleChartDemo.class);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1009,7 +1009,8 @@ protected void drawMarkers() {\n \n             int xIndex = mIndicesToHightlight[i].getXIndex();\n \n-            drawMarkerView(xIndex, mIndicesToHightlight[i].getDataSetIndex());\n+            if (xIndex < mCurrentData.getXVals().size())\n+                drawMarkerView(xIndex, mIndicesToHightlight[i].getDataSetIndex());\n         }\n     }\n ",
    "output": "Added dialog for example that the feature drawing into the chart by gesture is currenlty not available."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -655,24 +655,21 @@ private void drawXLabels(float yPos) {\n                 0f, 0f\n         };\n \n-        for (int i = 0; i < mCurrentData.getXValCount(); i++) {\n+        for (int i = 0; i < mCurrentData.getXValCount(); i += mXLabels.mXAxisLabelModulus) {\n \n-            if (i % mXLabels.mXAxisLabelModulus == 0) {\n+            position[0] = i;\n \n-                position[0] = i;\n+            // center the text\n+            if (mXLabels.isCenterXLabelsEnabled())\n+                position[0] += 0.5f;\n \n-                // center the text\n-                if (mXLabels.isCenterXLabelsEnabled())\n-                    position[0] += 0.5f;\n+            transformPointArray(position);\n \n-                transformPointArray(position);\n+            if (position[0] >= mOffsetLeft && position[0] <= getWidth() - mOffsetRight) {\n \n-                if (position[0] >= mOffsetLeft && position[0] <= getWidth() - mOffsetRight) {\n-\n-                    mDrawCanvas.drawText(mCurrentData.getXVals().get(i), position[0],\n-                            yPos,\n-                            mXLabelPaint);\n-                }\n+                mDrawCanvas.drawText(mCurrentData.getXVals().get(i), position[0],\n+                        yPos,\n+                        mXLabelPaint);\n             }\n         }\n     }\n@@ -848,19 +845,16 @@ protected void drawVerticalGrid() {\n                 0f, 0f\n         };\n \n-        for (int i = 0; i < mCurrentData.getXValCount(); i++) {\n-\n-            if (i % mXLabels.mXAxisLabelModulus == 0) {\n+        for (int i = 0; i < mCurrentData.getXValCount(); i += mXLabels.mXAxisLabelModulus) {\n \n-                position[0] = i;\n+            position[0] = i;\n \n-                transformPointArray(position);\n+            transformPointArray(position);\n \n-                if (position[0] >= mOffsetLeft && position[0] <= getWidth()) {\n+            if (position[0] >= mOffsetLeft && position[0] <= getWidth()) {\n \n-                    mDrawCanvas.drawLine(position[0], mOffsetTop, position[0], getHeight()\n-                            - mOffsetBottom, mGridPaint);\n-                }\n+                mDrawCanvas.drawLine(position[0], mOffsetTop, position[0], getHeight()\n+                        - mOffsetBottom, mGridPaint);\n             }\n         }\n     }\n@@ -1517,6 +1511,11 @@ public Highlight getHighlightByTouchPoint(float x, float y) {\n             }\n         }\n \n+        if(mDataNotSet) {\n+            Log.i(LOG_TAG, \"no data set\");\n+            return null;\n+        }\n+\n         ArrayList<SelInfo> valsAtIndex = getYValsAtIndex(xIndex);\n \n         dataSetIndex = getClosestDataSetIndex(valsAtIndex, (float) yTouchVal);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -19,6 +19,7 @@\n import android.graphics.Typeface;\n import android.os.Environment;\n import android.provider.MediaStore.Images;\n+import android.text.TextUtils;\n import android.util.AttributeSet;\n import android.util.Log;\n import android.view.MotionEvent;\n@@ -193,6 +194,15 @@ public abstract class Chart extends View {\n     /** listener that is called when a value on the chart is selected */\n     protected OnChartValueSelectedListener mSelectionListener;\n \n+    /** text that is displayed when the chart is empty */\n+    private String mNoDataText = \"No chart data available.\";\n+\n+    /**\n+     * text that is displayed when the chart is empty that describes why the\n+     * chart is empty\n+     */\n+    private String mNoDataTextDescription;\n+\n     /** default constructor for initialization in code */\n     public Chart(Context context) {\n         super(context);\n@@ -340,6 +350,32 @@ public void setData(ChartData data) {\n     // setData(data);\n     // }\n \n+    // /**\n+    // * Sets primitive data for the chart. Internally, this is converted into a\n+    // * ChartData object with one DataSet (type 0). If you have more specific\n+    // * requirements for your data, use the setData(ChartData data) method and\n+    // * create your own ChartData object with as many DataSets as you like.\n+    // *\n+    // * @param xVals\n+    // * @param yVals\n+    // */\n+    // public void setData(ArrayList<String> xVals, ArrayList<Float> yVals) {\n+    //\n+    // ArrayList<Entry> series = new ArrayList<Entry>();\n+    //\n+    // for (int i = 0; i < yVals.size(); i++) {\n+    // series.add(new Entry(yVals.get(i), i));\n+    // }\n+    //\n+    // DataSet set = new DataSet(series, \"DataSet\");\n+    // ArrayList<DataSet> dataSets = new ArrayList<DataSet>();\n+    // dataSets.add(set);\n+    //\n+    // ChartData data = new ChartData(xVals, dataSets);\n+    //\n+    // setData(data);\n+    // }\n+\n     /**\n      * does needed preparations for drawing\n      */\n@@ -384,7 +420,13 @@ protected void onDraw(Canvas canvas) {\n         if (mDataNotSet) { // check if there is data\n \n             // if no data, inform the user\n-            canvas.drawText(\"No chart data available.\", getWidth() / 2, getHeight() / 2, mInfoPaint);\n+            canvas.drawText(mNoDataText, getWidth() / 2, getHeight() / 2, mInfoPaint);\n+\n+            if (!TextUtils.isEmpty(mNoDataTextDescription)) {\n+                float textOffset = -mInfoPaint.ascent() + mInfoPaint.descent();\n+                canvas.drawText(mNoDataTextDescription, getWidth() / 2, (getHeight() / 2)\n+                        + textOffset, mInfoPaint);\n+            }\n             return;\n         }\n \n@@ -413,7 +455,7 @@ protected void prepareMatrix() {\n         mMatrixValueToPx.postScale(scaleX, -scaleY);\n \n         mMatrixOffset.reset();\n-                \n+\n         mMatrixOffset.postTranslate(mOffsetLeft, getHeight() - mOffsetBottom);\n \n         // mMatrixOffset.setTranslate(mOffsetLeft, 0);\n@@ -852,7 +894,7 @@ protected void drawDescription() {\n     @Override\n     public boolean onTouchEvent(MotionEvent event) {\n \n-        if (mListener == null)\n+        if (mListener == null || mDataNotSet)\n             return false;\n \n         // check if touch gestures are enabled\n@@ -1176,6 +1218,26 @@ public void setDescription(String desc) {\n         this.mDescription = desc;\n     }\n \n+    /**\n+     * Sets the text that informs the user that there is no data available with\n+     * which to draw the chart.\n+     * \n+     * @param text\n+     */\n+    public void setNoDataText(String text) {\n+        mNoDataText = text;\n+    }\n+\n+    /**\n+     * Sets descriptive text to explain to the user why there is no chart\n+     * available Defaults to empty if not set\n+     * \n+     * @param text\n+     */\n+    public void setNoDataTextDescription(String text) {\n+        mNoDataTextDescription = text;\n+    }\n+\n     /**\n      * Sets the offsets from the border of the view to the actual chart in every\n      * direction manually. Provide density pixels -> they are then rendered to",
    "output": "Merged pull requests."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -19,6 +19,7 @@\n import android.graphics.Typeface;\n import android.os.Environment;\n import android.provider.MediaStore.Images;\n+import android.text.TextUtils;\n import android.util.AttributeSet;\n import android.util.Log;\n import android.view.MotionEvent;\n@@ -187,6 +188,8 @@ public abstract class Chart extends View {\n \n     /** listener that is called when a value on the chart is selected */\n     protected OnChartValueSelectedListener mSelectionListener;\n+    private String mNoDataText = \"No chart data available.\";\n+    private String mNoDataTextDescription;\n \n     /** default constructor for initialization in code */\n     public Chart(Context context) {\n@@ -310,6 +313,23 @@ public void setData(ChartData data) {\n         Log.i(LOG_TAG, \"Data is set.\");\n     }\n \n+    /**\n+     * Informs the user that there is no data available with which to draw the chart\n+     * @param text\n+     */\n+    public void setNoDataText(String text) {\n+        mNoDataText = text;\n+    }\n+\n+    /**\n+     * Sets descriptive text to explain to the user why there is no chart available\n+     * Defaults to empty if not set\n+     * @param text\n+     */\n+    public void setNoDataTextDescription(String text) {\n+        mNoDataTextDescription = text;\n+    }\n+\n     /**\n      * Sets primitive data for the chart. Internally, this is converted into a\n      * ChartData object with one DataSet (type 0). If you have more specific\n@@ -380,7 +400,12 @@ protected void onDraw(Canvas canvas) {\n         if (mDataNotSet) { // check if there is data\n \n             // if no data, inform the user\n-            canvas.drawText(\"No chart data available.\", getWidth() / 2, getHeight() / 2, mInfoPaint);\n+            canvas.drawText(mNoDataText, getWidth() / 2, getHeight() / 2, mInfoPaint);\n+\n+            if(!TextUtils.isEmpty(mNoDataTextDescription)) {\n+                float textOffset = -mInfoPaint.ascent() + mInfoPaint.descent();\n+                canvas.drawText(mNoDataTextDescription, getWidth() / 2, (getHeight() / 2) + textOffset, mInfoPaint);\n+            }\n             return;\n         }\n ",
    "output": "Merge pull request #29 from emmaguy/customise_no_data_text\n\nAdded ability to customise 'no data available' text"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -1514,6 +1514,11 @@ public Highlight getHighlightByTouchPoint(float x, float y) {\n             }\n         }\n \n+        if(mDataNotSet) {\n+            Log.i(LOG_TAG, \"no data set\");\n+            return null;\n+        }\n+\n         ArrayList<SelInfo> valsAtIndex = getYValsAtIndex(xIndex);\n \n         dataSetIndex = getClosestDataSetIndex(valsAtIndex, (float) yTouchVal);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -736,7 +736,7 @@ protected void drawDescription() {\n     @Override\n     public boolean onTouchEvent(MotionEvent event) {\n \n-        if (mListener == null)\n+        if (mListener == null || mDataNotSet)\n             return false;\n \n         // check if touch gestures are enabled",
    "output": "Merge pull request #30 from emmaguy/fix_npe_no_data\n\nFixed NullPointerException when no data set."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -636,24 +636,21 @@ private void drawXLabels(float yPos) {\n                 0f, 0f\n         };\n \n-        for (int i = 0; i < mCurrentData.getXValCount(); i++) {\n+        for (int i = 0; i < mCurrentData.getXValCount(); i += mXLabels.mXAxisLabelModulus) {\n \n-            if (i % mXLabels.mXAxisLabelModulus == 0) {\n+            position[0] = i;\n \n-                position[0] = i;\n+            // center the text\n+            if (mXLabels.isCenterXLabelsEnabled())\n+                position[0] += 0.5f;\n \n-                // center the text\n-                if (mXLabels.isCenterXLabelsEnabled())\n-                    position[0] += 0.5f;\n+            transformPointArray(position);\n \n-                transformPointArray(position);\n+            if (position[0] >= mOffsetLeft && position[0] <= getWidth() - mOffsetRight) {\n \n-                if (position[0] >= mOffsetLeft && position[0] <= getWidth() - mOffsetRight) {\n-\n-                    mDrawCanvas.drawText(mCurrentData.getXVals().get(i), position[0],\n-                            yPos,\n-                            mXLabelPaint);\n-                }\n+                mDrawCanvas.drawText(mCurrentData.getXVals().get(i), position[0],\n+                        yPos,\n+                        mXLabelPaint);\n             }\n         }\n     }\n@@ -826,19 +823,16 @@ protected void drawVerticalGrid() {\n                 0f, 0f\n         };\n \n-        for (int i = 0; i < mCurrentData.getXValCount(); i++) {\n-\n-            if (i % mXLabels.mXAxisLabelModulus == 0) {\n+        for (int i = 0; i < mCurrentData.getXValCount(); i += mXLabels.mXAxisLabelModulus) {\n \n-                position[0] = i;\n+            position[0] = i;\n \n-                transformPointArray(position);\n+            transformPointArray(position);\n \n-                if (position[0] >= mOffsetLeft && position[0] <= getWidth()) {\n+            if (position[0] >= mOffsetLeft && position[0] <= getWidth()) {\n \n-                    mDrawCanvas.drawLine(position[0], mOffsetTop, position[0], getHeight()\n-                            - mOffsetBottom, mGridPaint);\n-                }\n+                mDrawCanvas.drawLine(position[0], mOffsetTop, position[0], getHeight()\n+                        - mOffsetBottom, mGridPaint);\n             }\n         }\n     }",
    "output": "Merge pull request #31 from yocaba/master\n\nimproved performance by increasing the index of for-loops properly"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java\n@@ -71,7 +71,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart.setDescription(\"\");\n \n         // invert the y-axis\n-//        mChart.setInvertYAxisEnabled(true);\n+        mChart.setInvertYAxisEnabled(true);\n \n         // enable value highlighting\n         mChart.setHighlightEnabled(true);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n@@ -74,9 +74,9 @@ protected void onCreate(Bundle savedInstanceState) {\n         objects.add(new ContentItem(\n                 \"Multiple charts inside ListView\",\n                 \"Demonstrates the usage of different chart types inside a ListView.\"));\n-//        objects.add(new ContentItem(\n-//                \"Inverted Line Chart\",\n-//                \"Demonstrates the feature of inverting the y-axis.\"));\n+        objects.add(new ContentItem(\n+                \"Inverted Line Chart\",\n+                \"Demonstrates the feature of inverting the y-axis.\"));\n \n         MyAdapter adapter = new MyAdapter(this, objects);\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -38,6 +38,10 @@\n  * @author Philipp Jahoda\n  */\n public abstract class BarLineChartBase extends Chart {\n+    \n+\n+    /** if set to true, the y-axis is inverted and low values start at the top */\n+    private boolean mInvertYAxis = false;\n \n     /** the maximum number of entried to which values will be drawn */\n     protected int mMaxVisibleCount = 100;\n@@ -417,14 +421,14 @@ protected void calculateOffsets() {\n         mMatrixValueToPx.set(val);\n \n         Matrix offset = new Matrix();\n-        offset.postTranslate(mOffsetLeft, getHeight() - mOffsetBottom);\n-        \n-//        if (!mInvertYAxis)\n-//            offset.postTranslate(mOffsetLeft, getHeight() - mOffsetBottom);\n-//        else {\n-//            offset.setTranslate(mOffsetLeft, 0);\n-//            offset.postScale(1.0f, -1.0f);\n-//        }\n+        // offset.postTranslate(mOffsetLeft, getHeight() - mOffsetBottom);\n+\n+        if (!mInvertYAxis)\n+            offset.postTranslate(mOffsetLeft, getHeight() - mOffsetBottom);\n+        else {\n+            offset.setTranslate(mOffsetLeft, -getOffsetTop());\n+            offset.postScale(1.0f, -1.0f);\n+        }\n \n         mMatrixOffset.set(offset);\n     }\n@@ -546,18 +550,20 @@ private void prepareYLabels() {\n         PointD p1 = getValuesByTouchPoint(mContentRect.left, mContentRect.top);\n         PointD p2 = getValuesByTouchPoint(mContentRect.left, mContentRect.bottom);\n \n-        mYChartMin = (float) p2.y;\n-        mYChartMax = (float) p1.y;\n+        // mYChartMin = (float) p2.y;\n+        // mYChartMax = (float) p1.y;\n \n-//        if (!mInvertYAxis) {\n-//            mYChartMin = (float) p2.y;\n-//            mYChartMax = (float) p1.y;\n-//        } else {\n-//            \n-//            if(!mStartAtZero) mYChartMin = (float) Math.min(p1.y, p2.y);\n-//            else mYChartMin = 0;\n-//            mYChartMax = (float) Math.max(p1.y, p2.y);\n-//        }\n+        if (!mInvertYAxis) {\n+            mYChartMin = (float) p2.y;\n+            mYChartMax = (float) p1.y;\n+        } else {\n+\n+            if (!mStartAtZero)\n+                mYChartMin = (float) Math.min(p1.y, p2.y);\n+            else\n+                mYChartMin = 0;\n+            mYChartMax = (float) Math.max(p1.y, p2.y);\n+        }\n \n         float yMin = mYChartMin;\n         float yMax = mYChartMax;\n@@ -988,15 +994,24 @@ public void zoom(float scaleX, float scaleY, float x, float y) {\n         refreshTouch(save);\n     }\n \n-//    private boolean mInvertYAxis = false;\n-//\n-//    public void setInvertYAxisEnabled(boolean enabled) {\n-//        mInvertYAxis = enabled;\n-//    }\n-//\n-//    public boolean isInvertYAxisEnabled() {\n-//        return mInvertYAxis;\n-//    }\n+    /**\n+     * If this is set to true, the y-axis is inverted which means that low\n+     * values are on top of the chart, high values on bottom.\n+     * \n+     * @param enabled\n+     */\n+    public void setInvertYAxisEnabled(boolean enabled) {\n+        mInvertYAxis = enabled;\n+    }\n+\n+    /**\n+     * If this returns true, the y-axis is inverted.\n+     * \n+     * @return\n+     */\n+    public boolean isInvertYAxisEnabled() {\n+        return mInvertYAxis;\n+    }\n \n     /**\n      * Centers the viewport around the specified x-index and the specified\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -205,14 +205,15 @@ public boolean onTouch(View v, MotionEvent event) {\n \n                     mMatrix.set(mSavedMatrix);\n                     PointF dragPoint = new PointF(event.getX(), event.getY());\n-                    mMatrix.postTranslate(dragPoint.x - mTouchStartPoint.x, dragPoint.y\n-                            - mTouchStartPoint.y);\n                     \n-//                    mMatrix.set(mSavedMatrix);\n-//                    PointF dragPoint = new PointF(event.getX(), event.getY());\n-//                    mMatrix.postTranslate(dragPoint.x - mTouchStartPoint.x, -(dragPoint.y\n-//                            - mTouchStartPoint.y));\n-\n+                    // check if axis is inverted\n+                    if(!mChart.isInvertYAxisEnabled()) {\n+                        mMatrix.postTranslate(dragPoint.x - mTouchStartPoint.x, dragPoint.y\n+                                - mTouchStartPoint.y);\n+                    } else {\n+                        mMatrix.postTranslate(dragPoint.x - mTouchStartPoint.x, -(dragPoint.y\n+                              - mTouchStartPoint.y));\n+                    }\n \n                 } else if (mTouchMode == X_ZOOM || mTouchMode == Y_ZOOM || mTouchMode == PINCH_ZOOM) {\n \n@@ -222,13 +223,6 @@ public boolean onTouch(View v, MotionEvent event) {\n \n                     if (totalDist > 10f) {\n \n-                        float[] values = new float[9];\n-                        mMatrix.getValues(values);\n-\n-                        // get the previous scale factors\n-                        // float oldScaleX = values[Matrix.MSCALE_X];\n-                        // float oldScaleY = values[Matrix.MSCALE_Y];\n-\n                         // get the translation\n                         PointF t = getTrans(mTouchPointCenter.x, mTouchPointCenter.y);\n \n@@ -368,7 +362,14 @@ private static float getYDist(MotionEvent e) {\n     public PointF getTrans(float x, float y) {\n \n         float xTrans = x - mChart.getOffsetLeft();\n-        float yTrans = -(mChart.getMeasuredHeight() - y - mChart.getOffsetBottom());\n+        float yTrans = 0f;\n+        \n+        // check if axis is inverted\n+        if(!mChart.isInvertYAxisEnabled()) {\n+            yTrans = -(mChart.getMeasuredHeight() - y - mChart.getOffsetBottom());\n+        } else {\n+            yTrans = -(y - mChart.getOffsetTop());\n+        }\n \n         return new PointF(xTrans, yTrans);\n     }",
    "output": "Feature to invert the y-axis is now working."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -636,24 +636,21 @@ private void drawXLabels(float yPos) {\n                 0f, 0f\n         };\n \n-        for (int i = 0; i < mCurrentData.getXValCount(); i++) {\n+        for (int i = 0; i < mCurrentData.getXValCount(); i += mXLabels.mXAxisLabelModulus) {\n \n-            if (i % mXLabels.mXAxisLabelModulus == 0) {\n+            position[0] = i;\n \n-                position[0] = i;\n+            // center the text\n+            if (mXLabels.isCenterXLabelsEnabled())\n+                position[0] += 0.5f;\n \n-                // center the text\n-                if (mXLabels.isCenterXLabelsEnabled())\n-                    position[0] += 0.5f;\n+            transformPointArray(position);\n \n-                transformPointArray(position);\n+            if (position[0] >= mOffsetLeft && position[0] <= getWidth() - mOffsetRight) {\n \n-                if (position[0] >= mOffsetLeft && position[0] <= getWidth() - mOffsetRight) {\n-\n-                    mDrawCanvas.drawText(mCurrentData.getXVals().get(i), position[0],\n-                            yPos,\n-                            mXLabelPaint);\n-                }\n+                mDrawCanvas.drawText(mCurrentData.getXVals().get(i), position[0],\n+                        yPos,\n+                        mXLabelPaint);\n             }\n         }\n     }\n@@ -826,19 +823,16 @@ protected void drawVerticalGrid() {\n                 0f, 0f\n         };\n \n-        for (int i = 0; i < mCurrentData.getXValCount(); i++) {\n-\n-            if (i % mXLabels.mXAxisLabelModulus == 0) {\n+        for (int i = 0; i < mCurrentData.getXValCount(); i += mXLabels.mXAxisLabelModulus) {\n \n-                position[0] = i;\n+            position[0] = i;\n \n-                transformPointArray(position);\n+            transformPointArray(position);\n \n-                if (position[0] >= mOffsetLeft && position[0] <= getWidth()) {\n+            if (position[0] >= mOffsetLeft && position[0] <= getWidth()) {\n \n-                    mDrawCanvas.drawLine(position[0], mOffsetTop, position[0], getHeight()\n-                            - mOffsetBottom, mGridPaint);\n-                }\n+                mDrawCanvas.drawLine(position[0], mOffsetTop, position[0], getHeight()\n+                        - mOffsetBottom, mGridPaint);\n             }\n         }\n     }",
    "output": "improved performance by increasing the index of for-loops properly"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -1520,6 +1520,11 @@ public Highlight getHighlightByTouchPoint(float x, float y) {\n             }\n         }\n \n+        if(mDataNotSet) {\n+            Log.i(LOG_TAG, \"no data set\");\n+            return null;\n+        }\n+\n         ArrayList<SelInfo> valsAtIndex = getYValsAtIndex(xIndex);\n \n         dataSetIndex = getClosestDataSetIndex(valsAtIndex, (float) yTouchVal);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -736,7 +736,7 @@ protected void drawDescription() {\n     @Override\n     public boolean onTouchEvent(MotionEvent event) {\n \n-        if (mListener == null)\n+        if (mListener == null || mDataNotSet)\n             return false;\n \n         // check if touch gestures are enabled",
    "output": "fix a couple of npe caused by user tapping on a chart which has no data"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -19,6 +19,7 @@\n import android.graphics.Typeface;\n import android.os.Environment;\n import android.provider.MediaStore.Images;\n+import android.text.TextUtils;\n import android.util.AttributeSet;\n import android.util.Log;\n import android.view.MotionEvent;\n@@ -187,6 +188,8 @@ public abstract class Chart extends View {\n \n     /** listener that is called when a value on the chart is selected */\n     protected OnChartValueSelectedListener mSelectionListener;\n+    private String mNoDataText = \"No chart data available.\";\n+    private String mNoDataTextDescription;\n \n     /** default constructor for initialization in code */\n     public Chart(Context context) {\n@@ -310,6 +313,23 @@ public void setData(ChartData data) {\n         Log.i(LOG_TAG, \"Data is set.\");\n     }\n \n+    /**\n+     * Informs the user that there is no data available with which to draw the chart\n+     * @param text\n+     */\n+    public void setNoDataText(String text) {\n+        mNoDataText = text;\n+    }\n+\n+    /**\n+     * Sets descriptive text to explain to the user why there is no chart available\n+     * Defaults to empty if not set\n+     * @param text\n+     */\n+    public void setNoDataTextDescription(String text) {\n+        mNoDataTextDescription = text;\n+    }\n+\n     /**\n      * Sets primitive data for the chart. Internally, this is converted into a\n      * ChartData object with one DataSet (type 0). If you have more specific\n@@ -380,7 +400,12 @@ protected void onDraw(Canvas canvas) {\n         if (mDataNotSet) { // check if there is data\n \n             // if no data, inform the user\n-            canvas.drawText(\"No chart data available.\", getWidth() / 2, getHeight() / 2, mInfoPaint);\n+            canvas.drawText(mNoDataText, getWidth() / 2, getHeight() / 2, mInfoPaint);\n+\n+            if(!TextUtils.isEmpty(mNoDataTextDescription)) {\n+                float textOffset = -mInfoPaint.ascent() + mInfoPaint.descent();\n+                canvas.drawText(mNoDataTextDescription, getWidth() / 2, (getHeight() / 2) + textOffset, mInfoPaint);\n+            }\n             return;\n         }\n ",
    "output": "added ability to customise 'no data available' text and added an optional description"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -13,6 +13,7 @@\n import android.util.AttributeSet;\n import android.util.Log;\n import android.view.ViewParent;\n+import android.widget.Toast;\n \n import com.github.mikephil.charting.data.ChartData;\n import com.github.mikephil.charting.data.Entry;\n@@ -1477,15 +1478,20 @@ public Highlight getHighlightByTouchPoint(float x, float y) {\n         double yTouchVal = pts[1];\n         double base = Math.floor(xTouchVal);\n \n-        Log.i(LOG_TAG, \"touchindex x: \" + xTouchVal + \", touchindex y: \" + yTouchVal);\n+        double touchOffset = mDeltaX * 0.025;\n+        Log.i(LOG_TAG, \"touchindex x: \" + xTouchVal + \", touchindex y: \" + yTouchVal + \", offset: \" + touchOffset);\n+//        Toast.makeText(getContext(), \"touchindex x: \" + xTouchVal + \", touchindex y: \" + yTouchVal + \", offset: \" + touchOffset, Toast.LENGTH_SHORT).show();\n \n         // touch out of chart\n         if ((this instanceof LineChart || this instanceof ScatterChart)\n-                && (xTouchVal < 0 || xTouchVal > mDeltaX))\n+                && (xTouchVal < -touchOffset || xTouchVal > mDeltaX + touchOffset))\n             return null;\n-        if (this instanceof BarChart && (xTouchVal < 0 || xTouchVal > mDeltaX + 1))\n+        if (this instanceof BarChart && (xTouchVal < 0 || xTouchVal > mDeltaX))\n             return null;\n-\n+        \n+        if(base < 0) base = 0;\n+        if(base >= mDeltaX) base = mDeltaX - 1;\n+        \n         int xIndex = (int) base;\n         int dataSetIndex = 0; // index of the DataSet inside the ChartData\n                               // object",
    "output": "Fixed issue that border values are hard to highlight."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -312,7 +312,8 @@ protected void calculateOffsets() {\n             mLegendLabelPaint.setTextAlign(Align.LEFT);\n \n         } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n-                || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT) {\n+                || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT\n+                || mLegend.getPosition() == LegendPosition.BELOW_CHART_CENTER) {\n \n             if (mXLabels.getPosition() == XLabelPosition.TOP)\n                 mLegend.setOffsetBottom(mLegendLabelPaint.getTextSize() * 3.5f);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -342,7 +342,7 @@ public void setData(ChartData data) {\n     /**\n      * calculates the offsets of the chart to the border depending on the\n      * position of an eventual legend or depending on the length of the y-axis\n-     * labels\n+     * and x-axis labels and their position\n      */\n     protected abstract void calculateOffsets();\n \n@@ -661,7 +661,7 @@ protected void drawLegend() {\n \n         if (tf != null)\n             mLegendLabelPaint.setTypeface(tf);\n-        \n+\n         mLegendLabelPaint.setTextSize(mLegend.getTextSize());\n \n         float formSize = mLegend.getFormSize();\n@@ -670,7 +670,7 @@ protected void drawLegend() {\n         float formTextSpaceAndForm = mLegend.getFormToTextSpace() + formSize;\n \n         // space between the entries\n-        float stackSpace = Utils.convertDpToPixel(3f);\n+        float stackSpace = mLegend.getStackSpace();\n \n         float textSize = mLegend.getTextSize();\n \n@@ -702,7 +702,8 @@ protected void drawLegend() {\n                             posX += formTextSpaceAndForm;\n \n                         mLegend.drawLabel(mDrawCanvas, posX, posY + textDrop, mLegendLabelPaint, i);\n-                        posX += Utils.calcTextWidth(mLegendLabelPaint, labels[i]) + mLegend.getXEntrySpace();\n+                        posX += Utils.calcTextWidth(mLegendLabelPaint, labels[i])\n+                                + mLegend.getXEntrySpace();\n                     } else {\n                         posX += formSize + stackSpace;\n                     }\n@@ -718,7 +719,8 @@ protected void drawLegend() {\n \n                     if (labels[i] != null) {\n \n-                        posX -= Utils.calcTextWidth(mLegendLabelPaint, labels[i]) + mLegend.getXEntrySpace();\n+                        posX -= Utils.calcTextWidth(mLegendLabelPaint, labels[i])\n+                                + mLegend.getXEntrySpace();\n                         mLegend.drawLabel(mDrawCanvas, posX, posY + textDrop, mLegendLabelPaint, i);\n                         if (mLegend.getColors()[i] != -1)\n                             posX -= formTextSpaceAndForm;\n@@ -732,7 +734,8 @@ protected void drawLegend() {\n                 break;\n             case RIGHT_OF_CHART:\n \n-                posX = getWidth() - mLegend.getMaximumEntryLength(mLegendLabelPaint) - formTextSpaceAndForm;\n+                posX = getWidth() - mLegend.getMaximumEntryLength(mLegendLabelPaint)\n+                        - formTextSpaceAndForm;\n                 posY = mLegend.getOffsetTop();\n \n                 float stack = 0f;\n@@ -750,15 +753,15 @@ protected void drawLegend() {\n \n                             if (mLegend.getColors()[i] != -1)\n                                 x += formTextSpaceAndForm;\n-                            \n+\n                             posY += textDrop;\n \n                             mLegend.drawLabel(mDrawCanvas, x, posY,\n                                     mLegendLabelPaint, i);\n                         } else {\n \n                             posY += textSize * 1.2f + formSize;\n-                            \n+\n                             mLegend.drawLabel(mDrawCanvas, posX, posY,\n                                     mLegendLabelPaint, i);\n \n@@ -772,7 +775,33 @@ protected void drawLegend() {\n                         wasStacked = true;\n                     }\n                 }\n+                break;\n+            case BELOW_CHART_CENTER:\n+                \n+                float fullSize = mLegend.getFullWidth(mLegendLabelPaint);\n+                \n+                posX = getWidth() / 2f - fullSize / 2f;\n+                posY = getHeight() - mLegend.getOffsetBottom() / 2f - formSize / 2f;\n+                \n+                for (int i = 0; i < labels.length; i++) {\n+\n+                    mLegend.drawForm(mDrawCanvas, posX, posY, mLegendFormPaint, i);\n+\n+                    // grouped forms have null labels\n+                    if (labels[i] != null) {\n+\n+                        // make a step to the left\n+                        if (mLegend.getColors()[i] != -1)\n+                            posX += formTextSpaceAndForm;\n \n+                        mLegend.drawLabel(mDrawCanvas, posX, posY + textDrop, mLegendLabelPaint, i);\n+                        posX += Utils.calcTextWidth(mLegendLabelPaint, labels[i])\n+                                + mLegend.getXEntrySpace();\n+                    } else {\n+                        posX += formSize + stackSpace;\n+                    }\n+                }\n+                \n                 break;\n         }\n     }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -211,7 +211,8 @@ protected void calculateOffsets() {\n             mLegendLabelPaint.setTextAlign(Align.LEFT);\n \n         } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n-                || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT) {\n+                || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT\n+                || mLegend.getPosition() == LegendPosition.BELOW_CHART_CENTER) {\n \n             mLegend.setOffsetBottom(mLegendLabelPaint.getTextSize() * 3.5f);\n         }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java b/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java\n@@ -17,7 +17,7 @@\n public class Legend {\n \n     public enum LegendPosition {\n-        RIGHT_OF_CHART, BELOW_CHART_LEFT, BELOW_CHART_RIGHT\n+        RIGHT_OF_CHART, BELOW_CHART_LEFT, BELOW_CHART_RIGHT, BELOW_CHART_CENTER\n     }\n \n     public enum LegendForm {\n@@ -42,7 +42,7 @@ public enum LegendForm {\n \n     /** the typeface used for the legend labels */\n     private Typeface mTypeface = null;\n-    \n+\n     /** the text size of the legend labels */\n     private float mTextSize = 9f;\n \n@@ -66,6 +66,9 @@ public enum LegendForm {\n      */\n     private float mFormToTextSpace = 5f;\n \n+    /** the space that should be left between stacked forms */\n+    private float mStackSpace = 3f;\n+\n     /** default constructor */\n     public Legend() {\n \n@@ -74,6 +77,7 @@ public Legend() {\n         mYEntrySpace = Utils.convertDpToPixel(5f);\n         mFormToTextSpace = Utils.convertDpToPixel(5f);\n         mTextSize = Utils.convertDpToPixel(9f);\n+        mStackSpace = Utils.convertDpToPixel(3f);\n     }\n \n     /**\n@@ -372,6 +376,7 @@ public void apply(Legend l) {\n         mYEntrySpace = l.mYEntrySpace;\n         mFormToTextSpace = l.mFormToTextSpace;\n         mTextSize = l.mTextSize;\n+        mStackSpace = l.mStackSpace;\n     }\n \n     /**\n@@ -445,20 +450,68 @@ public void setOffsetTop(float off) {\n     public void setOffsetLeft(float off) {\n         mLegendOffsetLeft = off;\n     }\n-    \n+\n     /**\n      * sets the text size of the legend labels, default 9f\n+     * \n      * @param size\n      */\n     public void setTextSize(float size) {\n         mTextSize = Utils.convertDpToPixel(size);\n     }\n-    \n+\n     /**\n      * returns the text size of the legend labels\n+     * \n      * @return\n      */\n     public float getTextSize() {\n         return mTextSize;\n     }\n+\n+    /**\n+     * returns the space that is left out between stacked forms (with no label)\n+     * \n+     * @return\n+     */\n+    public float getStackSpace() {\n+        return mStackSpace;\n+    }\n+\n+    /**\n+     * sets the space that is left out between stacked forms (with no label)\n+     * \n+     * @param space\n+     */\n+    public void setStackSpace(float space) {\n+        mStackSpace = space;\n+    }\n+\n+    /**\n+     * calculates the full width the fully drawn legend will use in pixels\n+     * \n+     * @return\n+     */\n+    public float getFullWidth(Paint labelpaint) {\n+\n+        float width = 0f;\n+\n+        for (int i = 0; i < mLegendLabels.length; i++) {\n+\n+            // grouped forms have null labels\n+            if (mLegendLabels[i] != null) {\n+\n+                // make a step to the left\n+                if (mColors[i] != -1)\n+                    width += mFormSize + mFormToTextSpace;\n+\n+                width += Utils.calcTextWidth(labelpaint, mLegendLabels[i])\n+                        + mXEntrySpace;\n+            } else {\n+                width += mFormSize + mStackSpace;\n+            }\n+        }\n+\n+        return width;\n+    }\n }",
    "output": "Added feature for setting the legend BELOW_CHART_CENTER."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java\n@@ -2,6 +2,7 @@\n package com.xxmassdeveloper.mpchartexample;\n \n import android.content.Context;\n+import android.graphics.Color;\n import android.graphics.Typeface;\n import android.os.Bundle;\n import android.view.LayoutInflater;\n@@ -16,6 +17,7 @@\n import com.github.mikephil.charting.data.BarDataSet;\n import com.github.mikephil.charting.data.ChartData;\n import com.github.mikephil.charting.data.Entry;\n+import com.github.mikephil.charting.utils.ColorTemplate;\n import com.github.mikephil.charting.utils.XLabels;\n import com.github.mikephil.charting.utils.XLabels.XLabelPosition;\n import com.github.mikephil.charting.utils.YLabels;\n@@ -88,6 +90,7 @@ public View getView(int position, View convertView, ViewGroup parent) {\n             holder.chart.setDescription(\"\");\n             holder.chart.setDrawVerticalGrid(false);\n             holder.chart.setDrawGridBackground(false);\n+            holder.chart.setValueTextColor(Color.WHITE);\n \n             XLabels xl = holder.chart.getXLabels();\n             xl.setCenterXLabelText(true);\n@@ -128,6 +131,8 @@ private BarData generateData(int cnt) {\n \n         BarDataSet d = new BarDataSet(entries, \"New DataSet \" + cnt);    \n         d.setBarSpacePercent(20f);\n+        d.setColors(ColorTemplate.VORDIPLOM_COLORS, getApplicationContext());\n+        d.setBarShadowColor(Color.rgb(203, 203, 203));\n         \n         ArrayList<BarDataSet> sets = new ArrayList<BarDataSet>();\n         sets.add(d);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewMultiChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewMultiChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewMultiChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewMultiChartActivity.java\n@@ -17,6 +17,7 @@\n import com.github.mikephil.charting.data.LineDataSet;\n import com.github.mikephil.charting.data.PieData;\n import com.github.mikephil.charting.data.PieDataSet;\n+import com.github.mikephil.charting.utils.ColorTemplate;\n import com.xxmassdeveloper.mpchartexample.listviewitems.BarChartItem;\n import com.xxmassdeveloper.mpchartexample.listviewitems.ChartItem;\n import com.xxmassdeveloper.mpchartexample.listviewitems.LineChartItem;\n@@ -101,7 +102,8 @@ private ChartData generateDataLine(int cnt) {\n         LineDataSet d = new LineDataSet(entries, \"New DataSet \" + cnt);\n         d.setLineWidth(3f);\n         d.setCircleSize(5f);\n-\n+//        d.setColors(ColorTemplate.VORDIPLOM_COLORS, getApplicationContext());\n+        \n         LineData cd = new LineData(getMonths(), d);\n         return cd;\n     }\n@@ -121,6 +123,7 @@ private ChartData generateDataBar(int cnt) {\n \n         BarDataSet d = new BarDataSet(entries, \"New DataSet \" + cnt);\n         d.setBarSpacePercent(20f);\n+        d.setColors(ColorTemplate.VORDIPLOM_COLORS, getApplicationContext());\n         BarData cd = new BarData(getMonths(), d);\n         return cd;\n     }\n@@ -142,6 +145,7 @@ private ChartData generateDataPie(int cnt) {\n         \n         // space between slices\n         d.setSliceSpace(5f);\n+        d.setColors(ColorTemplate.VORDIPLOM_COLORS, getApplicationContext());\n         \n         PieData cd = new PieData(getQuarters(), d);\n         return cd;\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/BarChartItem.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/BarChartItem.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/BarChartItem.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/BarChartItem.java\n@@ -51,6 +51,7 @@ public View getView(int position, View convertView, Context c) {\n         holder.chart.setDescription(\"\");\n         holder.chart.setDrawVerticalGrid(false);\n         holder.chart.setDrawGridBackground(false);\n+        holder.chart.setDrawBarShadow(false);\n \n         XLabels xl = holder.chart.getXLabels();\n         xl.setCenterXLabelText(true);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1369,7 +1369,7 @@ public void setDrawMarkerViews(boolean enabled) {\n      * \n      * @param color\n      */\n-    public void setValuePaintColor(int color) {\n+    public void setValueTextColor(int color) {\n         mValuePaint.setColor(color);\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java\n@@ -1,6 +1,7 @@\n \n package com.github.mikephil.charting.data;\n \n+import android.content.Context;\n import android.graphics.Color;\n \n import com.github.mikephil.charting.utils.ColorTemplate;\n@@ -34,10 +35,10 @@ public abstract class DataSet {\n \n     /** label that describes the DataSet or the data the DataSet represents */\n     private String mLabel = \"DataSet\";\n-    \n+\n     /** default constructor */\n     protected DataSet() {\n-        \n+\n     }\n \n     /**\n@@ -60,8 +61,8 @@ public DataSet(ArrayList<Entry> yVals, String label) {\n         mColors = new ArrayList<Integer>();\n \n         // default colors\n-//        mColors.add(Color.rgb(192, 255, 140));\n-//        mColors.add(Color.rgb(255, 247, 140));\n+        // mColors.add(Color.rgb(192, 255, 140));\n+        // mColors.add(Color.rgb(255, 247, 140));\n         mColors.add(Color.rgb(140, 234, 255));\n \n         calcMinMax();\n@@ -83,14 +84,14 @@ protected void calcMinMax() {\n         if (mYVals.size() == 0) {\n             return;\n         }\n-        \n+\n         mYMin = mYVals.get(0).getSum();\n         mYMax = mYVals.get(0).getSum();\n \n         for (int i = 0; i < mYVals.size(); i++) {\n-            \n+\n             Entry e = mYVals.get(i);\n-            \n+\n             if (e.getSum() < mYMin)\n                 mYMin = e.getSum();\n \n@@ -307,6 +308,27 @@ public void setColors(int[] colors) {\n         this.mColors = ColorTemplate.createColors(colors);\n     }\n \n+    /**\n+     * Sets the colors that should be used fore this DataSet. Colors are reused\n+     * as soon as the number of Entries the DataSet represents is higher than\n+     * the size of the colors array. You can use\n+     * \"new String[] { R.color.red, R.color.green, ... }\" to provide colors for\n+     * this method. Internally, the colors are resolved using\n+     * getResources().getColor(...)\n+     * \n+     * @param colors\n+     */\n+    public void setColors(int[] colors, Context c) {\n+\n+        ArrayList<Integer> clrs = new ArrayList<Integer>();\n+\n+        for (int color : colors) {\n+            clrs.add(c.getResources().getColor(color));\n+        }\n+\n+        mColors = clrs;\n+    }\n+\n     /**\n      * Adds a new color to the colors array of the DataSet.\n      * \n@@ -355,7 +377,7 @@ public int getColor(int index) {\n     public void resetColors() {\n         mColors = new ArrayList<Integer>();\n     }\n-    \n+\n     // /**\n     // * Convenience method to create multiple DataSets of different types with\n     // * various double value arrays. Each double array represents the data of\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java b/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/LineDataSet.java\n@@ -1,6 +1,7 @@\n \n package com.github.mikephil.charting.data;\n \n+import android.content.Context;\n import android.graphics.Color;\n import android.graphics.DashPathEffect;\n \n@@ -28,12 +29,11 @@ public class LineDataSet extends DataSet {\n \n     /** if true, the data will also be drawn filled */\n     private boolean mDrawFilled = false;\n-    \n \n     public LineDataSet(ArrayList<Entry> yVals, String label) {\n         super(yVals, label);\n \n-        mCircleSize = Utils.convertDpToPixel(mCircleSize);\n+        mCircleSize = Utils.convertDpToPixel(4f);\n \n         mCircleColors = new ArrayList<Integer>();\n \n@@ -222,6 +222,27 @@ public void setCircleColors(int[] colors) {\n         this.mCircleColors = ColorTemplate.createColors(colors);\n     }\n \n+    /**\n+     * ets the colors that should be used for the circles of this DataSet.\n+     * Colors are reused as soon as the number of Entries the DataSet represents\n+     * is higher than the size of the colors array. You can use\n+     * \"new String[] { R.color.red, R.color.green, ... }\" to provide colors for\n+     * this method. Internally, the colors are resolved using\n+     * getResources().getColor(...)\n+     * \n+     * @param colors\n+     */\n+    public void setCircleColors(int[] colors, Context c) {\n+\n+        ArrayList<Integer> clrs = new ArrayList<Integer>();\n+\n+        for (int color : colors) {\n+            clrs.add(c.getResources().getColor(color));\n+        }\n+\n+        mCircleColors = clrs;\n+    }\n+\n     /**\n      * Sets the one and ONLY color that should be used for this DataSet.\n      * Internally, this recreates the colors array and adds the specified color.",
    "output": "Added references, improved example."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java\n@@ -73,7 +73,7 @@ protected void onCreate(Bundle savedInstanceState) {\n \t\tmSeekBarY.setProgress(100);\n \t\t\n \t\tLegend l = mChart.getLegend();\n-\t\tl.setPosition(LegendPosition.RIGHT_OF_CHART);\n+\t\tl.setPosition(LegendPosition.BELOW_CHART_LEFT);\n \t\tl.setYEntrySpace(3f);\n \t}\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -661,6 +661,8 @@ protected void drawLegend() {\n \n         if (tf != null)\n             mLegendLabelPaint.setTypeface(tf);\n+        \n+        mLegendLabelPaint.setTextSize(mLegend.getTextSize());\n \n         float formSize = mLegend.getFormSize();\n \n@@ -671,7 +673,7 @@ protected void drawLegend() {\n         float xEntrySpace = mLegend.getXEntrySpace() + formSize;\n         float yEntrySpace = mLegend.getYEntrySpace() + formSize;\n \n-        float textSize = mLegendLabelPaint.getTextSize();\n+        float textSize = mLegend.getTextSize();\n \n         // the amount of pixels the text needs to be set down to be on the same\n         // height as the form\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -21,6 +21,7 @@\n import com.github.mikephil.charting.data.PieDataSet;\n import com.github.mikephil.charting.listener.PieChartTouchListener;\n import com.github.mikephil.charting.utils.Legend.LegendPosition;\n+import com.github.mikephil.charting.utils.XLabels.XLabelPosition;\n import com.github.mikephil.charting.utils.Utils;\n \n import java.text.DecimalFormat;\n@@ -56,7 +57,7 @@ public class PieChart extends Chart {\n      * this value is null, the default is \"Total Value\\n + getYValueSum()\"\n      */\n     private String mCenterText = null;\n-    \n+\n     /**\n      * indicates the size of the hole in the center of the piechart, default:\n      * radius / 2\n@@ -133,9 +134,10 @@ protected void init() {\n         // for the piechart, drawing values is enabled\n         mDrawYValues = true;\n     }\n-    \n+\n     /**\n      * Sets a PieData object as a model for the PieChart.\n+     * \n      * @param data\n      */\n     public void setData(PieData data) {\n@@ -199,18 +201,29 @@ public void notifyDataSetChanged() {\n     @Override\n     protected void calculateOffsets() {\n \n-        if (mDrawLegend) {\n-            if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART) {\n+        if (mLegend == null)\n+            return;\n \n-                mLegendLabelPaint.setTextAlign(Align.LEFT);\n-                mOffsetTop = (int) (mLegendLabelPaint.getTextSize() * 3.5f);\n+        // setup offsets for legend\n+        if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART) {\n \n-            } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n-                    || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT) {\n-                mOffsetBottom = (int) (mLegendLabelPaint.getTextSize() * 3.5f);\n-            }\n+            mLegend.setOffsetRight(mLegend.getMaximumEntryLength(mLegendLabelPaint));\n+            mLegendLabelPaint.setTextAlign(Align.LEFT);\n+\n+        } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n+                || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT) {\n+\n+            mLegend.setOffsetBottom(mLegendLabelPaint.getTextSize() * 3.5f);\n         }\n \n+        if (mDrawLegend) {\n+\n+            mOffsetBottom = Math.max(mOffsetBottom, mLegend.getOffsetBottom());\n+        }\n+\n+        mLegend.setOffsetTop(mOffsetTop);\n+        mLegend.setOffsetLeft(mOffsetLeft);\n+\n         prepareContentRect();\n \n         float scaleX = (float) ((getWidth() - mOffsetLeft - mOffsetRight) / mDeltaX);\n@@ -378,9 +391,10 @@ protected void drawHighlights() {\n \n                 float shiftangle = (float) Math.toRadians(angle + sliceDegrees / 2f);\n \n-                PieDataSet set = (PieDataSet) mCurrentData.getDataSetByIndex(mIndicesToHightlight[i]\n-                        .getDataSetIndex());\n-                \n+                PieDataSet set = (PieDataSet) mCurrentData\n+                        .getDataSetByIndex(mIndicesToHightlight[i]\n+                                .getDataSetIndex());\n+\n                 float shift = set.getSelectionShift();\n                 float xShift = shift * (float) Math.cos(shiftangle);\n                 float yShift = shift * (float) Math.sin(shiftangle);\n@@ -432,7 +446,8 @@ protected void drawData() {\n     }\n \n     /**\n-     * draws the hole in the center of the chart and the transparent circle / hole\n+     * draws the hole in the center of the chart and the transparent circle /\n+     * hole\n      */\n     private void drawHole() {\n \n@@ -934,7 +949,8 @@ public void setPaint(Paint p, int which) {\n     @Override\n     public Paint getPaint(int which) {\n         Paint p = super.getPaint(which);\n-        if(p != null) return p;\n+        if (p != null)\n+            return p;\n \n         switch (which) {\n             case PAINT_HOLE:\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java b/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java\n@@ -42,6 +42,9 @@ public enum LegendForm {\n \n     /** the typeface used for the legend labels */\n     private Typeface mTypeface = null;\n+    \n+    /** the text size of the legend labels */\n+    private float mTextSize = 9f;\n \n     /** the size of the legend forms/shapes */\n     private float mFormSize = 8f;\n@@ -66,10 +69,11 @@ public enum LegendForm {\n     /** default constructor */\n     public Legend() {\n \n-        mFormSize = Utils.convertDpToPixel(mFormSize);\n+        mFormSize = Utils.convertDpToPixel(8f);\n         mXEntrySpace = Utils.convertDpToPixel(5f);\n         mYEntrySpace = Utils.convertDpToPixel(3f);\n-        mFormToTextSpace = Utils.convertDpToPixel(mFormToTextSpace);\n+        mFormToTextSpace = Utils.convertDpToPixel(5f);\n+        mTextSize = Utils.convertDpToPixel(9f);\n     }\n \n     /**\n@@ -367,6 +371,7 @@ public void apply(Legend l) {\n         mXEntrySpace = l.mXEntrySpace;\n         mYEntrySpace = l.mYEntrySpace;\n         mFormToTextSpace = l.mFormToTextSpace;\n+        mTextSize = l.mTextSize;\n     }\n \n     /**\n@@ -440,4 +445,20 @@ public void setOffsetTop(float off) {\n     public void setOffsetLeft(float off) {\n         mLegendOffsetLeft = off;\n     }\n+    \n+    /**\n+     * sets the text size of the legend labels, default 9f\n+     * @param size\n+     */\n+    public void setTextSize(float size) {\n+        mTextSize = Utils.convertDpToPixel(size);\n+    }\n+    \n+    /**\n+     * returns the text size of the legend labels\n+     * @return\n+     */\n+    public float getTextSize() {\n+        return mTextSize;\n+    }\n }",
    "output": "Fixed issue concerning vertical clipping in the PieChart legend."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewChartActivity.java\n@@ -0,0 +1,155 @@\n+\n+package com.xxmassdeveloper.mpchartexample;\n+\n+import android.content.Context;\n+import android.graphics.Typeface;\n+import android.os.Bundle;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.view.WindowManager;\n+import android.widget.ArrayAdapter;\n+import android.widget.ListView;\n+\n+import com.github.mikephil.charting.charts.BarChart;\n+import com.github.mikephil.charting.data.ChartData;\n+import com.github.mikephil.charting.data.DataSet;\n+import com.github.mikephil.charting.data.Entry;\n+import com.github.mikephil.charting.utils.ColorTemplate;\n+import com.github.mikephil.charting.utils.XLabels;\n+import com.github.mikephil.charting.utils.XLabels.XLabelPosition;\n+import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Demonstrates the use of charts inside a ListView. IMPORTANT: provide a\n+ * specific height attribute for the chart inside your listview-item\n+ * \n+ * @author Philipp Jahoda\n+ */\n+public class ListViewChartActivity extends DemoBase {\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,\n+                WindowManager.LayoutParams.FLAG_FULLSCREEN);\n+        setContentView(R.layout.activity_listview_chart);\n+        \n+        ListView lv = (ListView) findViewById(R.id.listView1);\n+\n+        ArrayList<ChartData> list = new ArrayList<ChartData>();\n+\n+        // 20 items\n+        for (int i = 0; i < 20; i++) {\n+            list.add(generateData(i + 1));\n+        }\n+\n+        ChartDataAdapter cda = new ChartDataAdapter(getApplicationContext(), list);\n+        lv.setAdapter(cda);\n+    }\n+\n+    private class ChartDataAdapter extends ArrayAdapter<ChartData> {\n+\n+        private ColorTemplate mCt;\n+        private Typeface mTf;\n+\n+        public ChartDataAdapter(Context context, List<ChartData> objects) {\n+            super(context, 0, objects);\n+\n+            mCt = new ColorTemplate();\n+            mCt.addDataSetColors(ColorTemplate.VORDIPLOM_COLORS, getContext());\n+            mTf = Typeface.createFromAsset(getAssets(), \"OpenSans-Regular.ttf\");\n+        }\n+\n+        @Override\n+        public View getView(int position, View convertView, ViewGroup parent) {\n+\n+            ChartData c = getItem(position);\n+\n+            ViewHolder holder = null;\n+\n+            if (convertView == null) {\n+\n+                holder = new ViewHolder();\n+\n+                convertView = LayoutInflater.from(getContext()).inflate(\n+                        R.layout.list_item_barchart, null);\n+                holder.chart = (BarChart) convertView.findViewById(R.id.chart);\n+\n+                convertView.setTag(holder);\n+\n+            } else {\n+                holder = (ViewHolder) convertView.getTag();\n+            }\n+\n+            // apply styling\n+            holder.chart.setYLabelCount(5);\n+            holder.chart.setColorTemplate(mCt);\n+            holder.chart.setBarSpace(20f);\n+            holder.chart.setYLabelTypeface(mTf);\n+            holder.chart.setXLabelTypeface(mTf);\n+            holder.chart.setValueTypeface(mTf);\n+            holder.chart.setDescription(\"\");\n+            holder.chart.setDrawVerticalGrid(false);\n+            holder.chart.setDrawGridBackground(false);\n+\n+            XLabels xl = holder.chart.getXLabels();\n+            xl.setCenterXLabelText(true);\n+            xl.setPosition(XLabelPosition.BOTTOM);\n+\n+            // set data\n+            holder.chart.setData(c);\n+            \n+            // do not forget to refresh the chart\n+            holder.chart.invalidate();\n+\n+            return convertView;\n+        }\n+\n+        private class ViewHolder {\n+\n+            BarChart chart;\n+        }\n+    }\n+\n+    /**\n+     * generates a random ChartData object with just one DataSet\n+     * \n+     * @return\n+     */\n+    private ChartData generateData(int cnt) {\n+\n+        ArrayList<Entry> entries = new ArrayList<Entry>();\n+\n+        for (int i = 0; i < 12; i++) {\n+            entries.add(new Entry((int) (Math.random() * 100), i));\n+        }\n+\n+        DataSet d = new DataSet(entries, \"New DataSet \" + cnt);\n+\n+        ChartData cd = new ChartData(getMonths(), d);\n+        return cd;\n+    }\n+\n+    private ArrayList<String> getMonths() {\n+\n+        ArrayList<String> m = new ArrayList<String>();\n+        m.add(\"Jan\");\n+        m.add(\"Feb\");\n+        m.add(\"Mar\");\n+        m.add(\"Apr\");\n+        m.add(\"May\");\n+        m.add(\"Jun\");\n+        m.add(\"Jul\");\n+        m.add(\"Aug\");\n+        m.add(\"Sep\");\n+        m.add(\"Okt\");\n+        m.add(\"Nov\");\n+        m.add(\"Dec\");\n+\n+        return m;\n+    }\n+}\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java\n@@ -22,6 +22,7 @@\n import com.xxmassdeveloper.mpchartexample.BarChartActivityMultiDataset;\n import com.xxmassdeveloper.mpchartexample.DrawChartActivity;\n import com.xxmassdeveloper.mpchartexample.LineChartActivity;\n+import com.xxmassdeveloper.mpchartexample.ListViewChartActivity;\n import com.xxmassdeveloper.mpchartexample.MultiLineChartActivity;\n import com.xxmassdeveloper.mpchartexample.PieChartActivity;\n import com.xxmassdeveloper.mpchartexample.R;\n@@ -55,6 +56,9 @@ protected void onCreate(Bundle savedInstanceState) {\n         objects.add(new ContentItem(\n                 \"Charts in Fragments, awesome design.\",\n                 \"Demonstration of charts inside Fragments. In this example the focus was on the design and look and feel of the chart.\"));\n+        objects.add(new ContentItem(\n+                \"Charts inside a ListView\",\n+                \"Demonstrates the usage of different charts inside a ListView.\"));\n \n         MyAdapter adapter = new MyAdapter(this, objects);\n \n@@ -103,6 +107,10 @@ public void onItemClick(AdapterView<?> av, View v, int pos, long arg3) {\n                 i = new Intent(this, SimpleChartDemo.class);\n                 startActivity(i);\n                 break;\n+            case 8:\n+                i = new Intent(this, ListViewChartActivity.class);\n+                startActivity(i);\n+                break;\n         }\n         \n         overridePendingTransition(R.anim.move_right_in_activity, R.anim.move_left_out_activity);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -360,7 +360,7 @@ protected void calculateOffsets() {\n         // offsets for x-labels\n         if (mXLabels.getPosition() == XLabelPosition.BOTTOM) {\n \n-            xbottom = Utils.calcTextHeight(mXLabelPaint, \"Q\");\n+            xbottom = Utils.calcTextHeight(mXLabelPaint, \"Q\") * 2f;\n \n         } else if (mXLabels.getPosition() == XLabelPosition.TOP) {\n ",
    "output": "Added chart in ListView example."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -6,6 +6,7 @@\n import android.view.MenuItem;\n import android.view.WindowManager;\n import android.widget.SeekBar;\n+import android.widget.Toast;\n import android.widget.SeekBar.OnSeekBarChangeListener;\n import android.widget.TextView;\n \n@@ -185,8 +186,9 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 break;\n             }\n             case R.id.actionSave: {\n-                // mChart.saveToGallery(\"title\"+System.currentTimeMillis());\n-                mChart.saveToPath(\"title\" + System.currentTimeMillis(), \"\");\n+                if(mChart.saveToGallery(\"title\"+System.currentTimeMillis(), 50)) {\n+                    Toast.makeText(getApplicationContext(), \"Saving SUCCESSFUL!\", Toast.LENGTH_SHORT).show();\n+                } else Toast.makeText(getApplicationContext(), \"Saving FAILED!\", Toast.LENGTH_SHORT).show();\n                 break;\n             }\n         }\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java\n@@ -248,7 +248,6 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                  } else Toast.makeText(getApplicationContext(), \"Saving FAILED!\", Toast.LENGTH_SHORT).show();\n                  \n //                 mChart.saveToGallery(\"title\"+System.currentTimeMillis())\n-//                mChart.saveToPath(\"title\" + System.currentTimeMillis(), \"\");\n                 break;\n             }\n         }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -17,11 +17,8 @@\n import android.graphics.Rect;\n import android.graphics.RectF;\n import android.graphics.Typeface;\n-import android.net.Uri;\n import android.os.Environment;\n-import android.provider.MediaStore;\n import android.provider.MediaStore.Images;\n-import android.provider.MediaStore.Images.Media;\n import android.util.AttributeSet;\n import android.util.Log;\n import android.view.MotionEvent;\n@@ -38,7 +35,9 @@\n import com.github.mikephil.charting.utils.SelInfo;\n import com.github.mikephil.charting.utils.Utils;\n \n+import java.io.File;\n import java.io.FileOutputStream;\n+import java.io.IOException;\n import java.io.OutputStream;\n import java.util.ArrayList;\n import java.util.Calendar;\n@@ -1493,9 +1492,10 @@ public ArrayList<Entry> getEntriesAtIndex(int xIndex) {\n     }\n \n     /**\n-     * Returns the ChartData object the chart CURRENTLY represents. It contains\n-     * all values and information the chart displays. If filtering algorithms\n-     * have been applied, this returns the filtered state of data.\n+     * Returns the ChartData object the chart CURRENTLY represents (not\n+     * dependant on zoom level). It contains all values and information the\n+     * chart displays. If filtering algorithms have been applied, this returns\n+     * the filtered state of data.\n      * \n      * @return\n      */\n@@ -1574,37 +1574,9 @@ public void setBackgroundColor(int color) {\n     }\n \n     /**\n-     * saves the current chart state to a bitmap in the gallery NOTE: Needs\n-     * permission WRITE_EXTERNAL_STORAGE\n-     * \n-     * @param title\n-     * @return returns true on success, false on error\n-     */\n-    public boolean saveToGallery(String title) {\n-        String url = MediaStore.Images.Media.insertImage(getContext().getContentResolver(),\n-                mDrawBitmap, title,\n-                \"\");\n-\n-        return url == null ? false : true;\n-    }\n-\n-    public static Uri addImageToGallery(Context context, String filepath, String title,\n-            String description) {\n-        \n-        ContentValues values = new ContentValues();\n-        values.put(Media.TITLE, title);\n-        values.put(Media.DESCRIPTION, description);\n-        values.put(Images.Media.DATE_TAKEN, System.currentTimeMillis());\n-        values.put(Images.Media.MIME_TYPE, \"image/jpeg\");\n-        values.put(MediaStore.MediaColumns.DATA, filepath);\n-\n-        return context.getContentResolver().insert(Media.EXTERNAL_CONTENT_URI, values);\n-    }\n-\n-    /**\n-     * saves the chart with the given name to the given path on the sdcard\n+     * Saves the chart with the given name to the given path on the sdcard\n      * leaving the path empty \"\" will put the saved file directly on the SD card\n-     * chart is saved as .png example: saveToPath(\"myfilename\",\n+     * chart is saved as a PNG image, example: saveToPath(\"myfilename\",\n      * \"foldername1/foldername2\");\n      * \n      * @param title\n@@ -1634,6 +1606,66 @@ public boolean saveToPath(String title, String pathOnSD) {\n         return true;\n     }\n \n+    /**\n+     * Saves the current state of the chart to the gallery as a JPEG image. The\n+     * filename and compression can be set. 0 == maximum compression, 100 = low\n+     * compression (high quality). NOTE: Needs permission WRITE_EXTERNAL_STORAGE\n+     * \n+     * @param fileName e.g. \"my_image\"\n+     * @param quality e.g. 50, min = 0, max = 100\n+     * @return returns true if saving was successfull, false if not\n+     */\n+    public boolean saveToGallery(String fileName, int quality) {\n+\n+        // restrain quality\n+        if (quality < 0 || quality > 100)\n+            quality = 50;\n+\n+        long currentTime = System.currentTimeMillis();\n+\n+        File extBaseDir = Environment.getExternalStorageDirectory();\n+        File file = new File(extBaseDir.getAbsolutePath() + \"/DCIM\");\n+        if (!file.exists()) {\n+            if (!file.mkdirs()) {\n+                return false;\n+            }\n+        }\n+\n+        String filePath = file.getAbsolutePath() + \"/\" + fileName;\n+        FileOutputStream out = null;\n+        try {\n+            out = new FileOutputStream(filePath);\n+\n+            mDrawBitmap.compress(Bitmap.CompressFormat.JPEG, quality, out); // control\n+            // the jpeg\n+            // quality\n+\n+            out.flush();\n+            out.close();\n+\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+\n+            return false;\n+        }\n+\n+        long size = new File(filePath).length();\n+\n+        ContentValues values = new ContentValues(8);\n+\n+        values.put(Images.Media.TITLE, fileName);\n+        values.put(Images.Media.DISPLAY_NAME, fileName);\n+        values.put(Images.Media.DATE_ADDED, currentTime);\n+        values.put(Images.Media.MIME_TYPE, \"image/jpeg\");\n+        values.put(Images.Media.DESCRIPTION, \"MPAndroidChart-Library Save\");\n+        values.put(Images.Media.ORIENTATION, 0);\n+        values.put(Images.Media.DATA, filePath);\n+        values.put(Images.Media.SIZE, size);\n+\n+        return getContext().getContentResolver().insert(Images.Media.EXTERNAL_CONTENT_URI, values) == null\n+                ? false : true;\n+    }\n+\n     @Override\n     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n         super.onMeasure(widthMeasureSpec, heightMeasureSpec);",
    "output": "Improved saveToGallery(...) method."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/LineChartFrag.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/LineChartFrag.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/LineChartFrag.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/LineChartFrag.java\n@@ -52,6 +52,9 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa\n         \n         mChart.setData(getComplexity());\n         \n+//        mChart.setScaleMinima(3f, 3f);\n+//        mChart.centerViewPort(300, 0);\n+        \n         Typeface tf = Typeface.createFromAsset(getActivity().getAssets(),\"OpenSans-Light.ttf\");\n         \n         mChart.setYLabelTypeface(tf);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -303,9 +303,9 @@ protected void calculateOffsets() {\n \n         if (mLegend == null)\n             return;\n-        \n+\n         Log.i(LOG_TAG, \"Offsets calculated.\");\n-        \n+\n         // setup offsets for legend\n         if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART) {\n \n@@ -431,29 +431,29 @@ protected void calculateOffsets() {\n         mMatrixOffset.set(offset);\n     }\n \n-     /**\n+    /**\n      * Calculates the offsets that belong to the legend, this method is only\n      * relevant when drawing into the chart. It can be used to refresh the\n      * legend.\n      */\n-     public void calculateLegendOffsets() {\n-    \n-      // setup offsets for legend\n-         if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART) {\n+    public void calculateLegendOffsets() {\n \n-             mLegend.setOffsetRight(mLegend.getMaximumEntryLength(mLegendLabelPaint));\n-             mLegendLabelPaint.setTextAlign(Align.LEFT);\n+        // setup offsets for legend\n+        if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART) {\n \n-         } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n-                 || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT) {\n+            mLegend.setOffsetRight(mLegend.getMaximumEntryLength(mLegendLabelPaint));\n+            mLegendLabelPaint.setTextAlign(Align.LEFT);\n \n-             if (mXLabels.getPosition() == XLabelPosition.TOP)\n-                 mLegend.setOffsetBottom(mLegendLabelPaint.getTextSize() * 3.5f);\n-             else {\n-                 mLegend.setOffsetBottom(mLegendLabelPaint.getTextSize() * 2.5f);\n-             }\n-         }\n-     }\n+        } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n+                || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT) {\n+\n+            if (mXLabels.getPosition() == XLabelPosition.TOP)\n+                mLegend.setOffsetBottom(mLegendLabelPaint.getTextSize() * 3.5f);\n+            else {\n+                mLegend.setOffsetBottom(mLegendLabelPaint.getTextSize() * 2.5f);\n+            }\n+        }\n+    }\n \n     /**\n      * calculates the modulus for x-labels and grid\n@@ -501,14 +501,14 @@ protected void calcMinMax(boolean fixedValues) {\n \n         // additional handling for space (default 10% space), spacing only\n         // applies with non-rounded y-label\n-        float space = mDeltaY / 100f * 10f;        \n+        float space = mDeltaY / 100f * 10f;\n \n         if (mStartAtZero) {\n             mYChartMin = 0;\n         } else {\n             mYChartMin = mYChartMin - space;\n         }\n-        \n+\n         // calc delta\n         mYChartMax = mYChartMax + space;\n         mDeltaY = Math.abs(mYChartMax - mYChartMin);\n@@ -979,8 +979,8 @@ public void zoom(float scaleX, float scaleY, float x, float y) {\n      * Centers the viewport around the specified x-index and the specified\n      * y-value in the chart. Centering the viewport outside the bounds of the\n      * chart is not possible. Makes most sense in combination with the\n-     * setScaleMinima(...) method. SHOULD BE CALLED AFTER setting data for the\n-     * chart.\n+     * setScaleMinima(...) method. First set the scale minima, then center the\n+     * viewport. SHOULD BE CALLED AFTER setting data for the chart.\n      * \n      * @param xIndex the index on the x-axis to center to\n      * @param yVal the value ont he y-axis to center to\n@@ -997,6 +997,9 @@ public void run() {\n                 float indicesInView = mDeltaX / mScaleX;\n                 float valsInView = mDeltaY / mScaleY;\n \n+                // Log.i(LOG_TAG, \"indices: \" + indicesInView + \", vals: \" +\n+                // valsInView);\n+\n                 float[] pts = new float[] {\n                         xIndex - indicesInView / 2f, yVal + valsInView / 2f\n                 };\n@@ -1011,7 +1014,7 @@ public void run() {\n \n                 save.postTranslate(x, y);\n \n-                refreshTouchNoInvalidate(save);\n+                refreshTouch(save);\n \n                 // Log.i(LOG_TAG, \"ViewPort centered, xIndex: \" + xIndex +\n                 // \", yVal: \" + yVal\n@@ -1649,17 +1652,20 @@ public float getScaleX() {\n     public float getScaleY() {\n         return mScaleY;\n     }\n-    \n+\n     /**\n      * if the chart is fully zoomed out, return true\n+     * \n      * @return\n      */\n     public boolean isFullyZoomedOut() {\n-        \n-//        Log.i(LOG_TAG, \"MinScaleX: \" + mMinScaleX + \", ScaleX: \" + mScaleX);\n-        \n-        if(mScaleX <= mMinScaleX && mScaleY <= mMinScaleY) return true;\n-        else return false;\n+\n+        // Log.i(LOG_TAG, \"MinScaleX: \" + mMinScaleX + \", ScaleX: \" + mScaleX);\n+\n+        if (mScaleX <= mMinScaleX && mScaleY <= mMinScaleY)\n+            return true;\n+        else\n+            return false;\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -27,10 +27,7 @@ public class ChartData {\n \n     /** holds all the datasets (e.g. different lines) the chart represents */\n     private ArrayList<DataSet> mDataSets;\n-\n-    /** array that holds all the different labels that are in the DataSet array */\n-    private ArrayList<String> mDiffLabels;\n-\n+    \n     /**\n      * constructor for chart data\n      * \n@@ -76,7 +73,6 @@ private void init(ArrayList<String> xVals, ArrayList<DataSet> dataSets) {\n         this.mXVals = xVals;\n         this.mDataSets = dataSets;\n \n-        calcTypes();\n         calcMinMax();\n         calcYValueSum();\n \n@@ -102,31 +98,10 @@ public void notifyDataChanged() {\n      * Does all necessary calculations, if the underlying data has changed\n      */\n     private void doCalculations() {\n-        calcTypes();\n         calcMinMax();\n         calcYValueSum();\n     }\n \n-    /**\n-     * calculates all different labels that occur in the DataSets and stores\n-     * them for fast access\n-     */\n-    private void calcTypes() {\n-        mDiffLabels = new ArrayList<String>();\n-\n-        // check which dataset to use\n-        ArrayList<DataSet> dataSets = mDataSets;\n-\n-        for (int i = 0; i < dataSets.size(); i++) {\n-\n-            String label = dataSets.get(i).getLabel();\n-\n-            if (!alreadyCounted(mDiffLabels, label)) {\n-                mDiffLabels.add(label);\n-            }\n-        }\n-    }\n-\n     /**\n      * calc minimum and maximum y value over all datasets\n      */\n@@ -161,6 +136,9 @@ private void calcYValueSum() {\n     }\n \n     private boolean alreadyCounted(ArrayList<String> countedLabels, String label) {\n+        \n+        if(label == null) return true;\n+        \n         for (int i = 0; i < countedLabels.size(); i++) {\n             if (countedLabels.get(i).equals(label))\n                 return true;\n@@ -302,15 +280,6 @@ public ArrayList<DataSet> getOriginalDataSets() {\n         return mDataSets;\n     }\n \n-    /**\n-     * returns all the different DataSet labels the chartdata represents\n-     * \n-     * @return\n-     */\n-    public ArrayList<String> getLabels() {\n-        return mDiffLabels;\n-    }\n-\n     /**\n      * returns the total number of x-values this chartdata represents (the size\n      * of the xvals array)\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/DrawingContext.java b/MPChartLib/src/com/github/mikephil/charting/data/DrawingContext.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/DrawingContext.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/DrawingContext.java\n@@ -30,10 +30,7 @@ public void createNewDrawingDataSet(ChartData chartData) {\n \t\t\t// if an old one exist, finish the other one first\n \t\t\tfinishNewDrawingEntry(chartData);\n \t\t}\n-\t\t// keep type count correct\n-\t\tif (!chartData.getLabels().contains(mLastDrawnDataSetIndex)) {\n-\t\t\tchartData.getLabels().add(\"DS \" + mLastDrawnDataSetIndex);\n-\t\t}\n+\n \t\tmCurrentDrawingEntries = new ArrayList<Entry>();\n \t\tthis.mCurrentDrawingDataSet = new DataSet(mCurrentDrawingEntries, \"DS \" + mLastDrawnDataSetIndex);\n \t\tchartData.getDataSets().add(mCurrentDrawingDataSet);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java\n@@ -86,10 +86,7 @@ public static float convertPixelsToDp(float px) {\n      * @return\n      */\n     public static int calcTextWidth(Paint paint, String demoText) {\n-\n-        Rect r = new Rect();\n-        paint.getTextBounds(demoText, 0, demoText.length(), r);\n-        return r.width();\n+        return (int) paint.measureText(demoText);\n     }\n     \n     /**",
    "output": "Removed dead code, fixed centerViewPort(...) issue."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java\n@@ -128,10 +128,10 @@ protected void onCreate(Bundle savedInstanceState) {\n         setData(45, 100);\n         \n         // restrain the maximum scale-out factor\n-//        mChart.setScaleMinima(3f, 3f);\n+        mChart.setScaleMinima(3f, 3f);\n         \n         // center the view to a specific position inside the chart\n-//        mChart.centerViewPort(10, 50);\n+        mChart.centerViewPort(10, 50);\n                 \n         // get the legend (only possible after setting data)\n         Legend l = mChart.getLegend();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -1007,7 +1007,7 @@ public void run() {\n                 transformPointArray(pts);\n \n                 final float x = -pts[0] + getOffsetLeft();\n-                final float y = -pts[1] + getOffsetBottom();\n+                final float y = -pts[1] - getOffsetTop();\n \n                 save.postTranslate(x, y);\n \n@@ -1649,6 +1649,18 @@ public float getScaleX() {\n     public float getScaleY() {\n         return mScaleY;\n     }\n+    \n+    /**\n+     * if the chart is fully zoomed out, return true\n+     * @return\n+     */\n+    public boolean isFullyZoomedOut() {\n+        \n+//        Log.i(LOG_TAG, \"MinScaleX: \" + mMinScaleX + \", ScaleX: \" + mScaleX);\n+        \n+        if(mScaleX <= mMinScaleX && mScaleY <= mMinScaleY) return true;\n+        else return false;\n+    }\n \n     /**\n      * calcualtes the maximum x-scale value depending on the number of x-values,\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -407,7 +407,7 @@ protected void prepareMatrix() {\n         mMatrixOffset.reset();\n         mMatrixOffset.postTranslate(mOffsetLeft, getHeight() - mOffsetBottom);\n \n-//        Log.i(LOG_TAG, \"Matrices prepared.\");\n+        Log.i(LOG_TAG, \"Matrices prepared.\");\n     }\n \n     /**\n@@ -1594,6 +1594,8 @@ public void saveToPath(String title, String pathOnSD) {\n     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n         super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n     }\n+    \n+    private boolean mMatrixOnLayoutPrepared = false;\n \n     @Override\n     protected void onLayout(boolean changed, int left, int top, int right, int bottom) {\n@@ -1604,9 +1606,14 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto\n \n         if (this instanceof BarLineChartBase) {\n \n+            BarLineChartBase b = (BarLineChartBase) this;\n+            \n             // if y-values are not fixed\n-            if (!((BarLineChartBase) this).hasFixedYValues())\n+            if (!b.hasFixedYValues() && !mMatrixOnLayoutPrepared) {\n                 prepareMatrix();\n+                mMatrixOnLayoutPrepared = true;\n+            }\n+                \n         } else {\n             prepareMatrix();\n         }",
    "output": "Fixed issue that restrained the viewport after returning from a locked screen."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/BarChartFrag.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/BarChartFrag.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/BarChartFrag.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/BarChartFrag.java\n@@ -53,6 +53,9 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa\n         Legend l = mChart.getLegend();\n         l.setTypeface(tf);\n         \n+//        YLabels labels = mChart.getYLabels();\n+//        labels.setPosition(YLabelPosition.BOTH_SIDED);\n+        \n         // programatically add the chart\n         FrameLayout parent = (FrameLayout) v.findViewById(R.id.parentLayout);\n         parent.addView(mChart);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -326,14 +326,16 @@ public void notifyDataSetChanged() {\n     @Override\n     public void calculateOffsets() {\n \n-        if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART) {\n+        if (mDrawLegend) {\n+            if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART) {\n \n-            mOffsetRight = mLegend.getMaximumEntryLength(mLegendLabelPaint);\n-            mLegendLabelPaint.setTextAlign(Align.LEFT);\n+                mOffsetRight = mLegend.getMaximumEntryLength(mLegendLabelPaint);\n+                mLegendLabelPaint.setTextAlign(Align.LEFT);\n \n-        } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n-                || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT) {\n-            mOffsetBottom = (int) (mLegendLabelPaint.getTextSize() * 3.5f);\n+            } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n+                    || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT) {\n+                mOffsetBottom = (int) (mLegendLabelPaint.getTextSize() * 3.5f);\n+            }\n         }\n \n         if (mYLabels.getPosition() == YLabelPosition.LEFT) {\n@@ -578,7 +580,8 @@ protected void drawYLabels() {\n \n             mYLabelPaint.setTextAlign(Align.LEFT);\n             drawYLabels(getWidth() - mOffsetRight + 13, positions);\n-        } else {\n+            \n+        } else { // BOTH SIDED Y-AXIS LABELS\n \n             // draw left legend\n             mYLabelPaint.setTextAlign(Align.RIGHT);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -350,6 +350,11 @@ protected void calcMinMax(boolean fixedValues) {\n         if (!fixedValues) {\n             mYChartMin = mCurrentData.getYMin();\n             mYChartMax = mCurrentData.getYMax();\n+            \n+            if(mYChartMin == mYChartMax) {\n+                mYChartMin--;\n+                mYChartMax++;\n+            }\n         }\n \n         // calc delta\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -63,8 +63,10 @@ public class PieChart extends Chart {\n      * radius / 2\n      */\n     private float mHoleRadiusPercent = 50f;\n-    \n-    /** the radius of the transparent circle next to the chart-hole in the center */\n+\n+    /**\n+     * the radius of the transparent circle next to the chart-hole in the center\n+     */\n     private float mTransparentCircleRadius = 55f;\n \n     /** if enabled, centertext is drawn */\n@@ -189,16 +191,18 @@ public void notifyDataSetChanged() {\n     }\n \n     @Override\n-    public void calculateOffsets() {\n+    public void calculateOffsets() { \n \n-        if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART) {\n+        if (mDrawLegend) {\n+            if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART) {\n \n-            mLegendLabelPaint.setTextAlign(Align.LEFT);\n-            mOffsetTop = (int) (mLegendLabelPaint.getTextSize() * 3.5f);\n+                mLegendLabelPaint.setTextAlign(Align.LEFT);\n+                mOffsetTop = (int) (mLegendLabelPaint.getTextSize() * 3.5f);\n \n-        } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n-                || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT) {\n-            mOffsetBottom = (int) (mLegendLabelPaint.getTextSize() * 3.5f);\n+            } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n+                    || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT) {\n+                mOffsetBottom = (int) (mLegendLabelPaint.getTextSize() * 3.5f);\n+            }\n         }\n \n         prepareContentRect();\n@@ -469,9 +473,9 @@ private void drawCenterText() {\n             float totalheight = lineHeight * lines.length - linespacing * (lines.length - 1);\n \n             int cnt = lines.length;\n-            \n+\n             float y = c.y;\n-            \n+\n             for (int i = 0; i < lines.length; i++) {\n \n                 String line = lines[lines.length - i - 1];\n@@ -933,7 +937,7 @@ public void setPaint(Paint p, int which) {\n                 break;\n         }\n     }\n-    \n+\n     @Override\n     public Paint getPaint(int which) {\n         super.getPaint(which);\n@@ -944,7 +948,7 @@ public Paint getPaint(int which) {\n             case PAINT_CENTER_TEXT:\n                 return mCenterTextPaint;\n         }\n-        \n+\n         return null;\n     }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -398,7 +398,7 @@ public boolean onDoubleTap(MotionEvent e) {\n \n         mChart.zoomIn(trans.x, trans.y);\n         \n-        Log.i(\"BarlineChartTouch\", \"Zooming In, x: \" + trans.x + \", y: \" + trans.y);\n+        Log.i(\"BarlineChartTouch\", \"Double-Tap, Zooming In, x: \" + trans.x + \", y: \" + trans.y);\n         \n         return super.onDoubleTap(e);\n     }\n@@ -409,6 +409,8 @@ public void onLongPress(MotionEvent e) {\n         PointF trans = getTrans(e.getX(), e.getY());\n \n         mChart.zoomOut(trans.x, trans.y);\n+        \n+        Log.i(\"BarlineChartTouch\", \"Longpress, Zooming Out, x: \" + trans.x + \", y: \" + trans.y);\n     };\n \n     @Override",
    "output": "Merged pull request."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -326,14 +326,16 @@ public void notifyDataSetChanged() {\n     @Override\n     public void calculateOffsets() {\n \n-        if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART) {\n+        if (mDrawLegend) {\n+            if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART) {\n \n-            mOffsetRight = mLegend.getMaximumEntryLength(mLegendLabelPaint);\n-            mLegendLabelPaint.setTextAlign(Align.LEFT);\n+                mOffsetRight = mLegend.getMaximumEntryLength(mLegendLabelPaint);\n+                mLegendLabelPaint.setTextAlign(Align.LEFT);\n \n-        } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n-                || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT) {\n-            mOffsetBottom = (int) (mLegendLabelPaint.getTextSize() * 3.5f);\n+            } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n+                    || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT) {\n+                mOffsetBottom = (int) (mLegendLabelPaint.getTextSize() * 3.5f);\n+            }\n         }\n \n         mOffsetLeft = Utils.calcTextWidth(mYLabelPaint, (int) mDeltaY + \".0000\" + mUnit);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -191,13 +191,15 @@ public void notifyDataSetChanged() {\n     @Override\n     public void calculateOffsets() {\n \n-        if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART) {\n+        if (mDrawLegend) {\n+            if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART) {\n \n-            mLegendLabelPaint.setTextAlign(Align.LEFT);\n+                mLegendLabelPaint.setTextAlign(Align.LEFT);\n \n-        } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n-                || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT) {\n-            mOffsetBottom = (int) (mLegendLabelPaint.getTextSize() * 3.5f);\n+            } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n+                    || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT) {\n+                mOffsetBottom = (int) (mLegendLabelPaint.getTextSize() * 3.5f);\n+            }\n         }\n \n         prepareContentRect();\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -183,6 +183,11 @@ public void notifyDataForNewEntry(Entry entry) {\n         if (mYMax < entry.getVal()) {\n             mYMax = entry.getVal();\n         }\n+\n+        if (mYMin == mYMax) {\n+            mYMin--;\n+            mYMax++;\n+        }\n     }\n \n     public int getDataSetCount() {",
    "output": "Merge pull request #17 from CTNCardoso/master\n\nSmall adjustments."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java\n@@ -17,6 +17,8 @@\n import com.github.mikephil.charting.data.filter.Approximator;\n import com.github.mikephil.charting.data.filter.Approximator.ApproximatorType;\n import com.github.mikephil.charting.utils.ColorTemplate;\n+import com.github.mikephil.charting.utils.YLabels;\n+import com.github.mikephil.charting.utils.YLabels.YLabelPosition;\n \n import java.util.ArrayList;\n \n@@ -67,6 +69,10 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         // scaling can now only be done on x- and y-axis separately\n         mChart.setPinchZoom(false);\n+        \n+        // change the position of the y-labels\n+        YLabels labels = mChart.getYLabels();\n+        labels.setPosition(YLabelPosition.BOTH_SIDED);\n \n         mSeekBarX.setProgress(45);\n         mSeekBarY.setProgress(100);\n\ndiff --git a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/LineChartFrag.java b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/LineChartFrag.java\n--- a/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/LineChartFrag.java\n+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/LineChartFrag.java\n@@ -9,6 +9,8 @@\n import com.github.mikephil.charting.charts.LineChart;\n import com.github.mikephil.charting.utils.ColorTemplate;\n import com.github.mikephil.charting.utils.Legend;\n+import com.github.mikephil.charting.utils.YLabels;\n+import com.github.mikephil.charting.utils.YLabels.YLabelPosition;\n import com.xxmassdeveloper.mpchartexample.R;\n \n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -23,6 +23,7 @@\n import com.github.mikephil.charting.listener.BarLineChartTouchListener;\n import com.github.mikephil.charting.utils.Highlight;\n import com.github.mikephil.charting.utils.Legend.LegendPosition;\n+import com.github.mikephil.charting.utils.YLabels.YLabelPosition;\n import com.github.mikephil.charting.utils.PointD;\n import com.github.mikephil.charting.utils.SelInfo;\n import com.github.mikephil.charting.utils.Utils;\n@@ -167,7 +168,7 @@ public abstract class BarLineChartBase extends Chart {\n \n     /** flag indicating if the grid background should be drawn or not */\n     protected boolean mDrawGridBackground = true;\n-    \n+\n     /** the listener for user drawing on the chart */\n     protected OnDrawListener mDrawListener;\n \n@@ -205,7 +206,6 @@ protected void init() {\n \n         mYLabelPaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n         mYLabelPaint.setColor(Color.BLACK);\n-        mYLabelPaint.setTextAlign(Align.RIGHT);\n         mYLabelPaint.setTextSize(Utils.convertDpToPixel(10f));\n \n         mGridPaint = new Paint();\n@@ -336,7 +336,21 @@ public void calculateOffsets() {\n             mOffsetBottom = (int) (mLegendLabelPaint.getTextSize() * 3.5f);\n         }\n \n-        mOffsetLeft = Utils.calcTextWidth(mYLabelPaint, (int) mDeltaY + \".0000\" + mUnit);\n+        if (mYLabels.getPosition() == YLabelPosition.LEFT) {\n+\n+            mOffsetLeft = Utils.calcTextWidth(mYLabelPaint, (int) mDeltaY + \".0000\" + mUnit);\n+            mYLabelPaint.setTextAlign(Align.RIGHT);\n+\n+        } else if (mYLabels.getPosition() == YLabelPosition.RIGHT) {\n+\n+            mOffsetRight = Utils.calcTextWidth(mYLabelPaint, (int) mDeltaY + \".0000\" + mUnit);\n+            mYLabelPaint.setTextAlign(Align.LEFT);\n+\n+        } else if (mYLabels.getPosition() == YLabelPosition.BOTH_SIDED) {\n+\n+            mOffsetRight = Utils.calcTextWidth(mYLabelPaint, (int) mDeltaY + \".0000\" + mUnit);\n+            mOffsetLeft = Utils.calcTextWidth(mYLabelPaint, (int) mDeltaY + \".0000\" + mUnit);\n+        }\n \n         prepareContentRect();\n \n@@ -554,8 +568,37 @@ protected void drawYLabels() {\n \n         transformPointArray(positions);\n \n-        float xPos = mOffsetLeft - 10;\n+        // determine position and draw adequately\n+        if (mYLabels.getPosition() == YLabelPosition.LEFT) {\n \n+            mYLabelPaint.setTextAlign(Align.RIGHT);\n+            drawYLabels(mOffsetLeft - 13, positions);\n+\n+        } else if (mYLabels.getPosition() == YLabelPosition.RIGHT) {\n+\n+            mYLabelPaint.setTextAlign(Align.LEFT);\n+            drawYLabels(getWidth() - mOffsetRight + 13, positions);\n+        } else {\n+\n+            // draw left legend\n+            mYLabelPaint.setTextAlign(Align.RIGHT);\n+            drawYLabels(mOffsetLeft - 13, positions);\n+\n+            // draw right legend\n+            mYLabelPaint.setTextAlign(Align.LEFT);\n+            drawYLabels(getWidth() - mOffsetRight + 13, positions);\n+        }\n+    }\n+\n+    /**\n+     * draws the y-labels on the specified x-position\n+     * \n+     * @param xPos\n+     * @param positions\n+     */\n+    private void drawYLabels(float xPos, float[] positions) {\n+\n+        // draw\n         for (int i = 0; i < mYLabels.mEntryCount; i++) {\n \n             String text = Utils.formatNumber(mYLabels.mEntries[i], mYLabels.mDecimals,\n@@ -1608,6 +1651,17 @@ public void setLabelTypeface(Typeface t) {\n         setYLabelTypeface(t);\n     }\n \n+    /**\n+     * retursn the object representing all y-labels, this method can be used to\n+     * acquire the YLabels object and modify it (e.g. change the position of the\n+     * labels)\n+     * \n+     * @return\n+     */\n+    public YLabels getYLabels() {\n+        return mYLabels;\n+    }\n+\n     /**\n      * Enables data filtering for the chart data, filtering will use the user\n      * customized Approximator handed over to this method.\n@@ -1710,7 +1764,7 @@ public void setPaint(Paint p, int which) {\n                 break;\n         }\n     }\n-    \n+\n     @Override\n     public Paint getPaint(int which) {\n         super.getPaint(which);\n@@ -1727,7 +1781,7 @@ public Paint getPaint(int which) {\n             case PAINT_YLABEL:\n                 return mYLabelPaint;\n         }\n-        \n+\n         return null;\n     }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/YLabels.java b/MPChartLib/src/com/github/mikephil/charting/utils/YLabels.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/YLabels.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/YLabels.java\n@@ -2,7 +2,8 @@\n package com.github.mikephil.charting.utils;\n \n /**\n- * Class representing the y-legend and its entries.\n+ * Class representing the y-legend and its entries. Only use the setter methods\n+ * to modify it. Do not access public variables directly.\n  * \n  * @author Philipp Jahoda\n  */\n@@ -16,8 +17,28 @@ public class YLabels {\n \n     /** the number of decimal digits to use */\n     public int mDecimals;\n-    \n-    public enum YLegendPosition {\n+\n+    /** the position of the y-labels relative to the chart */\n+    private YLabelPosition mPosition = YLabelPosition.LEFT;\n+\n+    /** enum for the position of the y-labels relative to the chart */\n+    public enum YLabelPosition {\n         LEFT, RIGHT, BOTH_SIDED\n     }\n+\n+    /**\n+     * returns the position of the y-labels\n+     */\n+    public YLabelPosition getPosition() {\n+        return mPosition;\n+    }\n+\n+    /**\n+     * sets the position of the y-labels\n+     * \n+     * @param pos\n+     */\n+    public void setPosition(YLabelPosition pos) {\n+        mPosition = pos;\n+    }\n }",
    "output": "Position of the y-axis labels can now be set between LEFT, RIGHT and BOTH_SIDED."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n--- a/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java\n@@ -183,6 +183,11 @@ public void notifyDataForNewEntry(Entry entry) {\n         if (mYMax < entry.getVal()) {\n             mYMax = entry.getVal();\n         }\n+\n+        if (mYMin == mYMax) {\n+            mYMin--;\n+            mYMax++;\n+        }\n     }\n \n     public int getDataSetCount() {",
    "output": "All values ​​\"Entry.getVal ()\" equal"
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -326,14 +326,16 @@ public void notifyDataSetChanged() {\n     @Override\n     public void calculateOffsets() {\n \n-        if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART) {\n+        if (mDrawLegend) {\n+            if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART) {\n \n-            mOffsetRight = mLegend.getMaximumEntryLength(mLegendLabelPaint);\n-            mLegendLabelPaint.setTextAlign(Align.LEFT);\n+                mOffsetRight = mLegend.getMaximumEntryLength(mLegendLabelPaint);\n+                mLegendLabelPaint.setTextAlign(Align.LEFT);\n \n-        } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n-                || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT) {\n-            mOffsetBottom = (int) (mLegendLabelPaint.getTextSize() * 3.5f);\n+            } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n+                    || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT) {\n+                mOffsetBottom = (int) (mLegendLabelPaint.getTextSize() * 3.5f);\n+            }\n         }\n \n         mOffsetLeft = Utils.calcTextWidth(mYLabelPaint, (int) mDeltaY + \".0000\" + mUnit);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java\n@@ -191,13 +191,15 @@ public void notifyDataSetChanged() {\n     @Override\n     public void calculateOffsets() {\n \n-        if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART) {\n+        if (mDrawLegend) {\n+            if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART) {\n \n-            mLegendLabelPaint.setTextAlign(Align.LEFT);\n+                mLegendLabelPaint.setTextAlign(Align.LEFT);\n \n-        } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n-                || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT) {\n-            mOffsetBottom = (int) (mLegendLabelPaint.getTextSize() * 3.5f);\n+            } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n+                    || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT) {\n+                mOffsetBottom = (int) (mLegendLabelPaint.getTextSize() * 3.5f);\n+            }\n         }\n \n         prepareContentRect();",
    "output": "Removing space case \"mDrawLegend = false;\""
  },
  {
    "input": "diff --git a/MPChartExample/src/com/example/mpchartexample/simple/SimpleFragment.java b/MPChartExample/src/com/example/mpchartexample/simple/SimpleFragment.java\n--- a/MPChartExample/src/com/example/mpchartexample/simple/SimpleFragment.java\n+++ b/MPChartExample/src/com/example/mpchartexample/simple/SimpleFragment.java\n@@ -59,7 +59,7 @@ protected ChartData generateLessData() {\n             entries1.add(new Entry((float) (Math.random() * 100), i));\n         }\n         \n-        DataSet ds1 = new DataSet(entries1, \"Quarterly revenues\");\n+        DataSet ds1 = new DataSet(entries1, \"Quarterly Revenues 2014\");\n         \n         ChartData d = new ChartData(xVals, ds1);\n         return d;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -249,7 +249,6 @@ protected void init() {\n \n         mLegendLabelPaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n         mLegendLabelPaint.setTextSize(Utils.convertDpToPixel(9f));\n-\n     }\n \n     @Override\n@@ -358,9 +357,11 @@ public void calculateOffsets() {\n             if (mLegend.getPosition() == LegendPosition.LEFT_OF_CHART) {\n \n                 mOffsetRight = mLegend.getMaximumEntryLength(mLegendLabelPaint);\n+                mLegendLabelPaint.setTextAlign(Align.LEFT);\n \n-            } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART) {\n-                mOffsetBottom = (int) mLegendLabelPaint.getTextSize() * 3;\n+            } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT\n+                    || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT) {\n+                mOffsetBottom = (int) (mLegendLabelPaint.getTextSize() * 3.5f);\n             }\n         }\n \n@@ -455,18 +456,18 @@ public void prepareLegend() {\n             ArrayList<Integer> clrs = mCt.getDataSetColors(i % mCt.getColors().size());\n \n             for (int j = 0; j < clrs.size(); j++) {\n-                \n+\n                 // if multiple colors are set for a DataSet, group them\n-                if(j < clrs.size()-1) {\n-                    \n+                if (j < clrs.size() - 1) {\n+\n                     labels.add(null);\n                 } else { // add label to the last entry\n-                    \n+\n                     String label = mOriginalData.getDataSetByIndex(i).getLabel();\n                     labels.add(label);\n                 }\n-                \n-                colors.add(clrs.get(j));               \n+\n+                colors.add(clrs.get(j));\n             }\n         }\n \n@@ -511,7 +512,7 @@ protected void drawLegend() {\n         float posX, posY;\n \n         switch (mLegend.getPosition()) {\n-            case BELOW_CHART:\n+            case BELOW_CHART_LEFT:\n \n                 posX = mOffsetLeft;\n                 posY = getHeight() - mOffsetBottom + textSize * 2;\n@@ -523,13 +524,34 @@ protected void drawLegend() {\n                     // make a step to the left\n                     posX += formToTextSpace;\n \n-                    if(labels[i] != null) {\n-                        \n+                    if (labels[i] != null) {\n+\n                         mLegend.drawLabel(mDrawCanvas, posX, posY + textDrop, mLegendLabelPaint, i);\n                         posX += Utils.calcTextWidth(mLegendLabelPaint, labels[i]) + entrySpace;\n                     }\n                 }\n \n+                break;\n+            case BELOW_CHART_RIGHT:\n+\n+                posX = getWidth() - mOffsetRight;\n+                posY = getHeight() - mOffsetBottom + textSize * 2;\n+\n+                for (int i = labels.length - 1; i >= 0; i--) {\n+                    \n+                    if (labels[i] != null) {\n+\n+                        posX -= Utils.calcTextWidth(mLegendLabelPaint, labels[i]);\n+                        mLegend.drawLabel(mDrawCanvas, posX, posY + textDrop, mLegendLabelPaint, i);\n+                        posX -= formToTextSpace;\n+                    }\n+\n+                    mLegend.drawForm(mDrawCanvas, posX, posY, mLegendFormPaint, i);\n+                    \n+                    // make a step to the left\n+                    posX -= entrySpace;\n+                }\n+\n                 break;\n             case LEFT_OF_CHART:\n \n@@ -541,14 +563,14 @@ protected void drawLegend() {\n                 for (int i = 0; i < labels.length; i++) {\n \n                     mLegend.drawForm(mDrawCanvas, posX + stack, posY, mLegendFormPaint, i);\n-                    \n-                    if(labels[i] != null) {\n-                        \n-                        if(!wasStacked) {\n+\n+                    if (labels[i] != null) {\n+\n+                        if (!wasStacked) {\n                             mLegend.drawLabel(mDrawCanvas, posX + formToTextSpace, posY + textDrop,\n                                     mLegendLabelPaint, i);\n                         } else {\n-                         \n+\n                             mLegend.drawLabel(mDrawCanvas, posX, posY + textDrop + entrySpace,\n                                     mLegendLabelPaint, i);\n                             posY += entrySpace;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java b/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/Legend.java\n@@ -15,7 +15,7 @@\n public class Legend {\n \n     public enum LegendPosition {\n-        LEFT_OF_CHART, BELOW_CHART\n+        LEFT_OF_CHART, BELOW_CHART_LEFT, BELOW_CHART_RIGHT\n     }\n \n     public enum LegendForm {\n@@ -29,7 +29,7 @@ public enum LegendForm {\n     private String[] mLegendLabels;\n \n     /** the position relative to the chart the legend is drawn on */\n-    private LegendPosition mPosition = LegendPosition.BELOW_CHART;\n+    private LegendPosition mPosition = LegendPosition.BELOW_CHART_LEFT;\n \n     /** the shape/form the legend colors are drawn in */\n     private LegendForm mShape = LegendForm.SQUARE;",
    "output": "Improved legend, now position below-chart-right possible."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java\n@@ -1,8 +1,6 @@\n \n package com.example.mpchartexample;\n \n-import java.util.ArrayList;\n-\n import android.app.Activity;\n import android.os.Bundle;\n import android.view.Menu;\n@@ -16,9 +14,10 @@\n import com.github.mikephil.charting.data.ChartData;\n import com.github.mikephil.charting.data.DataSet;\n import com.github.mikephil.charting.data.Entry;\n-import com.github.mikephil.charting.data.filter.Approximator.ApproximatorType;\n import com.github.mikephil.charting.utils.ColorTemplate;\n \n+import java.util.ArrayList;\n+\n public class BarChartActivity extends Activity implements OnSeekBarChangeListener {\n \n     private BarChart mChart;\n\ndiff --git a/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java\n--- a/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java\n+++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java\n@@ -60,8 +60,8 @@ protected void onCreate(Bundle savedInstanceState) {\n         // disable the drawing of values into the chart\n         mChart.setDrawYValues(false);\n \n-        mChart.setLineWidth(5f);\n-        mChart.setCircleSize(5f);\n+        mChart.setLineWidth(4f);\n+        mChart.setCircleSize(4f);\n \n         // set the number of y-legend entries the chart should have\n         mChart.setYLegendCount(6);\n@@ -77,7 +77,7 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         // if disabled, scaling can be done on x- and y-axis separately\n         mChart.setPinchZoom(true);\n-\n+        \n         // create a custom MarkerView (extend MarkerView) and specify the layout\n         // to use for it\n         MyMarkerView mv = new MyMarkerView(this, R.layout.custom_marker_view);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -9,6 +9,7 @@\n import android.graphics.Paint.Align;\n import android.graphics.Paint.Style;\n import android.graphics.Path;\n+import android.graphics.PointF;\n import android.graphics.Rect;\n import android.graphics.Typeface;\n import android.util.AttributeSet;\n@@ -222,13 +223,13 @@ protected void onDraw(Canvas canvas) {\n \n         long starttime = System.currentTimeMillis();\n \n-//        if (mFilterData)\n-//            mData = mZoomHandler.getFiltered(mData,\n-//                    mScaleX, mScaleY);\n-//\n-//        Log.i(LOG_TAG, \"FilterTime: \" + (System.currentTimeMillis() -\n-//                starttime) + \" ms\");\n-//        starttime = System.currentTimeMillis();\n+        // if (mFilterData)\n+        // mData = mZoomHandler.getFiltered(mData,\n+        // mScaleX, mScaleY);\n+        //\n+        // Log.i(LOG_TAG, \"FilterTime: \" + (System.currentTimeMillis() -\n+        // starttime) + \" ms\");\n+        // starttime = System.currentTimeMillis();\n \n         if (mAdjustXLegend)\n             calcModulus();\n@@ -258,10 +259,10 @@ protected void onDraw(Canvas canvas) {\n \n         drawYLegend();\n \n-        drawMarkers();\n-\n         drawValues();\n \n+        drawMarkers();\n+\n         drawDescription();\n \n         canvas.drawBitmap(mDrawBitmap, 0, 0, mDrawPaint);\n@@ -832,9 +833,10 @@ public OnDrawListener getDrawListener() {\n     }\n \n     /**\n-     * Sets the minimum scale values for both axes. Scale 0.5f means 0.5x zoom\n-     * (zoomed out by factor 2), scale 0.1f means maximum zoomed out by factor\n-     * 10, scale 2f means the user cannot zoom out further than 2x zoom, ...\n+     * Sets the minimum scale values for both axes. This limits the extent to\n+     * which the user can zoom-out. Scale 0.5f means 0.5x zoom (zoomed out by\n+     * factor 2), scale 0.1f means maximum zoomed out by factor 10, scale 2f\n+     * means the user cannot zoom out further than 2x zoom, ...\n      * \n      * @param scaleXmin\n      * @param scaleYmin\n@@ -843,6 +845,8 @@ public void setScaleMinima(float scaleXmin, float scaleYmin) {\n \n         mMinScaleX = scaleXmin;\n         mMinScaleY = scaleYmin;\n+\n+        zoom(mMinScaleX, mMinScaleY, 0f, 0f);\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1,6 +1,7 @@\n \n package com.github.mikephil.charting.charts;\n \n+import android.annotation.SuppressLint;\n import android.content.Context;\n import android.graphics.Bitmap;\n import android.graphics.Bitmap.CompressFormat;\n@@ -10,11 +11,15 @@\n import android.graphics.Paint;\n import android.graphics.Paint.Align;\n import android.graphics.Paint.Style;\n+import android.graphics.PorterDuff.Mode;\n import android.graphics.Path;\n import android.graphics.PointF;\n+import android.graphics.PorterDuff;\n+import android.graphics.PorterDuffXfermode;\n import android.graphics.Rect;\n import android.graphics.RectF;\n import android.graphics.Typeface;\n+import android.graphics.drawable.ColorDrawable;\n import android.os.Environment;\n import android.provider.MediaStore;\n import android.util.AttributeSet;\n@@ -184,9 +189,7 @@ protected void init() {\n \n         // initialize the utils\n         Utils.init(getContext().getResources());\n-\n-        setBackgroundColor(Color.WHITE);\n-\n+        \n         // do screen density conversions\n         mOffsetBottom = (int) Utils.convertDpToPixel(mOffsetBottom);\n         mOffsetLeft = (int) Utils.convertDpToPixel(mOffsetLeft);\n@@ -328,6 +331,7 @@ protected void calcMinMax(boolean fixedValues) {\n      */\n     private boolean mContentRectSetup = false;\n \n+    @SuppressLint(\"NewApi\")\n     @Override\n     protected void onDraw(Canvas canvas) {\n         super.onDraw(canvas);\n@@ -675,15 +679,19 @@ protected void drawMarkers() {\n     private void drawMarkerView(int xIndex, int dataSetIndex) {\n \n         float value = getYValueByDataSetIndex(xIndex, dataSetIndex);\n+        float xPos = (float) xIndex;\n         \n+        // make sure the marker is in the center of the bars in BarChart\n+        if(this instanceof BarChart) xPos += 0.5f;\n+               \n         // position of the marker depends on selected value index and value\n         float[] pts = new float[] {\n-                xIndex, value\n+                xPos, value\n         };\n         transformPointArray(pts);\n \n-        float posX = pts[0] - mMarkerView.getWidth() / 2f;\n-        float posY = pts[1] - mMarkerView.getHeight();\n+        float posX = pts[0];\n+        float posY = pts[1];\n \n         // callbacks to update the content\n         mMarkerView.refreshContent(xIndex, value, dataSetIndex);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/utils/MarkerView.java b/MPChartLib/src/com/github/mikephil/charting/utils/MarkerView.java\n--- a/MPChartLib/src/com/github/mikephil/charting/utils/MarkerView.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/utils/MarkerView.java\n@@ -3,6 +3,7 @@\n \n import android.content.Context;\n import android.graphics.Canvas;\n+import android.view.LayoutInflater;\n import android.view.View;\n import android.widget.RelativeLayout;\n \n@@ -38,13 +39,14 @@ public MarkerView(Context context, int layoutResource) {\n      */\n     private void setupLayoutResource(int layoutResource) {\n \n-        View.inflate(getContext(), layoutResource, this);\n+        View inflated = LayoutInflater.from(getContext()).inflate(layoutResource, this);\n \n-        measure(MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED),\n+        inflated.setLayoutParams(new LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT));\n+        inflated.measure(MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED),\n                 MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED));\n \n         // measure(getWidth(), getHeight());\n-        layout(0, 0, getWidth(), getHeight());\n+        inflated.layout(0, 0, inflated.getMeasuredWidth(), inflated.getMeasuredHeight());\n     }\n \n     /**",
    "output": "Fixed severe MarkerView bug. Setting scale minima now working instantly."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/interfaces/OnDrawLineChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/interfaces/OnDrawLineChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/interfaces/OnDrawLineChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/OnDrawLineChartTouchListener.java\n@@ -1,11 +1,11 @@\n-package com.github.mikephil.charting.listener;\n+package com.github.mikephil.charting.interfaces;\n \n import android.view.GestureDetector.SimpleOnGestureListener;\n import android.view.MotionEvent;\n import android.view.View;\n import android.view.View.OnTouchListener;\n \n-public class DrawLineChartTouchListener extends SimpleOnGestureListener implements OnTouchListener {\n+public class OnDrawLineChartTouchListener extends SimpleOnGestureListener implements OnTouchListener {\n \n \t@Override\n \tpublic boolean onTouch(View v, MotionEvent event) {",
    "output": "changed incorrect naming of listener interface"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/example/mpchartexample/DrawChartActivity.java b/MPChartExample/src/com/example/mpchartexample/DrawChartActivity.java\n--- a/MPChartExample/src/com/example/mpchartexample/DrawChartActivity.java\n+++ b/MPChartExample/src/com/example/mpchartexample/DrawChartActivity.java\n@@ -21,6 +21,7 @@\n import com.github.mikephil.charting.interfaces.OnDrawListener;\n import com.github.mikephil.charting.utils.ColorTemplate;\n import com.github.mikephil.charting.utils.Highlight;\n+import com.github.mikephil.charting.utils.Utils;\n \n public class DrawChartActivity extends Activity implements OnChartValueSelectedListener, OnDrawListener {\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -1,11 +1,5 @@\n package com.github.mikephil.charting.charts;\n \n-import java.io.FileOutputStream;\n-import java.io.OutputStream;\n-import java.util.ArrayList;\n-import java.util.Calendar;\n-import java.util.Locale;\n-\n import android.content.Context;\n import android.graphics.Bitmap;\n import android.graphics.Bitmap.CompressFormat;\n@@ -37,6 +31,12 @@\n import com.github.mikephil.charting.utils.SelInfo;\n import com.github.mikephil.charting.utils.Utils;\n \n+import java.io.FileOutputStream;\n+import java.io.OutputStream;\n+import java.util.ArrayList;\n+import java.util.Calendar;\n+import java.util.Locale;\n+\n /**\n  * Baseclass of all Chart-Views.\n  * \n@@ -807,15 +807,6 @@ public PointF getCenter() {\n \t\treturn new PointF(getWidth() / 2, getHeight() / 2);\n \t}\n \n-\t/**\n-\t * returns the left offset of the chart in pixels\n-\t * \n-\t * @return\n-\t */\n-\tpublic float getOffsetLeft() {\n-\t\treturn mOffsetLeft;\n-\t}\n-\n \t/**\n \t * sets the size of the description text in pixels, min 7f, max 14f\n \t * \n@@ -865,6 +856,22 @@ public void setOffsets(int left, int top, int right, int bottom) {\n \t\tmOffsetRight = (int) Utils.convertDpToPixel(right);\n \t\tmOffsetTop = (int) Utils.convertDpToPixel(top);\n \t}\n+\t\n+\tpublic int getOffsetLeft() {\n+        return mOffsetLeft;\n+    }\n+\t\n+\tpublic int getOffsetBottom() {\n+        return mOffsetBottom;\n+    }\n+\t\n+\tpublic int getOffsetRight() {\n+        return mOffsetRight;\n+    }\n+\t\n+\tpublic int getOffsetTop() {\n+        return mOffsetTop;\n+    }\n \n \t/**\n \t * set this to false to disable gestures on the chart, default: true\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -331,6 +331,20 @@ private static float getYDist(MotionEvent e) {\n \t\treturn y;\n \t}\n \n+\t/**\n+\t * returns the correct translation depending on the provided x and y touch points\n+\t * \n+\t * @param e\n+\t * @return\n+\t */\n+\tprivate PointF getTrans(float x, float y) {\n+\n+\t\tfloat xTrans = x - mChart.getOffsetLeft();\n+\t\tfloat yTrans = -(mChart.getHeight() - y - mChart.getOffsetBottom());\n+\n+\t\treturn new PointF(xTrans, yTrans);\n+\t}\n+\n \t/**\n \t * returns the matrix object the listener holds\n \t * \n@@ -351,11 +365,25 @@ public boolean onSingleTapConfirmed(MotionEvent e) {\n \t}\n \n \t@Override\n-\tpublic void onLongPress(MotionEvent arg0) {\n-\t\tif (mTouchMode == NONE) {\n-\t\t\tmTouchMode = LONGPRESS;\n-\t\t\t// ctx.showValue(arg0, matrix);\n-\t\t}\n+\tpublic boolean onDoubleTap(MotionEvent e) {\n+\n+\t\tPointF trans = getTrans(e.getX(), e.getY());\n+\n+\t\t// double tap --> zoom in\n+\t\tmMatrix.postScale(1.4f, 1.4f, trans.x, trans.y);\n+\n+\t\tmChart.refreshTouch(mMatrix);\n+\t\treturn super.onDoubleTap(e);\n+\t}\n+\n+\t@Override\n+\tpublic void onLongPress(MotionEvent e) {\n+\n+\t\tPointF trans = getTrans(e.getX(), e.getY());\n+\n+\t\t// zoom out\n+\t\tmMatrix.postScale(0.7f, 0.7f, trans.x, trans.y);\n+\t\tmChart.refreshTouch(mMatrix);\n \t};\n \n \t@Override",
    "output": "merge conflict resolved"
  },
  {
    "input": "diff --git a/MPChartExample/src/com/example/mpchartexample/ScatterChartActivity.java b/MPChartExample/src/com/example/mpchartexample/ScatterChartActivity.java\n--- a/MPChartExample/src/com/example/mpchartexample/ScatterChartActivity.java\n+++ b/MPChartExample/src/com/example/mpchartexample/ScatterChartActivity.java\n@@ -12,6 +12,7 @@\n import android.widget.TextView;\n \n import com.github.mikephil.charting.charts.ScatterChart;\n+import com.github.mikephil.charting.charts.ScatterChart.ScatterShape;\n import com.github.mikephil.charting.data.ChartData;\n import com.github.mikephil.charting.data.DataSet;\n import com.github.mikephil.charting.data.Entry;\n@@ -50,10 +51,13 @@ protected void onCreate(Bundle savedInstanceState) {\n         ct.addColorsForDataSets(new int[] {\n                 R.color.colorful_1, R.color.colorful_2, R.color.colorful_3\n         }, this);\n-\n+        \n         mChart = (ScatterChart) findViewById(R.id.chart1);\n         mChart.setOnChartValueSelectedListener(this);\n         mChart.setColorTemplate(ct);\n+        \n+        // one shape per dataset\n+        mChart.setScatterShapes(new ScatterShape[] { ScatterShape.SQUARE, ScatterShape.TRIANGLE, ScatterShape.CIRCLE });\n \n         // mChart.setDrawFilled(true);\n         // mChart.setRoundedYLegend(false);\n@@ -62,6 +66,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart.setYLegendCount(6);\n         mChart.setTouchEnabled(true);\n         mChart.setHighlightEnabled(true);\n+        mChart.setDrawYValues(false);\n \n         // highlight index 2 and 6 in dataset 0\n         // mChart.highlightValues(new Highlight[] {new Highlight(2, 0), new\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java\n@@ -10,6 +10,11 @@\n \n import java.util.ArrayList;\n \n+/**\n+ * The ScatterChart.\n+ * \n+ * @author Philipp Jahoda\n+ */\n public class ScatterChart extends BarLineChartBase {\n \n     /** enum that defines the shape that is drawn where the values are */\n@@ -18,13 +23,18 @@ public enum ScatterShape {\n     }\n \n     /**\n-     * custom path object the user can provide that is drawn where the values\n-     * are at\n+     * Custom path object the user can provide that is drawn where the values\n+     * are at. This is used when ScatterShape.CUSTOM is set for a DataSet.\n      */\n     private Path mCustomScatterPath = null;\n \n-    /** the shape that is drawn onto the chart where the values are at */\n-    private ScatterShape mScatterShape = ScatterShape.SQUARE;\n+    /**\n+     * array that holds all the scattershapes that this chart uses, each shape\n+     * represents one dataset in the chart\n+     */\n+    private ScatterShape[] mScatterShapes = new ScatterShape[] {\n+            ScatterShape.SQUARE, ScatterShape.TRIANGLE\n+    };\n \n     /** the size the scattershape will have, in screen pixels */\n     private float mShapeSize = 12f;\n@@ -56,6 +66,8 @@ protected void drawData() {\n             // is out of bounds, reuse DataSet colors.\n             ArrayList<Integer> colors = mCt.getDataSetColors(i % mCt.getColors().size());\n \n+            ScatterShape shape = mScatterShapes[i % mScatterShapes.length];\n+\n             for (int j = 0; j < pos.length; j += 2) {\n \n                 // Set the color for the currently drawn value. If the index is\n@@ -64,7 +76,7 @@ protected void drawData() {\n \n                 if (isOffContentRight(pos[j]))\n                     break;\n-                \n+\n                 float shapeHalf = mShapeSize / 2f;\n \n                 // make sure the lines don't do shitty things outside bounds\n@@ -73,24 +85,26 @@ && isOffContentTop(pos[j + 1])\n                         && isOffContentBottom(pos[j + 1]))\n                     continue;\n \n-                if (mScatterShape == ScatterShape.SQUARE) {\n+                if (shape == ScatterShape.SQUARE) {\n \n-                    mDrawCanvas.drawRect(pos[j] - shapeHalf, pos[j + 1] - shapeHalf, pos[j] + shapeHalf, pos[j + 1]\n+                    mDrawCanvas.drawRect(pos[j] - shapeHalf, pos[j + 1] - shapeHalf, pos[j]\n+                            + shapeHalf, pos[j + 1]\n                             + shapeHalf, mRenderPaint);\n \n-                } else if (mScatterShape == ScatterShape.CIRCLE) {\n+                } else if (shape == ScatterShape.CIRCLE) {\n \n                     mDrawCanvas.drawCircle(pos[j], pos[j + 1], mShapeSize / 2f, mRenderPaint);\n \n-                } else if (mScatterShape == ScatterShape.CROSS) {\n-                    \n+                } else if (shape == ScatterShape.CROSS) {\n+\n                     mDrawCanvas.drawLine(pos[j] - shapeHalf, pos[j + 1], pos[j] + shapeHalf,\n                             pos[j + 1], mRenderPaint);\n                     mDrawCanvas.drawLine(pos[j], pos[j + 1] - shapeHalf, pos[j], pos[j + 1]\n                             + shapeHalf, mRenderPaint);\n \n-                } else if (mScatterShape == ScatterShape.TRIANGLE) {\n+                } else if (shape == ScatterShape.TRIANGLE) {\n \n+                    // create a triangle path\n                     Path tri = new Path();\n                     tri.moveTo(pos[j], pos[j + 1] - shapeHalf);\n                     tri.lineTo(pos[j] + shapeHalf, pos[j + 1] + shapeHalf);\n@@ -99,7 +113,7 @@ && isOffContentBottom(pos[j + 1]))\n \n                     mDrawCanvas.drawPath(tri, mRenderPaint);\n \n-                } else if (mScatterShape == ScatterShape.CUSTOM) {\n+                } else if (shape == ScatterShape.CUSTOM) {\n \n                     if (mCustomScatterPath == null)\n                         return;\n@@ -108,7 +122,6 @@ && isOffContentBottom(pos[j + 1]))\n                     transformPath(mCustomScatterPath);\n                     mDrawCanvas.drawPath(mCustomScatterPath, mRenderPaint);\n                 }\n-\n             }\n         }\n     }\n@@ -180,13 +193,12 @@ protected void drawHighlights() {\n \n     @Override\n     protected void drawAdditional() {\n-        // TODO Auto-generated method stub\n \n     }\n \n     /**\n      * Sets the size the drawn scattershape will have. This only applies for non\n-     * cusom shapes. Default 12f\n+     * custom shapes. Default 12f\n      * \n      * @param size\n      */\n@@ -204,28 +216,31 @@ public float getScatterShapeSize() {\n     }\n \n     /**\n-     * Set the shape that is drawn on the position where the values are at. If\n-     * \"CUSTOM\" is chosen, you need to call setCustomScatterShape(...) and\n-     * provide a path object that is drawn.\n+     * Sets the shapes that are drawn on the position where the values are at.\n+     * One shape per DataSet. If \"CUSTOM\" is chosen for a DataSet, you need to\n+     * call setCustomScatterShape(...) and provide a path object that is drawn\n+     * as the custom scattershape. If more DataSets are drawn than ScatterShapes\n+     * exist, shapes are reused.\n      * \n-     * @param shape\n+     * @param shapes\n      */\n-    public void setScatterShape(ScatterShape shape) {\n-        mScatterShape = shape;\n+    public void setScatterShapes(ScatterShape[] shapes) {\n+        mScatterShapes = shapes;\n     }\n \n     /**\n-     * returns the currently set scatter shape\n+     * returns all the different scattershapes the chart uses\n      * \n      * @return\n      */\n-    public ScatterShape getScatterShape() {\n-        return mScatterShape;\n+    public ScatterShape[] getScatterShapes() {\n+        return mScatterShapes;\n     }\n \n     /**\n      * Sets a path object as the shape to be drawn where the values are at. Do\n-     * not forget to call setScatterShape(ScatterShape.CUSTOM).\n+     * not forget to call setScatterShapes(...) and set the shape for one\n+     * DataSet to ScatterShape.CUSTOM.\n      * \n      * @param shape\n      */",
    "output": "Improved the ScatterChart. Now supporting different shapes for different DataSets."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java\n@@ -126,6 +126,11 @@ protected void calculate3DColors() {\n \t@Override\n \tprotected void calcMinMax(boolean fixedValues) {\n \t\tsuper.calcMinMax(fixedValues);\n+\t\t\n+\t\tif(!mStartAtZero && getYMin() >= 0f) {\n+\t\t    mYChartMin = getYMin();\n+\t\t    mDeltaY = Math.abs(mYChartMax - mYChartMin);\n+\t\t}\n \n \t\t// increase deltax by 1 because the bars have a width of 1\n \t\tmDeltaX++;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -301,22 +301,18 @@ protected void calcFormats() {\n \tprotected void calcMinMax(boolean fixedValues) {\n \t\tsuper.calcMinMax(fixedValues); // calc min and max in the super class\n \n-\t\t// additional handling for space (default 10% space)\n-\n-\t\tfloat spaceTop = (mData.getYMax() - mYChartMin) / 100f * 10f;\n+\t    // additional handling for space (default 10% space), spacing only applies with non-rounded y-legend\n+\t\tfloat space = mDeltaY / 100f * 10f;\n \n \t\tif (mStartAtZero) {\n \t\t\tmYChartMin = 0;\n \t\t} else {\n-\t\t\tfloat spaceBottom = (mData.getYMax() - mYChartMin) / 100f * 10f;\n-\t\t\tmYChartMin = mYChartMin - spaceBottom;\n+\t\t\tmYChartMin = mYChartMin - space;\n \t\t}\n \n \t\t// calc delta\n-\t\tmDeltaY = (mData.getYMax() + spaceTop) - mYChartMin;\n-\t\tmYChartMax = mYChartMin + mDeltaY;\n-\n-\t\tLog.i(LOG_TAG, \"DeltaX: \" + mDeltaX + \", DeltaY: \" + mDeltaY);\n+\t\tmYChartMax = mYChartMax + space;\n+\t\tmDeltaY = Math.abs(mYChartMax - mYChartMin);\n \t}\n \n \t/**\n@@ -378,29 +374,39 @@ protected void prepareYLegend() {\n \t\t\t}\n \n \t\t\tfloat step = (float) (multi * tenPowExp);\n+\t\t\tfloat min = mYChartMin;\n \n \t\t\tfloat val = 0;\n \n-\t\t\tif (step >= 1f)\n-\t\t\t\tval = (int) (mYChartMin / step) * step;\n-\t\t\telse {\n+\t\t\tif (step >= 1f) {\n+\t\t\t\t\n+\t\t\t    val = (int) (mYChartMin / step) - step;\n+\t\t\t    mYChartMin = val;\n+\t\t\t} else {\n \t\t\t\tval = mYChartMin;\n \t\t\t}\n+\t\t\t\n+\t\t\tif(mStartAtZero) {\n+\t\t\t    val = 0;\t\t\n+\t\t\t    mYChartMin = 0;\n+\t\t\t} else {\n+\t\t\t \n+\t            if(getYMin() >= 0 && this instanceof BarChart) {\n+\t                val = 0;       \n+\t                mYChartMin = 0;\n+\t            }\n+\t\t\t}\n \n \t\t\t// float val = mYMin % step * (int) (mYMin / step);\n \n \t\t\t// create the y-legend values in the calculated step size\n-\t\t\twhile (val <= mDeltaY + step + mYChartMin) {\n+\t\t\twhile (val <= mDeltaY + step + min) {\n \t\t\t\tyLegend.add(val);\n \t\t\t\tval = val + step;\n \t\t\t}\n \n-\t\t\tif (step >= 1f)\n-\t\t\t\tmYChartMin = (int) (mYChartMin / step) * step;\n-\n \t\t\t// set the new delta adequate to the last y-legend value\n-\t\t\tmDeltaY = val - step - mYChartMin;\n-\t\t\tmYChartMax = yLegend.get(yLegend.size() - 1);\n+\t\t\tmDeltaY = val - step - mYChartMin;\t\t\t\n \n \t\t} else {\n \n@@ -414,8 +420,15 @@ protected void prepareYLegend() {\n \n \t\t\tyLegend.add(mDeltaY + mYChartMin);\n \t\t}\n+\t\t\n+\t\tmYChartMax = yLegend.get(yLegend.size() - 1);\n+\t\t\n \t\t// convert the list to an array\n \t\tmYLegend = yLegend.toArray(new Float[0]);\n+\t\t\n+        Log.i(LOG_TAG, \"DeltaX: \" + mDeltaX + \", DeltaY: \" + mDeltaY);\n+        Log.i(LOG_TAG, \"mYCMax: \" + mYChartMax + \", mYCMin: \" + mYChartMin);\n+        Log.i(LOG_TAG, \"yMax: \" + getYMax() + \", yMin: \" + getYMin());\n \t}\n \n \t/**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -271,11 +271,11 @@ protected void calcMinMax(boolean fixedValues) {\n \t\t// only calculate values if not fixed values\n \t\tif (!fixedValues) {\n \t\t\tmYChartMin = mData.getYMin();\n-\t\t\tmYChartMax = mYChartMin + mData.getYMax();\n+\t\t\tmYChartMax = mData.getYMax();\n \t\t}\n \n \t\t// calc delta\n-\t\tmDeltaY = mData.getYMax() - mYChartMin;\n+\t\tmDeltaY = Math.abs(mData.getYMax() - mData.getYMin());\n \t\tmDeltaX = mData.getXVals().size() - 1;\n \t}\n ",
    "output": "Fixed a nasty bug concerning negative values in line and barchart."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -269,7 +269,7 @@ public void setData(ArrayList<String> xVals, ArrayList<Float> yVals) {\n \t */\n \tprotected void calcMinMax(boolean fixedValues) {\n \t\t// only calculate values if not fixed values\n-\t\tif (fixedValues) {\n+\t\tif (!fixedValues) {\n \t\t\tmYChartMin = mData.getYMin();\n \t\t\tmYChartMax = mYChartMin + mData.getYMax();\n \t\t}",
    "output": "Fixed a bug that caused the miscalculation of yChartMin."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java\n--- a/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java\n+++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java\n@@ -179,7 +179,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n \n \t\tfor (int i = 0; i < mSeekBarX.getProgress(); i++) {\n \t\t\tfloat mult = (mSeekBarY.getProgress() + 1);\n-\t\t\tfloat val = (float) (Math.random() * mult * 0.1) + 3;// + (float)\n+\t\t\tfloat val = (float) (Math.random() * mult * 0.1) +3;// + (float)\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// ((mult *\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// 0.1) / 10);\n \t\t\tyVals.add(new Entry(val, i));\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java\n@@ -328,7 +328,7 @@ protected void prepareMatrix() {\n \t\tmMatrixValueToPx.postScale(scaleX, -scaleY);\n \t\tmMatrixOffset = new Matrix();\n \t\tmMatrixOffset.postTranslate(mOffsetLeft, getHeight() - mOffsetBottom);\n-\t\t// mXLegendRect = new Rect(mOffsetLeft-20, 0, getWidth() - mOffsetRight\n+\t\t// mXLegendRect = new Rect(mOffsetLeft-20, 0, getWidth() - mOffsetRight \n \t\t// + 20, mOffsetTop);\n \n \t\t// calcModulus();\n@@ -574,7 +574,8 @@ protected void limitTransAndScale(Matrix matrix) {\n \t\tfloat curTransY = vals[Matrix.MTRANS_Y];\n \t\tfloat curScaleY = vals[Matrix.MSCALE_Y];\n \t\t\n-\t\tLog.i(LOG_TAG, \"curTransX: \" + curTransX + \", curTransY: \" + curTransY);\n+\t\tLog.i(LOG_TAG, \"curTransX: \" + curTransX + \", curScaleX: \" + curScaleX);\n+\t\tLog.i(LOG_TAG, \"curTransY: \" + curTransY + \", curScaleY: \" + curScaleY);\n \n \t\t// min scale-x is 1f\n \t\tmScaleX = Math.max(1f, Math.min(getMaxScaleX(), curScaleX));\n@@ -585,14 +586,15 @@ protected void limitTransAndScale(Matrix matrix) {\n \t\tfloat maxTransX = -(float) mContentRect.width() * (mScaleX - 1f);\n \t\tfloat newTransX = Math.min(Math.max(curTransX, maxTransX), 0);\n \t\t\n-\t\tfloat maxTransY = -(float) mContentRect.height() *0f;\n-        float newTransY = Math.min(Math.max(curTransY, maxTransY), 0);\n+\t\tfloat maxTransY = -(float) mContentRect.height() * (mScaleY - 1f);\n+\t\tfloat newTransY = Math.min(Math.max(curTransY, maxTransY), 0);\n         \n-//        Log.i(LOG_TAG, \"maxTransY: \" + maxTransX);\n+        Log.i(LOG_TAG, \"scale-X: \" + mScaleX + \", maxTransX: \" + maxTransX + \", newTransX: \" + newTransX);\n+        Log.i(LOG_TAG, \"scale-Y: \" + mScaleY + \", maxTransY: \" + maxTransY + \", newTransY: \" + newTransY);\n \n \t\tvals[Matrix.MTRANS_X] = newTransX;\n \t\tvals[Matrix.MSCALE_X] = mScaleX;\n-\t\tvals[Matrix.MTRANS_Y] = newTransY;\n+\t\tvals[Matrix.MTRANS_Y] = -newTransY;\n         vals[Matrix.MSCALE_Y] = mScaleY;\n \n \t\tmatrix.setValues(vals);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n--- a/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java\n@@ -178,32 +178,33 @@ public boolean onTouch(View v, MotionEvent event) {\n \t\t\t\t\t\tfloat oldScaleX = values[Matrix.MSCALE_X];\n \t\t\t\t\t\tfloat oldScaleY = values[Matrix.MSCALE_Y];\n \t\t\t\t\t\t\n-\t\t\t\t\t\tif ((scaleX < 1 || oldScaleX < mChart.getMaxScaleX())\n-                                && (scaleX > 1 || oldScaleX > MIN_SCALE)) {\n-                            matrix.set(savedMatrix);\n-                            matrix.postScale(scaleX, oldScaleY, mid.x, mid.y);\n-                        }\n+//\t\t\t\t\t\tif ((scaleX < 1 || oldScaleX < mChart.getMaxScaleX())\n+//                                && (scaleX > 1 || oldScaleX > MIN_SCALE)) {\n+//                            matrix.set(savedMatrix);\n+//                            matrix.postScale(scaleX, oldScaleY, mid.x, mid.y);\n+//                        }\n \t\t\t\t\t\t\n-//                            if (xDist > yDist) {\n-//                                if ((scaleX < 1 || oldScaleX < mChart.getMaxScaleX())\n-//                                        && (scaleX > 1 || oldScaleX > MIN_SCALE)) {\n-//                                    matrix.set(savedMatrix);\n-//                                    matrix.postScale(scaleX, oldScaleY, mid.x, mid.y);\n-//                                }\n-//                            } else {\n-//                                if ((scaleY < 1 || oldScaleY < mChart.getMaxScaleY())\n-//                                        && (scaleY > 1 || oldScaleY > MIN_SCALE)) {\n-//                                    matrix.set(savedMatrix);\n-//                                    matrix.postScale(oldScaleX, scaleY, mid.x, mid.y);\n-//                                }\n-//                            }\n+                            if (xDist > yDist) {\n+                                if ((scaleX < 1 || oldScaleX < mChart.getMaxScaleX())\n+                                        && (scaleX > 1 || oldScaleX > MIN_SCALE)) {\n+                                    matrix.set(savedMatrix);\n+                                    matrix.postScale(scaleX, oldScaleY, mid.x, mid.y);\n+                                }\n+                            } else {\n+                                if ((scaleY < 1 || oldScaleY < mChart.getMaxScaleY())\n+                                        && (scaleY > 1 || oldScaleY > MIN_SCALE)) {\n+                                    matrix.set(savedMatrix);\n+                                    matrix.postScale(oldScaleX, scaleY, mid.x, mid.y);\n+                                }\n+                            }\n \t\t\t\t\t\t\n //\t\t\t\t\t\tLog.i(\"scale\", \"scale-x: \" + scaleX + \", scale-y: \" + scaleY + \", oldDistX: \" + oldDistX  + \", oldDistY: \" + oldDistY);\n //\t\t\t\t\t\tLog.i(\"scale\", \"xDist: \" + xDist + \", yDist: \" + yDist);\n \t\t\t\t\t}\n \t\t\t\t} else if (mode == LONGPRESS) {\n \t\t\t\t\tmChart.disableScroll();\n \t\t\t\t}\n+\t\t\t\n \t\t\t\tbreak;\n \t\t\t}\n \t\t}",
    "output": "Worked on y-scaling."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java\n@@ -15,6 +15,7 @@\n import com.github.mikephil.charting.data.ChartData;\n import com.github.mikephil.charting.data.DataSet;\n import com.github.mikephil.charting.data.Entry;\n+import com.github.mikephil.charting.data.filter.Approximator.ApproximatorType;\n import com.github.mikephil.charting.utils.ColorTemplate;\n \n \n@@ -131,6 +132,14 @@ public boolean onOptionsItemSelected(MenuItem item) {\n \t\t\tmChart.invalidate();\n \t\t\tbreak;\n \t\t}\n+\t\tcase R.id.actionToggleFilter:\n+            if (mChart.isFilterSet()) {\n+                mChart.setFilter(ApproximatorType.NONE, 0);\n+            } else {\n+                mChart.setFilter(ApproximatorType.DOUGLAS_PEUCKER, 2);\n+            }\n+            mChart.invalidate();\n+            break;\n \t\tcase R.id.actionSave: {\n \t\t\t// mChart.saveToGallery(\"title\"+System.currentTimeMillis());\n \t\t\tmChart.saveToPath(\"title\" + System.currentTimeMillis(), \"\");\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java\n@@ -14,6 +14,7 @@\n import android.util.Log;\n \n import com.github.mikephil.charting.data.Entry;\n+import com.github.mikephil.charting.data.filter.Approximator.ApproximatorType;\n import com.github.mikephil.charting.listener.BarLineChartTouchListener;\n import com.github.mikephil.charting.utils.Highlight;\n import com.github.mikephil.charting.utils.PointD;\n@@ -1039,6 +1040,29 @@ public void setLegendDigits(int digits) {\n \tpublic int getLegendDigits() {\n \t\treturn mYLegendDigitsToUse;\n \t}\n+\t\n+    /**\n+     * Sets a filter on the whole ChartData. If the type is NONE, the filtering is reset. Be aware that the original\n+     * DataSets are not modified. Instead there are modified copies of the data. All methods return the filtered values\n+     * if a filter is set. To receive the original values despite a set filter, call getOriginalDataSets() of the class\n+     * ChartData. The ChartData can be received by calling getData().\n+     * \n+     * @param type\n+     *            the filter type. NONE to reset filtering\n+     * @param tolerance\n+     *            the tolerance\n+     */\n+    public void setFilter(ApproximatorType type, double tolerance) {\n+        mData.setFilter(type, tolerance);\n+    }\n+\n+    /**\n+     * returns true if a filter has been set, flase if not\n+     * @return\n+     */\n+    public boolean isFilterSet() {\n+        return mData.isApproximatedData();\n+    }\n \n \t@Override\n \tpublic void setPaint(Paint p, int which) {\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java\n@@ -261,90 +261,6 @@ protected void drawAdditional() {\n \t\t}\n \t}\n \n-\t// /**\n-\t// * Returns the x index of the touch. If touch is out of the chart, the first or last index will be returned\n-\t// *\n-\t// * @param x\n-\t// * @param y\n-\t// * @return\n-\t// */\n-\t// public int getXIndexByTouchPoint(float x, float y) {\n-\t// // create an array of the touch-point\n-\t// float[] pts = new float[2];\n-\t// pts[0] = x;\n-\t// pts[1] = y;\n-\t//\n-\t// Matrix tmp = new Matrix();\n-\t//\n-\t// // invert all matrixes to convert back to the original value\n-\t// mMatrixOffset.invert(tmp);\n-\t// tmp.mapPoints(pts);\n-\t//\n-\t// mMatrixTouch.invert(tmp);\n-\t// tmp.mapPoints(pts);\n-\t//\n-\t// mMatrixValueToPx.invert(tmp);\n-\t// tmp.mapPoints(pts);\n-\t//\n-\t// double xTouchVal = pts[0];\n-\t// double yTouchVal = pts[1];\n-\t// double base = Math.floor(xTouchVal);\n-\t//\n-\t// Log.i(LOG_TAG, \"touchindex x: \" + xTouchVal + \", touchindex y: \" + yTouchVal);\n-\t//\n-\t// // touch out of chart\n-\t// if (xTouchVal < 0)\n-\t// return 0;\n-\t// if (xTouchVal > mDeltaX) {\n-\t// return mData.getXValCount() - 1;\n-\t// }\n-\t//\n-\t// return (int) base;\n-\t// }\n-\t//\n-\t// public double getYValueByTouchPoint(float x, float y) {\n-\t// // create an array of the touch-point\n-\t// float[] pts = new float[2];\n-\t// pts[0] = x;\n-\t// pts[1] = y;\n-\t//\n-\t// Matrix tmp = new Matrix();\n-\t//\n-\t// // invert all matrixes to convert back to the original value\n-\t// mMatrixOffset.invert(tmp);\n-\t// tmp.mapPoints(pts);\n-\t//\n-\t// mMatrixTouch.invert(tmp);\n-\t// tmp.mapPoints(pts);\n-\t//\n-\t// mMatrixValueToPx.invert(tmp);\n-\t// tmp.mapPoints(pts);\n-\t//\n-\t// double xTouchVal = pts[0];\n-\t// double yTouchVal = pts[1];\n-\t//\n-\t// return yTouchVal;\n-\t// }\n-\n-\t/**\n-\t * Sets a filter on the whole ChartData. If the type is NONE, the filtering is reset. Be aware that the original\n-\t * DataSets are not modified. Instead there are modified copies of the data. All methods return the filtered values\n-\t * if a filter is set. To receive the original values despite a set filter, call getOriginalDataSets() of the class\n-\t * ChartData. The ChartData can be received by calling getData().\n-\t * \n-\t * @param type\n-\t *            the filter type. NONE to reset filtering\n-\t * @param tolerance\n-\t *            the tolerance\n-\t */\n-\tpublic void setFilter(ApproximatorType type, double tolerance) {\n-\t\tmData.setFilter(type, tolerance);\n-\t}\n-\n-\tpublic boolean isFilterSet() {\n-\t\treturn mData.isApproximatedData();\n-\t}\n-\n \t/**\n \t * set this to true to enable the drawing of circle indicators\n \t * ",
    "output": "Added filtering for both line and barchart."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java\n--- a/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java\n+++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java\n@@ -50,9 +50,10 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         // create a color template for one dataset with only one color\n         ColorTemplate ct = new ColorTemplate();\n-        ct.addColorsForDataSets(new int[] {\n-            R.color.colorful_1\n-        }, this);\n+//        ct.addColorsForDataSets(new int[] {\n+//            R.color.colorful_1\n+//        }, this);\n+        ct.addDataSetColors(new int[] {R.color.colorful_1}, this);\n \n         mChart = (LineChart) findViewById(R.id.chart1);\n         mChart.setOnChartValueSelectedListener(this);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/Chart.java b/MPChartLib/src/com/github/mikephil/charting/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/Chart.java\n@@ -131,9 +131,6 @@ public abstract class Chart extends View {\n     /** matrix used for touch events */\n     protected Matrix mMatrixTouch = new Matrix();\n \n-    /** the default draw color (some kind of light blue) */\n-    protected int mDrawColor = Color.rgb(56, 199, 240);\n-\n     /** if true, touch gestures are enabled on the chart */\n     protected boolean mTouchEnabled = true;\n \n@@ -878,16 +875,6 @@ public void setDescriptionTextSize(float size) {\n         mInfoPaint.setTextSize(Utils.convertDpToPixel(size));\n     }\n \n-    /**\n-     * set a new draw color for the chart values (line and filled) default is\n-     * Color.rgb(56, 199, 240)\n-     * \n-     * @param color\n-     */\n-    public void setDrawColor(int color) {\n-        mDrawColor = color;\n-    }\n-\n     /**\n      * set a description text that appears in the bottom right corner of the\n      * chart, size = Y-legend text size\n@@ -935,17 +922,6 @@ public void setDrawYValues(boolean enabled) {\n         this.mDrawYValues = enabled;\n     }\n \n-    /**\n-     * sets the y- starting and ending value\n-     * \n-     * @param start\n-     * @param end\n-     */\n-    public void setYStartEnd(float start, float end) {\n-        mYChartMin = start;\n-        mDeltaY = end - start;\n-    }\n-\n     /**\n      * Sets a colortemplate for the chart that defindes the colors used for\n      * drawing. If more values need to be drawn than provided colors available",
    "output": "Minor changes."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/Approximator.java b/MPChartLib/src/com/github/mikephil/charting/Approximator.java\n--- a/MPChartLib/src/com/github/mikephil/charting/Approximator.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/Approximator.java\n@@ -60,15 +60,15 @@ private ArrayList<Entry> reduceWithDouglasPeuker(ArrayList<Entry> entries, doubl\n \t}\n \n \t/**\n-\t * apply the Douglas-Peucker-Reduction to an ArrayList of Series with a given epsilon (tolerance)\n+\t * apply the Douglas-Peucker-Reduction to an ArrayList of Entry with a given epsilon (tolerance)\n \t * \n-\t * @param series\n+\t * @param entries\n \t * @param epsilon\n \t *            as y-value\n \t * @param start\n \t * @param end\n \t */\n-\tprivate void algorithmDouglasPeucker(ArrayList<Entry> series, double epsilon, int start, int end) {\n+\tprivate void algorithmDouglasPeucker(ArrayList<Entry> entries, double epsilon, int start, int end) {\n \t\tif (end <= start + 1) {\n \t\t\t// recursion finished\n \t\t\treturn;\n@@ -78,11 +78,11 @@ private void algorithmDouglasPeucker(ArrayList<Entry> series, double epsilon, in\n \t\tint maxDistIndex = 0;\n \t\tdouble distMax = 0;\n \n-\t\tEntry firstSeries = series.get(start);\n-\t\tEntry lastSeries = series.get(end);\n+\t\tEntry firstEntry = entries.get(start);\n+\t\tEntry lastEntry = entries.get(end);\n \n \t\tfor (int i = start + 1; i < end; i++) {\n-\t\t\tdouble dist = pointToLineDistance(firstSeries, lastSeries, series.get(i));\n+\t\t\tdouble dist = pointToLineDistance(firstEntry, lastEntry, entries.get(i));\n \n \t\t\t// keep the point with the greatest distance\n \t\t\tif (dist > distMax) {\n@@ -96,26 +96,26 @@ private void algorithmDouglasPeucker(ArrayList<Entry> series, double epsilon, in\n \t\t\tkeep[maxDistIndex] = true;\n \n \t\t\t// recursive call\n-\t\t\talgorithmDouglasPeucker(series, epsilon, start, maxDistIndex);\n-\t\t\talgorithmDouglasPeucker(series, epsilon, maxDistIndex, end);\n+\t\t\talgorithmDouglasPeucker(entries, epsilon, start, maxDistIndex);\n+\t\t\talgorithmDouglasPeucker(entries, epsilon, maxDistIndex, end);\n \t\t}\n \t}\n \n \t/**\n-\t * calculate the distance between a line between two series and a series (point)\n+\t * calculate the distance between a line between two entries and an entry (point)\n \t * \n-\t * @param startSeries\n-\t * @param endSeries\n-\t * @param seriesToInspect\n+\t * @param startEntry\n+\t * @param endEntry\n+\t * @param entryPoint\n \t * @return\n \t */\n-\tpublic double pointToLineDistance(Entry startSeries, Entry endSeries, Entry seriesToInspect) {\n-\t\tdouble normalLength = Math.sqrt((endSeries.getXIndex() - startSeries.getXIndex())\n-\t\t\t\t* (endSeries.getXIndex() - startSeries.getXIndex()) + (endSeries.getVal() - startSeries.getVal())\n-\t\t\t\t* (endSeries.getVal() - startSeries.getVal()));\n-\t\treturn Math.abs((seriesToInspect.getXIndex() - startSeries.getXIndex())\n-\t\t\t\t* (endSeries.getVal() - startSeries.getVal()) - (seriesToInspect.getVal() - startSeries.getVal())\n-\t\t\t\t* (endSeries.getXIndex() - startSeries.getXIndex()))\n+\tpublic double pointToLineDistance(Entry startEntry, Entry endEntry, Entry entryPoint) {\n+\t\tdouble normalLength = Math.sqrt((endEntry.getXIndex() - startEntry.getXIndex())\n+\t\t\t\t* (endEntry.getXIndex() - startEntry.getXIndex()) + (endEntry.getVal() - startEntry.getVal())\n+\t\t\t\t* (endEntry.getVal() - startEntry.getVal()));\n+\t\treturn Math.abs((entryPoint.getXIndex() - startEntry.getXIndex())\n+\t\t\t\t* (endEntry.getVal() - startEntry.getVal()) - (entryPoint.getVal() - startEntry.getVal())\n+\t\t\t\t* (endEntry.getXIndex() - startEntry.getXIndex()))\n \t\t\t\t/ normalLength;\n \t}\n }",
    "output": "Refactoring in the approximator."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/example/mpchartexample/MultiLineChartActivity.java b/MPChartExample/src/com/example/mpchartexample/MultiLineChartActivity.java\n--- a/MPChartExample/src/com/example/mpchartexample/MultiLineChartActivity.java\n+++ b/MPChartExample/src/com/example/mpchartexample/MultiLineChartActivity.java\n@@ -46,6 +46,13 @@ protected void onCreate(Bundle savedInstanceState) {\n \t\tmChart = (LineChart) findViewById(R.id.chart1);\n \t\t\n \t\tColorTemplate ct = new ColorTemplate();\n+\t\t\n+\t\t// COLOR VARIATIONS\n+//\t\tct.addDataSetColors(ColorTemplate.COLORFUL_COLORS, this);\n+//\t\tct.addDataSetColors(ColorTemplate.JOYFUL_COLORS, this);\n+//\t\tct.addDataSetColors(ColorTemplate.GREEN_COLORS, this);\n+\t\t\n+\t\t// ONE COLOR PER DATASET\n \t\tct.addColorsForDataSets(ColorTemplate.COLORFUL_COLORS, this);\n \t\t\n \t\tmChart.setColorTemplate(ct);\n\ndiff --git a/MPChartExample/src/com/example/mpchartexample/PieChartActivity.java b/MPChartExample/src/com/example/mpchartexample/PieChartActivity.java\n--- a/MPChartExample/src/com/example/mpchartexample/PieChartActivity.java\n+++ b/MPChartExample/src/com/example/mpchartexample/PieChartActivity.java\n@@ -46,8 +46,9 @@ protected void onCreate(Bundle savedInstanceState) {\n \t\tmChart = (PieChart) findViewById(R.id.chart1);\n \t\t\n \t\tColorTemplate ct = new ColorTemplate();\n+\t    ct.addDataSetColors(ColorTemplate.GREEN_COLORS, this);\n \t\tct.addDataSetColors(ColorTemplate.COLORFUL_COLORS, this);\n-\t\tct.addDataSetColors(ColorTemplate.FRESH_COLORS, this);\n+\t\t\n \t\tmChart.setColorTemplate(ct);\n \n \t\tmChart.setDrawYValues(true);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/DataSet.java\n@@ -5,7 +5,9 @@\n \n /**\n  * The DataSet class represents one group or type of entries (Series) in the\n- * Chart that belong together.\n+ * Chart that belong together. It is designed to logically separate different\n+ * groups of values inside the Chart (e.g. the values for a specific line in the\n+ * LineChart, or the values of a specific group of bars in the BarChart).\n  * \n  * @author Philipp Jahoda\n  */\n@@ -175,11 +177,12 @@ public int getType() {\n      * @return\n      */\n     public int getIndexInSeries(int xIndex) {\n-        \n-        for(int i = 0; i < mYVals.size(); i++) {\n-            if(xIndex == mYVals.get(i).getXIndex()) return i;\n+\n+        for (int i = 0; i < mYVals.size(); i++) {\n+            if (xIndex == mYVals.get(i).getXIndex())\n+                return i;\n         }\n-        \n+\n         return -1;\n     }\n ",
    "output": "Added screenshots."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/ColorTemplate.java b/MPChartLib/src/com/github/mikephil/charting/ColorTemplate.java\n--- a/MPChartLib/src/com/github/mikephil/charting/ColorTemplate.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/ColorTemplate.java\n@@ -83,7 +83,7 @@ public void addDataSetColors(int[] colors, Context c) {\n \n     /**\n      * Adds colors to the ColorTemplate. Each of the colors will create a new\n-     * dataset color array in the template with just one color. This is\n+     * DataSet color array in the template with just one color. This is\n      * especially useful when you want each of your DataSets only to be\n      * represented by one color and not multiple.\n      * \n@@ -136,15 +136,15 @@ public ArrayList<Integer> getDataSetColors(int dataSetIndex) {\n     }\n \n     /**\n-     * returns the color value at the given index from the DataSet at the given\n-     * index\n+     * Returns the color value at the given index from the DataSet at the given\n+     * index. If index is outofbounds, it restart at lower indices.\n      * \n      * @param dataSetIndex\n      * @param colorIndex\n      * @return\n      */\n     public int getDataSetColor(int dataSetIndex, int colorIndex) {\n-        return mDataSetColors.get(dataSetIndex).get(colorIndex);\n+        return mDataSetColors.get(dataSetIndex).get(colorIndex % mDataSetColors.get(dataSetIndex).size());\n     }\n \n     /**\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/DataSet.java b/MPChartLib/src/com/github/mikephil/charting/DataSet.java\n--- a/MPChartLib/src/com/github/mikephil/charting/DataSet.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/DataSet.java\n@@ -166,6 +166,23 @@ public int getType() {\n         return mType;\n     }\n \n+    /**\n+     * Returns the index of the Series object with the given x-index in the\n+     * Series array of the DataSet. IMPORTANT: This method does calculations at\n+     * runtime, do not over-use in performance critical situations.\n+     * \n+     * @param xIndex\n+     * @return\n+     */\n+    public int getIndexInSeries(int xIndex) {\n+        \n+        for(int i = 0; i < mYVals.size(); i++) {\n+            if(xIndex == mYVals.get(i).getXIndex()) return i;\n+        }\n+        \n+        return -1;\n+    }\n+\n     /**\n      * Convenience method to create multiple DataSets of different types with\n      * various double value arrays. Each double array represents the data of one\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/PieChart.java b/MPChartLib/src/com/github/mikephil/charting/PieChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/PieChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/PieChart.java\n@@ -6,7 +6,6 @@\n import android.graphics.Color;\n import android.graphics.Paint;\n import android.graphics.Paint.Align;\n-import android.graphics.Paint.Style;\n import android.graphics.PointF;\n import android.graphics.RectF;\n import android.graphics.Typeface;\n@@ -302,16 +301,16 @@ protected void drawHighlights() {\n             for (int i = 0; i < mIndicesToHightlight.length; i++) {\n \n                 // get the index to highlight\n-                int index = mIndicesToHightlight[i].getXIndex();\n-                if (index >= mDrawAngles.length || index > mDeltaX)\n+                int xIndex = mIndicesToHightlight[i].getXIndex();\n+                if (xIndex >= mDrawAngles.length || xIndex > mDeltaX)\n                     continue;\n \n-                if (index == 0)\n+                if (xIndex == 0)\n                     angle = mChartAngle;\n                 else\n-                    angle = mChartAngle + mAbsoluteAngles[index - 1];\n+                    angle = mChartAngle + mAbsoluteAngles[xIndex - 1];\n \n-                float sliceDegrees = mDrawAngles[index];\n+                float sliceDegrees = mDrawAngles[xIndex];\n \n                 float shiftangle = (float) Math.toRadians(angle + sliceDegrees / 2f);\n \n@@ -321,11 +320,14 @@ protected void drawHighlights() {\n                 RectF highlighted = new RectF(mCircleBox.left + xShift, mCircleBox.top + yShift,\n                         mCircleBox.right\n                                 + xShift, mCircleBox.bottom + yShift);\n-\n-                ArrayList<Integer> colors = mCt.getDataSetColors(mIndicesToHightlight[i]\n+                \n+                DataSet set = mData.getDataSetByIndex(mIndicesToHightlight[i]\n                         .getDataSetIndex());\n+                \n+                int color = mCt.getDataSetColor(mIndicesToHightlight[i]\n+                        .getDataSetIndex(), set.getIndexInSeries(xIndex));\n \n-                mRenderPaint.setColor(colors.get(index % colors.size()));\n+                mRenderPaint.setColor(color);\n \n                 // redefine the rect that contains the arc so that the\n                 // highlighted pie is not cut off\n@@ -354,12 +356,11 @@ protected void drawData() {\n \n             for (int j = 0; j < series.size(); j++) {\n \n-                mRenderPaint.setColor(colors.get(j % colors.size()));\n-\n                 float newangle = mDrawAngles[cnt];\n \n                 if (!needsHighlight(series.get(j).getXIndex(), i)) {\n \n+                    mRenderPaint.setColor(colors.get(j % colors.size()));\n                     mDrawCanvas.drawArc(mCircleBox, angle, newangle, true, mRenderPaint);\n                 }\n ",
    "output": "Fixed the wrong-color bug when selecting values in the PieChart."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/example/mpchartexample/PieChartActivity.java b/MPChartExample/src/com/example/mpchartexample/PieChartActivity.java\n--- a/MPChartExample/src/com/example/mpchartexample/PieChartActivity.java\n+++ b/MPChartExample/src/com/example/mpchartexample/PieChartActivity.java\n@@ -154,7 +154,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n \n \t\tfor (int i = 0; i < mSeekBarX.getProgress(); i++)\n \t\t\txVals.add(\"Text\" + (i + 1));\n-\t\t\n+\t\t \n \t\tDataSet set1 = new DataSet(yVals1, 0);\n \t\tDataSet set2 = new DataSet(yVals2, 1);\n \t\t",
    "output": "Merged."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/example/mpchartexample/MultiLineChartActivity.java b/MPChartExample/src/com/example/mpchartexample/MultiLineChartActivity.java\n--- a/MPChartExample/src/com/example/mpchartexample/MultiLineChartActivity.java\n+++ b/MPChartExample/src/com/example/mpchartexample/MultiLineChartActivity.java\n@@ -1,7 +1,5 @@\n package com.example.mpchartexample;\n \n-import java.util.ArrayList;\n-\n import android.app.Activity;\n import android.graphics.Color;\n import android.os.Bundle;\n@@ -14,12 +12,13 @@\n import android.widget.TextView;\n \n import com.github.mikephil.charting.Approximator;\n+import com.github.mikephil.charting.Approximator.ApproximatorType;\n import com.github.mikephil.charting.ChartData;\n+import com.github.mikephil.charting.ColorTemplate;\n import com.github.mikephil.charting.DataSet;\n import com.github.mikephil.charting.LineChart;\n-import com.github.mikephil.charting.Point;\n-import com.github.mikephil.charting.Series;\n-import com.github.mikephil.charting.Approximator.ApproximatorType;\n+\n+import java.util.ArrayList;\n \n public class MultiLineChartActivity extends Activity implements OnSeekBarChangeListener {\n \n@@ -43,14 +42,15 @@ protected void onCreate(Bundle savedInstanceState) {\n \t\tmSeekBarY.setOnSeekBarChangeListener(this);\n \n \t\tmChart = (LineChart) findViewById(R.id.chart1);\n-\t\t// mChart.setColorTemplate(new ColorTemplate(ColorTemplate.getColors(this, ColorTemplate.LIBERTY_COLORS)));\n+\t\tmChart.setColorTemplate(new ColorTemplate(ColorTemplate.getColors(this, ColorTemplate.JOYFUL_COLORS)));\n+\t\tmChart.setDrawTopYLegendEntry(false);\n \n \t\t// mChart.setDrawFilled(true);\n \t\t// mChart.setRoundedYLegend(false);\n \t\t// mChart.setStartAtZero(true);\n \t\tmChart.setDrawYValues(false);\n-\t\tmChart.setLineWidth(4f);\n-\t\tmChart.setCircleSize(4f);\n+\t\tmChart.setLineWidth(5f);\n+\t\tmChart.setCircleSize(5f);\n \t\t// mChart.setSpacePercent(20, 10);\n \t\tmChart.setYLegendCount(6);\n \t\tmChart.setTouchEnabled(true);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/LineChart.java\n@@ -84,7 +84,7 @@ protected void prepareDataPaints(ColorTemplate ct) {\n \t\tfor (int i = 0; i < ct.getColors().size(); i++) {\n \t\t\tmDrawPaints[i] = new Paint(Paint.ANTI_ALIAS_FLAG);\n \t\t\tmDrawPaints[i].setStrokeWidth(mLineWidth);\n-\t\t\tmDrawPaints[i].setStyle(Style.STROKE);\n+\t\t\tmDrawPaints[i].setStyle(Style.FILL);\n \t\t\tmDrawPaints[i].setColor(ct.getColors().get(i));\n \t\t}\n \t}\n@@ -241,7 +241,7 @@ protected void drawAdditional() {\n \t\t\t\t\tif (positions[j] < mContentRect.left || positions[j] > mContentRect.right)\n \t\t\t\t\t\tcontinue;\n \n-\t\t\t\t\tmDrawCanvas.drawCircle(positions[j], positions[j + 1], mCircleSize, mCirclePaintOuter);\n+\t\t\t\t\tmDrawCanvas.drawCircle(positions[j], positions[j + 1], mCircleSize, mDrawPaints[i % mDrawPaints.length]);\n \t\t\t\t\tmDrawCanvas.drawCircle(positions[j], positions[j + 1], mCircleSize / 2, mCirclePaintInner);\n \t\t\t\t}\n \t\t\t}\n@@ -331,15 +331,6 @@ public float getLineWidth() {\n \t\treturn mLineWidth;\n \t}\n \n-\t/**\n-\t * sets the color for the outer circle paint\n-\t * \n-\t * @param color\n-\t */\n-\tpublic void setCircleColor(int color) {\n-\t\tmCirclePaintOuter.setColor(color);\n-\t}\n-\n \t/**\n \t * sets the color for the fill-paint\n \t * ",
    "output": "Fixed bug in LineChart. Circles now drawn in correct color."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/BarLineChartBase.java\n@@ -187,11 +187,12 @@ protected void onDraw(Canvas canvas) {\n         drawVerticalGrid();\n         drawData();\n         drawHighlights();\n-        drawAdditional();\n-        drawValues();\n-\n+        \n         // Removes clipping rectangle\n         mDrawCanvas.restoreToCount(clipRestoreCount);\n+        \n+        drawAdditional();\n+        drawValues();\n \n         drawXLegend();\n \n@@ -365,7 +366,6 @@ protected void prepareYLegend() {\n             int exp = (int) Math.floor(log10);\n             double tenPowExp = POW_10[exp + 5]; // +5 because the POW array has\n                                                 // its \"1\" at index 5\n-\n             double multi = Math.round(interval / tenPowExp);\n \n             if (multi >= 1) {\n@@ -614,6 +614,7 @@ public void setYRange(float minY, float maxY) {\n \n         prepareMatrix();\n         prepareYLegend();\n+        invalidate();\n     }\n \n     /**\n@@ -866,8 +867,11 @@ public int getIndexByTouchPoint(float x, float y) {\n         double touchPointIndex = pts[0];\n         double base = Math.floor(touchPointIndex);\n         \n+        Log.i(LOG_TAG, \"touchindex: \" + touchPointIndex);\n+        \n         // touch out of chart\n-        if(touchPointIndex < 0 || touchPointIndex > getValueCount()-1) return -1;\n+        if(this instanceof LineChart && (touchPointIndex < 0 || touchPointIndex > getValueCount()-1)) return -1;\n+        if(this instanceof BarChart && (touchPointIndex < 0 || touchPointIndex > getValueCount())) return -1;\n \n         int index = (int) base;\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/Chart.java b/MPChartLib/src/com/github/mikephil/charting/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/Chart.java\n@@ -1121,6 +1121,18 @@ public String getXValue(int index) {\n         else\n             return mXVals.get(index);\n     }\n+    \n+    /**\n+     * returns the y-value for the given index\n+     * @param index\n+     * @return\n+     */\n+    public float getYValue(int index) {\n+        if (mYVals == null || mYVals.size() <= index)\n+            return 0f;\n+        else\n+            return mYVals.get(index).getVal();\n+    }\n \n     /**\n      * returns the percentage the given value has of the total y-values\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/LineChart.java\n@@ -7,6 +7,7 @@\n import android.graphics.Paint.Style;\n import android.graphics.Path;\n import android.util.AttributeSet;\n+import android.util.Log;\n \n import java.util.ArrayList;\n \n@@ -224,6 +225,11 @@ protected void drawAdditional() {\n             transformPointArray(positions);\n \n             for (int i = 0; i < positions.length; i += 2) {\n+\n+                // make sure the circles don't do shitty things outside bounds\n+                if (positions[i] < mContentRect.left || positions[i] > mContentRect.right)\n+                    continue;\n+\n                 mDrawCanvas.drawCircle(positions[i], positions[i + 1], mCircleSize,\n                         mCirclePaintOuter);\n                 mDrawCanvas.drawCircle(positions[i], positions[i + 1], mCircleSize / 2,\n@@ -323,9 +329,10 @@ public float getLineWidth() {\n     public void setLineColor(int color) {\n         mLinePaint.setColor(color);\n     }\n-    \n+\n     /**\n      * sets the color for the outer circle paint\n+     * \n      * @param color\n      */\n     public void setCircleColor(int color) {",
    "output": "Linechart circles are no longer cut-off at the edges."
  },
  {
    "input": "diff --git a/MPChartLib/src/com/github/mikephil/charting/BarChart.java b/MPChartLib/src/com/github/mikephil/charting/BarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/BarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/BarChart.java\n@@ -131,7 +131,7 @@ protected void drawHighlights() {\n                 int index = mIndicesToHightlight[i];\n \n                 // check outofbounds\n-                if (index < mYVals.size()) {\n+                if (index < mYVals.size() && index >= 0) {\n                     \n                     mHighlightPaint.setAlpha(120);\n                     \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/BarLineChartBase.java\n@@ -865,6 +865,9 @@ public int getIndexByTouchPoint(float x, float y) {\n \n         double touchPointIndex = pts[0];\n         double base = Math.floor(touchPointIndex);\n+        \n+        // touch out of chart\n+        if(touchPointIndex < 0 || touchPointIndex > getValueCount()-1) return -1;\n \n         int index = (int) base;\n \n@@ -875,7 +878,7 @@ public int getIndexByTouchPoint(float x, float y) {\n                 index = (int) base + 1;\n             }\n         }\n-\n+        \n         return index;\n     }\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/Chart.java b/MPChartLib/src/com/github/mikephil/charting/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/Chart.java\n@@ -623,7 +623,7 @@ public boolean needsHighlight(int index) {\n      */\n     public boolean valuesToHighlight() {\n         return mIndicesToHightlight == null || mIndicesToHightlight.length == 0\n-                || mIndicesToHightlight[0] == -1 ? false : true;\n+                || mIndicesToHightlight[0] < 0 ? false : true;\n     }\n \n     /**\n@@ -811,6 +811,24 @@ public float getYMin() {\n         return mYMin;\n     }\n \n+    /**\n+     * returns the average value of all values the chart holds\n+     * \n+     * @return\n+     */\n+    public float getAverage() {\n+        return getYValueSum() / mYVals.size();\n+    }\n+\n+    /**\n+     * returns the number of values the chart holds\n+     * \n+     * @return\n+     */\n+    public int getValueCount() {\n+        return mYVals.size();\n+    }\n+\n     /**\n      * returns the center point of the chart\n      * \n@@ -1098,7 +1116,7 @@ public Series getSeries(int index) {\n      * @return\n      */\n     public String getXValue(int index) {\n-        if (mXVals == null || mXVals.size() >= index)\n+        if (mXVals == null || mXVals.size() <= index)\n             return null;\n         else\n             return mXVals.get(index);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/LineChart.java\n@@ -117,7 +117,7 @@ protected void drawHighlights() {\n                 int index = mIndicesToHightlight[i];\n \n                 // check outofbounds\n-                if (index < mYVals.size()) {\n+                if (index < mYVals.size() && index >= 0) {\n \n                     float[] pts = new float[] {\n                             index, mYChartMax, index, mYChartMin,",
    "output": "Minor bugfixes concerning selecting values. Added getAverage() method."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java\n@@ -87,6 +87,22 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 mChart.invalidate();\n                 break;\n             }\n+            case R.id.actionToggleHighlight: {\n+                if (mChart.isHighlightEnabled())\n+                    mChart.setHighlightEnabled(false);\n+                else\n+                    mChart.setHighlightEnabled(true);\n+                mChart.invalidate();\n+                break;\n+            }\n+            case R.id.actionToggleHighlightArrow: {\n+                if (mChart.isDrawHighlightArrowEnabled())\n+                    mChart.setDrawHighlightArrow(false);\n+                else\n+                    mChart.setDrawHighlightArrow(true);\n+                mChart.invalidate();\n+                break;\n+            }\n             case R.id.actionToggleStartzero: { \n                 if (mChart.isStartAtZeroEnabled())\n                     mChart.setStartAtZero(false);\n\ndiff --git a/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java\n--- a/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java\n+++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java\n@@ -82,6 +82,14 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 mChart.invalidate();\n                 break;\n             }\n+            case R.id.actionToggleHighlight: {\n+                if (mChart.isHighlightEnabled())\n+                    mChart.setHighlightEnabled(false);\n+                else\n+                    mChart.setHighlightEnabled(true);\n+                mChart.invalidate();\n+                break;\n+            }\n             case R.id.actionToggleFilled: {\n                 if (mChart.isDrawFilledEnabled())\n                     mChart.setDrawFilled(false);\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/BarChart.java b/MPChartLib/src/com/github/mikephil/charting/BarChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/BarChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/BarChart.java\n@@ -25,6 +25,9 @@ public class BarChart extends BarLineChartBase {\n \n     /** flag the enables or disables 3d bars */\n     private boolean m3DEnabled = true;\n+    \n+    /** flag that enables or disables the highlighting arrow */\n+    private boolean mDrawHighlightArrow = true;\n \n     public BarChart(Context context) {\n         super(context);\n@@ -37,15 +40,16 @@ public BarChart(Context context, AttributeSet attrs) {\n     public BarChart(Context context, AttributeSet attrs, int defStyle) {\n         super(context, attrs, defStyle);\n     }\n-    \n+\n     @Override\n     protected void init() {\n         super.init();\n-        \n+\n         mHighlightPaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n-        mHighlightPaint.setStyle(Paint.Style.STROKE);\n-        mHighlightPaint.setStrokeWidth(2f);\n-        mHighlightPaint.setColor(Color.rgb(255, 187, 115));\n+        mHighlightPaint.setStyle(Paint.Style.FILL);\n+        mHighlightPaint.setColor(Color.rgb(0, 0, 0));\n+        // set alpha after color\n+        mHighlightPaint.setAlpha(120);\n     }\n \n     /** array that holds all the colors for the top 3D effect */\n@@ -112,28 +116,57 @@ protected void calcMinMax() {\n         // increase deltax by 1 because the bars have a width of 1\n         mDeltaX++;\n     }\n-    \n+\n     @Override\n     protected void drawHighlights() {\n-        \n+\n         // if there are values to highlight and highlighnting is enabled, do it\n-        if(mHighlightEnabled && valuesToHighlight()) {\n-            \n-            for(int i = 0; i < mIndicesToHightlight.length; i++) {\n-                \n+        if (mHighlightEnabled && valuesToHighlight()) {\n+                                \n+            // distance between highlight arrow and bar\n+            float offsetY = mDeltaY * 0.04f;\n+\n+            for (int i = 0; i < mIndicesToHightlight.length; i++) {\n+\n                 int index = mIndicesToHightlight[i];\n \n                 // check outofbounds\n                 if (index < mYVals.size()) {\n-\n-                    float[] pts = new float[] {\n-                            index + 0.5f, mYChartMax, index + 0.5f, mYChartMin,\n-                            0, mYVals.get(index), mDeltaX, mYVals.get(index)\n-                    };\n                     \n-                    transformPointArray(pts);\n-                    // draw the highlight lines\n-                    mDrawCanvas.drawLines(pts, mHighlightPaint);\n+                    mHighlightPaint.setAlpha(120);\n+                    \n+                    float y = mYVals.get(index);\n+                    float left = index + mBarSpace / 2f;\n+                    float right = index + 1f - mBarSpace / 2f;\n+                    float top = y >= 0 ? y : 0;\n+                    float bottom = y <= 0 ? y : 0;\n+\n+                    RectF highlight = new RectF(left, top, right, bottom);\n+                    transformRect(highlight);\n+                    \n+                    mDrawCanvas.drawRect(highlight, mHighlightPaint);\n+                    \n+                    if(mDrawHighlightArrow) {\n+                     \n+                        mHighlightPaint.setAlpha(200);\n+                        \n+                        Path arrow = new Path();\n+                        arrow.moveTo(index + 0.5f, y + offsetY * 0.3f);\n+                        arrow.lineTo(index + 0.2f, y + offsetY);\n+                        arrow.lineTo(index + 0.8f, y + offsetY);\n+                        \n+                        transformPath(arrow);\n+                        mDrawCanvas.drawPath(arrow, mHighlightPaint);\n+                    }\n+\n+                    // float[] pts = new float[] {\n+                    // index + 0.5f, mYChartMax, index + 0.5f, mYChartMin,\n+                    // 0, mYVals.get(index), mDeltaX, mYVals.get(index)\n+                    // };\n+                    //\n+                    // transformPointArray(pts);\n+                    // // draw the highlight lines\n+                    // mDrawCanvas.drawLines(pts, mHighlightPaint);\n                 }\n             }\n         }\n@@ -353,11 +386,27 @@ public int[] getSideColors() {\n         return mSideColors;\n     }\n     \n+    /**\n+     * set this to true to draw the highlightning arrow\n+     * @param enabled\n+     */\n+    public void setDrawHighlightArrow(boolean enabled) {\n+        mDrawHighlightArrow = enabled;\n+    }\n+    \n+    /**\n+     * returns true if drawing the highlighting arrow is enabled, false if not\n+     * @return\n+     */\n+    public boolean isDrawHighlightArrowEnabled() {\n+        return mDrawHighlightArrow;\n+    }\n+\n     @Override\n     public void setPaint(Paint p, int which) {\n         super.setPaint(p, which);\n-        \n-        switch(which) {\n+\n+        switch (which) {\n             case PAINT_HIGHLIGHT_BAR:\n                 mHighlightPaint = p;\n                 break;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/BarLineChartBase.java b/MPChartLib/src/com/github/mikephil/charting/BarLineChartBase.java\n--- a/MPChartLib/src/com/github/mikephil/charting/BarLineChartBase.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/BarLineChartBase.java\n@@ -156,8 +156,8 @@ protected void onDraw(Canvas canvas) {\n \n         drawHorizontalGrid();\n         drawVerticalGrid();\n-        drawHighlights();\n         drawData();\n+        drawHighlights();\n         drawAdditional();\n         drawValues();\n \n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/ColorTemplate.java b/MPChartLib/src/com/github/mikephil/charting/ColorTemplate.java\n--- a/MPChartLib/src/com/github/mikephil/charting/ColorTemplate.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/ColorTemplate.java\n@@ -6,10 +6,16 @@\n \n public class ColorTemplate {\n     \n+    /**\n+     * THE COLOR THEMES BELOW ARE PREDEFINED, FEEL FREE TO CREATE YOUR OWN WITH AS MANY DIFFERENT COLORS AS YOU WANT\n+     */\n+    \n     public static final int[] FRESH_COLORS = { R.color.fresh_1, R.color.fresh_2, R.color.fresh_3, R.color.fresh_4, R.color.fresh_5 };\n     public static final int[] MONO_COLORS = { R.color.mono_1, R.color.mono_2, R.color.mono_3, R.color.mono_4, R.color.mono_5 };    \n     public static final int[] LIBERTY_COLORS = { R.color.liberty_1, R.color.liberty_2, R.color.liberty_3, R.color.liberty_4, R.color.liberty_5 };\n     public static final int[] COLORFUL_COLORS = { R.color.colorful_1, R.color.colorful_2, R.color.colorful_3, R.color.colorful_4, R.color.colorful_5 };\n+    public static final int[] GREEN_COLORS = { R.color.greens_1, R.color.greens_2, R.color.greens_3, R.color.greens_4, R.color.greens_5 }; \n+    public static final int[] JOYFUL_COLORS = { R.color.joyful_1, R.color.joyful_2, R.color.joyful_3, R.color.joyful_4, R.color.joyful_5 };\n     \n     private ArrayList<Integer> mColors;\n \n@@ -21,6 +27,12 @@ public ArrayList<Integer> getColors() {\n         return mColors;\n     }\n     \n+    /**\n+     * turn an array of resource-colors into an arraylist of actual color values\n+     * @param c\n+     * @param colors\n+     * @return\n+     */\n     public static ArrayList<Integer> getColors(Context c, int[] colors) {\n         \n         ArrayList<Integer> result = new ArrayList<Integer>();",
    "output": "Improved the barchart highlighting. Added more predefined color templates."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java\n--- a/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java\n+++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java\n@@ -45,7 +45,6 @@ protected void onCreate(Bundle savedInstanceState) {\n //        mChart.setStartAtZero(true);\n         mChart.setDrawValues(false);\n         mChart.set3DEnabled(false);\n-        mChart.setDrawAdditional(true);\n //        mChart.setSpacePercent(20, 10);\n         mChart.setYLegendCount(5);\n         mChart.setTouchEnabled(true);\n\ndiff --git a/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java\n--- a/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java\n+++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java\n@@ -44,7 +44,6 @@ protected void onCreate(Bundle savedInstanceState) {\n         mChart.setDrawValues(false);\n         mChart.setLineWidth(5f);\n         mChart.setCircleSize(5f);\n-        mChart.setDrawAdditional(true);\n //        mChart.setSpacePercent(20, 10);\n         mChart.setYLegendCount(6);\n         mChart.setTouchEnabled(true);\n@@ -88,10 +87,10 @@ public boolean onOptionsItemSelected(MenuItem item) {\n                 break;\n             }\n             case R.id.actionToggleCircles: {\n-                if (mChart.isDrawAdditionalEnabled())\n-                    mChart.setDrawAdditional(false);\n+                if (mChart.isDrawCirclesEnabled())\n+                    mChart.setDrawCircles(false);\n                 else\n-                    mChart.setDrawAdditional(true);\n+                    mChart.setDrawCircles(true);\n                 mChart.invalidate();\n                 break;\n             }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/Chart.java b/MPChartLib/src/com/github/mikephil/charting/Chart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/Chart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/Chart.java\n@@ -112,9 +112,6 @@ public abstract class Chart extends View {\n \n     /** the default draw color (some kind of light blue) */\n     protected int mDrawColor = Color.rgb(56, 199, 240);\n-\n-    /** if true, circles are drawn at the values position */\n-    protected boolean mDrawAdditional = true;\n     \n     /** if true, touch gestures are enabled on the chart */\n     protected boolean mTouchEnabled = true;\n@@ -727,15 +724,6 @@ public void setDrawValues(boolean enabled) {\n //        this.mFitXLegend = enabled;\n //        prepare();\n //    }\n-\n-    /**\n-     * set this to true to enable drawing additional values\n-     * \n-     * @param enabled\n-     */\n-    public void setDrawAdditional(boolean enabled) {\n-        this.mDrawAdditional = enabled;\n-    }\n     \n     /**\n      * sets the y- starting and ending value\n@@ -826,16 +814,6 @@ public boolean isDrawValuesEnabled() {\n         return mDrawValues;\n     }\n \n-    /**\n-     * returns true if drawing additional stuff is enabled, false if not\n-     * if not\n-     * \n-     * @return\n-     */\n-    public boolean isDrawAdditionalEnabled() {\n-        return mDrawAdditional;\n-    }\n-\n     /**\n      * saves the current chart state to a bitmap in the gallery NOTE: Needs\n      * permission WRITE_EXTERNAL_STORAGE\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/LineChart.java\n@@ -127,8 +127,6 @@ protected void drawData() {\n     @Override\n     protected void drawAdditional() {\n         \n-        if(!mDrawAdditional) return;\n-        \n      // if drawing circles is enabled\n         if (mDrawCircles) {\n ",
    "output": "Fixed a bug in the lib that caused a nullpointer exception upon first draw."
  },
  {
    "input": "diff --git a/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java\n--- a/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java\n+++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java\n@@ -4,11 +4,13 @@\n import android.os.Bundle;\n import android.view.Menu;\n import android.view.MenuItem;\n+import android.view.WindowManager;\n import android.widget.SeekBar;\n import android.widget.SeekBar.OnSeekBarChangeListener;\n import android.widget.TextView;\n \n import com.github.mikephil.charting.Chart;\n+import com.github.mikephil.charting.ColorTemplate;\n import com.github.mikephil.charting.LineChart;\n \n import java.util.ArrayList;\n@@ -22,6 +24,8 @@ public class LineChartActivity extends Activity implements OnSeekBarChangeListen\n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n+        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, \n+                WindowManager.LayoutParams.FLAG_FULLSCREEN);\n         setContentView(R.layout.activity_linechart);\n         \n         tvX = (TextView) findViewById(R.id.tvXMax);\n@@ -35,13 +39,17 @@ protected void onCreate(Bundle savedInstanceState) {\n         mSeekBarY.setOnSeekBarChangeListener(this);\n         \n         mChart = (LineChart) findViewById(R.id.chart1);\n+//        mChart.setColorTemplate(new ColorTemplate(ColorTemplate.getColors(this, ColorTemplate.LIBERTY_COLORS)));\n+        \n //        mChart.setDrawFilled(true);\n //        mChart.setRoundedYLegend(false);\n //        mChart.setStartAtZero(true);\n         mChart.setDrawValues(false);\n+        mChart.setLineWidth(5f);\n+        mChart.setCircleSize(5f);\n         mChart.setDrawAdditional(true);\n //        mChart.setSpacePercent(20, 10);\n-//        mChart.setYLegendCount(10);\n+        mChart.setYLegendCount(5);\n         mChart.setTouchEnabled(true);\n         \n         ArrayList<String> xVals = new ArrayList<String>();\n@@ -136,7 +144,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n        \n         ArrayList<String> xVals = new ArrayList<String>();\n         for (int i = 1; i <= mSeekBarX.getProgress()+1; i++) {\n-            xVals.add((i - 1)+\"a\");\n+            xVals.add((i - 1)+\"\");\n         }\n \n         ArrayList<Float> yVals = new ArrayList<Float>();\n\ndiff --git a/MPChartExample/src/com/example/mpchartexample/MultipleChartsActivity.java b/MPChartExample/src/com/example/mpchartexample/MultipleChartsActivity.java\n--- a/MPChartExample/src/com/example/mpchartexample/MultipleChartsActivity.java\n+++ b/MPChartExample/src/com/example/mpchartexample/MultipleChartsActivity.java\n@@ -63,6 +63,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         mBarChart.set3DEnabled(false);\n         mBarChart.setMaxVisibleValueCount(10);\n         mBarChart.setRoundedYLegend(true);\n+        mBarChart.setDescription(\"\");\n         \n         mPieChart.setData(xvalsSmall, small);\n         mPieChart.setColorTemplate(new ColorTemplate(ColorTemplate.getColors(this, ColorTemplate.FRESH_COLORS)));\n@@ -71,5 +72,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         \n         mBarChart3D.setData(xvalsLarge, large);\n         mBarChart3D.setColorTemplate(new ColorTemplate(ColorTemplate.getColors(this, ColorTemplate.LIBERTY_COLORS)));\n+        mBarChart3D.setRoundedYLegend(true);\n+        mBarChart3D.setDescription(\"Description.\");\n     }\n }\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/LineChart.java b/MPChartLib/src/com/github/mikephil/charting/LineChart.java\n--- a/MPChartLib/src/com/github/mikephil/charting/LineChart.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/LineChart.java\n@@ -68,6 +68,8 @@ protected void init() {\n     @Override\n     protected void prepareDataPaints(ColorTemplate ct) {\n         \n+        if(ct == null) return;\n+        \n         mDrawPaints = new Paint[ct.getColors().size()];\n         \n         for(int i = 0; i < ct.getColors().size(); i++) {\n@@ -210,5 +212,7 @@ public void setLineWidth(float width) {\n         if (width > 10.0f)\n             width = 10.0f;\n         mLineWidth = width;\n+        \n+        mLinePaint.setStrokeWidth(mLineWidth);\n     }\n }",
    "output": "Added screenshots, improved example."
  }
]